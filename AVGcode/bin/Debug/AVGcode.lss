
bin\Debug\AVGcode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  00003480  00003534  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003480  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800224  00800224  00003558  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00003558  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  0000355b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003570  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000001f8  00000000  00000000  000035b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001f2e  00000000  00000000  000037a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00001354  00000000  00000000  000056d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000025dd  00000000  00000000  00006a2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000810  00000000  00000000  00009008  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000099d  00000000  00000000  00009818  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001c3  00000000  00000000  0000a1b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 5f 17 	jmp	0x2ebe	; 0x2ebe <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 03 04 	jmp	0x806	; 0x806 <__vector_17>
      48:	0c 94 33 04 	jmp	0x866	; 0x866 <__vector_18>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 90 03 	jmp	0x720	; 0x720 <__vector_20>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__vector_32>
      84:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <__vector_33>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__vector_35>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e0 e8       	ldi	r30, 0x80	; 128

000000fc <.Loc.4>:
      fc:	f4 e3       	ldi	r31, 0x34	; 52

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a4 32       	cpi	r26, 0x24	; 36

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a4 e2       	ldi	r26, 0x24	; 36

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a4 33       	cpi	r26, 0x34	; 52

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 ba 06 	call	0xd74	; 0xd74 <main>
     122:	0c 94 3e 1a 	jmp	0x347c	; 0x347c <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <I2C_Init>:

volatile int Gyro_count = 0;
volatile float DS_1 = 0;
volatile float DS_2 = 0;

void I2C_Init() {
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    // Set SCL frequency to 100kHz
    TWBR = 72;
     132:	88 eb       	ldi	r24, 0xB8	; 184
     134:	90 e0       	ldi	r25, 0x00	; 0

00000136 <.Loc.2>:
     136:	28 e4       	ldi	r18, 0x48	; 72
     138:	fc 01       	movw	r30, r24
     13a:	20 83       	st	Z, r18

0000013c <.Loc.3>:
}
     13c:	00 00       	nop
     13e:	df 91       	pop	r29
     140:	cf 91       	pop	r28
     142:	08 95       	ret

00000144 <I2C_Start>:

void I2C_Start() {
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62

0000014c <.Loc.5>:
    TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
     14c:	8c eb       	ldi	r24, 0xBC	; 188
     14e:	90 e0       	ldi	r25, 0x00	; 0

00000150 <.Loc.6>:
     150:	24 ea       	ldi	r18, 0xA4	; 164
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18

00000156 <.Loc.7>:
	...

00000158 <.L3>:
    while (!(TWCR & (1 << TWINT)));
     158:	8c eb       	ldi	r24, 0xBC	; 188
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	fc 01       	movw	r30, r24
     15e:	80 81       	ld	r24, Z

00000160 <.Loc.9>:
     160:	88 23       	and	r24, r24
     162:	d4 f7       	brge	.-12     	; 0x158 <.L3>

00000164 <.Loc.10>:
}
     164:	00 00       	nop
     166:	00 00       	nop
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	08 95       	ret

0000016e <I2C_Stop>:

void I2C_Stop() {
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62

00000176 <.Loc.12>:
    TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
     176:	8c eb       	ldi	r24, 0xBC	; 188
     178:	90 e0       	ldi	r25, 0x00	; 0

0000017a <.Loc.13>:
     17a:	24 e9       	ldi	r18, 0x94	; 148
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18

00000180 <.Loc.14>:
}
     180:	00 00       	nop
     182:	df 91       	pop	r29
     184:	cf 91       	pop	r28
     186:	08 95       	ret

00000188 <I2C_Write>:

void I2C_Write(uint8_t data) {
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	0f 92       	push	r0
     18e:	cd b7       	in	r28, 0x3d	; 61
     190:	de b7       	in	r29, 0x3e	; 62
     192:	89 83       	std	Y+1, r24	; 0x01

00000194 <.Loc.16>:
    TWDR = data;
     194:	8b eb       	ldi	r24, 0xBB	; 187
     196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.17>:
     198:	29 81       	ldd	r18, Y+1	; 0x01
     19a:	fc 01       	movw	r30, r24
     19c:	20 83       	st	Z, r18

0000019e <.Loc.18>:
    TWCR = (1 << TWINT) | (1 << TWEN);
     19e:	8c eb       	ldi	r24, 0xBC	; 188
     1a0:	90 e0       	ldi	r25, 0x00	; 0

000001a2 <.Loc.19>:
     1a2:	24 e8       	ldi	r18, 0x84	; 132
     1a4:	fc 01       	movw	r30, r24
     1a6:	20 83       	st	Z, r18

000001a8 <.Loc.20>:
	...

000001aa <.L6>:
    while (!(TWCR & (1 << TWINT)));
     1aa:	8c eb       	ldi	r24, 0xBC	; 188
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	fc 01       	movw	r30, r24
     1b0:	80 81       	ld	r24, Z

000001b2 <.Loc.22>:
     1b2:	88 23       	and	r24, r24
     1b4:	d4 f7       	brge	.-12     	; 0x1aa <.L6>

000001b6 <.Loc.23>:
}
     1b6:	00 00       	nop
     1b8:	00 00       	nop
     1ba:	0f 90       	pop	r0
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <I2C_ReadACK>:

uint8_t I2C_ReadACK() {
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62

000001ca <.Loc.25>:
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
     1ca:	8c eb       	ldi	r24, 0xBC	; 188
     1cc:	90 e0       	ldi	r25, 0x00	; 0

000001ce <.Loc.26>:
     1ce:	24 ec       	ldi	r18, 0xC4	; 196
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18

000001d4 <.Loc.27>:
	...

000001d6 <.L8>:
    while (!(TWCR & (1 << TWINT)));
     1d6:	8c eb       	ldi	r24, 0xBC	; 188
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	fc 01       	movw	r30, r24
     1dc:	80 81       	ld	r24, Z

000001de <.Loc.29>:
     1de:	88 23       	and	r24, r24
     1e0:	d4 f7       	brge	.-12     	; 0x1d6 <.L8>

000001e2 <.Loc.30>:
    return TWDR;
     1e2:	8b eb       	ldi	r24, 0xBB	; 187
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	fc 01       	movw	r30, r24
     1e8:	80 81       	ld	r24, Z

000001ea <.Loc.31>:
}
     1ea:	df 91       	pop	r29
     1ec:	cf 91       	pop	r28
     1ee:	08 95       	ret

000001f0 <I2C_ReadNACK>:

uint8_t I2C_ReadNACK() {
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	cd b7       	in	r28, 0x3d	; 61
     1f6:	de b7       	in	r29, 0x3e	; 62

000001f8 <.Loc.33>:
    TWCR = (1 << TWINT) | (1 << TWEN);
     1f8:	8c eb       	ldi	r24, 0xBC	; 188
     1fa:	90 e0       	ldi	r25, 0x00	; 0

000001fc <.Loc.34>:
     1fc:	24 e8       	ldi	r18, 0x84	; 132
     1fe:	fc 01       	movw	r30, r24
     200:	20 83       	st	Z, r18

00000202 <.Loc.35>:
	...

00000204 <.L11>:
    while (!(TWCR & (1 << TWINT)));
     204:	8c eb       	ldi	r24, 0xBC	; 188
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	fc 01       	movw	r30, r24
     20a:	80 81       	ld	r24, Z

0000020c <.Loc.37>:
     20c:	88 23       	and	r24, r24
     20e:	d4 f7       	brge	.-12     	; 0x204 <.L11>

00000210 <.Loc.38>:
    return TWDR;
     210:	8b eb       	ldi	r24, 0xBB	; 187
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	fc 01       	movw	r30, r24
     216:	80 81       	ld	r24, Z

00000218 <.Loc.39>:
}
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <MPU6050_WriteReg>:

void MPU6050_WriteReg(uint8_t reg, uint8_t data) {
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	0f 92       	push	r0
     224:	0f 92       	push	r0
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	89 83       	std	Y+1, r24	; 0x01
     22c:	6a 83       	std	Y+2, r22	; 0x02

0000022e <.Loc.41>:
    I2C_Start();
     22e:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000232 <.Loc.42>:
    I2C_Write(MPU6050_ADDR << 1);
     232:	80 ed       	ldi	r24, 0xD0	; 208
     234:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000238 <.Loc.43>:
    I2C_Write(reg);
     238:	89 81       	ldd	r24, Y+1	; 0x01
     23a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000023e <.Loc.44>:
    I2C_Write(data);
     23e:	8a 81       	ldd	r24, Y+2	; 0x02
     240:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000244 <.Loc.45>:
    I2C_Stop();
     244:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C_Stop>

00000248 <.Loc.46>:
}
     248:	00 00       	nop
     24a:	0f 90       	pop	r0
     24c:	0f 90       	pop	r0
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <MPU6050_ReadGyro>:

int16_t MPU6050_ReadGyro(uint8_t reg) {
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	00 d0       	rcall	.+0      	; 0x25e <L0^A>

0000025e <L0^A>:
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	8b 83       	std	Y+3, r24	; 0x03

00000264 <.Loc.48>:
    int16_t value;
    I2C_Start();
     264:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000268 <.Loc.49>:
    I2C_Write(MPU6050_ADDR << 1);
     268:	80 ed       	ldi	r24, 0xD0	; 208
     26a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000026e <.Loc.50>:
    I2C_Write(reg);
     26e:	8b 81       	ldd	r24, Y+3	; 0x03
     270:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000274 <.Loc.51>:
    I2C_Start();
     274:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000278 <.Loc.52>:
    I2C_Write((MPU6050_ADDR << 1) | 0x01);
     278:	81 ed       	ldi	r24, 0xD1	; 209
     27a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000027e <.Loc.53>:
    value = (I2C_ReadACK() << 8) | I2C_ReadNACK();
     27e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <I2C_ReadACK>
     282:	88 2f       	mov	r24, r24
     284:	90 e0       	ldi	r25, 0x00	; 0

00000286 <.Loc.54>:
     286:	18 2f       	mov	r17, r24
     288:	00 27       	eor	r16, r16

0000028a <.Loc.55>:
     28a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <I2C_ReadNACK>
     28e:	88 2f       	mov	r24, r24
     290:	90 e0       	ldi	r25, 0x00	; 0

00000292 <.Loc.56>:
     292:	80 2b       	or	r24, r16
     294:	91 2b       	or	r25, r17
     296:	9a 83       	std	Y+2, r25	; 0x02
     298:	89 83       	std	Y+1, r24	; 0x01

0000029a <.Loc.57>:
    I2C_Stop();
     29a:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C_Stop>

0000029e <.Loc.58>:
    return value;
     29e:	89 81       	ldd	r24, Y+1	; 0x01
     2a0:	9a 81       	ldd	r25, Y+2	; 0x02

000002a2 <.Loc.59>:
}
     2a2:	0f 90       	pop	r0
     2a4:	0f 90       	pop	r0
     2a6:	0f 90       	pop	r0
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	1f 91       	pop	r17
     2ae:	0f 91       	pop	r16
     2b0:	08 95       	ret

000002b2 <Read_Gyro_X>:

float Read_Gyro_X(void){
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	cd b7       	in	r28, 0x3d	; 61
     2b8:	de b7       	in	r29, 0x3e	; 62
     2ba:	66 97       	sbiw	r28, 0x16	; 22
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	f8 94       	cli
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	cd bf       	out	0x3d, r28	; 61

000002c6 <.Loc.61>:
    int16_t GyroX = MPU6050_ReadGyro(0x43);
     2c6:	83 e4       	ldi	r24, 0x43	; 67
     2c8:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     2cc:	9a 83       	std	Y+2, r25	; 0x02
     2ce:	89 83       	std	Y+1, r24	; 0x01

000002d0 <.Loc.62>:
    GyroX += 248;
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	9a 81       	ldd	r25, Y+2	; 0x02
     2d4:	88 50       	subi	r24, 0x08	; 8
     2d6:	9f 4f       	sbci	r25, 0xFF	; 255
     2d8:	9a 83       	std	Y+2, r25	; 0x02
     2da:	89 83       	std	Y+1, r24	; 0x01

000002dc <.Loc.63>:
    float GyroX_degPerSec = (float)GyroX / 131.0;
     2dc:	89 81       	ldd	r24, Y+1	; 0x01
     2de:	9a 81       	ldd	r25, Y+2	; 0x02
     2e0:	9c 01       	movw	r18, r24
     2e2:	99 0f       	add	r25, r25
     2e4:	44 0b       	sbc	r20, r20
     2e6:	55 0b       	sbc	r21, r21
     2e8:	2f 87       	std	Y+15, r18	; 0x0f
     2ea:	38 8b       	std	Y+16, r19	; 0x10
     2ec:	49 8b       	std	Y+17, r20	; 0x11
     2ee:	5a 8b       	std	Y+18, r21	; 0x12
     2f0:	6f 85       	ldd	r22, Y+15	; 0x0f
     2f2:	78 89       	ldd	r23, Y+16	; 0x10
     2f4:	89 89       	ldd	r24, Y+17	; 0x11
     2f6:	9a 89       	ldd	r25, Y+18	; 0x12
     2f8:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
     2fc:	6f 83       	std	Y+7, r22	; 0x07
     2fe:	78 87       	std	Y+8, r23	; 0x08
     300:	89 87       	std	Y+9, r24	; 0x09
     302:	9a 87       	std	Y+10, r25	; 0x0a

00000304 <.Loc.64>:
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	43 e0       	ldi	r20, 0x03	; 3
     30a:	53 e4       	ldi	r21, 0x43	; 67
     30c:	6f 81       	ldd	r22, Y+7	; 0x07
     30e:	78 85       	ldd	r23, Y+8	; 0x08
     310:	89 85       	ldd	r24, Y+9	; 0x09
     312:	9a 85       	ldd	r25, Y+10	; 0x0a
     314:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
     318:	6b 8b       	std	Y+19, r22	; 0x13
     31a:	7c 8b       	std	Y+20, r23	; 0x14
     31c:	8d 8b       	std	Y+21, r24	; 0x15
     31e:	9e 8b       	std	Y+22, r25	; 0x16
     320:	8b 89       	ldd	r24, Y+19	; 0x13
     322:	9c 89       	ldd	r25, Y+20	; 0x14
     324:	ad 89       	ldd	r26, Y+21	; 0x15
     326:	be 89       	ldd	r27, Y+22	; 0x16
     328:	8b 83       	std	Y+3, r24	; 0x03
     32a:	9c 83       	std	Y+4, r25	; 0x04
     32c:	ad 83       	std	Y+5, r26	; 0x05
     32e:	be 83       	std	Y+6, r27	; 0x06

00000330 <.Loc.65>:
    return GyroX_degPerSec;
     330:	8b 81       	ldd	r24, Y+3	; 0x03
     332:	9c 81       	ldd	r25, Y+4	; 0x04
     334:	ad 81       	ldd	r26, Y+5	; 0x05
     336:	be 81       	ldd	r27, Y+6	; 0x06
     338:	8b 87       	std	Y+11, r24	; 0x0b
     33a:	9c 87       	std	Y+12, r25	; 0x0c
     33c:	ad 87       	std	Y+13, r26	; 0x0d
     33e:	be 87       	std	Y+14, r27	; 0x0e

00000340 <.Loc.66>:
}
     340:	6b 85       	ldd	r22, Y+11	; 0x0b
     342:	7c 85       	ldd	r23, Y+12	; 0x0c
     344:	8d 85       	ldd	r24, Y+13	; 0x0d
     346:	9e 85       	ldd	r25, Y+14	; 0x0e
     348:	66 96       	adiw	r28, 0x16	; 22
     34a:	0f b6       	in	r0, 0x3f	; 63
     34c:	f8 94       	cli
     34e:	de bf       	out	0x3e, r29	; 62
     350:	0f be       	out	0x3f, r0	; 63
     352:	cd bf       	out	0x3d, r28	; 61
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <Read_Gyro_Y>:
float Read_Gyro_Y(void){
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
     362:	66 97       	sbiw	r28, 0x16	; 22
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	f8 94       	cli
     368:	de bf       	out	0x3e, r29	; 62
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	cd bf       	out	0x3d, r28	; 61

0000036e <.Loc.68>:
    int16_t GyroY = MPU6050_ReadGyro(0x45);
     36e:	85 e4       	ldi	r24, 0x45	; 69
     370:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     374:	9a 83       	std	Y+2, r25	; 0x02
     376:	89 83       	std	Y+1, r24	; 0x01

00000378 <.Loc.69>:
    float GyroY_degPerSec = (float)GyroY / 131.0;
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
     37c:	9c 01       	movw	r18, r24
     37e:	99 0f       	add	r25, r25
     380:	44 0b       	sbc	r20, r20
     382:	55 0b       	sbc	r21, r21
     384:	2f 87       	std	Y+15, r18	; 0x0f
     386:	38 8b       	std	Y+16, r19	; 0x10
     388:	49 8b       	std	Y+17, r20	; 0x11
     38a:	5a 8b       	std	Y+18, r21	; 0x12
     38c:	6f 85       	ldd	r22, Y+15	; 0x0f
     38e:	78 89       	ldd	r23, Y+16	; 0x10
     390:	89 89       	ldd	r24, Y+17	; 0x11
     392:	9a 89       	ldd	r25, Y+18	; 0x12
     394:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
     398:	6f 83       	std	Y+7, r22	; 0x07
     39a:	78 87       	std	Y+8, r23	; 0x08
     39c:	89 87       	std	Y+9, r24	; 0x09
     39e:	9a 87       	std	Y+10, r25	; 0x0a

000003a0 <.Loc.70>:
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	43 e0       	ldi	r20, 0x03	; 3
     3a6:	53 e4       	ldi	r21, 0x43	; 67
     3a8:	6f 81       	ldd	r22, Y+7	; 0x07
     3aa:	78 85       	ldd	r23, Y+8	; 0x08
     3ac:	89 85       	ldd	r24, Y+9	; 0x09
     3ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b0:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
     3b4:	6b 8b       	std	Y+19, r22	; 0x13
     3b6:	7c 8b       	std	Y+20, r23	; 0x14
     3b8:	8d 8b       	std	Y+21, r24	; 0x15
     3ba:	9e 8b       	std	Y+22, r25	; 0x16
     3bc:	8b 89       	ldd	r24, Y+19	; 0x13
     3be:	9c 89       	ldd	r25, Y+20	; 0x14
     3c0:	ad 89       	ldd	r26, Y+21	; 0x15
     3c2:	be 89       	ldd	r27, Y+22	; 0x16
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	9c 83       	std	Y+4, r25	; 0x04
     3c8:	ad 83       	std	Y+5, r26	; 0x05
     3ca:	be 83       	std	Y+6, r27	; 0x06

000003cc <.Loc.71>:
    return GyroY_degPerSec;
     3cc:	8b 81       	ldd	r24, Y+3	; 0x03
     3ce:	9c 81       	ldd	r25, Y+4	; 0x04
     3d0:	ad 81       	ldd	r26, Y+5	; 0x05
     3d2:	be 81       	ldd	r27, Y+6	; 0x06
     3d4:	8b 87       	std	Y+11, r24	; 0x0b
     3d6:	9c 87       	std	Y+12, r25	; 0x0c
     3d8:	ad 87       	std	Y+13, r26	; 0x0d
     3da:	be 87       	std	Y+14, r27	; 0x0e

000003dc <.Loc.72>:
}
     3dc:	6b 85       	ldd	r22, Y+11	; 0x0b
     3de:	7c 85       	ldd	r23, Y+12	; 0x0c
     3e0:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e2:	9e 85       	ldd	r25, Y+14	; 0x0e
     3e4:	66 96       	adiw	r28, 0x16	; 22
     3e6:	0f b6       	in	r0, 0x3f	; 63
     3e8:	f8 94       	cli
     3ea:	de bf       	out	0x3e, r29	; 62
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	cd bf       	out	0x3d, r28	; 61
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <Read_Gyro_Z>:
float Read_Gyro_Z(void){
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	cd b7       	in	r28, 0x3d	; 61
     3fc:	de b7       	in	r29, 0x3e	; 62
     3fe:	66 97       	sbiw	r28, 0x16	; 22
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61

0000040a <.Loc.74>:
    int16_t GyroZ = MPU6050_ReadGyro(0x47);
     40a:	87 e4       	ldi	r24, 0x47	; 71
     40c:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	89 83       	std	Y+1, r24	; 0x01

00000414 <.Loc.75>:
    float GyroZ_degPerSec = (float)GyroZ / 131.0;
     414:	89 81       	ldd	r24, Y+1	; 0x01
     416:	9a 81       	ldd	r25, Y+2	; 0x02
     418:	9c 01       	movw	r18, r24
     41a:	99 0f       	add	r25, r25
     41c:	44 0b       	sbc	r20, r20
     41e:	55 0b       	sbc	r21, r21
     420:	2f 87       	std	Y+15, r18	; 0x0f
     422:	38 8b       	std	Y+16, r19	; 0x10
     424:	49 8b       	std	Y+17, r20	; 0x11
     426:	5a 8b       	std	Y+18, r21	; 0x12
     428:	6f 85       	ldd	r22, Y+15	; 0x0f
     42a:	78 89       	ldd	r23, Y+16	; 0x10
     42c:	89 89       	ldd	r24, Y+17	; 0x11
     42e:	9a 89       	ldd	r25, Y+18	; 0x12
     430:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
     434:	6f 83       	std	Y+7, r22	; 0x07
     436:	78 87       	std	Y+8, r23	; 0x08
     438:	89 87       	std	Y+9, r24	; 0x09
     43a:	9a 87       	std	Y+10, r25	; 0x0a

0000043c <.Loc.76>:
     43c:	20 e0       	ldi	r18, 0x00	; 0
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	43 e0       	ldi	r20, 0x03	; 3
     442:	53 e4       	ldi	r21, 0x43	; 67
     444:	6f 81       	ldd	r22, Y+7	; 0x07
     446:	78 85       	ldd	r23, Y+8	; 0x08
     448:	89 85       	ldd	r24, Y+9	; 0x09
     44a:	9a 85       	ldd	r25, Y+10	; 0x0a
     44c:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
     450:	6b 8b       	std	Y+19, r22	; 0x13
     452:	7c 8b       	std	Y+20, r23	; 0x14
     454:	8d 8b       	std	Y+21, r24	; 0x15
     456:	9e 8b       	std	Y+22, r25	; 0x16
     458:	8b 89       	ldd	r24, Y+19	; 0x13
     45a:	9c 89       	ldd	r25, Y+20	; 0x14
     45c:	ad 89       	ldd	r26, Y+21	; 0x15
     45e:	be 89       	ldd	r27, Y+22	; 0x16
     460:	8b 83       	std	Y+3, r24	; 0x03
     462:	9c 83       	std	Y+4, r25	; 0x04
     464:	ad 83       	std	Y+5, r26	; 0x05
     466:	be 83       	std	Y+6, r27	; 0x06

00000468 <.Loc.77>:
    return GyroZ_degPerSec;
     468:	8b 81       	ldd	r24, Y+3	; 0x03
     46a:	9c 81       	ldd	r25, Y+4	; 0x04
     46c:	ad 81       	ldd	r26, Y+5	; 0x05
     46e:	be 81       	ldd	r27, Y+6	; 0x06
     470:	8b 87       	std	Y+11, r24	; 0x0b
     472:	9c 87       	std	Y+12, r25	; 0x0c
     474:	ad 87       	std	Y+13, r26	; 0x0d
     476:	be 87       	std	Y+14, r27	; 0x0e

00000478 <.Loc.78>:
}
     478:	6b 85       	ldd	r22, Y+11	; 0x0b
     47a:	7c 85       	ldd	r23, Y+12	; 0x0c
     47c:	8d 85       	ldd	r24, Y+13	; 0x0d
     47e:	9e 85       	ldd	r25, Y+14	; 0x0e
     480:	66 96       	adiw	r28, 0x16	; 22
     482:	0f b6       	in	r0, 0x3f	; 63
     484:	f8 94       	cli
     486:	de bf       	out	0x3e, r29	; 62
     488:	0f be       	out	0x3f, r0	; 63
     48a:	cd bf       	out	0x3d, r28	; 61
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <MPU6050_Init>:


void MPU6050_Init() {
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62

0000049a <.Loc.80>:
    MPU6050_WriteReg(0x6B, 0x00); // Power on the MPU6050
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	8b e6       	ldi	r24, 0x6B	; 107
     49e:	0e 94 0f 01 	call	0x21e	; 0x21e <MPU6050_WriteReg>

000004a2 <.Loc.81>:
}
     4a2:	00 00       	nop
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <initTimerGyro>:

void initTimerGyro(void){
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62

000004b2 <.Loc.83>:
    TCCR0A = 0;
     4b2:	84 e4       	ldi	r24, 0x44	; 68
     4b4:	90 e0       	ldi	r25, 0x00	; 0

000004b6 <.Loc.84>:
     4b6:	fc 01       	movw	r30, r24
     4b8:	10 82       	st	Z, r1

000004ba <.Loc.85>:
    TCCR0B |= (1<<CS00);
     4ba:	85 e4       	ldi	r24, 0x45	; 69
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	fc 01       	movw	r30, r24
     4c0:	20 81       	ld	r18, Z
     4c2:	85 e4       	ldi	r24, 0x45	; 69
     4c4:	90 e0       	ldi	r25, 0x00	; 0

000004c6 <.Loc.86>:
     4c6:	21 60       	ori	r18, 0x01	; 1
     4c8:	fc 01       	movw	r30, r24
     4ca:	20 83       	st	Z, r18

000004cc <.Loc.87>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s = 0.016ms = 16us
    //62500x/sec
    TIMSK0 = (1<<TOIE0);
     4cc:	8e e6       	ldi	r24, 0x6E	; 110
     4ce:	90 e0       	ldi	r25, 0x00	; 0

000004d0 <.Loc.88>:
     4d0:	21 e0       	ldi	r18, 0x01	; 1
     4d2:	fc 01       	movw	r30, r24
     4d4:	20 83       	st	Z, r18

000004d6 <.Loc.89>:
    sei();
     4d6:	78 94       	sei

000004d8 <.Loc.90>:
}
     4d8:	00 00       	nop
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	08 95       	ret

000004e0 <__vector_23>:
ISR(TIMER0_OVF_vect){
     4e0:	1f 92       	push	r1
     4e2:	0f 92       	push	r0
     4e4:	0f b6       	in	r0, 0x3f	; 63
     4e6:	0f 92       	push	r0
     4e8:	11 24       	eor	r1, r1
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62

000004f6 <.Loc.92>:
    Gyro_count++;
     4f6:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Gyro_count>
     4fa:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <Gyro_count+0x1>
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <Gyro_count+0x1>
     504:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <Gyro_count>

00000508 <.Loc.93>:
}
     508:	00 00       	nop
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	9f 91       	pop	r25
     510:	8f 91       	pop	r24
     512:	0f 90       	pop	r0
     514:	0f be       	out	0x3f, r0	; 63
     516:	0f 90       	pop	r0
     518:	1f 90       	pop	r1
     51a:	18 95       	reti

0000051c <UpdateHeading>:

float UpdateHeading(float CurrentHeading){
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	ec 97       	sbiw	r28, 0x3c	; 60
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
     530:	69 87       	std	Y+9, r22	; 0x09
     532:	7a 87       	std	Y+10, r23	; 0x0a
     534:	8b 87       	std	Y+11, r24	; 0x0b
     536:	9c 87       	std	Y+12, r25	; 0x0c

00000538 <.Loc.95>:

    float DeltaTijd = 0;
     538:	19 82       	std	Y+1, r1	; 0x01
     53a:	1a 82       	std	Y+2, r1	; 0x02
     53c:	1b 82       	std	Y+3, r1	; 0x03
     53e:	1c 82       	std	Y+4, r1	; 0x04

00000540 <.Loc.96>:
    float DeltaHeading;

    // Read gyroscopic rotation data
    DS_2 = Read_Gyro_X();
     540:	0e 94 59 01 	call	0x2b2	; 0x2b2 <Read_Gyro_X>
     544:	6d 87       	std	Y+13, r22	; 0x0d
     546:	7e 87       	std	Y+14, r23	; 0x0e
     548:	8f 87       	std	Y+15, r24	; 0x0f
     54a:	98 8b       	std	Y+16, r25	; 0x10

0000054c <.Loc.97>:
     54c:	2d 85       	ldd	r18, Y+13	; 0x0d
     54e:	3e 85       	ldd	r19, Y+14	; 0x0e
     550:	4f 85       	ldd	r20, Y+15	; 0x0f
     552:	58 89       	ldd	r21, Y+16	; 0x10
     554:	20 93 2a 02 	sts	0x022A, r18	; 0x80022a <DS_2>
     558:	30 93 2b 02 	sts	0x022B, r19	; 0x80022b <DS_2+0x1>
     55c:	40 93 2c 02 	sts	0x022C, r20	; 0x80022c <DS_2+0x2>
     560:	50 93 2d 02 	sts	0x022D, r21	; 0x80022d <DS_2+0x3>

00000564 <.Loc.98>:
    //Timer uitlezen
    //16us * count is aantal s
    DeltaTijd = Gyro_count;
     564:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Gyro_count>
     568:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <Gyro_count+0x1>
     56c:	9c 01       	movw	r18, r24
     56e:	99 0f       	add	r25, r25
     570:	44 0b       	sbc	r20, r20
     572:	55 0b       	sbc	r21, r21
     574:	29 a3       	std	Y+33, r18	; 0x21
     576:	3a a3       	std	Y+34, r19	; 0x22
     578:	4b a3       	std	Y+35, r20	; 0x23
     57a:	5c a3       	std	Y+36, r21	; 0x24
     57c:	69 a1       	ldd	r22, Y+33	; 0x21
     57e:	7a a1       	ldd	r23, Y+34	; 0x22
     580:	8b a1       	ldd	r24, Y+35	; 0x23
     582:	9c a1       	ldd	r25, Y+36	; 0x24
     584:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
     588:	6d a3       	std	Y+37, r22	; 0x25
     58a:	7e a3       	std	Y+38, r23	; 0x26
     58c:	8f a3       	std	Y+39, r24	; 0x27
     58e:	98 a7       	std	Y+40, r25	; 0x28
     590:	8d a1       	ldd	r24, Y+37	; 0x25
     592:	9e a1       	ldd	r25, Y+38	; 0x26
     594:	af a1       	ldd	r26, Y+39	; 0x27
     596:	b8 a5       	ldd	r27, Y+40	; 0x28
     598:	89 83       	std	Y+1, r24	; 0x01
     59a:	9a 83       	std	Y+2, r25	; 0x02
     59c:	ab 83       	std	Y+3, r26	; 0x03
     59e:	bc 83       	std	Y+4, r27	; 0x04

000005a0 <.Loc.99>:

    //reset timer
    TCNT0 = 0;
     5a0:	86 e4       	ldi	r24, 0x46	; 70
     5a2:	90 e0       	ldi	r25, 0x00	; 0

000005a4 <.Loc.100>:
     5a4:	dc 01       	movw	r26, r24
     5a6:	1c 92       	st	X, r1

000005a8 <.Loc.101>:
    TIFR0 = 1<<TOV0;
     5a8:	85 e3       	ldi	r24, 0x35	; 53
     5aa:	90 e0       	ldi	r25, 0x00	; 0

000005ac <.Loc.102>:
     5ac:	21 e0       	ldi	r18, 0x01	; 1
     5ae:	fc 01       	movw	r30, r24
     5b0:	20 83       	st	Z, r18

000005b2 <.Loc.103>:
    Gyro_count = 0;
     5b2:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <Gyro_count+0x1>
     5b6:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <Gyro_count>

000005ba <.Loc.104>:
    DeltaTijd = DeltaTijd * 0.000016; //DT nu in s
     5ba:	2d eb       	ldi	r18, 0xBD	; 189
     5bc:	37 e3       	ldi	r19, 0x37	; 55
     5be:	46 e8       	ldi	r20, 0x86	; 134
     5c0:	57 e3       	ldi	r21, 0x37	; 55
     5c2:	69 81       	ldd	r22, Y+1	; 0x01
     5c4:	7a 81       	ldd	r23, Y+2	; 0x02
     5c6:	8b 81       	ldd	r24, Y+3	; 0x03
     5c8:	9c 81       	ldd	r25, Y+4	; 0x04
     5ca:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
     5ce:	69 a7       	std	Y+41, r22	; 0x29
     5d0:	7a a7       	std	Y+42, r23	; 0x2a
     5d2:	8b a7       	std	Y+43, r24	; 0x2b
     5d4:	9c a7       	std	Y+44, r25	; 0x2c
     5d6:	29 a5       	ldd	r18, Y+41	; 0x29
     5d8:	3a a5       	ldd	r19, Y+42	; 0x2a
     5da:	4b a5       	ldd	r20, Y+43	; 0x2b
     5dc:	5c a5       	ldd	r21, Y+44	; 0x2c
     5de:	29 83       	std	Y+1, r18	; 0x01
     5e0:	3a 83       	std	Y+2, r19	; 0x02
     5e2:	4b 83       	std	Y+3, r20	; 0x03
     5e4:	5c 83       	std	Y+4, r21	; 0x04

000005e6 <.Loc.105>:
    DeltaHeading = ((DS_1 + DS_2)*(DeltaTijd))/2.0;
     5e6:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <DS_1>
     5ea:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <DS_1+0x1>
     5ee:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <DS_1+0x2>
     5f2:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <DS_1+0x3>
     5f6:	89 8b       	std	Y+17, r24	; 0x11
     5f8:	9a 8b       	std	Y+18, r25	; 0x12
     5fa:	ab 8b       	std	Y+19, r26	; 0x13
     5fc:	bc 8b       	std	Y+20, r27	; 0x14
     5fe:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <DS_2>
     602:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <DS_2+0x1>
     606:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <DS_2+0x2>
     60a:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <DS_2+0x3>
     60e:	9c 01       	movw	r18, r24
     610:	ad 01       	movw	r20, r26
     612:	69 89       	ldd	r22, Y+17	; 0x11
     614:	7a 89       	ldd	r23, Y+18	; 0x12
     616:	8b 89       	ldd	r24, Y+19	; 0x13
     618:	9c 89       	ldd	r25, Y+20	; 0x14
     61a:	0e 94 01 18 	call	0x3002	; 0x3002 <__addsf3>
     61e:	6d a7       	std	Y+45, r22	; 0x2d
     620:	7e a7       	std	Y+46, r23	; 0x2e
     622:	8f a7       	std	Y+47, r24	; 0x2f
     624:	98 ab       	std	Y+48, r25	; 0x30
     626:	2d a5       	ldd	r18, Y+45	; 0x2d
     628:	3e a5       	ldd	r19, Y+46	; 0x2e
     62a:	4f a5       	ldd	r20, Y+47	; 0x2f
     62c:	58 a9       	ldd	r21, Y+48	; 0x30
     62e:	2d 8b       	std	Y+21, r18	; 0x15
     630:	3e 8b       	std	Y+22, r19	; 0x16
     632:	4f 8b       	std	Y+23, r20	; 0x17
     634:	58 8f       	std	Y+24, r21	; 0x18

00000636 <.Loc.106>:
     636:	29 81       	ldd	r18, Y+1	; 0x01
     638:	3a 81       	ldd	r19, Y+2	; 0x02
     63a:	4b 81       	ldd	r20, Y+3	; 0x03
     63c:	5c 81       	ldd	r21, Y+4	; 0x04
     63e:	6d 89       	ldd	r22, Y+21	; 0x15
     640:	7e 89       	ldd	r23, Y+22	; 0x16
     642:	8f 89       	ldd	r24, Y+23	; 0x17
     644:	98 8d       	ldd	r25, Y+24	; 0x18
     646:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
     64a:	69 ab       	std	Y+49, r22	; 0x31
     64c:	7a ab       	std	Y+50, r23	; 0x32
     64e:	8b ab       	std	Y+51, r24	; 0x33
     650:	9c ab       	std	Y+52, r25	; 0x34
     652:	89 a9       	ldd	r24, Y+49	; 0x31
     654:	9a a9       	ldd	r25, Y+50	; 0x32
     656:	ab a9       	ldd	r26, Y+51	; 0x33
     658:	bc a9       	ldd	r27, Y+52	; 0x34
     65a:	89 8f       	std	Y+25, r24	; 0x19
     65c:	9a 8f       	std	Y+26, r25	; 0x1a
     65e:	ab 8f       	std	Y+27, r26	; 0x1b
     660:	bc 8f       	std	Y+28, r27	; 0x1c

00000662 <.Loc.107>:
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	40 e0       	ldi	r20, 0x00	; 0
     668:	50 e4       	ldi	r21, 0x40	; 64
     66a:	69 8d       	ldd	r22, Y+25	; 0x19
     66c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     66e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     670:	9c 8d       	ldd	r25, Y+28	; 0x1c
     672:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
     676:	6d ab       	std	Y+53, r22	; 0x35
     678:	7e ab       	std	Y+54, r23	; 0x36
     67a:	8f ab       	std	Y+55, r24	; 0x37
     67c:	98 af       	std	Y+56, r25	; 0x38
     67e:	2d a9       	ldd	r18, Y+53	; 0x35
     680:	3e a9       	ldd	r19, Y+54	; 0x36
     682:	4f a9       	ldd	r20, Y+55	; 0x37
     684:	58 ad       	ldd	r21, Y+56	; 0x38
     686:	2d 83       	std	Y+5, r18	; 0x05
     688:	3e 83       	std	Y+6, r19	; 0x06
     68a:	4f 83       	std	Y+7, r20	; 0x07
     68c:	58 87       	std	Y+8, r21	; 0x08

0000068e <.Loc.108>:
    CurrentHeading = CurrentHeading + DeltaHeading;
     68e:	2d 81       	ldd	r18, Y+5	; 0x05
     690:	3e 81       	ldd	r19, Y+6	; 0x06
     692:	4f 81       	ldd	r20, Y+7	; 0x07
     694:	58 85       	ldd	r21, Y+8	; 0x08
     696:	69 85       	ldd	r22, Y+9	; 0x09
     698:	7a 85       	ldd	r23, Y+10	; 0x0a
     69a:	8b 85       	ldd	r24, Y+11	; 0x0b
     69c:	9c 85       	ldd	r25, Y+12	; 0x0c
     69e:	0e 94 01 18 	call	0x3002	; 0x3002 <__addsf3>
     6a2:	69 af       	std	Y+57, r22	; 0x39
     6a4:	7a af       	std	Y+58, r23	; 0x3a
     6a6:	8b af       	std	Y+59, r24	; 0x3b
     6a8:	9c af       	std	Y+60, r25	; 0x3c
     6aa:	89 ad       	ldd	r24, Y+57	; 0x39
     6ac:	9a ad       	ldd	r25, Y+58	; 0x3a
     6ae:	ab ad       	ldd	r26, Y+59	; 0x3b
     6b0:	bc ad       	ldd	r27, Y+60	; 0x3c
     6b2:	89 87       	std	Y+9, r24	; 0x09
     6b4:	9a 87       	std	Y+10, r25	; 0x0a
     6b6:	ab 87       	std	Y+11, r26	; 0x0b
     6b8:	bc 87       	std	Y+12, r27	; 0x0c

000006ba <.Loc.109>:
    DS_1 = DS_2;
     6ba:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <DS_2>
     6be:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <DS_2+0x1>
     6c2:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <DS_2+0x2>
     6c6:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <DS_2+0x3>
     6ca:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <DS_1>
     6ce:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <DS_1+0x1>
     6d2:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <DS_1+0x2>
     6d6:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <DS_1+0x3>

000006da <.Loc.110>:

	return CurrentHeading;
     6da:	89 85       	ldd	r24, Y+9	; 0x09
     6dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     6de:	ab 85       	ldd	r26, Y+11	; 0x0b
     6e0:	bc 85       	ldd	r27, Y+12	; 0x0c
     6e2:	8d 8f       	std	Y+29, r24	; 0x1d
     6e4:	9e 8f       	std	Y+30, r25	; 0x1e
     6e6:	af 8f       	std	Y+31, r26	; 0x1f
     6e8:	b8 a3       	std	Y+32, r27	; 0x20

000006ea <.Loc.111>:
}
     6ea:	6d 8d       	ldd	r22, Y+29	; 0x1d
     6ec:	7e 8d       	ldd	r23, Y+30	; 0x1e
     6ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
     6f0:	98 a1       	ldd	r25, Y+32	; 0x20
     6f2:	ec 96       	adiw	r28, 0x3c	; 60
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	cd bf       	out	0x3d, r28	; 61
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	08 95       	ret

00000704 <init_Gyro>:

void init_Gyro(){
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	cd b7       	in	r28, 0x3d	; 61
     70a:	de b7       	in	r29, 0x3e	; 62

0000070c <.Loc.113>:
    I2C_Init();
     70c:	0e 94 95 00 	call	0x12a	; 0x12a <I2C_Init>

00000710 <.Loc.114>:
    MPU6050_Init();
     710:	0e 94 49 02 	call	0x492	; 0x492 <MPU6050_Init>

00000714 <.Loc.115>:
    initTimerGyro();
     714:	0e 94 55 02 	call	0x4aa	; 0x4aa <initTimerGyro>

00000718 <.Loc.116>:
}
     718:	00 00       	nop
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	08 95       	ret

00000720 <__vector_20>:
#include "h_bridge_1.h"
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER1_OVF_vect){
     720:	1f 92       	push	r1
     722:	0f 92       	push	r0
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	0f 92       	push	r0
     728:	11 24       	eor	r1, r1
     72a:	0b b6       	in	r0, 0x3b	; 59
     72c:	0f 92       	push	r0
     72e:	2f 93       	push	r18
     730:	8f 93       	push	r24
     732:	9f 93       	push	r25
     734:	ef 93       	push	r30
     736:	ff 93       	push	r31
     738:	cf 93       	push	r28
     73a:	df 93       	push	r29
     73c:	cd b7       	in	r28, 0x3d	; 61
     73e:	de b7       	in	r29, 0x3e	; 62

00000740 <.Loc.1>:
	if (OCR1A == 0 && OCR1B == 0){
     740:	88 e8       	ldi	r24, 0x88	; 136
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	fc 01       	movw	r30, r24
     746:	80 81       	ld	r24, Z
     748:	91 81       	ldd	r25, Z+1	; 0x01

0000074a <.Loc.2>:
     74a:	00 97       	sbiw	r24, 0x00	; 0
     74c:	d1 f4       	brne	.+52     	; 0x782 <.L2>

0000074e <.Loc.3>:
     74e:	8a e8       	ldi	r24, 0x8A	; 138
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	fc 01       	movw	r30, r24
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01

00000758 <.Loc.4>:
     758:	00 97       	sbiw	r24, 0x00	; 0
     75a:	99 f4       	brne	.+38     	; 0x782 <.L2>

0000075c <.Loc.5>:
		port_R1 &= ~(1<<pin_R1);
     75c:	88 e0       	ldi	r24, 0x08	; 8
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	fc 01       	movw	r30, r24
     762:	20 81       	ld	r18, Z

00000764 <.Loc.6>:
     764:	88 e0       	ldi	r24, 0x08	; 8
     766:	91 e0       	ldi	r25, 0x01	; 1

00000768 <.Loc.7>:
     768:	2f 7d       	andi	r18, 0xDF	; 223
     76a:	fc 01       	movw	r30, r24
     76c:	20 83       	st	Z, r18

0000076e <.Loc.8>:
		port_L1 &= ~(1<<pin_L1);
     76e:	88 e0       	ldi	r24, 0x08	; 8
     770:	91 e0       	ldi	r25, 0x01	; 1
     772:	fc 01       	movw	r30, r24
     774:	20 81       	ld	r18, Z

00000776 <.Loc.9>:
     776:	88 e0       	ldi	r24, 0x08	; 8
     778:	91 e0       	ldi	r25, 0x01	; 1

0000077a <.Loc.10>:
     77a:	2f 7e       	andi	r18, 0xEF	; 239
     77c:	fc 01       	movw	r30, r24
     77e:	20 83       	st	Z, r18

00000780 <.Loc.11>:
	}
	else if (OCR1B != 0){
		port_R1 &= ~(1<<pin_R1);
		port_L1 |= (1<<pin_L1);
	}
}
     780:	33 c0       	rjmp	.+102    	; 0x7e8 <.L5>

00000782 <.L2>:
	else if (OCR1A != 0){
     782:	88 e8       	ldi	r24, 0x88	; 136
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	fc 01       	movw	r30, r24
     788:	80 81       	ld	r24, Z
     78a:	91 81       	ldd	r25, Z+1	; 0x01

0000078c <.Loc.13>:
     78c:	00 97       	sbiw	r24, 0x00	; 0
     78e:	99 f0       	breq	.+38     	; 0x7b6 <.L4>

00000790 <.Loc.14>:
		port_R1 |= (1<<pin_R1);
     790:	88 e0       	ldi	r24, 0x08	; 8
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	fc 01       	movw	r30, r24
     796:	20 81       	ld	r18, Z
     798:	88 e0       	ldi	r24, 0x08	; 8
     79a:	91 e0       	ldi	r25, 0x01	; 1

0000079c <.Loc.15>:
     79c:	20 62       	ori	r18, 0x20	; 32
     79e:	fc 01       	movw	r30, r24
     7a0:	20 83       	st	Z, r18

000007a2 <.Loc.16>:
		port_L1 &= ~(1<<pin_L1);
     7a2:	88 e0       	ldi	r24, 0x08	; 8
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	fc 01       	movw	r30, r24
     7a8:	20 81       	ld	r18, Z

000007aa <.Loc.17>:
     7aa:	88 e0       	ldi	r24, 0x08	; 8
     7ac:	91 e0       	ldi	r25, 0x01	; 1

000007ae <.Loc.18>:
     7ae:	2f 7e       	andi	r18, 0xEF	; 239
     7b0:	fc 01       	movw	r30, r24
     7b2:	20 83       	st	Z, r18

000007b4 <.Loc.19>:
}
     7b4:	19 c0       	rjmp	.+50     	; 0x7e8 <.L5>

000007b6 <.L4>:
	else if (OCR1B != 0){
     7b6:	8a e8       	ldi	r24, 0x8A	; 138
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	fc 01       	movw	r30, r24
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01

000007c0 <.Loc.21>:
     7c0:	00 97       	sbiw	r24, 0x00	; 0
     7c2:	91 f0       	breq	.+36     	; 0x7e8 <.L5>

000007c4 <.Loc.22>:
		port_R1 &= ~(1<<pin_R1);
     7c4:	88 e0       	ldi	r24, 0x08	; 8
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	fc 01       	movw	r30, r24
     7ca:	20 81       	ld	r18, Z

000007cc <.Loc.23>:
     7cc:	88 e0       	ldi	r24, 0x08	; 8
     7ce:	91 e0       	ldi	r25, 0x01	; 1

000007d0 <.Loc.24>:
     7d0:	2f 7d       	andi	r18, 0xDF	; 223
     7d2:	fc 01       	movw	r30, r24
     7d4:	20 83       	st	Z, r18

000007d6 <.Loc.25>:
		port_L1 |= (1<<pin_L1);
     7d6:	88 e0       	ldi	r24, 0x08	; 8
     7d8:	91 e0       	ldi	r25, 0x01	; 1
     7da:	fc 01       	movw	r30, r24
     7dc:	20 81       	ld	r18, Z
     7de:	88 e0       	ldi	r24, 0x08	; 8
     7e0:	91 e0       	ldi	r25, 0x01	; 1

000007e2 <.Loc.26>:
     7e2:	20 61       	ori	r18, 0x10	; 16
     7e4:	fc 01       	movw	r30, r24
     7e6:	20 83       	st	Z, r18

000007e8 <.L5>:
}
     7e8:	00 00       	nop
     7ea:	df 91       	pop	r29
     7ec:	cf 91       	pop	r28
     7ee:	ff 91       	pop	r31
     7f0:	ef 91       	pop	r30
     7f2:	9f 91       	pop	r25
     7f4:	8f 91       	pop	r24
     7f6:	2f 91       	pop	r18
     7f8:	0f 90       	pop	r0
     7fa:	0b be       	out	0x3b, r0	; 59
     7fc:	0f 90       	pop	r0
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	0f 90       	pop	r0
     802:	1f 90       	pop	r1
     804:	18 95       	reti

00000806 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     806:	1f 92       	push	r1
     808:	0f 92       	push	r0
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	0f 92       	push	r0
     80e:	11 24       	eor	r1, r1
     810:	0b b6       	in	r0, 0x3b	; 59
     812:	0f 92       	push	r0
     814:	2f 93       	push	r18
     816:	8f 93       	push	r24
     818:	9f 93       	push	r25
     81a:	ef 93       	push	r30
     81c:	ff 93       	push	r31
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	cd b7       	in	r28, 0x3d	; 61
     824:	de b7       	in	r29, 0x3e	; 62

00000826 <.Loc.29>:
	if (OCR1A != 65535){
     826:	88 e8       	ldi	r24, 0x88	; 136
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	fc 01       	movw	r30, r24
     82c:	80 81       	ld	r24, Z
     82e:	91 81       	ldd	r25, Z+1	; 0x01

00000830 <.Loc.30>:
     830:	8f 3f       	cpi	r24, 0xFF	; 255
     832:	98 07       	cpc	r25, r24
     834:	49 f0       	breq	.+18     	; 0x848 <.L8>

00000836 <.Loc.31>:
		port_R1 &= ~(1<<pin_R1);
     836:	88 e0       	ldi	r24, 0x08	; 8
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	fc 01       	movw	r30, r24
     83c:	20 81       	ld	r18, Z

0000083e <.Loc.32>:
     83e:	88 e0       	ldi	r24, 0x08	; 8
     840:	91 e0       	ldi	r25, 0x01	; 1

00000842 <.Loc.33>:
     842:	2f 7d       	andi	r18, 0xDF	; 223
     844:	fc 01       	movw	r30, r24
     846:	20 83       	st	Z, r18

00000848 <.L8>:
	}
}
     848:	00 00       	nop
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	ff 91       	pop	r31
     850:	ef 91       	pop	r30
     852:	9f 91       	pop	r25
     854:	8f 91       	pop	r24
     856:	2f 91       	pop	r18
     858:	0f 90       	pop	r0
     85a:	0b be       	out	0x3b, r0	; 59
     85c:	0f 90       	pop	r0
     85e:	0f be       	out	0x3f, r0	; 63
     860:	0f 90       	pop	r0
     862:	1f 90       	pop	r1
     864:	18 95       	reti

00000866 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     866:	1f 92       	push	r1
     868:	0f 92       	push	r0
     86a:	0f b6       	in	r0, 0x3f	; 63
     86c:	0f 92       	push	r0
     86e:	11 24       	eor	r1, r1
     870:	0b b6       	in	r0, 0x3b	; 59
     872:	0f 92       	push	r0
     874:	2f 93       	push	r18
     876:	8f 93       	push	r24
     878:	9f 93       	push	r25
     87a:	ef 93       	push	r30
     87c:	ff 93       	push	r31
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62

00000886 <.Loc.36>:
	if (OCR1B != 65535){
     886:	8a e8       	ldi	r24, 0x8A	; 138
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	fc 01       	movw	r30, r24
     88c:	80 81       	ld	r24, Z
     88e:	91 81       	ldd	r25, Z+1	; 0x01

00000890 <.Loc.37>:
     890:	8f 3f       	cpi	r24, 0xFF	; 255
     892:	98 07       	cpc	r25, r24
     894:	49 f0       	breq	.+18     	; 0x8a8 <.L11>

00000896 <.Loc.38>:
		port_L1 &= ~(1<<pin_L1);
     896:	88 e0       	ldi	r24, 0x08	; 8
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	fc 01       	movw	r30, r24
     89c:	20 81       	ld	r18, Z

0000089e <.Loc.39>:
     89e:	88 e0       	ldi	r24, 0x08	; 8
     8a0:	91 e0       	ldi	r25, 0x01	; 1

000008a2 <.Loc.40>:
     8a2:	2f 7e       	andi	r18, 0xEF	; 239
     8a4:	fc 01       	movw	r30, r24
     8a6:	20 83       	st	Z, r18

000008a8 <.L11>:
	}
}
     8a8:	00 00       	nop
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	ff 91       	pop	r31
     8b0:	ef 91       	pop	r30
     8b2:	9f 91       	pop	r25
     8b4:	8f 91       	pop	r24
     8b6:	2f 91       	pop	r18
     8b8:	0f 90       	pop	r0
     8ba:	0b be       	out	0x3b, r0	; 59
     8bc:	0f 90       	pop	r0
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	0f 90       	pop	r0
     8c2:	1f 90       	pop	r1
     8c4:	18 95       	reti

000008c6 <init_motor_1>:

void init_motor_1(void)
{
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62

000008ce <.Loc.43>:
	// Pin outputs
	ddr_R1 |= (1<<pin_R1);
     8ce:	87 e0       	ldi	r24, 0x07	; 7
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	fc 01       	movw	r30, r24
     8d4:	20 81       	ld	r18, Z
     8d6:	87 e0       	ldi	r24, 0x07	; 7
     8d8:	91 e0       	ldi	r25, 0x01	; 1

000008da <.Loc.44>:
     8da:	20 62       	ori	r18, 0x20	; 32
     8dc:	fc 01       	movw	r30, r24
     8de:	20 83       	st	Z, r18

000008e0 <.Loc.45>:
	ddr_L1 |= (1<<pin_L1);
     8e0:	87 e0       	ldi	r24, 0x07	; 7
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	fc 01       	movw	r30, r24
     8e6:	20 81       	ld	r18, Z
     8e8:	87 e0       	ldi	r24, 0x07	; 7
     8ea:	91 e0       	ldi	r25, 0x01	; 1

000008ec <.Loc.46>:
     8ec:	20 61       	ori	r18, 0x10	; 16
     8ee:	fc 01       	movw	r30, r24
     8f0:	20 83       	st	Z, r18

000008f2 <.Loc.47>:

	// zekerheid laag
	port_R1 &= ~(1<<pin_R1);
     8f2:	88 e0       	ldi	r24, 0x08	; 8
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	fc 01       	movw	r30, r24
     8f8:	20 81       	ld	r18, Z

000008fa <.Loc.48>:
     8fa:	88 e0       	ldi	r24, 0x08	; 8
     8fc:	91 e0       	ldi	r25, 0x01	; 1

000008fe <.Loc.49>:
     8fe:	2f 7d       	andi	r18, 0xDF	; 223
     900:	fc 01       	movw	r30, r24
     902:	20 83       	st	Z, r18

00000904 <.Loc.50>:
	port_L1 &= ~(1<<pin_L1);
     904:	88 e0       	ldi	r24, 0x08	; 8
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	fc 01       	movw	r30, r24
     90a:	20 81       	ld	r18, Z

0000090c <.Loc.51>:
     90c:	88 e0       	ldi	r24, 0x08	; 8
     90e:	91 e0       	ldi	r25, 0x01	; 1

00000910 <.Loc.52>:
     910:	2f 7e       	andi	r18, 0xEF	; 239
     912:	fc 01       	movw	r30, r24
     914:	20 83       	st	Z, r18

00000916 <.Loc.53>:

	// prescale 64
	TCCR1A = 0;
     916:	80 e8       	ldi	r24, 0x80	; 128
     918:	90 e0       	ldi	r25, 0x00	; 0

0000091a <.Loc.54>:
     91a:	fc 01       	movw	r30, r24
     91c:	10 82       	st	Z, r1

0000091e <.Loc.55>:
	TCCR1B = (0<<CS12) | (0<<CS11) | (1<<CS10);
     91e:	81 e8       	ldi	r24, 0x81	; 129
     920:	90 e0       	ldi	r25, 0x00	; 0

00000922 <.Loc.56>:
     922:	21 e0       	ldi	r18, 0x01	; 1
     924:	fc 01       	movw	r30, r24
     926:	20 83       	st	Z, r18

00000928 <.Loc.57>:

	// standaard 0
	OCR1A = 0;
     928:	88 e8       	ldi	r24, 0x88	; 136
     92a:	90 e0       	ldi	r25, 0x00	; 0

0000092c <.Loc.58>:
     92c:	fc 01       	movw	r30, r24
     92e:	11 82       	std	Z+1, r1	; 0x01
     930:	10 82       	st	Z, r1

00000932 <.Loc.59>:
	OCR1B = 0;
     932:	8a e8       	ldi	r24, 0x8A	; 138
     934:	90 e0       	ldi	r25, 0x00	; 0

00000936 <.Loc.60>:
     936:	fc 01       	movw	r30, r24
     938:	11 82       	std	Z+1, r1	; 0x01
     93a:	10 82       	st	Z, r1

0000093c <.Loc.61>:
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     93c:	8f e6       	ldi	r24, 0x6F	; 111
     93e:	90 e0       	ldi	r25, 0x00	; 0

00000940 <.Loc.62>:
     940:	27 e0       	ldi	r18, 0x07	; 7
     942:	fc 01       	movw	r30, r24
     944:	20 83       	st	Z, r18

00000946 <.Loc.63>:
	Motor_1_set_power(0);
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000094c <.Loc.64>:
}
     94c:	00 00       	nop
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	08 95       	ret

00000954 <Motor_1_set_power>:

void Motor_1_set_power(signed char power)
{
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	00 d0       	rcall	.+0      	; 0x95e <L0^A>

0000095e <L0^A>:
     95e:	00 d0       	rcall	.+0      	; 0x960 <L0^A>

00000960 <L0^A>:
     960:	00 d0       	rcall	.+0      	; 0x962 <L0^A>

00000962 <L0^A>:
     962:	cd b7       	in	r28, 0x3d	; 61
     964:	de b7       	in	r29, 0x3e	; 62
     966:	89 83       	std	Y+1, r24	; 0x01

00000968 <.Loc.66>:
	if (power >= -100 && power <= 100){
     968:	89 81       	ldd	r24, Y+1	; 0x01
     96a:	8c 39       	cpi	r24, 0x9C	; 156
     96c:	0c f4       	brge	.+2      	; 0x970 <.Loc.67>

0000096e <L0^A>:
     96e:	61 c0       	rjmp	.+194    	; 0xa32 <.L16>

00000970 <.Loc.67>:
     970:	89 81       	ldd	r24, Y+1	; 0x01
     972:	84 36       	cpi	r24, 0x64	; 100
     974:	11 f0       	breq	.+4      	; 0x97a <.Loc.68>

00000976 <L0^A>:
     976:	0c f0       	brlt	.+2      	; 0x97a <.Loc.68>

00000978 <L0^A>:
     978:	5c c0       	rjmp	.+184    	; 0xa32 <.L16>

0000097a <.Loc.68>:
		if (power >= 0){
     97a:	89 81       	ldd	r24, Y+1	; 0x01
     97c:	88 23       	and	r24, r24
     97e:	6c f1       	brlt	.+90     	; 0x9da <.L15>

00000980 <.Loc.69>:
			OCR1B = 0;
     980:	8a e8       	ldi	r24, 0x8A	; 138
     982:	90 e0       	ldi	r25, 0x00	; 0

00000984 <.Loc.70>:
     984:	fc 01       	movw	r30, r24
     986:	11 82       	std	Z+1, r1	; 0x01
     988:	10 82       	st	Z, r1

0000098a <.Loc.71>:
			OCR1A = (65535*power)/100;
     98a:	89 81       	ldd	r24, Y+1	; 0x01
     98c:	48 2f       	mov	r20, r24
     98e:	88 0f       	add	r24, r24
     990:	55 0b       	sbc	r21, r21
     992:	66 0b       	sbc	r22, r22
     994:	77 0b       	sbc	r23, r23
     996:	8f ef       	ldi	r24, 0xFF	; 255
     998:	9f ef       	ldi	r25, 0xFF	; 255
     99a:	dc 01       	movw	r26, r24
     99c:	9a 01       	movw	r18, r20
     99e:	ab 01       	movw	r20, r22
     9a0:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <__muluhisi3>
     9a4:	6a 83       	std	Y+2, r22	; 0x02
     9a6:	7b 83       	std	Y+3, r23	; 0x03
     9a8:	8c 83       	std	Y+4, r24	; 0x04
     9aa:	9d 83       	std	Y+5, r25	; 0x05

000009ac <.Loc.72>:
     9ac:	04 e6       	ldi	r16, 0x64	; 100
     9ae:	10 e0       	ldi	r17, 0x00	; 0
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	6a 81       	ldd	r22, Y+2	; 0x02
     9b6:	7b 81       	ldd	r23, Y+3	; 0x03
     9b8:	8c 81       	ldd	r24, Y+4	; 0x04
     9ba:	9d 81       	ldd	r25, Y+5	; 0x05
     9bc:	a9 01       	movw	r20, r18
     9be:	98 01       	movw	r18, r16
     9c0:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__divmodsi4>
     9c4:	da 01       	movw	r26, r20
     9c6:	c9 01       	movw	r24, r18
     9c8:	ac 01       	movw	r20, r24
     9ca:	bd 01       	movw	r22, r26

000009cc <.Loc.73>:
     9cc:	88 e8       	ldi	r24, 0x88	; 136
     9ce:	90 e0       	ldi	r25, 0x00	; 0

000009d0 <.Loc.74>:
     9d0:	9a 01       	movw	r18, r20
     9d2:	fc 01       	movw	r30, r24
     9d4:	31 83       	std	Z+1, r19	; 0x01
     9d6:	20 83       	st	Z, r18

000009d8 <.Loc.75>:
		else {
			OCR1A = 0;
			OCR1B = (65535*power)/-100;
		}
	}
}
     9d8:	2c c0       	rjmp	.+88     	; 0xa32 <.L16>

000009da <.L15>:
			OCR1A = 0;
     9da:	88 e8       	ldi	r24, 0x88	; 136
     9dc:	90 e0       	ldi	r25, 0x00	; 0

000009de <.Loc.77>:
     9de:	fc 01       	movw	r30, r24
     9e0:	11 82       	std	Z+1, r1	; 0x01
     9e2:	10 82       	st	Z, r1

000009e4 <.Loc.78>:
			OCR1B = (65535*power)/-100;
     9e4:	89 81       	ldd	r24, Y+1	; 0x01
     9e6:	48 2f       	mov	r20, r24
     9e8:	88 0f       	add	r24, r24
     9ea:	55 0b       	sbc	r21, r21
     9ec:	66 0b       	sbc	r22, r22
     9ee:	77 0b       	sbc	r23, r23
     9f0:	8f ef       	ldi	r24, 0xFF	; 255
     9f2:	9f ef       	ldi	r25, 0xFF	; 255
     9f4:	dc 01       	movw	r26, r24
     9f6:	9a 01       	movw	r18, r20
     9f8:	ab 01       	movw	r20, r22
     9fa:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <__muluhisi3>
     9fe:	6e 83       	std	Y+6, r22	; 0x06
     a00:	7f 83       	std	Y+7, r23	; 0x07
     a02:	88 87       	std	Y+8, r24	; 0x08
     a04:	99 87       	std	Y+9, r25	; 0x09

00000a06 <.Loc.79>:
     a06:	0c e9       	ldi	r16, 0x9C	; 156
     a08:	1f ef       	ldi	r17, 0xFF	; 255
     a0a:	2f ef       	ldi	r18, 0xFF	; 255
     a0c:	3f ef       	ldi	r19, 0xFF	; 255
     a0e:	6e 81       	ldd	r22, Y+6	; 0x06
     a10:	7f 81       	ldd	r23, Y+7	; 0x07
     a12:	88 85       	ldd	r24, Y+8	; 0x08
     a14:	99 85       	ldd	r25, Y+9	; 0x09
     a16:	a9 01       	movw	r20, r18
     a18:	98 01       	movw	r18, r16
     a1a:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__divmodsi4>
     a1e:	da 01       	movw	r26, r20
     a20:	c9 01       	movw	r24, r18
     a22:	ac 01       	movw	r20, r24
     a24:	bd 01       	movw	r22, r26

00000a26 <.Loc.80>:
     a26:	8a e8       	ldi	r24, 0x8A	; 138
     a28:	90 e0       	ldi	r25, 0x00	; 0

00000a2a <.Loc.81>:
     a2a:	9a 01       	movw	r18, r20
     a2c:	fc 01       	movw	r30, r24
     a2e:	31 83       	std	Z+1, r19	; 0x01
     a30:	20 83       	st	Z, r18

00000a32 <.L16>:
}
     a32:	00 00       	nop
     a34:	29 96       	adiw	r28, 0x09	; 9
     a36:	0f b6       	in	r0, 0x3f	; 63
     a38:	f8 94       	cli
     a3a:	de bf       	out	0x3e, r29	; 62
     a3c:	0f be       	out	0x3f, r0	; 63
     a3e:	cd bf       	out	0x3d, r28	; 61
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	1f 91       	pop	r17
     a46:	0f 91       	pop	r16
     a48:	08 95       	ret

00000a4a <__vector_35>:
#include "h_bridge_2.h"
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER3_OVF_vect){
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	0f 92       	push	r0
     a52:	11 24       	eor	r1, r1
     a54:	0b b6       	in	r0, 0x3b	; 59
     a56:	0f 92       	push	r0
     a58:	2f 93       	push	r18
     a5a:	8f 93       	push	r24
     a5c:	9f 93       	push	r25
     a5e:	ef 93       	push	r30
     a60:	ff 93       	push	r31
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62

00000a6a <.Loc.1>:
	if (OCR3A == 0 && OCR3B == 0){
     a6a:	88 e9       	ldi	r24, 0x98	; 152
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	fc 01       	movw	r30, r24
     a70:	80 81       	ld	r24, Z
     a72:	91 81       	ldd	r25, Z+1	; 0x01

00000a74 <.Loc.2>:
     a74:	00 97       	sbiw	r24, 0x00	; 0
     a76:	d1 f4       	brne	.+52     	; 0xaac <.L2>

00000a78 <.Loc.3>:
     a78:	8a e9       	ldi	r24, 0x9A	; 154
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	fc 01       	movw	r30, r24
     a7e:	80 81       	ld	r24, Z
     a80:	91 81       	ldd	r25, Z+1	; 0x01

00000a82 <.Loc.4>:
     a82:	00 97       	sbiw	r24, 0x00	; 0
     a84:	99 f4       	brne	.+38     	; 0xaac <.L2>

00000a86 <.Loc.5>:
		port_R2 &= ~(1<<pin_R2);
     a86:	88 e0       	ldi	r24, 0x08	; 8
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	fc 01       	movw	r30, r24
     a8c:	20 81       	ld	r18, Z

00000a8e <.Loc.6>:
     a8e:	88 e0       	ldi	r24, 0x08	; 8
     a90:	91 e0       	ldi	r25, 0x01	; 1

00000a92 <.Loc.7>:
     a92:	2f 77       	andi	r18, 0x7F	; 127
     a94:	fc 01       	movw	r30, r24
     a96:	20 83       	st	Z, r18

00000a98 <.Loc.8>:
		port_L2 &= ~(1<<pin_L2);
     a98:	88 e0       	ldi	r24, 0x08	; 8
     a9a:	91 e0       	ldi	r25, 0x01	; 1
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 81       	ld	r18, Z

00000aa0 <.Loc.9>:
     aa0:	88 e0       	ldi	r24, 0x08	; 8
     aa2:	91 e0       	ldi	r25, 0x01	; 1

00000aa4 <.Loc.10>:
     aa4:	2f 7b       	andi	r18, 0xBF	; 191
     aa6:	fc 01       	movw	r30, r24
     aa8:	20 83       	st	Z, r18

00000aaa <.Loc.11>:
	}
	else if (OCR3B != 0){
		port_R2 &= ~(1<<pin_R2);
		port_L2 |= (1<<pin_L2);
	}
}
     aaa:	33 c0       	rjmp	.+102    	; 0xb12 <.L5>

00000aac <.L2>:
	else if (OCR3A != 0){
     aac:	88 e9       	ldi	r24, 0x98	; 152
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	fc 01       	movw	r30, r24
     ab2:	80 81       	ld	r24, Z
     ab4:	91 81       	ldd	r25, Z+1	; 0x01

00000ab6 <.Loc.13>:
     ab6:	00 97       	sbiw	r24, 0x00	; 0
     ab8:	99 f0       	breq	.+38     	; 0xae0 <.L4>

00000aba <.Loc.14>:
		port_R2 |= (1<<pin_R2);
     aba:	88 e0       	ldi	r24, 0x08	; 8
     abc:	91 e0       	ldi	r25, 0x01	; 1
     abe:	fc 01       	movw	r30, r24
     ac0:	20 81       	ld	r18, Z
     ac2:	88 e0       	ldi	r24, 0x08	; 8
     ac4:	91 e0       	ldi	r25, 0x01	; 1

00000ac6 <.Loc.15>:
     ac6:	20 68       	ori	r18, 0x80	; 128
     ac8:	fc 01       	movw	r30, r24
     aca:	20 83       	st	Z, r18

00000acc <.Loc.16>:
		port_L2 &= ~(1<<pin_L2);
     acc:	88 e0       	ldi	r24, 0x08	; 8
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 81       	ld	r18, Z

00000ad4 <.Loc.17>:
     ad4:	88 e0       	ldi	r24, 0x08	; 8
     ad6:	91 e0       	ldi	r25, 0x01	; 1

00000ad8 <.Loc.18>:
     ad8:	2f 7b       	andi	r18, 0xBF	; 191
     ada:	fc 01       	movw	r30, r24
     adc:	20 83       	st	Z, r18

00000ade <.Loc.19>:
}
     ade:	19 c0       	rjmp	.+50     	; 0xb12 <.L5>

00000ae0 <.L4>:
	else if (OCR3B != 0){
     ae0:	8a e9       	ldi	r24, 0x9A	; 154
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	fc 01       	movw	r30, r24
     ae6:	80 81       	ld	r24, Z
     ae8:	91 81       	ldd	r25, Z+1	; 0x01

00000aea <.Loc.21>:
     aea:	00 97       	sbiw	r24, 0x00	; 0
     aec:	91 f0       	breq	.+36     	; 0xb12 <.L5>

00000aee <.Loc.22>:
		port_R2 &= ~(1<<pin_R2);
     aee:	88 e0       	ldi	r24, 0x08	; 8
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	fc 01       	movw	r30, r24
     af4:	20 81       	ld	r18, Z

00000af6 <.Loc.23>:
     af6:	88 e0       	ldi	r24, 0x08	; 8
     af8:	91 e0       	ldi	r25, 0x01	; 1

00000afa <.Loc.24>:
     afa:	2f 77       	andi	r18, 0x7F	; 127
     afc:	fc 01       	movw	r30, r24
     afe:	20 83       	st	Z, r18

00000b00 <.Loc.25>:
		port_L2 |= (1<<pin_L2);
     b00:	88 e0       	ldi	r24, 0x08	; 8
     b02:	91 e0       	ldi	r25, 0x01	; 1
     b04:	fc 01       	movw	r30, r24
     b06:	20 81       	ld	r18, Z
     b08:	88 e0       	ldi	r24, 0x08	; 8
     b0a:	91 e0       	ldi	r25, 0x01	; 1

00000b0c <.Loc.26>:
     b0c:	20 64       	ori	r18, 0x40	; 64
     b0e:	fc 01       	movw	r30, r24
     b10:	20 83       	st	Z, r18

00000b12 <.L5>:
}
     b12:	00 00       	nop
     b14:	df 91       	pop	r29
     b16:	cf 91       	pop	r28
     b18:	ff 91       	pop	r31
     b1a:	ef 91       	pop	r30
     b1c:	9f 91       	pop	r25
     b1e:	8f 91       	pop	r24
     b20:	2f 91       	pop	r18
     b22:	0f 90       	pop	r0
     b24:	0b be       	out	0x3b, r0	; 59
     b26:	0f 90       	pop	r0
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	0f 90       	pop	r0
     b2c:	1f 90       	pop	r1
     b2e:	18 95       	reti

00000b30 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     b30:	1f 92       	push	r1
     b32:	0f 92       	push	r0
     b34:	0f b6       	in	r0, 0x3f	; 63
     b36:	0f 92       	push	r0
     b38:	11 24       	eor	r1, r1
     b3a:	0b b6       	in	r0, 0x3b	; 59
     b3c:	0f 92       	push	r0
     b3e:	2f 93       	push	r18
     b40:	8f 93       	push	r24
     b42:	9f 93       	push	r25
     b44:	ef 93       	push	r30
     b46:	ff 93       	push	r31
     b48:	cf 93       	push	r28
     b4a:	df 93       	push	r29
     b4c:	cd b7       	in	r28, 0x3d	; 61
     b4e:	de b7       	in	r29, 0x3e	; 62

00000b50 <.Loc.29>:
	if (OCR3A != 65535){
     b50:	88 e9       	ldi	r24, 0x98	; 152
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	fc 01       	movw	r30, r24
     b56:	80 81       	ld	r24, Z
     b58:	91 81       	ldd	r25, Z+1	; 0x01

00000b5a <.Loc.30>:
     b5a:	8f 3f       	cpi	r24, 0xFF	; 255
     b5c:	98 07       	cpc	r25, r24
     b5e:	49 f0       	breq	.+18     	; 0xb72 <.L8>

00000b60 <.Loc.31>:
		port_R2 &= ~(1<<pin_R2);
     b60:	88 e0       	ldi	r24, 0x08	; 8
     b62:	91 e0       	ldi	r25, 0x01	; 1
     b64:	fc 01       	movw	r30, r24
     b66:	20 81       	ld	r18, Z

00000b68 <.Loc.32>:
     b68:	88 e0       	ldi	r24, 0x08	; 8
     b6a:	91 e0       	ldi	r25, 0x01	; 1

00000b6c <.Loc.33>:
     b6c:	2f 77       	andi	r18, 0x7F	; 127
     b6e:	fc 01       	movw	r30, r24
     b70:	20 83       	st	Z, r18

00000b72 <.L8>:
	}
}
     b72:	00 00       	nop
     b74:	df 91       	pop	r29
     b76:	cf 91       	pop	r28
     b78:	ff 91       	pop	r31
     b7a:	ef 91       	pop	r30
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	2f 91       	pop	r18
     b82:	0f 90       	pop	r0
     b84:	0b be       	out	0x3b, r0	; 59
     b86:	0f 90       	pop	r0
     b88:	0f be       	out	0x3f, r0	; 63
     b8a:	0f 90       	pop	r0
     b8c:	1f 90       	pop	r1
     b8e:	18 95       	reti

00000b90 <__vector_33>:

ISR(TIMER3_COMPB_vect)
{
     b90:	1f 92       	push	r1
     b92:	0f 92       	push	r0
     b94:	0f b6       	in	r0, 0x3f	; 63
     b96:	0f 92       	push	r0
     b98:	11 24       	eor	r1, r1
     b9a:	0b b6       	in	r0, 0x3b	; 59
     b9c:	0f 92       	push	r0
     b9e:	2f 93       	push	r18
     ba0:	8f 93       	push	r24
     ba2:	9f 93       	push	r25
     ba4:	ef 93       	push	r30
     ba6:	ff 93       	push	r31
     ba8:	cf 93       	push	r28
     baa:	df 93       	push	r29
     bac:	cd b7       	in	r28, 0x3d	; 61
     bae:	de b7       	in	r29, 0x3e	; 62

00000bb0 <.Loc.36>:
	if (OCR3B != 65535){
     bb0:	8a e9       	ldi	r24, 0x9A	; 154
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	fc 01       	movw	r30, r24
     bb6:	80 81       	ld	r24, Z
     bb8:	91 81       	ldd	r25, Z+1	; 0x01

00000bba <.Loc.37>:
     bba:	8f 3f       	cpi	r24, 0xFF	; 255
     bbc:	98 07       	cpc	r25, r24
     bbe:	49 f0       	breq	.+18     	; 0xbd2 <.L11>

00000bc0 <.Loc.38>:
		port_L2 &= ~(1<<pin_L2);
     bc0:	88 e0       	ldi	r24, 0x08	; 8
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	fc 01       	movw	r30, r24
     bc6:	20 81       	ld	r18, Z

00000bc8 <.Loc.39>:
     bc8:	88 e0       	ldi	r24, 0x08	; 8
     bca:	91 e0       	ldi	r25, 0x01	; 1

00000bcc <.Loc.40>:
     bcc:	2f 7b       	andi	r18, 0xBF	; 191
     bce:	fc 01       	movw	r30, r24
     bd0:	20 83       	st	Z, r18

00000bd2 <.L11>:
	}
}
     bd2:	00 00       	nop
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	ff 91       	pop	r31
     bda:	ef 91       	pop	r30
     bdc:	9f 91       	pop	r25
     bde:	8f 91       	pop	r24
     be0:	2f 91       	pop	r18
     be2:	0f 90       	pop	r0
     be4:	0b be       	out	0x3b, r0	; 59
     be6:	0f 90       	pop	r0
     be8:	0f be       	out	0x3f, r0	; 63
     bea:	0f 90       	pop	r0
     bec:	1f 90       	pop	r1
     bee:	18 95       	reti

00000bf0 <init_motor_2>:

void init_motor_2(void)
{
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	cd b7       	in	r28, 0x3d	; 61
     bf6:	de b7       	in	r29, 0x3e	; 62

00000bf8 <.Loc.43>:
	// Pin outputs
	ddr_R2 |= (1<<pin_R2);
     bf8:	87 e0       	ldi	r24, 0x07	; 7
     bfa:	91 e0       	ldi	r25, 0x01	; 1
     bfc:	fc 01       	movw	r30, r24
     bfe:	20 81       	ld	r18, Z
     c00:	87 e0       	ldi	r24, 0x07	; 7
     c02:	91 e0       	ldi	r25, 0x01	; 1

00000c04 <.Loc.44>:
     c04:	20 68       	ori	r18, 0x80	; 128
     c06:	fc 01       	movw	r30, r24
     c08:	20 83       	st	Z, r18

00000c0a <.Loc.45>:
	ddr_L2 |= (1<<pin_L2);
     c0a:	87 e0       	ldi	r24, 0x07	; 7
     c0c:	91 e0       	ldi	r25, 0x01	; 1
     c0e:	fc 01       	movw	r30, r24
     c10:	20 81       	ld	r18, Z
     c12:	87 e0       	ldi	r24, 0x07	; 7
     c14:	91 e0       	ldi	r25, 0x01	; 1

00000c16 <.Loc.46>:
     c16:	20 64       	ori	r18, 0x40	; 64
     c18:	fc 01       	movw	r30, r24
     c1a:	20 83       	st	Z, r18

00000c1c <.Loc.47>:

	// zekerheid laag
	port_R2 &= ~(1<<pin_R2);
     c1c:	88 e0       	ldi	r24, 0x08	; 8
     c1e:	91 e0       	ldi	r25, 0x01	; 1
     c20:	fc 01       	movw	r30, r24
     c22:	20 81       	ld	r18, Z

00000c24 <.Loc.48>:
     c24:	88 e0       	ldi	r24, 0x08	; 8
     c26:	91 e0       	ldi	r25, 0x01	; 1

00000c28 <.Loc.49>:
     c28:	2f 77       	andi	r18, 0x7F	; 127
     c2a:	fc 01       	movw	r30, r24
     c2c:	20 83       	st	Z, r18

00000c2e <.Loc.50>:
	port_L2 &= ~(1<<pin_L2);
     c2e:	88 e0       	ldi	r24, 0x08	; 8
     c30:	91 e0       	ldi	r25, 0x01	; 1
     c32:	fc 01       	movw	r30, r24
     c34:	20 81       	ld	r18, Z

00000c36 <.Loc.51>:
     c36:	88 e0       	ldi	r24, 0x08	; 8
     c38:	91 e0       	ldi	r25, 0x01	; 1

00000c3a <.Loc.52>:
     c3a:	2f 7b       	andi	r18, 0xBF	; 191
     c3c:	fc 01       	movw	r30, r24
     c3e:	20 83       	st	Z, r18

00000c40 <.Loc.53>:

	// prescale 64
	TCCR3A = 0;
     c40:	80 e9       	ldi	r24, 0x90	; 144
     c42:	90 e0       	ldi	r25, 0x00	; 0

00000c44 <.Loc.54>:
     c44:	fc 01       	movw	r30, r24
     c46:	10 82       	st	Z, r1

00000c48 <.Loc.55>:
	TCCR3B = (0<<CS32) | (0<<CS31) | (1<<CS30);
     c48:	81 e9       	ldi	r24, 0x91	; 145
     c4a:	90 e0       	ldi	r25, 0x00	; 0

00000c4c <.Loc.56>:
     c4c:	21 e0       	ldi	r18, 0x01	; 1
     c4e:	fc 01       	movw	r30, r24
     c50:	20 83       	st	Z, r18

00000c52 <.Loc.57>:

	// standaard 0
	OCR3A = 0;
     c52:	88 e9       	ldi	r24, 0x98	; 152
     c54:	90 e0       	ldi	r25, 0x00	; 0

00000c56 <.Loc.58>:
     c56:	fc 01       	movw	r30, r24
     c58:	11 82       	std	Z+1, r1	; 0x01
     c5a:	10 82       	st	Z, r1

00000c5c <.Loc.59>:
	OCR3B = 0;
     c5c:	8a e9       	ldi	r24, 0x9A	; 154
     c5e:	90 e0       	ldi	r25, 0x00	; 0

00000c60 <.Loc.60>:
     c60:	fc 01       	movw	r30, r24
     c62:	11 82       	std	Z+1, r1	; 0x01
     c64:	10 82       	st	Z, r1

00000c66 <.Loc.61>:
	TIMSK3 = (1<<OCIE3B) | (1<<OCIE3A) | (1<<TOIE3);
     c66:	81 e7       	ldi	r24, 0x71	; 113
     c68:	90 e0       	ldi	r25, 0x00	; 0

00000c6a <.Loc.62>:
     c6a:	27 e0       	ldi	r18, 0x07	; 7
     c6c:	fc 01       	movw	r30, r24
     c6e:	20 83       	st	Z, r18

00000c70 <.Loc.63>:
	Motor_2_set_power(0);
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00000c76 <.Loc.64>:
}
     c76:	00 00       	nop
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	08 95       	ret

00000c7e <Motor_2_set_power>:

void Motor_2_set_power(signed char power)
{
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
     c82:	cf 93       	push	r28
     c84:	df 93       	push	r29
     c86:	00 d0       	rcall	.+0      	; 0xc88 <L0^A>

00000c88 <L0^A>:
     c88:	00 d0       	rcall	.+0      	; 0xc8a <L0^A>

00000c8a <L0^A>:
     c8a:	00 d0       	rcall	.+0      	; 0xc8c <L0^A>

00000c8c <L0^A>:
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	89 83       	std	Y+1, r24	; 0x01

00000c92 <.Loc.66>:
	if (power >= -100 && power <= 100){
     c92:	89 81       	ldd	r24, Y+1	; 0x01
     c94:	8c 39       	cpi	r24, 0x9C	; 156
     c96:	0c f4       	brge	.+2      	; 0xc9a <.Loc.67>

00000c98 <L0^A>:
     c98:	61 c0       	rjmp	.+194    	; 0xd5c <.L16>

00000c9a <.Loc.67>:
     c9a:	89 81       	ldd	r24, Y+1	; 0x01
     c9c:	84 36       	cpi	r24, 0x64	; 100
     c9e:	11 f0       	breq	.+4      	; 0xca4 <.Loc.68>

00000ca0 <L0^A>:
     ca0:	0c f0       	brlt	.+2      	; 0xca4 <.Loc.68>

00000ca2 <L0^A>:
     ca2:	5c c0       	rjmp	.+184    	; 0xd5c <.L16>

00000ca4 <.Loc.68>:
		if (power >= 0){
     ca4:	89 81       	ldd	r24, Y+1	; 0x01
     ca6:	88 23       	and	r24, r24
     ca8:	6c f1       	brlt	.+90     	; 0xd04 <.L15>

00000caa <.Loc.69>:
			OCR3B = 0;
     caa:	8a e9       	ldi	r24, 0x9A	; 154
     cac:	90 e0       	ldi	r25, 0x00	; 0

00000cae <.Loc.70>:
     cae:	fc 01       	movw	r30, r24
     cb0:	11 82       	std	Z+1, r1	; 0x01
     cb2:	10 82       	st	Z, r1

00000cb4 <.Loc.71>:
			OCR3A = (65535*power)/98;
     cb4:	89 81       	ldd	r24, Y+1	; 0x01
     cb6:	48 2f       	mov	r20, r24
     cb8:	88 0f       	add	r24, r24
     cba:	55 0b       	sbc	r21, r21
     cbc:	66 0b       	sbc	r22, r22
     cbe:	77 0b       	sbc	r23, r23
     cc0:	8f ef       	ldi	r24, 0xFF	; 255
     cc2:	9f ef       	ldi	r25, 0xFF	; 255
     cc4:	dc 01       	movw	r26, r24
     cc6:	9a 01       	movw	r18, r20
     cc8:	ab 01       	movw	r20, r22
     cca:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <__muluhisi3>
     cce:	6a 83       	std	Y+2, r22	; 0x02
     cd0:	7b 83       	std	Y+3, r23	; 0x03
     cd2:	8c 83       	std	Y+4, r24	; 0x04
     cd4:	9d 83       	std	Y+5, r25	; 0x05

00000cd6 <.Loc.72>:
     cd6:	02 e6       	ldi	r16, 0x62	; 98
     cd8:	10 e0       	ldi	r17, 0x00	; 0
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	6a 81       	ldd	r22, Y+2	; 0x02
     ce0:	7b 81       	ldd	r23, Y+3	; 0x03
     ce2:	8c 81       	ldd	r24, Y+4	; 0x04
     ce4:	9d 81       	ldd	r25, Y+5	; 0x05
     ce6:	a9 01       	movw	r20, r18
     ce8:	98 01       	movw	r18, r16
     cea:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__divmodsi4>
     cee:	da 01       	movw	r26, r20
     cf0:	c9 01       	movw	r24, r18
     cf2:	ac 01       	movw	r20, r24
     cf4:	bd 01       	movw	r22, r26

00000cf6 <.Loc.73>:
     cf6:	88 e9       	ldi	r24, 0x98	; 152
     cf8:	90 e0       	ldi	r25, 0x00	; 0

00000cfa <.Loc.74>:
     cfa:	9a 01       	movw	r18, r20
     cfc:	fc 01       	movw	r30, r24
     cfe:	31 83       	std	Z+1, r19	; 0x01
     d00:	20 83       	st	Z, r18

00000d02 <.Loc.75>:
		else {
			OCR3A = 0;
			OCR3B = (65535*power)/-98;
		}
	}
}
     d02:	2c c0       	rjmp	.+88     	; 0xd5c <.L16>

00000d04 <.L15>:
			OCR3A = 0;
     d04:	88 e9       	ldi	r24, 0x98	; 152
     d06:	90 e0       	ldi	r25, 0x00	; 0

00000d08 <.Loc.77>:
     d08:	fc 01       	movw	r30, r24
     d0a:	11 82       	std	Z+1, r1	; 0x01
     d0c:	10 82       	st	Z, r1

00000d0e <.Loc.78>:
			OCR3B = (65535*power)/-98;
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	48 2f       	mov	r20, r24
     d12:	88 0f       	add	r24, r24
     d14:	55 0b       	sbc	r21, r21
     d16:	66 0b       	sbc	r22, r22
     d18:	77 0b       	sbc	r23, r23
     d1a:	8f ef       	ldi	r24, 0xFF	; 255
     d1c:	9f ef       	ldi	r25, 0xFF	; 255
     d1e:	dc 01       	movw	r26, r24
     d20:	9a 01       	movw	r18, r20
     d22:	ab 01       	movw	r20, r22
     d24:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <__muluhisi3>
     d28:	6e 83       	std	Y+6, r22	; 0x06
     d2a:	7f 83       	std	Y+7, r23	; 0x07
     d2c:	88 87       	std	Y+8, r24	; 0x08
     d2e:	99 87       	std	Y+9, r25	; 0x09

00000d30 <.Loc.79>:
     d30:	0e e9       	ldi	r16, 0x9E	; 158
     d32:	1f ef       	ldi	r17, 0xFF	; 255
     d34:	2f ef       	ldi	r18, 0xFF	; 255
     d36:	3f ef       	ldi	r19, 0xFF	; 255
     d38:	6e 81       	ldd	r22, Y+6	; 0x06
     d3a:	7f 81       	ldd	r23, Y+7	; 0x07
     d3c:	88 85       	ldd	r24, Y+8	; 0x08
     d3e:	99 85       	ldd	r25, Y+9	; 0x09
     d40:	a9 01       	movw	r20, r18
     d42:	98 01       	movw	r18, r16
     d44:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__divmodsi4>
     d48:	da 01       	movw	r26, r20
     d4a:	c9 01       	movw	r24, r18
     d4c:	ac 01       	movw	r20, r24
     d4e:	bd 01       	movw	r22, r26

00000d50 <.Loc.80>:
     d50:	8a e9       	ldi	r24, 0x9A	; 154
     d52:	90 e0       	ldi	r25, 0x00	; 0

00000d54 <.Loc.81>:
     d54:	9a 01       	movw	r18, r20
     d56:	fc 01       	movw	r30, r24
     d58:	31 83       	std	Z+1, r19	; 0x01
     d5a:	20 83       	st	Z, r18

00000d5c <.L16>:
}
     d5c:	00 00       	nop
     d5e:	29 96       	adiw	r28, 0x09	; 9
     d60:	0f b6       	in	r0, 0x3f	; 63
     d62:	f8 94       	cli
     d64:	de bf       	out	0x3e, r29	; 62
     d66:	0f be       	out	0x3f, r0	; 63
     d68:	cd bf       	out	0x3d, r28	; 61
     d6a:	df 91       	pop	r29
     d6c:	cf 91       	pop	r28
     d6e:	1f 91       	pop	r17
     d70:	0f 91       	pop	r16
     d72:	08 95       	ret

00000d74 <main>:
*/

float CurrentHeading = 360.0;

int main(void)
{
     d74:	cf 93       	push	r28
     d76:	df 93       	push	r29
     d78:	cd b7       	in	r28, 0x3d	; 61
     d7a:	de b7       	in	r29, 0x3e	; 62
     d7c:	c4 57       	subi	r28, 0x74	; 116
     d7e:	d1 09       	sbc	r29, r1
     d80:	0f b6       	in	r0, 0x3f	; 63
     d82:	f8 94       	cli
     d84:	de bf       	out	0x3e, r29	; 62
     d86:	0f be       	out	0x3f, r0	; 63
     d88:	cd bf       	out	0x3d, r28	; 61

00000d8a <.Loc.1>:
    init();
     d8a:	0e 94 44 0a 	call	0x1488	; 0x1488 <init>

00000d8e <.Loc.2>:
    init_display_meneer();
     d8e:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <init_display_meneer>

00000d92 <.Loc.3>:
    int VolgModus = 0;
     d92:	1a 86       	std	Y+10, r1	; 0x0a
     d94:	19 86       	std	Y+9, r1	; 0x09

00000d96 <.Loc.4>:
    int KolommenModus =1;
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	9c 87       	std	Y+12, r25	; 0x0c
     d9c:	8b 87       	std	Y+11, r24	; 0x0b

00000d9e <.Loc.5>:
    int TestModus =0;
     d9e:	1e 86       	std	Y+14, r1	; 0x0e
     da0:	1d 86       	std	Y+13, r1	; 0x0d

00000da2 <.Loc.6>:

    int VolgTarget = 80;
     da2:	80 e5       	ldi	r24, 0x50	; 80
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	98 8b       	std	Y+16, r25	; 0x10
     da8:	8f 87       	std	Y+15, r24	; 0x0f

00000daa <.Loc.7>:

    int TargetHeading = 360;
     daa:	88 e6       	ldi	r24, 0x68	; 104
     dac:	91 e0       	ldi	r25, 0x01	; 1
     dae:	9a 83       	std	Y+2, r25	; 0x02
     db0:	89 83       	std	Y+1, r24	; 0x01

00000db2 <.Loc.8>:
    int Afstand = 0;
     db2:	1a 8a       	std	Y+18, r1	; 0x12
     db4:	19 8a       	std	Y+17, r1	; 0x11

00000db6 <.Loc.9>:
    int Difference =0;
     db6:	1c 82       	std	Y+4, r1	; 0x04
     db8:	1b 82       	std	Y+3, r1	; 0x03

00000dba <.Loc.10>:
    int HeadingDifference = 0;
     dba:	1c 8a       	std	Y+20, r1	; 0x14
     dbc:	1b 8a       	std	Y+19, r1	; 0x13

00000dbe <.Loc.11>:
    int FrontDifference = 0;
     dbe:	1e 8a       	std	Y+22, r1	; 0x16
     dc0:	1d 8a       	std	Y+21, r1	; 0x15

00000dc2 <.Loc.12>:
    int Obstructie = 0;
     dc2:	1e 82       	std	Y+6, r1	; 0x06
     dc4:	1d 82       	std	Y+5, r1	; 0x05

00000dc6 <.Loc.13>:

    int CurrentKolom = 1;
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	98 8f       	std	Y+24, r25	; 0x18
     dcc:	8f 8b       	std	Y+23, r24	; 0x17

00000dce <.Loc.14>:
    int InKolom = 1;
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	98 87       	std	Y+8, r25	; 0x08
     dd4:	8f 83       	std	Y+7, r24	; 0x07

00000dd6 <.Loc.15>:

    int printgetal;
    DDRB |= ((1<<PB7) | (1<<PB6));
     dd6:	84 e2       	ldi	r24, 0x24	; 36
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	dc 01       	movw	r26, r24
     ddc:	2c 91       	ld	r18, X
     dde:	84 e2       	ldi	r24, 0x24	; 36
     de0:	90 e0       	ldi	r25, 0x00	; 0

00000de2 <.Loc.16>:
     de2:	20 6c       	ori	r18, 0xC0	; 192
     de4:	fc 01       	movw	r30, r24
     de6:	20 83       	st	Z, r18

00000de8 <.Loc.17>:
    PORTB |= ((1<<PB7) | (1<<PB6));
     de8:	85 e2       	ldi	r24, 0x25	; 37
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	dc 01       	movw	r26, r24
     dee:	2c 91       	ld	r18, X
     df0:	85 e2       	ldi	r24, 0x25	; 37
     df2:	90 e0       	ldi	r25, 0x00	; 0

00000df4 <.Loc.18>:
     df4:	20 6c       	ori	r18, 0xC0	; 192
     df6:	fc 01       	movw	r30, r24
     df8:	20 83       	st	Z, r18

00000dfa <.Loc.19>:
    DDRE |= (1<<PE5);
     dfa:	8d e2       	ldi	r24, 0x2D	; 45
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	dc 01       	movw	r26, r24
     e00:	2c 91       	ld	r18, X
     e02:	8d e2       	ldi	r24, 0x2D	; 45
     e04:	90 e0       	ldi	r25, 0x00	; 0

00000e06 <.Loc.20>:
     e06:	20 62       	ori	r18, 0x20	; 32
     e08:	fc 01       	movw	r30, r24
     e0a:	20 83       	st	Z, r18

00000e0c <.Loc.21>:
    PORTE |= (1<<PE5);
     e0c:	8e e2       	ldi	r24, 0x2E	; 46
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	dc 01       	movw	r26, r24
     e12:	2c 91       	ld	r18, X
     e14:	8e e2       	ldi	r24, 0x2E	; 46
     e16:	90 e0       	ldi	r25, 0x00	; 0

00000e18 <.Loc.22>:
     e18:	20 62       	ori	r18, 0x20	; 32
     e1a:	fc 01       	movw	r30, r24
     e1c:	20 83       	st	Z, r18

00000e1e <.Loc.23>:
                LightSwap();
                VolgModus = 0;
                KolommenModus = 1;
            }
        }*/
        while(TestModus == 1){
     e1e:	50 c0       	rjmp	.+160    	; 0xec0 <.L2>

00000e20 <.L3>:

            int AfstandLinks = GetDistanceLeft();
     e20:	0e 94 8f 13 	call	0x271e	; 0x271e <GetDistanceLeft>
     e24:	98 a3       	std	Y+32, r25	; 0x20
     e26:	8f 8f       	std	Y+31, r24	; 0x1f

00000e28 <.Loc.25>:
            int AfstandRechts = GetDistanceRight();
     e28:	0e 94 77 15 	call	0x2aee	; 0x2aee <GetDistanceRight>
     e2c:	9a a3       	std	Y+34, r25	; 0x22
     e2e:	89 a3       	std	Y+33, r24	; 0x21

00000e30 <.Loc.26>:
            int Afstand = GetDistanceFront();
     e30:	0e 94 a7 11 	call	0x234e	; 0x234e <GetDistanceFront>
     e34:	9c a3       	std	Y+36, r25	; 0x24
     e36:	8b a3       	std	Y+35, r24	; 0x23

00000e38 <.Loc.27>:
            CurrentHeading = UpdateHeading(CurrentHeading);
     e38:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     e3c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     e40:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     e44:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     e48:	2d a3       	std	Y+37, r18	; 0x25
     e4a:	3e a3       	std	Y+38, r19	; 0x26
     e4c:	4f a3       	std	Y+39, r20	; 0x27
     e4e:	58 a7       	std	Y+40, r21	; 0x28
     e50:	6d a1       	ldd	r22, Y+37	; 0x25
     e52:	7e a1       	ldd	r23, Y+38	; 0x26
     e54:	8f a1       	ldd	r24, Y+39	; 0x27
     e56:	98 a5       	ldd	r25, Y+40	; 0x28
     e58:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
     e5c:	69 a7       	std	Y+41, r22	; 0x29
     e5e:	7a a7       	std	Y+42, r23	; 0x2a
     e60:	8b a7       	std	Y+43, r24	; 0x2b
     e62:	9c a7       	std	Y+44, r25	; 0x2c

00000e64 <.Loc.28>:
     e64:	89 a5       	ldd	r24, Y+41	; 0x29
     e66:	9a a5       	ldd	r25, Y+42	; 0x2a
     e68:	ab a5       	ldd	r26, Y+43	; 0x2b
     e6a:	bc a5       	ldd	r27, Y+44	; 0x2c
     e6c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
     e70:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
     e74:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
     e78:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00000e7c <.Loc.29>:
            printgetal = (int)CurrentHeading;
     e7c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     e80:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     e84:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     e88:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     e8c:	2d a7       	std	Y+45, r18	; 0x2d
     e8e:	3e a7       	std	Y+46, r19	; 0x2e
     e90:	4f a7       	std	Y+47, r20	; 0x2f
     e92:	58 ab       	std	Y+48, r21	; 0x30

00000e94 <.Loc.30>:
     e94:	6d a5       	ldd	r22, Y+45	; 0x2d
     e96:	7e a5       	ldd	r23, Y+46	; 0x2e
     e98:	8f a5       	ldd	r24, Y+47	; 0x2f
     e9a:	98 a9       	ldd	r25, Y+48	; 0x30
     e9c:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
     ea0:	69 96       	adiw	r28, 0x19	; 25
     ea2:	6c af       	std	Y+60, r22	; 0x3c
     ea4:	7d af       	std	Y+61, r23	; 0x3d
     ea6:	8e af       	std	Y+62, r24	; 0x3e
     ea8:	9f af       	std	Y+63, r25	; 0x3f
     eaa:	69 97       	sbiw	r28, 0x19	; 25
     eac:	67 96       	adiw	r28, 0x17	; 23
     eae:	4e ad       	ldd	r20, Y+62	; 0x3e
     eb0:	5f ad       	ldd	r21, Y+63	; 0x3f
     eb2:	67 97       	sbiw	r28, 0x17	; 23
     eb4:	5e 8f       	std	Y+30, r21	; 0x1e
     eb6:	4d 8f       	std	Y+29, r20	; 0x1d

00000eb8 <.Loc.31>:
            display_getal(AfstandRechts);
     eb8:	89 a1       	ldd	r24, Y+33	; 0x21
     eba:	9a a1       	ldd	r25, Y+34	; 0x22
     ebc:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00000ec0 <.L2>:
        while(TestModus == 1){
     ec0:	8d 85       	ldd	r24, Y+13	; 0x0d
     ec2:	9e 85       	ldd	r25, Y+14	; 0x0e
     ec4:	81 30       	cpi	r24, 0x01	; 1
     ec6:	91 05       	cpc	r25, r1
     ec8:	09 f4       	brne	.+2      	; 0xecc <.Loc.33>

00000eca <L0^A>:
     eca:	aa cf       	rjmp	.-172    	; 0xe20 <.L3>

00000ecc <.Loc.33>:
        }
        while(VolgModus == 1){
     ecc:	0b c1       	rjmp	.+534    	; 0x10e4 <.L4>

00000ece <.L14>:
            /*if(RedSwitch()){
                VolgModus = 0;
                KolommenModus = 0;
            }*/

            Afstand = GetDistanceFront();
     ece:	0e 94 a7 11 	call	0x234e	; 0x234e <GetDistanceFront>
     ed2:	9a 8b       	std	Y+18, r25	; 0x12
     ed4:	89 8b       	std	Y+17, r24	; 0x11

00000ed6 <.Loc.35>:
            FrontDifference = Afstand - VolgTarget;
     ed6:	29 89       	ldd	r18, Y+17	; 0x11
     ed8:	3a 89       	ldd	r19, Y+18	; 0x12
     eda:	8f 85       	ldd	r24, Y+15	; 0x0f
     edc:	98 89       	ldd	r25, Y+16	; 0x10
     ede:	d9 01       	movw	r26, r18
     ee0:	a8 1b       	sub	r26, r24
     ee2:	b9 0b       	sbc	r27, r25
     ee4:	cd 01       	movw	r24, r26
     ee6:	9e 8b       	std	Y+22, r25	; 0x16
     ee8:	8d 8b       	std	Y+21, r24	; 0x15

00000eea <.Loc.36>:
            display_getal(Afstand);
     eea:	89 89       	ldd	r24, Y+17	; 0x11
     eec:	9a 89       	ldd	r25, Y+18	; 0x12
     eee:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00000ef2 <.Loc.37>:

            CurrentHeading = UpdateHeading(CurrentHeading);
     ef2:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     ef6:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     efa:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     efe:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     f02:	29 ab       	std	Y+49, r18	; 0x31
     f04:	3a ab       	std	Y+50, r19	; 0x32
     f06:	4b ab       	std	Y+51, r20	; 0x33
     f08:	5c ab       	std	Y+52, r21	; 0x34
     f0a:	69 a9       	ldd	r22, Y+49	; 0x31
     f0c:	7a a9       	ldd	r23, Y+50	; 0x32
     f0e:	8b a9       	ldd	r24, Y+51	; 0x33
     f10:	9c a9       	ldd	r25, Y+52	; 0x34
     f12:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
     f16:	6d ab       	std	Y+53, r22	; 0x35
     f18:	7e ab       	std	Y+54, r23	; 0x36
     f1a:	8f ab       	std	Y+55, r24	; 0x37
     f1c:	98 af       	std	Y+56, r25	; 0x38

00000f1e <.Loc.38>:
     f1e:	8d a9       	ldd	r24, Y+53	; 0x35
     f20:	9e a9       	ldd	r25, Y+54	; 0x36
     f22:	af a9       	ldd	r26, Y+55	; 0x37
     f24:	b8 ad       	ldd	r27, Y+56	; 0x38
     f26:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
     f2a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
     f2e:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
     f32:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00000f36 <.Loc.39>:
            HeadingDifference = TargetHeading - CurrentHeading;
     f36:	89 81       	ldd	r24, Y+1	; 0x01
     f38:	9a 81       	ldd	r25, Y+2	; 0x02
     f3a:	9c 01       	movw	r18, r24
     f3c:	99 0f       	add	r25, r25
     f3e:	44 0b       	sbc	r20, r20
     f40:	55 0b       	sbc	r21, r21
     f42:	6d 96       	adiw	r28, 0x1d	; 29
     f44:	2c af       	std	Y+60, r18	; 0x3c
     f46:	3d af       	std	Y+61, r19	; 0x3d
     f48:	4e af       	std	Y+62, r20	; 0x3e
     f4a:	5f af       	std	Y+63, r21	; 0x3f
     f4c:	6d 97       	sbiw	r28, 0x1d	; 29
     f4e:	6d 96       	adiw	r28, 0x1d	; 29
     f50:	6c ad       	ldd	r22, Y+60	; 0x3c
     f52:	7d ad       	ldd	r23, Y+61	; 0x3d
     f54:	8e ad       	ldd	r24, Y+62	; 0x3e
     f56:	9f ad       	ldd	r25, Y+63	; 0x3f
     f58:	6d 97       	sbiw	r28, 0x1d	; 29
     f5a:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
     f5e:	69 af       	std	Y+57, r22	; 0x39
     f60:	7a af       	std	Y+58, r23	; 0x3a
     f62:	8b af       	std	Y+59, r24	; 0x3b
     f64:	9c af       	std	Y+60, r25	; 0x3c
     f66:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
     f6a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
     f6e:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
     f72:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
     f76:	9c 01       	movw	r18, r24
     f78:	ad 01       	movw	r20, r26
     f7a:	69 ad       	ldd	r22, Y+57	; 0x39
     f7c:	7a ad       	ldd	r23, Y+58	; 0x3a
     f7e:	8b ad       	ldd	r24, Y+59	; 0x3b
     f80:	9c ad       	ldd	r25, Y+60	; 0x3c
     f82:	0e 94 00 18 	call	0x3000	; 0x3000 <__subsf3>
     f86:	a1 96       	adiw	r28, 0x21	; 33
     f88:	6c af       	std	Y+60, r22	; 0x3c
     f8a:	7d af       	std	Y+61, r23	; 0x3d
     f8c:	8e af       	std	Y+62, r24	; 0x3e
     f8e:	9f af       	std	Y+63, r25	; 0x3f
     f90:	a1 97       	sbiw	r28, 0x21	; 33
     f92:	a1 96       	adiw	r28, 0x21	; 33
     f94:	8c ad       	ldd	r24, Y+60	; 0x3c
     f96:	9d ad       	ldd	r25, Y+61	; 0x3d
     f98:	ae ad       	ldd	r26, Y+62	; 0x3e
     f9a:	bf ad       	ldd	r27, Y+63	; 0x3f
     f9c:	a1 97       	sbiw	r28, 0x21	; 33
     f9e:	21 96       	adiw	r28, 0x01	; 1
     fa0:	8c af       	std	Y+60, r24	; 0x3c
     fa2:	9d af       	std	Y+61, r25	; 0x3d
     fa4:	ae af       	std	Y+62, r26	; 0x3e
     fa6:	bf af       	std	Y+63, r27	; 0x3f
     fa8:	21 97       	sbiw	r28, 0x01	; 1

00000faa <.Loc.40>:
     faa:	21 96       	adiw	r28, 0x01	; 1
     fac:	6c ad       	ldd	r22, Y+60	; 0x3c
     fae:	7d ad       	ldd	r23, Y+61	; 0x3d
     fb0:	8e ad       	ldd	r24, Y+62	; 0x3e
     fb2:	9f ad       	ldd	r25, Y+63	; 0x3f
     fb4:	21 97       	sbiw	r28, 0x01	; 1
     fb6:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
     fba:	a5 96       	adiw	r28, 0x25	; 37
     fbc:	6c af       	std	Y+60, r22	; 0x3c
     fbe:	7d af       	std	Y+61, r23	; 0x3d
     fc0:	8e af       	std	Y+62, r24	; 0x3e
     fc2:	9f af       	std	Y+63, r25	; 0x3f
     fc4:	a5 97       	sbiw	r28, 0x25	; 37
     fc6:	a3 96       	adiw	r28, 0x23	; 35
     fc8:	ae ad       	ldd	r26, Y+62	; 0x3e
     fca:	bf ad       	ldd	r27, Y+63	; 0x3f
     fcc:	a3 97       	sbiw	r28, 0x23	; 35
     fce:	bc 8b       	std	Y+20, r27	; 0x14
     fd0:	ab 8b       	std	Y+19, r26	; 0x13

00000fd2 <.Loc.41>:

            if (HeadingDifference > 3){
     fd2:	8b 89       	ldd	r24, Y+19	; 0x13
     fd4:	9c 89       	ldd	r25, Y+20	; 0x14
     fd6:	83 30       	cpi	r24, 0x03	; 3
     fd8:	91 05       	cpc	r25, r1
     fda:	39 f0       	breq	.+14     	; 0xfea <.L5>
     fdc:	34 f0       	brlt	.+12     	; 0xfea <.L5>

00000fde <.Loc.42>:
                Motor_1_set_power(35);
     fde:	83 e2       	ldi	r24, 0x23	; 35
     fe0:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000fe4 <.Loc.43>:
                Motor_2_set_power(25);
     fe4:	89 e1       	ldi	r24, 0x19	; 25
     fe6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00000fea <.L5>:
            }
            if (HeadingDifference < -3){
     fea:	8b 89       	ldd	r24, Y+19	; 0x13
     fec:	9c 89       	ldd	r25, Y+20	; 0x14
     fee:	8d 3f       	cpi	r24, 0xFD	; 253
     ff0:	bf ef       	ldi	r27, 0xFF	; 255
     ff2:	9b 07       	cpc	r25, r27
     ff4:	34 f4       	brge	.+12     	; 0x1002 <.L6>

00000ff6 <.Loc.45>:
                Motor_1_set_power(25);
     ff6:	89 e1       	ldi	r24, 0x19	; 25
     ff8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000ffc <.Loc.46>:
                Motor_2_set_power(35);
     ffc:	83 e2       	ldi	r24, 0x23	; 35
     ffe:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001002 <.L6>:
            }
            if (Difference > 200){
    1002:	8b 81       	ldd	r24, Y+3	; 0x03
    1004:	9c 81       	ldd	r25, Y+4	; 0x04
    1006:	88 3c       	cpi	r24, 0xC8	; 200
    1008:	91 05       	cpc	r25, r1
    100a:	39 f0       	breq	.+14     	; 0x101a <.L7>
    100c:	34 f0       	brlt	.+12     	; 0x101a <.L7>

0000100e <.Loc.48>:
                Motor_1_set_power(35);
    100e:	83 e2       	ldi	r24, 0x23	; 35
    1010:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001014 <.Loc.49>:
                Motor_2_set_power(35);
    1014:	83 e2       	ldi	r24, 0x23	; 35
    1016:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000101a <.L7>:
            }
            if (Difference > 120 && Difference < 200){
    101a:	8b 81       	ldd	r24, Y+3	; 0x03
    101c:	9c 81       	ldd	r25, Y+4	; 0x04
    101e:	88 37       	cpi	r24, 0x78	; 120
    1020:	91 05       	cpc	r25, r1
    1022:	69 f0       	breq	.+26     	; 0x103e <.L8>
    1024:	64 f0       	brlt	.+24     	; 0x103e <.L8>

00001026 <.Loc.51>:
    1026:	8b 81       	ldd	r24, Y+3	; 0x03
    1028:	9c 81       	ldd	r25, Y+4	; 0x04
    102a:	87 3c       	cpi	r24, 0xC7	; 199
    102c:	91 05       	cpc	r25, r1
    102e:	09 f0       	breq	.+2      	; 0x1032 <.Loc.52>

00001030 <L0^A>:
    1030:	34 f4       	brge	.+12     	; 0x103e <.L8>

00001032 <.Loc.52>:
                Motor_1_set_power(22);
    1032:	86 e1       	ldi	r24, 0x16	; 22
    1034:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001038 <.Loc.53>:
                Motor_2_set_power(22);
    1038:	86 e1       	ldi	r24, 0x16	; 22
    103a:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000103e <.L8>:
            }
            if (Difference > 60 && Difference < 120){
    103e:	8b 81       	ldd	r24, Y+3	; 0x03
    1040:	9c 81       	ldd	r25, Y+4	; 0x04
    1042:	8c 33       	cpi	r24, 0x3C	; 60
    1044:	91 05       	cpc	r25, r1
    1046:	69 f0       	breq	.+26     	; 0x1062 <.L9>
    1048:	64 f0       	brlt	.+24     	; 0x1062 <.L9>

0000104a <.Loc.55>:
    104a:	8b 81       	ldd	r24, Y+3	; 0x03
    104c:	9c 81       	ldd	r25, Y+4	; 0x04
    104e:	87 37       	cpi	r24, 0x77	; 119
    1050:	91 05       	cpc	r25, r1
    1052:	09 f0       	breq	.+2      	; 0x1056 <.Loc.56>

00001054 <L0^A>:
    1054:	34 f4       	brge	.+12     	; 0x1062 <.L9>

00001056 <.Loc.56>:
                Motor_1_set_power(18);
    1056:	82 e1       	ldi	r24, 0x12	; 18
    1058:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000105c <.Loc.57>:
                Motor_2_set_power(18);
    105c:	82 e1       	ldi	r24, 0x12	; 18
    105e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001062 <.L9>:
            }
            if (Difference > 20 && Difference < 60){
    1062:	8b 81       	ldd	r24, Y+3	; 0x03
    1064:	9c 81       	ldd	r25, Y+4	; 0x04
    1066:	84 31       	cpi	r24, 0x14	; 20
    1068:	91 05       	cpc	r25, r1
    106a:	69 f0       	breq	.+26     	; 0x1086 <.L10>
    106c:	64 f0       	brlt	.+24     	; 0x1086 <.L10>

0000106e <.Loc.59>:
    106e:	8b 81       	ldd	r24, Y+3	; 0x03
    1070:	9c 81       	ldd	r25, Y+4	; 0x04
    1072:	8b 33       	cpi	r24, 0x3B	; 59
    1074:	91 05       	cpc	r25, r1
    1076:	09 f0       	breq	.+2      	; 0x107a <.Loc.60>

00001078 <L0^A>:
    1078:	34 f4       	brge	.+12     	; 0x1086 <.L10>

0000107a <.Loc.60>:
                Motor_1_set_power(15);
    107a:	8f e0       	ldi	r24, 0x0F	; 15
    107c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001080 <.Loc.61>:
                Motor_2_set_power(15);
    1080:	8f e0       	ldi	r24, 0x0F	; 15
    1082:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001086 <.L10>:
            }
            if (Difference > 0 && Difference < 20){
    1086:	8b 81       	ldd	r24, Y+3	; 0x03
    1088:	9c 81       	ldd	r25, Y+4	; 0x04
    108a:	00 97       	sbiw	r24, 0x00	; 0
    108c:	69 f0       	breq	.+26     	; 0x10a8 <.L11>
    108e:	64 f0       	brlt	.+24     	; 0x10a8 <.L11>

00001090 <.Loc.63>:
    1090:	8b 81       	ldd	r24, Y+3	; 0x03
    1092:	9c 81       	ldd	r25, Y+4	; 0x04
    1094:	83 31       	cpi	r24, 0x13	; 19
    1096:	91 05       	cpc	r25, r1
    1098:	09 f0       	breq	.+2      	; 0x109c <.Loc.64>

0000109a <L0^A>:
    109a:	34 f4       	brge	.+12     	; 0x10a8 <.L11>

0000109c <.Loc.64>:
                Motor_1_set_power(12);
    109c:	8c e0       	ldi	r24, 0x0C	; 12
    109e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000010a2 <.Loc.65>:
                Motor_2_set_power(12);
    10a2:	8c e0       	ldi	r24, 0x0C	; 12
    10a4:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000010a8 <.L11>:
            }
            if (Difference < -5){
    10a8:	8b 81       	ldd	r24, Y+3	; 0x03
    10aa:	9c 81       	ldd	r25, Y+4	; 0x04
    10ac:	8b 3f       	cpi	r24, 0xFB	; 251
    10ae:	ef ef       	ldi	r30, 0xFF	; 255
    10b0:	9e 07       	cpc	r25, r30
    10b2:	34 f4       	brge	.+12     	; 0x10c0 <.L12>

000010b4 <.Loc.67>:
                Motor_1_set_power(-18);
    10b4:	8e ee       	ldi	r24, 0xEE	; 238
    10b6:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000010ba <.Loc.68>:
                Motor_2_set_power(-18);
    10ba:	8e ee       	ldi	r24, 0xEE	; 238
    10bc:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000010c0 <.L12>:
            }
            if ( -5 < Difference && Difference < 5){
    10c0:	8b 81       	ldd	r24, Y+3	; 0x03
    10c2:	9c 81       	ldd	r25, Y+4	; 0x04
    10c4:	8c 3f       	cpi	r24, 0xFC	; 252
    10c6:	ff ef       	ldi	r31, 0xFF	; 255
    10c8:	9f 07       	cpc	r25, r31
    10ca:	64 f0       	brlt	.+24     	; 0x10e4 <.L4>

000010cc <.Loc.70>:
    10cc:	8b 81       	ldd	r24, Y+3	; 0x03
    10ce:	9c 81       	ldd	r25, Y+4	; 0x04
    10d0:	84 30       	cpi	r24, 0x04	; 4
    10d2:	91 05       	cpc	r25, r1
    10d4:	09 f0       	breq	.+2      	; 0x10d8 <.Loc.71>

000010d6 <L0^A>:
    10d6:	34 f4       	brge	.+12     	; 0x10e4 <.L4>

000010d8 <.Loc.71>:
                Motor_1_set_power(0);
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000010de <.Loc.72>:
                Motor_2_set_power(0);
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000010e4 <.L4>:
        while(VolgModus == 1){
    10e4:	89 85       	ldd	r24, Y+9	; 0x09
    10e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    10e8:	81 30       	cpi	r24, 0x01	; 1
    10ea:	91 05       	cpc	r25, r1
    10ec:	09 f4       	brne	.+2      	; 0x10f0 <.Loc.74>

000010ee <L0^A>:
    10ee:	ef ce       	rjmp	.-546    	; 0xece <.L14>

000010f0 <.Loc.74>:
            }

        }
        while(KolommenModus == 1){
    10f0:	c4 c1       	rjmp	.+904    	; 0x147a <.L15>

000010f2 <.L32>:
            /*if(RedSwitch()){
                VolgModus = 0;
                KolommenModus = 0;
            }*/

            Afstand = GetDistanceFront();
    10f2:	0e 94 a7 11 	call	0x234e	; 0x234e <GetDistanceFront>
    10f6:	9a 8b       	std	Y+18, r25	; 0x12
    10f8:	89 8b       	std	Y+17, r24	; 0x11

000010fa <.Loc.76>:
            FrontDifference = Afstand - VolgTarget;
    10fa:	29 89       	ldd	r18, Y+17	; 0x11
    10fc:	3a 89       	ldd	r19, Y+18	; 0x12
    10fe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1100:	98 89       	ldd	r25, Y+16	; 0x10
    1102:	a9 01       	movw	r20, r18
    1104:	48 1b       	sub	r20, r24
    1106:	59 0b       	sbc	r21, r25
    1108:	ca 01       	movw	r24, r20
    110a:	9e 8b       	std	Y+22, r25	; 0x16
    110c:	8d 8b       	std	Y+21, r24	; 0x15

0000110e <.Loc.77>:

            int AfstandLinks = GetDistanceLeft();
    110e:	0e 94 8f 13 	call	0x271e	; 0x271e <GetDistanceLeft>
    1112:	9a 8f       	std	Y+26, r25	; 0x1a
    1114:	89 8f       	std	Y+25, r24	; 0x19

00001116 <.Loc.78>:
            int AfstandRechts = GetDistanceRight();
    1116:	0e 94 77 15 	call	0x2aee	; 0x2aee <GetDistanceRight>
    111a:	9c 8f       	std	Y+28, r25	; 0x1c
    111c:	8b 8f       	std	Y+27, r24	; 0x1b

0000111e <.Loc.79>:
            CurrentHeading = UpdateHeading(CurrentHeading);
    111e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1122:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1126:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    112a:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    112e:	25 96       	adiw	r28, 0x05	; 5
    1130:	8c af       	std	Y+60, r24	; 0x3c
    1132:	9d af       	std	Y+61, r25	; 0x3d
    1134:	ae af       	std	Y+62, r26	; 0x3e
    1136:	bf af       	std	Y+63, r27	; 0x3f
    1138:	25 97       	sbiw	r28, 0x05	; 5
    113a:	25 96       	adiw	r28, 0x05	; 5
    113c:	6c ad       	ldd	r22, Y+60	; 0x3c
    113e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1140:	8e ad       	ldd	r24, Y+62	; 0x3e
    1142:	9f ad       	ldd	r25, Y+63	; 0x3f
    1144:	25 97       	sbiw	r28, 0x05	; 5
    1146:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    114a:	29 96       	adiw	r28, 0x09	; 9
    114c:	6c af       	std	Y+60, r22	; 0x3c
    114e:	7d af       	std	Y+61, r23	; 0x3d
    1150:	8e af       	std	Y+62, r24	; 0x3e
    1152:	9f af       	std	Y+63, r25	; 0x3f
    1154:	29 97       	sbiw	r28, 0x09	; 9

00001156 <.Loc.80>:
    1156:	29 96       	adiw	r28, 0x09	; 9
    1158:	2c ad       	ldd	r18, Y+60	; 0x3c
    115a:	3d ad       	ldd	r19, Y+61	; 0x3d
    115c:	4e ad       	ldd	r20, Y+62	; 0x3e
    115e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1160:	29 97       	sbiw	r28, 0x09	; 9
    1162:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <CurrentHeading>
    1166:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <CurrentHeading+0x1>
    116a:	40 93 02 02 	sts	0x0202, r20	; 0x800202 <CurrentHeading+0x2>
    116e:	50 93 03 02 	sts	0x0203, r21	; 0x800203 <CurrentHeading+0x3>

00001172 <.Loc.81>:
            printgetal = (int)CurrentHeading;
    1172:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1176:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    117a:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    117e:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1182:	2d 96       	adiw	r28, 0x0d	; 13
    1184:	8c af       	std	Y+60, r24	; 0x3c
    1186:	9d af       	std	Y+61, r25	; 0x3d
    1188:	ae af       	std	Y+62, r26	; 0x3e
    118a:	bf af       	std	Y+63, r27	; 0x3f
    118c:	2d 97       	sbiw	r28, 0x0d	; 13

0000118e <.Loc.82>:
    118e:	2d 96       	adiw	r28, 0x0d	; 13
    1190:	6c ad       	ldd	r22, Y+60	; 0x3c
    1192:	7d ad       	ldd	r23, Y+61	; 0x3d
    1194:	8e ad       	ldd	r24, Y+62	; 0x3e
    1196:	9f ad       	ldd	r25, Y+63	; 0x3f
    1198:	2d 97       	sbiw	r28, 0x0d	; 13
    119a:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    119e:	a9 96       	adiw	r28, 0x29	; 41
    11a0:	6c af       	std	Y+60, r22	; 0x3c
    11a2:	7d af       	std	Y+61, r23	; 0x3d
    11a4:	8e af       	std	Y+62, r24	; 0x3e
    11a6:	9f af       	std	Y+63, r25	; 0x3f
    11a8:	a9 97       	sbiw	r28, 0x29	; 41
    11aa:	a7 96       	adiw	r28, 0x27	; 39
    11ac:	ae ad       	ldd	r26, Y+62	; 0x3e
    11ae:	bf ad       	ldd	r27, Y+63	; 0x3f
    11b0:	a7 97       	sbiw	r28, 0x27	; 39
    11b2:	be 8f       	std	Y+30, r27	; 0x1e
    11b4:	ad 8f       	std	Y+29, r26	; 0x1d

000011b6 <.Loc.83>:
            display_getal(AfstandLinks);
    11b6:	89 8d       	ldd	r24, Y+25	; 0x19
    11b8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    11ba:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

000011be <.Loc.84>:
            Difference = TargetHeading - CurrentHeading;
    11be:	89 81       	ldd	r24, Y+1	; 0x01
    11c0:	9a 81       	ldd	r25, Y+2	; 0x02
    11c2:	9c 01       	movw	r18, r24
    11c4:	99 0f       	add	r25, r25
    11c6:	44 0b       	sbc	r20, r20
    11c8:	55 0b       	sbc	r21, r21
    11ca:	ad 96       	adiw	r28, 0x2d	; 45
    11cc:	2c af       	std	Y+60, r18	; 0x3c
    11ce:	3d af       	std	Y+61, r19	; 0x3d
    11d0:	4e af       	std	Y+62, r20	; 0x3e
    11d2:	5f af       	std	Y+63, r21	; 0x3f
    11d4:	ad 97       	sbiw	r28, 0x2d	; 45
    11d6:	ad 96       	adiw	r28, 0x2d	; 45
    11d8:	6c ad       	ldd	r22, Y+60	; 0x3c
    11da:	7d ad       	ldd	r23, Y+61	; 0x3d
    11dc:	8e ad       	ldd	r24, Y+62	; 0x3e
    11de:	9f ad       	ldd	r25, Y+63	; 0x3f
    11e0:	ad 97       	sbiw	r28, 0x2d	; 45
    11e2:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    11e6:	61 96       	adiw	r28, 0x11	; 17
    11e8:	6c af       	std	Y+60, r22	; 0x3c
    11ea:	7d af       	std	Y+61, r23	; 0x3d
    11ec:	8e af       	std	Y+62, r24	; 0x3e
    11ee:	9f af       	std	Y+63, r25	; 0x3f
    11f0:	61 97       	sbiw	r28, 0x11	; 17
    11f2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    11f6:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    11fa:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    11fe:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1202:	9c 01       	movw	r18, r24
    1204:	ad 01       	movw	r20, r26
    1206:	61 96       	adiw	r28, 0x11	; 17
    1208:	6c ad       	ldd	r22, Y+60	; 0x3c
    120a:	7d ad       	ldd	r23, Y+61	; 0x3d
    120c:	8e ad       	ldd	r24, Y+62	; 0x3e
    120e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1210:	61 97       	sbiw	r28, 0x11	; 17
    1212:	0e 94 00 18 	call	0x3000	; 0x3000 <__subsf3>
    1216:	e1 96       	adiw	r28, 0x31	; 49
    1218:	6c af       	std	Y+60, r22	; 0x3c
    121a:	7d af       	std	Y+61, r23	; 0x3d
    121c:	8e af       	std	Y+62, r24	; 0x3e
    121e:	9f af       	std	Y+63, r25	; 0x3f
    1220:	e1 97       	sbiw	r28, 0x31	; 49
    1222:	e1 96       	adiw	r28, 0x31	; 49
    1224:	8c ad       	ldd	r24, Y+60	; 0x3c
    1226:	9d ad       	ldd	r25, Y+61	; 0x3d
    1228:	ae ad       	ldd	r26, Y+62	; 0x3e
    122a:	bf ad       	ldd	r27, Y+63	; 0x3f
    122c:	e1 97       	sbiw	r28, 0x31	; 49
    122e:	65 96       	adiw	r28, 0x15	; 21
    1230:	8c af       	std	Y+60, r24	; 0x3c
    1232:	9d af       	std	Y+61, r25	; 0x3d
    1234:	ae af       	std	Y+62, r26	; 0x3e
    1236:	bf af       	std	Y+63, r27	; 0x3f
    1238:	65 97       	sbiw	r28, 0x15	; 21

0000123a <.Loc.85>:
    123a:	65 96       	adiw	r28, 0x15	; 21
    123c:	6c ad       	ldd	r22, Y+60	; 0x3c
    123e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1240:	8e ad       	ldd	r24, Y+62	; 0x3e
    1242:	9f ad       	ldd	r25, Y+63	; 0x3f
    1244:	65 97       	sbiw	r28, 0x15	; 21
    1246:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    124a:	e5 96       	adiw	r28, 0x35	; 53
    124c:	6c af       	std	Y+60, r22	; 0x3c
    124e:	7d af       	std	Y+61, r23	; 0x3d
    1250:	8e af       	std	Y+62, r24	; 0x3e
    1252:	9f af       	std	Y+63, r25	; 0x3f
    1254:	e5 97       	sbiw	r28, 0x35	; 53
    1256:	e3 96       	adiw	r28, 0x33	; 51
    1258:	ae ad       	ldd	r26, Y+62	; 0x3e
    125a:	bf ad       	ldd	r27, Y+63	; 0x3f
    125c:	e3 97       	sbiw	r28, 0x33	; 51
    125e:	bc 83       	std	Y+4, r27	; 0x04
    1260:	ab 83       	std	Y+3, r26	; 0x03

00001262 <.Loc.86>:

            if(FrontDifference < 60){
    1262:	8d 89       	ldd	r24, Y+21	; 0x15
    1264:	9e 89       	ldd	r25, Y+22	; 0x16
    1266:	8b 33       	cpi	r24, 0x3B	; 59
    1268:	91 05       	cpc	r25, r1
    126a:	11 f0       	breq	.+4      	; 0x1270 <.Loc.87>

0000126c <L0^A>:
    126c:	0c f0       	brlt	.+2      	; 0x1270 <.Loc.87>

0000126e <L0^A>:
    126e:	53 c0       	rjmp	.+166    	; 0x1316 <.L16>

00001270 <.Loc.87>:
                Obstructie = 1;
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	9e 83       	std	Y+6, r25	; 0x06
    1276:	8d 83       	std	Y+5, r24	; 0x05

00001278 <.Loc.88>:
                if (FrontDifference > 20 && FrontDifference < 60){
    1278:	8d 89       	ldd	r24, Y+21	; 0x15
    127a:	9e 89       	ldd	r25, Y+22	; 0x16
    127c:	84 31       	cpi	r24, 0x14	; 20
    127e:	91 05       	cpc	r25, r1
    1280:	69 f0       	breq	.+26     	; 0x129c <.L17>
    1282:	64 f0       	brlt	.+24     	; 0x129c <.L17>

00001284 <.Loc.89>:
    1284:	8d 89       	ldd	r24, Y+21	; 0x15
    1286:	9e 89       	ldd	r25, Y+22	; 0x16
    1288:	8b 33       	cpi	r24, 0x3B	; 59
    128a:	91 05       	cpc	r25, r1
    128c:	09 f0       	breq	.+2      	; 0x1290 <.Loc.90>

0000128e <L0^A>:
    128e:	34 f4       	brge	.+12     	; 0x129c <.L17>

00001290 <.Loc.90>:
                Motor_1_set_power(15);
    1290:	8f e0       	ldi	r24, 0x0F	; 15
    1292:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001296 <.Loc.91>:
                Motor_2_set_power(15);
    1296:	8f e0       	ldi	r24, 0x0F	; 15
    1298:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000129c <.L17>:
                }
                if (FrontDifference > 0 && FrontDifference < 20){
    129c:	8d 89       	ldd	r24, Y+21	; 0x15
    129e:	9e 89       	ldd	r25, Y+22	; 0x16
    12a0:	00 97       	sbiw	r24, 0x00	; 0
    12a2:	69 f0       	breq	.+26     	; 0x12be <.L18>
    12a4:	64 f0       	brlt	.+24     	; 0x12be <.L18>

000012a6 <.Loc.93>:
    12a6:	8d 89       	ldd	r24, Y+21	; 0x15
    12a8:	9e 89       	ldd	r25, Y+22	; 0x16
    12aa:	83 31       	cpi	r24, 0x13	; 19
    12ac:	91 05       	cpc	r25, r1
    12ae:	09 f0       	breq	.+2      	; 0x12b2 <.Loc.94>

000012b0 <L0^A>:
    12b0:	34 f4       	brge	.+12     	; 0x12be <.L18>

000012b2 <.Loc.94>:
                    Motor_1_set_power(12);
    12b2:	8c e0       	ldi	r24, 0x0C	; 12
    12b4:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000012b8 <.Loc.95>:
                    Motor_2_set_power(12);
    12b8:	8c e0       	ldi	r24, 0x0C	; 12
    12ba:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000012be <.L18>:
                }
                if ( -5 < FrontDifference && FrontDifference < 5){
    12be:	8d 89       	ldd	r24, Y+21	; 0x15
    12c0:	9e 89       	ldd	r25, Y+22	; 0x16
    12c2:	8c 3f       	cpi	r24, 0xFC	; 252
    12c4:	bf ef       	ldi	r27, 0xFF	; 255
    12c6:	9b 07       	cpc	r25, r27
    12c8:	34 f1       	brlt	.+76     	; 0x1316 <.L16>

000012ca <.Loc.97>:
    12ca:	8d 89       	ldd	r24, Y+21	; 0x15
    12cc:	9e 89       	ldd	r25, Y+22	; 0x16
    12ce:	84 30       	cpi	r24, 0x04	; 4
    12d0:	91 05       	cpc	r25, r1
    12d2:	09 f0       	breq	.+2      	; 0x12d6 <.LBB30>

000012d4 <L0^A>:
    12d4:	04 f5       	brge	.+64     	; 0x1316 <.L16>

000012d6 <.LBB30>:
                    Motor_1_set_power(0);
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000012dc <.Loc.99>:
                    Motor_2_set_power(0);
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000012e2 <.Loc.100>:
                    PORTE &= ~(1<<PE5);
    12e2:	8e e2       	ldi	r24, 0x2E	; 46
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	fc 01       	movw	r30, r24
    12e8:	20 81       	ld	r18, Z

000012ea <.Loc.101>:
    12ea:	8e e2       	ldi	r24, 0x2E	; 46
    12ec:	90 e0       	ldi	r25, 0x00	; 0

000012ee <.Loc.102>:
    12ee:	2f 7d       	andi	r18, 0xDF	; 223
    12f0:	dc 01       	movw	r26, r24
    12f2:	2c 93       	st	X, r18

000012f4 <.Loc.103>:
                    wait_ms(20);
    12f4:	84 e1       	ldi	r24, 0x14	; 20
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

000012fc <.Loc.104>:
                    PORTE |= (1<<PE5);
    12fc:	8e e2       	ldi	r24, 0x2E	; 46
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	fc 01       	movw	r30, r24
    1302:	20 81       	ld	r18, Z
    1304:	8e e2       	ldi	r24, 0x2E	; 46
    1306:	90 e0       	ldi	r25, 0x00	; 0

00001308 <.Loc.105>:
    1308:	20 62       	ori	r18, 0x20	; 32
    130a:	dc 01       	movw	r26, r24
    130c:	2c 93       	st	X, r18

0000130e <.Loc.106>:
                    wait_ms(20);
    130e:	84 e1       	ldi	r24, 0x14	; 20
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

00001316 <.L16>:
                }
            }
            if (FrontDifference > 90){
    1316:	8d 89       	ldd	r24, Y+21	; 0x15
    1318:	9e 89       	ldd	r25, Y+22	; 0x16
    131a:	8a 35       	cpi	r24, 0x5A	; 90
    131c:	91 05       	cpc	r25, r1
    131e:	19 f0       	breq	.+6      	; 0x1326 <.L19>
    1320:	14 f0       	brlt	.+4      	; 0x1326 <.L19>

00001322 <.Loc.108>:
                Obstructie = 0;
    1322:	1e 82       	std	Y+6, r1	; 0x06
    1324:	1d 82       	std	Y+5, r1	; 0x05

00001326 <.L19>:
            }

            if(Obstructie ==0 && InKolom != 0){
    1326:	8d 81       	ldd	r24, Y+5	; 0x05
    1328:	9e 81       	ldd	r25, Y+6	; 0x06
    132a:	00 97       	sbiw	r24, 0x00	; 0
    132c:	09 f0       	breq	.+2      	; 0x1330 <.Loc.110>

0000132e <L0^A>:
    132e:	93 c0       	rjmp	.+294    	; 0x1456 <.L20>

00001330 <.Loc.110>:
    1330:	8f 81       	ldd	r24, Y+7	; 0x07
    1332:	98 85       	ldd	r25, Y+8	; 0x08
    1334:	00 97       	sbiw	r24, 0x00	; 0
    1336:	09 f4       	brne	.+2      	; 0x133a <.Loc.111>

00001338 <L0^A>:
    1338:	8e c0       	rjmp	.+284    	; 0x1456 <.L20>

0000133a <.Loc.111>:
                if(Difference > 1){
    133a:	8b 81       	ldd	r24, Y+3	; 0x03
    133c:	9c 81       	ldd	r25, Y+4	; 0x04
    133e:	81 30       	cpi	r24, 0x01	; 1
    1340:	91 05       	cpc	r25, r1
    1342:	39 f0       	breq	.+14     	; 0x1352 <.L21>
    1344:	34 f0       	brlt	.+12     	; 0x1352 <.L21>

00001346 <.Loc.112>:
                //stuur naar links
                Motor_1_set_power(50);
    1346:	82 e3       	ldi	r24, 0x32	; 50
    1348:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000134c <.Loc.113>:
                Motor_2_set_power(45);
    134c:	8d e2       	ldi	r24, 0x2D	; 45
    134e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001352 <.L21>:
                }
                if(Difference > 3){
    1352:	8b 81       	ldd	r24, Y+3	; 0x03
    1354:	9c 81       	ldd	r25, Y+4	; 0x04
    1356:	83 30       	cpi	r24, 0x03	; 3
    1358:	91 05       	cpc	r25, r1
    135a:	39 f0       	breq	.+14     	; 0x136a <.L22>
    135c:	34 f0       	brlt	.+12     	; 0x136a <.L22>

0000135e <.Loc.115>:
                    //stuur naar links
                    Motor_1_set_power(50);
    135e:	82 e3       	ldi	r24, 0x32	; 50
    1360:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001364 <.Loc.116>:
                    Motor_2_set_power(40);
    1364:	88 e2       	ldi	r24, 0x28	; 40
    1366:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000136a <.L22>:
                }
                if(Difference > 8){
    136a:	8b 81       	ldd	r24, Y+3	; 0x03
    136c:	9c 81       	ldd	r25, Y+4	; 0x04
    136e:	88 30       	cpi	r24, 0x08	; 8
    1370:	91 05       	cpc	r25, r1
    1372:	39 f0       	breq	.+14     	; 0x1382 <.L23>
    1374:	34 f0       	brlt	.+12     	; 0x1382 <.L23>

00001376 <.Loc.118>:
                    //stuur naar links
                    Motor_1_set_power(50);
    1376:	82 e3       	ldi	r24, 0x32	; 50
    1378:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000137c <.Loc.119>:
                    Motor_2_set_power(20);
    137c:	84 e1       	ldi	r24, 0x14	; 20
    137e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001382 <.L23>:
                }
                if(Difference < -1){
    1382:	8b 81       	ldd	r24, Y+3	; 0x03
    1384:	9c 81       	ldd	r25, Y+4	; 0x04
    1386:	8f 3f       	cpi	r24, 0xFF	; 255
    1388:	bf ef       	ldi	r27, 0xFF	; 255
    138a:	9b 07       	cpc	r25, r27
    138c:	34 f4       	brge	.+12     	; 0x139a <.L24>

0000138e <.Loc.121>:
                    //stuur naar rechts
                    Motor_1_set_power(45);
    138e:	8d e2       	ldi	r24, 0x2D	; 45
    1390:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001394 <.Loc.122>:
                    Motor_2_set_power(50);
    1394:	82 e3       	ldi	r24, 0x32	; 50
    1396:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000139a <.L24>:
                }
                if(Difference < -3){
    139a:	8b 81       	ldd	r24, Y+3	; 0x03
    139c:	9c 81       	ldd	r25, Y+4	; 0x04
    139e:	8d 3f       	cpi	r24, 0xFD	; 253
    13a0:	ef ef       	ldi	r30, 0xFF	; 255
    13a2:	9e 07       	cpc	r25, r30
    13a4:	34 f4       	brge	.+12     	; 0x13b2 <.L25>

000013a6 <.Loc.124>:
                    //stuur naar rechts
                    Motor_1_set_power(40);
    13a6:	88 e2       	ldi	r24, 0x28	; 40
    13a8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000013ac <.Loc.125>:
                    Motor_2_set_power(50);
    13ac:	82 e3       	ldi	r24, 0x32	; 50
    13ae:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000013b2 <.L25>:
                }
                if(Difference < -8){
    13b2:	8b 81       	ldd	r24, Y+3	; 0x03
    13b4:	9c 81       	ldd	r25, Y+4	; 0x04
    13b6:	88 3f       	cpi	r24, 0xF8	; 248
    13b8:	ff ef       	ldi	r31, 0xFF	; 255
    13ba:	9f 07       	cpc	r25, r31
    13bc:	34 f4       	brge	.+12     	; 0x13ca <.L26>

000013be <.Loc.127>:
                    //stuur naar rechts
                    Motor_1_set_power(20);
    13be:	84 e1       	ldi	r24, 0x14	; 20
    13c0:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000013c4 <.Loc.128>:
                    Motor_2_set_power(50);
    13c4:	82 e3       	ldi	r24, 0x32	; 50
    13c6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000013ca <.L26>:
                }
                if ( -1 < Difference && Difference < 1){
    13ca:	8b 81       	ldd	r24, Y+3	; 0x03
    13cc:	9c 81       	ldd	r25, Y+4	; 0x04
    13ce:	99 23       	and	r25, r25
    13d0:	5c f0       	brlt	.+22     	; 0x13e8 <.L27>

000013d2 <.Loc.130>:
    13d2:	8b 81       	ldd	r24, Y+3	; 0x03
    13d4:	9c 81       	ldd	r25, Y+4	; 0x04
    13d6:	00 97       	sbiw	r24, 0x00	; 0
    13d8:	09 f0       	breq	.+2      	; 0x13dc <.Loc.131>

000013da <L0^A>:
    13da:	34 f4       	brge	.+12     	; 0x13e8 <.L27>

000013dc <.Loc.131>:
                    Motor_1_set_power(50);
    13dc:	82 e3       	ldi	r24, 0x32	; 50
    13de:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000013e2 <.Loc.132>:
                    Motor_2_set_power(50);
    13e2:	82 e3       	ldi	r24, 0x32	; 50
    13e4:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000013e8 <.L27>:
                }
                if(BoomDetectie() == 1){
    13e8:	0e 94 b8 0a 	call	0x1570	; 0x1570 <BoomDetectie>

000013ec <.Loc.134>:
    13ec:	81 30       	cpi	r24, 0x01	; 1
    13ee:	91 05       	cpc	r25, r1
    13f0:	b1 f4       	brne	.+44     	; 0x141e <.L28>

000013f2 <.LBB32>:
                    Motor_1_set_power(0);
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000013f8 <.Loc.136>:
                    Motor_2_set_power(0);
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000013fe <.Loc.137>:
                    GeluidSignaal();
    13fe:	0e 94 76 0c 	call	0x18ec	; 0x18ec <GeluidSignaal>

00001402 <.Loc.138>:
                    wait_ms(2000);
    1402:	80 ed       	ldi	r24, 0xD0	; 208
    1404:	97 e0       	ldi	r25, 0x07	; 7
    1406:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

0000140a <.Loc.139>:
                    Motor_1_set_power(50);
    140a:	82 e3       	ldi	r24, 0x32	; 50
    140c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001410 <.Loc.140>:
                    Motor_2_set_power(50);
    1410:	82 e3       	ldi	r24, 0x32	; 50
    1412:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001416 <.Loc.141>:
                    wait_ms(180);
    1416:	84 eb       	ldi	r24, 0xB4	; 180
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

0000141e <.L28>:
                }
                if(KolomIR()==1){
    141e:	0e 94 a2 0a 	call	0x1544	; 0x1544 <KolomIR>

00001422 <.Loc.143>:
    1422:	81 30       	cpi	r24, 0x01	; 1
    1424:	91 05       	cpc	r25, r1
    1426:	41 f4       	brne	.+16     	; 0x1438 <.L29>

00001428 <.Loc.144>:
                    InKolom = 2;
    1428:	82 e0       	ldi	r24, 0x02	; 2
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	98 87       	std	Y+8, r25	; 0x08
    142e:	8f 83       	std	Y+7, r24	; 0x07

00001430 <.Loc.145>:
                   display_getal(5555);
    1430:	83 eb       	ldi	r24, 0xB3	; 179
    1432:	95 e1       	ldi	r25, 0x15	; 21
    1434:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00001438 <.L29>:
                }
                if(KolomIR()==0){
    1438:	0e 94 a2 0a 	call	0x1544	; 0x1544 <KolomIR>

0000143c <.Loc.147>:
    143c:	00 97       	sbiw	r24, 0x00	; 0
    143e:	59 f4       	brne	.+22     	; 0x1456 <.L20>

00001440 <.Loc.148>:
                    if(InKolom == 2){
    1440:	8f 81       	ldd	r24, Y+7	; 0x07
    1442:	98 85       	ldd	r25, Y+8	; 0x08
    1444:	82 30       	cpi	r24, 0x02	; 2
    1446:	91 05       	cpc	r25, r1
    1448:	11 f4       	brne	.+4      	; 0x144e <.L30>

0000144a <.Loc.149>:
                        InKolom =0;
    144a:	18 86       	std	Y+8, r1	; 0x08
    144c:	1f 82       	std	Y+7, r1	; 0x07

0000144e <.L30>:
                    }
                    display_getal(0000);
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00001456 <.L20>:
                }
            }
            if(InKolom == 0){
    1456:	8f 81       	ldd	r24, Y+7	; 0x07
    1458:	98 85       	ldd	r25, Y+8	; 0x08
    145a:	00 97       	sbiw	r24, 0x00	; 0
    145c:	71 f4       	brne	.+28     	; 0x147a <.L15>

0000145e <.LBB35>:
                display_getal(0000);
    145e:	80 e0       	ldi	r24, 0x00	; 0
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00001466 <.Loc.153>:
                BochtMaken();
    1466:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <BochtMaken>

0000146a <.Loc.154>:
                TargetHeading = 540;
    146a:	8c e1       	ldi	r24, 0x1C	; 28
    146c:	92 e0       	ldi	r25, 0x02	; 2
    146e:	9a 83       	std	Y+2, r25	; 0x02
    1470:	89 83       	std	Y+1, r24	; 0x01

00001472 <.Loc.155>:
                InKolom = 1;
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	98 87       	std	Y+8, r25	; 0x08
    1478:	8f 83       	std	Y+7, r24	; 0x07

0000147a <.L15>:
        while(KolommenModus == 1){
    147a:	8b 85       	ldd	r24, Y+11	; 0x0b
    147c:	9c 85       	ldd	r25, Y+12	; 0x0c
    147e:	81 30       	cpi	r24, 0x01	; 1
    1480:	91 05       	cpc	r25, r1
    1482:	09 f4       	brne	.+2      	; 0x1486 <.Loc.157>

00001484 <L0^A>:
    1484:	36 ce       	rjmp	.-916    	; 0x10f2 <.L32>

00001486 <.Loc.157>:
        while(TestModus == 1){
    1486:	1c cd       	rjmp	.-1480   	; 0xec0 <.L2>

00001488 <init>:

    return 0;
}


void init (void){
    1488:	cf 93       	push	r28
    148a:	df 93       	push	r29
    148c:	cd b7       	in	r28, 0x3d	; 61
    148e:	de b7       	in	r29, 0x3e	; 62

00001490 <.Loc.159>:
    init_SonicSensors();
    1490:	0e 94 3c 11 	call	0x2278	; 0x2278 <init_SonicSensors>

00001494 <.Loc.160>:
    initTimer();
    1494:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <initTimer>

00001498 <.Loc.161>:
    init_motor_1();
    1498:	0e 94 63 04 	call	0x8c6	; 0x8c6 <init_motor_1>

0000149c <.Loc.162>:
    init_motor_2();
    149c:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <init_motor_2>

000014a0 <.Loc.163>:
    init_Gyro();
    14a0:	0e 94 82 03 	call	0x704	; 0x704 <init_Gyro>

000014a4 <.Loc.164>:
    PORTK &= ~(1<<PK0);
    14a4:	88 e0       	ldi	r24, 0x08	; 8
    14a6:	91 e0       	ldi	r25, 0x01	; 1
    14a8:	fc 01       	movw	r30, r24
    14aa:	20 81       	ld	r18, Z

000014ac <.Loc.165>:
    14ac:	88 e0       	ldi	r24, 0x08	; 8
    14ae:	91 e0       	ldi	r25, 0x01	; 1

000014b0 <.Loc.166>:
    14b0:	2e 7f       	andi	r18, 0xFE	; 254
    14b2:	fc 01       	movw	r30, r24
    14b4:	20 83       	st	Z, r18

000014b6 <.Loc.167>:
    sei();
    14b6:	78 94       	sei

000014b8 <.Loc.168>:
}
    14b8:	00 00       	nop
    14ba:	df 91       	pop	r29
    14bc:	cf 91       	pop	r28
    14be:	08 95       	ret

000014c0 <ModeSwitch1>:


// 48 46 44
int ModeSwitch1(){
    14c0:	cf 93       	push	r28
    14c2:	df 93       	push	r29
    14c4:	cd b7       	in	r28, 0x3d	; 61
    14c6:	de b7       	in	r29, 0x3e	; 62

000014c8 <.Loc.170>:
    if (PINL & (1<<PL1)){//D48
    14c8:	89 e0       	ldi	r24, 0x09	; 9
    14ca:	91 e0       	ldi	r25, 0x01	; 1
    14cc:	fc 01       	movw	r30, r24
    14ce:	80 81       	ld	r24, Z

000014d0 <.Loc.171>:
    14d0:	88 2f       	mov	r24, r24
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	82 70       	andi	r24, 0x02	; 2
    14d6:	99 27       	eor	r25, r25

000014d8 <.Loc.172>:
    14d8:	00 97       	sbiw	r24, 0x00	; 0
    14da:	19 f0       	breq	.+6      	; 0x14e2 <.L36>

000014dc <.Loc.173>:
        return 1;
    14dc:	81 e0       	ldi	r24, 0x01	; 1
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	02 c0       	rjmp	.+4      	; 0x14e6 <.L37>

000014e2 <.L36>:
    }
    else{
        return 0;
    14e2:	80 e0       	ldi	r24, 0x00	; 0
    14e4:	90 e0       	ldi	r25, 0x00	; 0

000014e6 <.L37>:
    }
}
    14e6:	df 91       	pop	r29
    14e8:	cf 91       	pop	r28
    14ea:	08 95       	ret

000014ec <ModeSwitch2>:
int ModeSwitch2(){
    14ec:	cf 93       	push	r28
    14ee:	df 93       	push	r29
    14f0:	cd b7       	in	r28, 0x3d	; 61
    14f2:	de b7       	in	r29, 0x3e	; 62

000014f4 <.Loc.177>:
    if (PINL & (1<<PL3)){//D46
    14f4:	89 e0       	ldi	r24, 0x09	; 9
    14f6:	91 e0       	ldi	r25, 0x01	; 1
    14f8:	fc 01       	movw	r30, r24
    14fa:	80 81       	ld	r24, Z

000014fc <.Loc.178>:
    14fc:	88 2f       	mov	r24, r24
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	88 70       	andi	r24, 0x08	; 8
    1502:	99 27       	eor	r25, r25

00001504 <.Loc.179>:
    1504:	00 97       	sbiw	r24, 0x00	; 0
    1506:	19 f0       	breq	.+6      	; 0x150e <.L39>

00001508 <.Loc.180>:
        return 1;
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	02 c0       	rjmp	.+4      	; 0x1512 <.L40>

0000150e <.L39>:
    }
    else{
        return 0;
    150e:	80 e0       	ldi	r24, 0x00	; 0
    1510:	90 e0       	ldi	r25, 0x00	; 0

00001512 <.L40>:
    }
}
    1512:	df 91       	pop	r29
    1514:	cf 91       	pop	r28
    1516:	08 95       	ret

00001518 <RedSwitch>:
int RedSwitch(){
    1518:	cf 93       	push	r28
    151a:	df 93       	push	r29
    151c:	cd b7       	in	r28, 0x3d	; 61
    151e:	de b7       	in	r29, 0x3e	; 62

00001520 <.Loc.184>:
    if (PINL & (1<<PL5)){//D44
    1520:	89 e0       	ldi	r24, 0x09	; 9
    1522:	91 e0       	ldi	r25, 0x01	; 1
    1524:	fc 01       	movw	r30, r24
    1526:	80 81       	ld	r24, Z

00001528 <.Loc.185>:
    1528:	88 2f       	mov	r24, r24
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	80 72       	andi	r24, 0x20	; 32
    152e:	99 27       	eor	r25, r25

00001530 <.Loc.186>:
    1530:	00 97       	sbiw	r24, 0x00	; 0
    1532:	19 f0       	breq	.+6      	; 0x153a <.L42>

00001534 <.Loc.187>:
        return 1;
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	02 c0       	rjmp	.+4      	; 0x153e <.L43>

0000153a <.L42>:
    }
    else{
        return 0;
    153a:	80 e0       	ldi	r24, 0x00	; 0
    153c:	90 e0       	ldi	r25, 0x00	; 0

0000153e <.L43>:
    }
}
    153e:	df 91       	pop	r29
    1540:	cf 91       	pop	r28
    1542:	08 95       	ret

00001544 <KolomIR>:
int KolomIR(){
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	cd b7       	in	r28, 0x3d	; 61
    154a:	de b7       	in	r29, 0x3e	; 62

0000154c <.Loc.191>:
    if (PINK & (1<<PK0)){//A8
    154c:	86 e0       	ldi	r24, 0x06	; 6
    154e:	91 e0       	ldi	r25, 0x01	; 1
    1550:	fc 01       	movw	r30, r24
    1552:	80 81       	ld	r24, Z

00001554 <.Loc.192>:
    1554:	88 2f       	mov	r24, r24
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	81 70       	andi	r24, 0x01	; 1
    155a:	99 27       	eor	r25, r25

0000155c <.Loc.193>:
    155c:	00 97       	sbiw	r24, 0x00	; 0
    155e:	19 f0       	breq	.+6      	; 0x1566 <.L45>

00001560 <.Loc.194>:
        return 0;
    1560:	80 e0       	ldi	r24, 0x00	; 0
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	02 c0       	rjmp	.+4      	; 0x156a <.L46>

00001566 <.L45>:
    }
    else{
        return 1;
    1566:	81 e0       	ldi	r24, 0x01	; 1
    1568:	90 e0       	ldi	r25, 0x00	; 0

0000156a <.L46>:
    }
}
    156a:	df 91       	pop	r29
    156c:	cf 91       	pop	r28
    156e:	08 95       	ret

00001570 <BoomDetectie>:

volatile int LinksDetectie = 0;
volatile int RechtsDetectie = 0;
int BoomDetectie(){
    1570:	cf 93       	push	r28
    1572:	df 93       	push	r29
    1574:	cd b7       	in	r28, 0x3d	; 61
    1576:	de b7       	in	r29, 0x3e	; 62
    1578:	c8 54       	subi	r28, 0x48	; 72
    157a:	d1 09       	sbc	r29, r1
    157c:	0f b6       	in	r0, 0x3f	; 63
    157e:	f8 94       	cli
    1580:	de bf       	out	0x3e, r29	; 62
    1582:	0f be       	out	0x3f, r0	; 63
    1584:	cd bf       	out	0x3d, r28	; 61

00001586 <.Loc.198>:
    int afstand_Links = GetDistanceLeft();
    1586:	0e 94 8f 13 	call	0x271e	; 0x271e <GetDistanceLeft>
    158a:	9a 83       	std	Y+2, r25	; 0x02
    158c:	89 83       	std	Y+1, r24	; 0x01

0000158e <.Loc.199>:
    int afstand_Rechts = GetDistanceRight();
    158e:	0e 94 77 15 	call	0x2aee	; 0x2aee <GetDistanceRight>
    1592:	9c 83       	std	Y+4, r25	; 0x04
    1594:	8b 83       	std	Y+3, r24	; 0x03

00001596 <.Loc.200>:

    if (afstand_Links <= 80)
    1596:	89 81       	ldd	r24, Y+1	; 0x01
    1598:	9a 81       	ldd	r25, Y+2	; 0x02
    159a:	80 35       	cpi	r24, 0x50	; 80
    159c:	91 05       	cpc	r25, r1
    159e:	09 f0       	breq	.+2      	; 0x15a2 <.Loc.201>

000015a0 <L0^A>:
    15a0:	9c f4       	brge	.+38     	; 0x15c8 <.L48>

000015a2 <.Loc.201>:
        {
            if (LinksDetectie == 0) // knop is niet al eerder ingedrukt
    15a2:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <LinksDetectie>
    15a6:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <LinksDetectie+0x1>

000015aa <.Loc.202>:
    15aa:	00 97       	sbiw	r24, 0x00	; 0
    15ac:	69 f4       	brne	.+26     	; 0x15c8 <.L48>

000015ae <.LBB36>:
            {
                wait_ms(20);
    15ae:	84 e1       	ldi	r24, 0x14	; 20
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

000015b6 <.Loc.204>:
                LinksDetectie = 1;
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <LinksDetectie+0x1>
    15be:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <LinksDetectie>

000015c2 <.Loc.205>:
				return 1;
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	6c c1       	rjmp	.+728    	; 0x18a0 <.L47>

000015c8 <.L48>:
            }
        }
    if (afstand_Links > 90)
    15c8:	89 81       	ldd	r24, Y+1	; 0x01
    15ca:	9a 81       	ldd	r25, Y+2	; 0x02
    15cc:	8a 35       	cpi	r24, 0x5A	; 90
    15ce:	91 05       	cpc	r25, r1
    15d0:	09 f0       	breq	.+2      	; 0x15d4 <L0^A>

000015d2 <L0^A>:
    15d2:	0c f4       	brge	.+2      	; 0x15d6 <.Loc.207>

000015d4 <L0^A>:
    15d4:	9a c0       	rjmp	.+308    	; 0x170a <.L50>

000015d6 <.Loc.207>:
        {
            if (LinksDetectie != 0) // knop is zojuist losgelaten
    15d6:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <LinksDetectie>
    15da:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <LinksDetectie+0x1>

000015de <.Loc.208>:
    15de:	00 97       	sbiw	r24, 0x00	; 0
    15e0:	09 f4       	brne	.+2      	; 0x15e4 <L0^A+0x2>

000015e2 <L0^A>:
    15e2:	93 c0       	rjmp	.+294    	; 0x170a <.L50>
    15e4:	80 e0       	ldi	r24, 0x00	; 0
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	a0 ea       	ldi	r26, 0xA0	; 160
    15ea:	b1 e4       	ldi	r27, 0x41	; 65
    15ec:	8d 83       	std	Y+5, r24	; 0x05
    15ee:	9e 83       	std	Y+6, r25	; 0x06
    15f0:	af 83       	std	Y+7, r26	; 0x07
    15f2:	b8 87       	std	Y+8, r27	; 0x08

000015f4 <.LBB37>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    15f4:	20 e0       	ldi	r18, 0x00	; 0
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	4a e7       	ldi	r20, 0x7A	; 122
    15fa:	55 e4       	ldi	r21, 0x45	; 69
    15fc:	6d 81       	ldd	r22, Y+5	; 0x05
    15fe:	7e 81       	ldd	r23, Y+6	; 0x06
    1600:	8f 81       	ldd	r24, Y+7	; 0x07
    1602:	98 85       	ldd	r25, Y+8	; 0x08
    1604:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    1608:	69 a7       	std	Y+41, r22	; 0x29
    160a:	7a a7       	std	Y+42, r23	; 0x2a
    160c:	8b a7       	std	Y+43, r24	; 0x2b
    160e:	9c a7       	std	Y+44, r25	; 0x2c
    1610:	89 a5       	ldd	r24, Y+41	; 0x29
    1612:	9a a5       	ldd	r25, Y+42	; 0x2a
    1614:	ab a5       	ldd	r26, Y+43	; 0x2b
    1616:	bc a5       	ldd	r27, Y+44	; 0x2c
    1618:	89 87       	std	Y+9, r24	; 0x09
    161a:	9a 87       	std	Y+10, r25	; 0x0a
    161c:	ab 87       	std	Y+11, r26	; 0x0b
    161e:	bc 87       	std	Y+12, r27	; 0x0c

00001620 <.Loc.210>:
	if (__tmp < 1.0)
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	40 e8       	ldi	r20, 0x80	; 128
    1626:	5f e3       	ldi	r21, 0x3F	; 63
    1628:	69 85       	ldd	r22, Y+9	; 0x09
    162a:	7a 85       	ldd	r23, Y+10	; 0x0a
    162c:	8b 85       	ldd	r24, Y+11	; 0x0b
    162e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1630:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    1634:	88 23       	and	r24, r24
    1636:	2c f4       	brge	.+10     	; 0x1642 <.L74>

00001638 <.Loc.211>:
		__ticks = 1;
    1638:	81 e0       	ldi	r24, 0x01	; 1
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	9e 87       	std	Y+14, r25	; 0x0e
    163e:	8d 87       	std	Y+13, r24	; 0x0d
    1640:	55 c0       	rjmp	.+170    	; 0x16ec <.L53>

00001642 <.L74>:
	else if (__tmp > 65535)
    1642:	20 e0       	ldi	r18, 0x00	; 0
    1644:	3f ef       	ldi	r19, 0xFF	; 255
    1646:	4f e7       	ldi	r20, 0x7F	; 127
    1648:	57 e4       	ldi	r21, 0x47	; 71
    164a:	69 85       	ldd	r22, Y+9	; 0x09
    164c:	7a 85       	ldd	r23, Y+10	; 0x0a
    164e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1650:	9c 85       	ldd	r25, Y+12	; 0x0c
    1652:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    1656:	88 23       	and	r24, r24
    1658:	d9 f1       	breq	.+118    	; 0x16d0 <.L75>
    165a:	d4 f1       	brlt	.+116    	; 0x16d0 <.L75>

0000165c <.Loc.213>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    165c:	20 e0       	ldi	r18, 0x00	; 0
    165e:	30 e0       	ldi	r19, 0x00	; 0
    1660:	40 e2       	ldi	r20, 0x20	; 32
    1662:	51 e4       	ldi	r21, 0x41	; 65
    1664:	6d 81       	ldd	r22, Y+5	; 0x05
    1666:	7e 81       	ldd	r23, Y+6	; 0x06
    1668:	8f 81       	ldd	r24, Y+7	; 0x07
    166a:	98 85       	ldd	r25, Y+8	; 0x08
    166c:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    1670:	6d a7       	std	Y+45, r22	; 0x2d
    1672:	7e a7       	std	Y+46, r23	; 0x2e
    1674:	8f a7       	std	Y+47, r24	; 0x2f
    1676:	98 ab       	std	Y+48, r25	; 0x30
    1678:	8d a5       	ldd	r24, Y+45	; 0x2d
    167a:	9e a5       	ldd	r25, Y+46	; 0x2e
    167c:	af a5       	ldd	r26, Y+47	; 0x2f
    167e:	b8 a9       	ldd	r27, Y+48	; 0x30
    1680:	89 a3       	std	Y+33, r24	; 0x21
    1682:	9a a3       	std	Y+34, r25	; 0x22
    1684:	ab a3       	std	Y+35, r26	; 0x23
    1686:	bc a3       	std	Y+36, r27	; 0x24

00001688 <.Loc.214>:
    1688:	69 a1       	ldd	r22, Y+33	; 0x21
    168a:	7a a1       	ldd	r23, Y+34	; 0x22
    168c:	8b a1       	ldd	r24, Y+35	; 0x23
    168e:	9c a1       	ldd	r25, Y+36	; 0x24
    1690:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    1694:	69 ab       	std	Y+49, r22	; 0x31
    1696:	7a ab       	std	Y+50, r23	; 0x32
    1698:	8b ab       	std	Y+51, r24	; 0x33
    169a:	9c ab       	std	Y+52, r25	; 0x34
    169c:	a9 a9       	ldd	r26, Y+49	; 0x31
    169e:	ba a9       	ldd	r27, Y+50	; 0x32
    16a0:	be 87       	std	Y+14, r27	; 0x0e
    16a2:	ad 87       	std	Y+13, r26	; 0x0d

000016a4 <.Loc.215>:
		while(__ticks)
    16a4:	10 c0       	rjmp	.+32     	; 0x16c6 <.L56>

000016a6 <.L57>:
    16a6:	80 e9       	ldi	r24, 0x90	; 144
    16a8:	91 e0       	ldi	r25, 0x01	; 1
    16aa:	98 8b       	std	Y+16, r25	; 0x10
    16ac:	8f 87       	std	Y+15, r24	; 0x0f

000016ae <.LBB39>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
    16ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    16b0:	98 89       	ldd	r25, Y+16	; 0x10

000016b2 <.L1^B1>:
    16b2:	01 97       	sbiw	r24, 0x01	; 1
    16b4:	f1 f7       	brne	.-4      	; 0x16b2 <.L1^B1>
    16b6:	98 8b       	std	Y+16, r25	; 0x10
    16b8:	8f 87       	std	Y+15, r24	; 0x0f

000016ba <.Loc.217>:
	...

000016bc <.LBE39>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    16be:	9e 85       	ldd	r25, Y+14	; 0x0e
    16c0:	01 97       	sbiw	r24, 0x01	; 1
    16c2:	9e 87       	std	Y+14, r25	; 0x0e
    16c4:	8d 87       	std	Y+13, r24	; 0x0d

000016c6 <.L56>:
		while(__ticks)
    16c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    16c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    16ca:	00 97       	sbiw	r24, 0x00	; 0
    16cc:	61 f7       	brne	.-40     	; 0x16a6 <.L57>

000016ce <.Loc.220>:
		}
		return;
    16ce:	19 c0       	rjmp	.+50     	; 0x1702 <.L58>

000016d0 <.L75>:
	}
	else
		__ticks = (uint16_t)__tmp;
    16d0:	69 85       	ldd	r22, Y+9	; 0x09
    16d2:	7a 85       	ldd	r23, Y+10	; 0x0a
    16d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    16d6:	9c 85       	ldd	r25, Y+12	; 0x0c
    16d8:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    16dc:	6d ab       	std	Y+53, r22	; 0x35
    16de:	7e ab       	std	Y+54, r23	; 0x36
    16e0:	8f ab       	std	Y+55, r24	; 0x37
    16e2:	98 af       	std	Y+56, r25	; 0x38
    16e4:	8d a9       	ldd	r24, Y+53	; 0x35
    16e6:	9e a9       	ldd	r25, Y+54	; 0x36
    16e8:	9e 87       	std	Y+14, r25	; 0x0e
    16ea:	8d 87       	std	Y+13, r24	; 0x0d

000016ec <.L53>:
    16ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    16f0:	9a 8b       	std	Y+18, r25	; 0x12
    16f2:	89 8b       	std	Y+17, r24	; 0x11

000016f4 <.LBB41>:
    16f4:	89 89       	ldd	r24, Y+17	; 0x11
    16f6:	9a 89       	ldd	r25, Y+18	; 0x12

000016f8 <.L1^B2>:
    16f8:	01 97       	sbiw	r24, 0x01	; 1
    16fa:	f1 f7       	brne	.-4      	; 0x16f8 <.L1^B2>
    16fc:	9a 8b       	std	Y+18, r25	; 0x12
    16fe:	89 8b       	std	Y+17, r24	; 0x11

00001700 <.Loc.223>:
	...

00001702 <.L58>:
            {
                _delay_ms(20);
                LinksDetectie = 0;
    1702:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <LinksDetectie+0x1>
    1706:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <LinksDetectie>

0000170a <.L50>:
            }
        }
    if (afstand_Rechts <= 80)
    170a:	8b 81       	ldd	r24, Y+3	; 0x03
    170c:	9c 81       	ldd	r25, Y+4	; 0x04
    170e:	80 35       	cpi	r24, 0x50	; 80
    1710:	91 05       	cpc	r25, r1
    1712:	09 f0       	breq	.+2      	; 0x1716 <.Loc.226>

00001714 <L0^A>:
    1714:	9c f4       	brge	.+38     	; 0x173c <.L59>

00001716 <.Loc.226>:
        {
            if (RechtsDetectie == 0) // knop is niet al eerder ingedrukt
    1716:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <RechtsDetectie>
    171a:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <RechtsDetectie+0x1>

0000171e <.Loc.227>:
    171e:	00 97       	sbiw	r24, 0x00	; 0
    1720:	69 f4       	brne	.+26     	; 0x173c <.L59>

00001722 <.LBB43>:
            {
                wait_ms(20);
    1722:	84 e1       	ldi	r24, 0x14	; 20
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

0000172a <.Loc.229>:
                RechtsDetectie = 1;
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <RechtsDetectie+0x1>
    1732:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <RechtsDetectie>

00001736 <.Loc.230>:
				return 1;
    1736:	81 e0       	ldi	r24, 0x01	; 1
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	b2 c0       	rjmp	.+356    	; 0x18a0 <.L47>

0000173c <.L59>:
            }
        }
    if (afstand_Rechts > 90)
    173c:	8b 81       	ldd	r24, Y+3	; 0x03
    173e:	9c 81       	ldd	r25, Y+4	; 0x04
    1740:	8a 35       	cpi	r24, 0x5A	; 90
    1742:	91 05       	cpc	r25, r1
    1744:	09 f0       	breq	.+2      	; 0x1748 <L0^A>

00001746 <L0^A>:
    1746:	0c f4       	brge	.+2      	; 0x174a <.Loc.232>

00001748 <L0^A>:
    1748:	a8 c0       	rjmp	.+336    	; 0x189a <.L60>

0000174a <.Loc.232>:
        {
            if (RechtsDetectie != 0) // knop is zojuist losgelaten
    174a:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <RechtsDetectie>
    174e:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <RechtsDetectie+0x1>

00001752 <.Loc.233>:
    1752:	00 97       	sbiw	r24, 0x00	; 0
    1754:	09 f4       	brne	.+2      	; 0x1758 <L0^A+0x2>

00001756 <L0^A>:
    1756:	a4 c0       	rjmp	.+328    	; 0x18a0 <.L47>
    1758:	80 e0       	ldi	r24, 0x00	; 0
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	a0 ea       	ldi	r26, 0xA0	; 160
    175e:	b1 e4       	ldi	r27, 0x41	; 65
    1760:	8b 8b       	std	Y+19, r24	; 0x13
    1762:	9c 8b       	std	Y+20, r25	; 0x14
    1764:	ad 8b       	std	Y+21, r26	; 0x15
    1766:	be 8b       	std	Y+22, r27	; 0x16

00001768 <.LBB44>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	4a e7       	ldi	r20, 0x7A	; 122
    176e:	55 e4       	ldi	r21, 0x45	; 69
    1770:	6b 89       	ldd	r22, Y+19	; 0x13
    1772:	7c 89       	ldd	r23, Y+20	; 0x14
    1774:	8d 89       	ldd	r24, Y+21	; 0x15
    1776:	9e 89       	ldd	r25, Y+22	; 0x16
    1778:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    177c:	69 af       	std	Y+57, r22	; 0x39
    177e:	7a af       	std	Y+58, r23	; 0x3a
    1780:	8b af       	std	Y+59, r24	; 0x3b
    1782:	9c af       	std	Y+60, r25	; 0x3c
    1784:	89 ad       	ldd	r24, Y+57	; 0x39
    1786:	9a ad       	ldd	r25, Y+58	; 0x3a
    1788:	ab ad       	ldd	r26, Y+59	; 0x3b
    178a:	bc ad       	ldd	r27, Y+60	; 0x3c
    178c:	8f 8b       	std	Y+23, r24	; 0x17
    178e:	98 8f       	std	Y+24, r25	; 0x18
    1790:	a9 8f       	std	Y+25, r26	; 0x19
    1792:	ba 8f       	std	Y+26, r27	; 0x1a

00001794 <.Loc.235>:
	if (__tmp < 1.0)
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	40 e8       	ldi	r20, 0x80	; 128
    179a:	5f e3       	ldi	r21, 0x3F	; 63
    179c:	6f 89       	ldd	r22, Y+23	; 0x17
    179e:	78 8d       	ldd	r23, Y+24	; 0x18
    17a0:	89 8d       	ldd	r24, Y+25	; 0x19
    17a2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17a4:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    17a8:	88 23       	and	r24, r24
    17aa:	2c f4       	brge	.+10     	; 0x17b6 <.L76>

000017ac <.Loc.236>:
		__ticks = 1;
    17ac:	81 e0       	ldi	r24, 0x01	; 1
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	9c 8f       	std	Y+28, r25	; 0x1c
    17b2:	8b 8f       	std	Y+27, r24	; 0x1b
    17b4:	62 c0       	rjmp	.+196    	; 0x187a <.L64>

000017b6 <.L76>:
	else if (__tmp > 65535)
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	3f ef       	ldi	r19, 0xFF	; 255
    17ba:	4f e7       	ldi	r20, 0x7F	; 127
    17bc:	57 e4       	ldi	r21, 0x47	; 71
    17be:	6f 89       	ldd	r22, Y+23	; 0x17
    17c0:	78 8d       	ldd	r23, Y+24	; 0x18
    17c2:	89 8d       	ldd	r24, Y+25	; 0x19
    17c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17c6:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    17ca:	88 23       	and	r24, r24
    17cc:	09 f0       	breq	.+2      	; 0x17d0 <L0^A>

000017ce <L0^A>:
    17ce:	0c f4       	brge	.+2      	; 0x17d2 <.Loc.238>

000017d0 <L0^A>:
    17d0:	42 c0       	rjmp	.+132    	; 0x1856 <.L77>

000017d2 <.Loc.238>:
		__ticks = (uint16_t) (__ms * 10.0);
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	40 e2       	ldi	r20, 0x20	; 32
    17d8:	51 e4       	ldi	r21, 0x41	; 65
    17da:	6b 89       	ldd	r22, Y+19	; 0x13
    17dc:	7c 89       	ldd	r23, Y+20	; 0x14
    17de:	8d 89       	ldd	r24, Y+21	; 0x15
    17e0:	9e 89       	ldd	r25, Y+22	; 0x16
    17e2:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    17e6:	21 96       	adiw	r28, 0x01	; 1
    17e8:	6c af       	std	Y+60, r22	; 0x3c
    17ea:	7d af       	std	Y+61, r23	; 0x3d
    17ec:	8e af       	std	Y+62, r24	; 0x3e
    17ee:	9f af       	std	Y+63, r25	; 0x3f
    17f0:	21 97       	sbiw	r28, 0x01	; 1
    17f2:	21 96       	adiw	r28, 0x01	; 1
    17f4:	8c ad       	ldd	r24, Y+60	; 0x3c
    17f6:	9d ad       	ldd	r25, Y+61	; 0x3d
    17f8:	ae ad       	ldd	r26, Y+62	; 0x3e
    17fa:	bf ad       	ldd	r27, Y+63	; 0x3f
    17fc:	21 97       	sbiw	r28, 0x01	; 1
    17fe:	8d a3       	std	Y+37, r24	; 0x25
    1800:	9e a3       	std	Y+38, r25	; 0x26
    1802:	af a3       	std	Y+39, r26	; 0x27
    1804:	b8 a7       	std	Y+40, r27	; 0x28

00001806 <.Loc.239>:
    1806:	6d a1       	ldd	r22, Y+37	; 0x25
    1808:	7e a1       	ldd	r23, Y+38	; 0x26
    180a:	8f a1       	ldd	r24, Y+39	; 0x27
    180c:	98 a5       	ldd	r25, Y+40	; 0x28
    180e:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    1812:	25 96       	adiw	r28, 0x05	; 5
    1814:	6c af       	std	Y+60, r22	; 0x3c
    1816:	7d af       	std	Y+61, r23	; 0x3d
    1818:	8e af       	std	Y+62, r24	; 0x3e
    181a:	9f af       	std	Y+63, r25	; 0x3f
    181c:	25 97       	sbiw	r28, 0x05	; 5
    181e:	23 96       	adiw	r28, 0x03	; 3
    1820:	ae ad       	ldd	r26, Y+62	; 0x3e
    1822:	bf ad       	ldd	r27, Y+63	; 0x3f
    1824:	23 97       	sbiw	r28, 0x03	; 3
    1826:	bc 8f       	std	Y+28, r27	; 0x1c
    1828:	ab 8f       	std	Y+27, r26	; 0x1b

0000182a <.Loc.240>:
		while(__ticks)
    182a:	10 c0       	rjmp	.+32     	; 0x184c <.L67>

0000182c <.L68>:
    182c:	80 e9       	ldi	r24, 0x90	; 144
    182e:	91 e0       	ldi	r25, 0x01	; 1
    1830:	9e 8f       	std	Y+30, r25	; 0x1e
    1832:	8d 8f       	std	Y+29, r24	; 0x1d

00001834 <.LBB46>:
    1834:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1836:	9e 8d       	ldd	r25, Y+30	; 0x1e

00001838 <.L1^B3>:
    1838:	01 97       	sbiw	r24, 0x01	; 1
    183a:	f1 f7       	brne	.-4      	; 0x1838 <.L1^B3>
    183c:	9e 8f       	std	Y+30, r25	; 0x1e
    183e:	8d 8f       	std	Y+29, r24	; 0x1d

00001840 <.Loc.242>:
	...

00001842 <.LBE46>:
			__ticks --;
    1842:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1844:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1846:	01 97       	sbiw	r24, 0x01	; 1
    1848:	9c 8f       	std	Y+28, r25	; 0x1c
    184a:	8b 8f       	std	Y+27, r24	; 0x1b

0000184c <.L67>:
		while(__ticks)
    184c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    184e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1850:	00 97       	sbiw	r24, 0x00	; 0
    1852:	61 f7       	brne	.-40     	; 0x182c <.L68>

00001854 <.Loc.245>:
		return;
    1854:	1d c0       	rjmp	.+58     	; 0x1890 <.L69>

00001856 <.L77>:
		__ticks = (uint16_t)__tmp;
    1856:	6f 89       	ldd	r22, Y+23	; 0x17
    1858:	78 8d       	ldd	r23, Y+24	; 0x18
    185a:	89 8d       	ldd	r24, Y+25	; 0x19
    185c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    185e:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    1862:	29 96       	adiw	r28, 0x09	; 9
    1864:	6c af       	std	Y+60, r22	; 0x3c
    1866:	7d af       	std	Y+61, r23	; 0x3d
    1868:	8e af       	std	Y+62, r24	; 0x3e
    186a:	9f af       	std	Y+63, r25	; 0x3f
    186c:	29 97       	sbiw	r28, 0x09	; 9
    186e:	27 96       	adiw	r28, 0x07	; 7
    1870:	8e ad       	ldd	r24, Y+62	; 0x3e
    1872:	9f ad       	ldd	r25, Y+63	; 0x3f
    1874:	27 97       	sbiw	r28, 0x07	; 7
    1876:	9c 8f       	std	Y+28, r25	; 0x1c
    1878:	8b 8f       	std	Y+27, r24	; 0x1b

0000187a <.L64>:
    187a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    187c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    187e:	98 a3       	std	Y+32, r25	; 0x20
    1880:	8f 8f       	std	Y+31, r24	; 0x1f

00001882 <.LBB48>:
    1882:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1884:	98 a1       	ldd	r25, Y+32	; 0x20

00001886 <.L1^B4>:
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	f1 f7       	brne	.-4      	; 0x1886 <.L1^B4>
    188a:	98 a3       	std	Y+32, r25	; 0x20
    188c:	8f 8f       	std	Y+31, r24	; 0x1f

0000188e <.Loc.248>:
	...

00001890 <.L69>:
            {
                _delay_ms(20);
                RechtsDetectie = 0;
    1890:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <RechtsDetectie+0x1>
    1894:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <RechtsDetectie>
    1898:	03 c0       	rjmp	.+6      	; 0x18a0 <.L47>

0000189a <.L60>:
            }
        }
    else{
        return 0;
    189a:	80 e0       	ldi	r24, 0x00	; 0
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	00 c0       	rjmp	.+0      	; 0x18a0 <.L47>

000018a0 <.L47>:
    }

}
    18a0:	c8 5b       	subi	r28, 0xB8	; 184
    18a2:	df 4f       	sbci	r29, 0xFF	; 255
    18a4:	0f b6       	in	r0, 0x3f	; 63
    18a6:	f8 94       	cli
    18a8:	de bf       	out	0x3e, r29	; 62
    18aa:	0f be       	out	0x3f, r0	; 63
    18ac:	cd bf       	out	0x3d, r28	; 61
    18ae:	df 91       	pop	r29
    18b0:	cf 91       	pop	r28
    18b2:	08 95       	ret

000018b4 <LightSwap>:

void LightSwap(void){
    18b4:	cf 93       	push	r28
    18b6:	df 93       	push	r29
    18b8:	cd b7       	in	r28, 0x3d	; 61
    18ba:	de b7       	in	r29, 0x3e	; 62

000018bc <.Loc.253>:
    PORTB ^= (1<<PB7);
    18bc:	85 e2       	ldi	r24, 0x25	; 37
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	fc 01       	movw	r30, r24
    18c2:	30 81       	ld	r19, Z
    18c4:	85 e2       	ldi	r24, 0x25	; 37
    18c6:	90 e0       	ldi	r25, 0x00	; 0

000018c8 <.Loc.254>:
    18c8:	20 e8       	ldi	r18, 0x80	; 128
    18ca:	23 27       	eor	r18, r19
    18cc:	fc 01       	movw	r30, r24
    18ce:	20 83       	st	Z, r18

000018d0 <.Loc.255>:
    PORTB ^= (1<<PB6);
    18d0:	85 e2       	ldi	r24, 0x25	; 37
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	fc 01       	movw	r30, r24
    18d6:	30 81       	ld	r19, Z
    18d8:	85 e2       	ldi	r24, 0x25	; 37
    18da:	90 e0       	ldi	r25, 0x00	; 0

000018dc <.Loc.256>:
    18dc:	20 e4       	ldi	r18, 0x40	; 64
    18de:	23 27       	eor	r18, r19
    18e0:	fc 01       	movw	r30, r24
    18e2:	20 83       	st	Z, r18

000018e4 <.Loc.257>:
}
    18e4:	00 00       	nop
    18e6:	df 91       	pop	r29
    18e8:	cf 91       	pop	r28
    18ea:	08 95       	ret

000018ec <GeluidSignaal>:
void GeluidSignaal(void){
    18ec:	cf 93       	push	r28
    18ee:	df 93       	push	r29
    18f0:	cd b7       	in	r28, 0x3d	; 61
    18f2:	de b7       	in	r29, 0x3e	; 62

000018f4 <.Loc.259>:
    PORTE &= ~(1<<PE5);
    18f4:	8e e2       	ldi	r24, 0x2E	; 46
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	fc 01       	movw	r30, r24
    18fa:	20 81       	ld	r18, Z

000018fc <.Loc.260>:
    18fc:	8e e2       	ldi	r24, 0x2E	; 46
    18fe:	90 e0       	ldi	r25, 0x00	; 0

00001900 <.Loc.261>:
    1900:	2f 7d       	andi	r18, 0xDF	; 223
    1902:	fc 01       	movw	r30, r24
    1904:	20 83       	st	Z, r18

00001906 <.Loc.262>:
    wait_ms(40);
    1906:	88 e2       	ldi	r24, 0x28	; 40
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

0000190e <.Loc.263>:
    PORTE |= (1<<PE5);
    190e:	8e e2       	ldi	r24, 0x2E	; 46
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	fc 01       	movw	r30, r24
    1914:	20 81       	ld	r18, Z
    1916:	8e e2       	ldi	r24, 0x2E	; 46
    1918:	90 e0       	ldi	r25, 0x00	; 0

0000191a <.Loc.264>:
    191a:	20 62       	ori	r18, 0x20	; 32
    191c:	fc 01       	movw	r30, r24
    191e:	20 83       	st	Z, r18

00001920 <.Loc.265>:
    wait_ms(80);
    1920:	80 e5       	ldi	r24, 0x50	; 80
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

00001928 <.Loc.266>:
    PORTE &= ~(1<<PE5);
    1928:	8e e2       	ldi	r24, 0x2E	; 46
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	fc 01       	movw	r30, r24
    192e:	20 81       	ld	r18, Z

00001930 <.Loc.267>:
    1930:	8e e2       	ldi	r24, 0x2E	; 46
    1932:	90 e0       	ldi	r25, 0x00	; 0

00001934 <.Loc.268>:
    1934:	2f 7d       	andi	r18, 0xDF	; 223
    1936:	fc 01       	movw	r30, r24
    1938:	20 83       	st	Z, r18

0000193a <.Loc.269>:
    wait_ms(40);
    193a:	88 e2       	ldi	r24, 0x28	; 40
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

00001942 <.Loc.270>:
    PORTE |= (1<<PE5);
    1942:	8e e2       	ldi	r24, 0x2E	; 46
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	fc 01       	movw	r30, r24
    1948:	20 81       	ld	r18, Z
    194a:	8e e2       	ldi	r24, 0x2E	; 46
    194c:	90 e0       	ldi	r25, 0x00	; 0

0000194e <.Loc.271>:
    194e:	20 62       	ori	r18, 0x20	; 32
    1950:	fc 01       	movw	r30, r24
    1952:	20 83       	st	Z, r18

00001954 <.Loc.272>:
    wait_ms(150);
    1954:	86 e9       	ldi	r24, 0x96	; 150
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

0000195c <.Loc.273>:
    PORTE &= ~(1<<PE5);
    195c:	8e e2       	ldi	r24, 0x2E	; 46
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	fc 01       	movw	r30, r24
    1962:	20 81       	ld	r18, Z

00001964 <.Loc.274>:
    1964:	8e e2       	ldi	r24, 0x2E	; 46
    1966:	90 e0       	ldi	r25, 0x00	; 0

00001968 <.Loc.275>:
    1968:	2f 7d       	andi	r18, 0xDF	; 223
    196a:	fc 01       	movw	r30, r24
    196c:	20 83       	st	Z, r18

0000196e <.Loc.276>:
    wait_ms(70);
    196e:	86 e4       	ldi	r24, 0x46	; 70
    1970:	90 e0       	ldi	r25, 0x00	; 0
    1972:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

00001976 <.Loc.277>:
    PORTE |= (1<<PE5);
    1976:	8e e2       	ldi	r24, 0x2E	; 46
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	fc 01       	movw	r30, r24
    197c:	20 81       	ld	r18, Z
    197e:	8e e2       	ldi	r24, 0x2E	; 46
    1980:	90 e0       	ldi	r25, 0x00	; 0

00001982 <.Loc.278>:
    1982:	20 62       	ori	r18, 0x20	; 32
    1984:	fc 01       	movw	r30, r24
    1986:	20 83       	st	Z, r18

00001988 <.Loc.279>:
}
    1988:	00 00       	nop
    198a:	df 91       	pop	r29
    198c:	cf 91       	pop	r28
    198e:	08 95       	ret

00001990 <TurnTo>:


void TurnTo(int TargetHeading){
    1990:	cf 93       	push	r28
    1992:	df 93       	push	r29
    1994:	cd b7       	in	r28, 0x3d	; 61
    1996:	de b7       	in	r29, 0x3e	; 62
    1998:	c8 54       	subi	r28, 0x48	; 72
    199a:	d1 09       	sbc	r29, r1
    199c:	0f b6       	in	r0, 0x3f	; 63
    199e:	f8 94       	cli
    19a0:	de bf       	out	0x3e, r29	; 62
    19a2:	0f be       	out	0x3f, r0	; 63
    19a4:	cd bf       	out	0x3d, r28	; 61
    19a6:	98 87       	std	Y+8, r25	; 0x08
    19a8:	8f 83       	std	Y+7, r24	; 0x07

000019aa <.Loc.281>:
    CurrentHeading = UpdateHeading(CurrentHeading);
    19aa:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    19ae:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    19b2:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    19b6:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    19ba:	29 87       	std	Y+9, r18	; 0x09
    19bc:	3a 87       	std	Y+10, r19	; 0x0a
    19be:	4b 87       	std	Y+11, r20	; 0x0b
    19c0:	5c 87       	std	Y+12, r21	; 0x0c
    19c2:	69 85       	ldd	r22, Y+9	; 0x09
    19c4:	7a 85       	ldd	r23, Y+10	; 0x0a
    19c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    19c8:	9c 85       	ldd	r25, Y+12	; 0x0c
    19ca:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    19ce:	6d 87       	std	Y+13, r22	; 0x0d
    19d0:	7e 87       	std	Y+14, r23	; 0x0e
    19d2:	8f 87       	std	Y+15, r24	; 0x0f
    19d4:	98 8b       	std	Y+16, r25	; 0x10

000019d6 <.Loc.282>:
    19d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    19d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    19da:	af 85       	ldd	r26, Y+15	; 0x0f
    19dc:	b8 89       	ldd	r27, Y+16	; 0x10
    19de:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    19e2:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    19e6:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    19ea:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

000019ee <.Loc.283>:
    int Difference = TargetHeading - CurrentHeading;
    19ee:	8f 81       	ldd	r24, Y+7	; 0x07
    19f0:	98 85       	ldd	r25, Y+8	; 0x08
    19f2:	9c 01       	movw	r18, r24
    19f4:	99 0f       	add	r25, r25
    19f6:	44 0b       	sbc	r20, r20
    19f8:	55 0b       	sbc	r21, r21
    19fa:	2d a7       	std	Y+45, r18	; 0x2d
    19fc:	3e a7       	std	Y+46, r19	; 0x2e
    19fe:	4f a7       	std	Y+47, r20	; 0x2f
    1a00:	58 ab       	std	Y+48, r21	; 0x30
    1a02:	6d a5       	ldd	r22, Y+45	; 0x2d
    1a04:	7e a5       	ldd	r23, Y+46	; 0x2e
    1a06:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a08:	98 a9       	ldd	r25, Y+48	; 0x30
    1a0a:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    1a0e:	69 8b       	std	Y+17, r22	; 0x11
    1a10:	7a 8b       	std	Y+18, r23	; 0x12
    1a12:	8b 8b       	std	Y+19, r24	; 0x13
    1a14:	9c 8b       	std	Y+20, r25	; 0x14
    1a16:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1a1a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1a1e:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1a22:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1a26:	9c 01       	movw	r18, r24
    1a28:	ad 01       	movw	r20, r26
    1a2a:	69 89       	ldd	r22, Y+17	; 0x11
    1a2c:	7a 89       	ldd	r23, Y+18	; 0x12
    1a2e:	8b 89       	ldd	r24, Y+19	; 0x13
    1a30:	9c 89       	ldd	r25, Y+20	; 0x14
    1a32:	0e 94 00 18 	call	0x3000	; 0x3000 <__subsf3>
    1a36:	69 ab       	std	Y+49, r22	; 0x31
    1a38:	7a ab       	std	Y+50, r23	; 0x32
    1a3a:	8b ab       	std	Y+51, r24	; 0x33
    1a3c:	9c ab       	std	Y+52, r25	; 0x34
    1a3e:	89 a9       	ldd	r24, Y+49	; 0x31
    1a40:	9a a9       	ldd	r25, Y+50	; 0x32
    1a42:	ab a9       	ldd	r26, Y+51	; 0x33
    1a44:	bc a9       	ldd	r27, Y+52	; 0x34
    1a46:	8d 8b       	std	Y+21, r24	; 0x15
    1a48:	9e 8b       	std	Y+22, r25	; 0x16
    1a4a:	af 8b       	std	Y+23, r26	; 0x17
    1a4c:	b8 8f       	std	Y+24, r27	; 0x18

00001a4e <.Loc.284>:
    1a4e:	6d 89       	ldd	r22, Y+21	; 0x15
    1a50:	7e 89       	ldd	r23, Y+22	; 0x16
    1a52:	8f 89       	ldd	r24, Y+23	; 0x17
    1a54:	98 8d       	ldd	r25, Y+24	; 0x18
    1a56:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    1a5a:	6d ab       	std	Y+53, r22	; 0x35
    1a5c:	7e ab       	std	Y+54, r23	; 0x36
    1a5e:	8f ab       	std	Y+55, r24	; 0x37
    1a60:	98 af       	std	Y+56, r25	; 0x38
    1a62:	ad a9       	ldd	r26, Y+53	; 0x35
    1a64:	be a9       	ldd	r27, Y+54	; 0x36
    1a66:	bc 83       	std	Y+4, r27	; 0x04
    1a68:	ab 83       	std	Y+3, r26	; 0x03

00001a6a <.Loc.285>:
    int turning = 1;
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	9a 83       	std	Y+2, r25	; 0x02
    1a70:	89 83       	std	Y+1, r24	; 0x01

00001a72 <.Loc.286>:
    int printgetal;
    while (turning ==1){
    1a72:	e0 c0       	rjmp	.+448    	; 0x1c34 <.L81>

00001a74 <.L89>:
        CurrentHeading = UpdateHeading(CurrentHeading);
    1a74:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1a78:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1a7c:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1a80:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1a84:	29 8f       	std	Y+25, r18	; 0x19
    1a86:	3a 8f       	std	Y+26, r19	; 0x1a
    1a88:	4b 8f       	std	Y+27, r20	; 0x1b
    1a8a:	5c 8f       	std	Y+28, r21	; 0x1c
    1a8c:	69 8d       	ldd	r22, Y+25	; 0x19
    1a8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a94:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1a98:	6d 8f       	std	Y+29, r22	; 0x1d
    1a9a:	7e 8f       	std	Y+30, r23	; 0x1e
    1a9c:	8f 8f       	std	Y+31, r24	; 0x1f
    1a9e:	98 a3       	std	Y+32, r25	; 0x20

00001aa0 <.Loc.288>:
    1aa0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1aa2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1aa4:	af 8d       	ldd	r26, Y+31	; 0x1f
    1aa6:	b8 a1       	ldd	r27, Y+32	; 0x20
    1aa8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1aac:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1ab0:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1ab4:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001ab8 <.Loc.289>:
        Difference = TargetHeading - CurrentHeading;
    1ab8:	8f 81       	ldd	r24, Y+7	; 0x07
    1aba:	98 85       	ldd	r25, Y+8	; 0x08
    1abc:	9c 01       	movw	r18, r24
    1abe:	99 0f       	add	r25, r25
    1ac0:	44 0b       	sbc	r20, r20
    1ac2:	55 0b       	sbc	r21, r21
    1ac4:	29 af       	std	Y+57, r18	; 0x39
    1ac6:	3a af       	std	Y+58, r19	; 0x3a
    1ac8:	4b af       	std	Y+59, r20	; 0x3b
    1aca:	5c af       	std	Y+60, r21	; 0x3c
    1acc:	69 ad       	ldd	r22, Y+57	; 0x39
    1ace:	7a ad       	ldd	r23, Y+58	; 0x3a
    1ad0:	8b ad       	ldd	r24, Y+59	; 0x3b
    1ad2:	9c ad       	ldd	r25, Y+60	; 0x3c
    1ad4:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    1ad8:	69 a3       	std	Y+33, r22	; 0x21
    1ada:	7a a3       	std	Y+34, r23	; 0x22
    1adc:	8b a3       	std	Y+35, r24	; 0x23
    1ade:	9c a3       	std	Y+36, r25	; 0x24
    1ae0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1ae4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1ae8:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1aec:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1af0:	9c 01       	movw	r18, r24
    1af2:	ad 01       	movw	r20, r26
    1af4:	69 a1       	ldd	r22, Y+33	; 0x21
    1af6:	7a a1       	ldd	r23, Y+34	; 0x22
    1af8:	8b a1       	ldd	r24, Y+35	; 0x23
    1afa:	9c a1       	ldd	r25, Y+36	; 0x24
    1afc:	0e 94 00 18 	call	0x3000	; 0x3000 <__subsf3>
    1b00:	21 96       	adiw	r28, 0x01	; 1
    1b02:	6c af       	std	Y+60, r22	; 0x3c
    1b04:	7d af       	std	Y+61, r23	; 0x3d
    1b06:	8e af       	std	Y+62, r24	; 0x3e
    1b08:	9f af       	std	Y+63, r25	; 0x3f
    1b0a:	21 97       	sbiw	r28, 0x01	; 1
    1b0c:	21 96       	adiw	r28, 0x01	; 1
    1b0e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b10:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b12:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b14:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b16:	21 97       	sbiw	r28, 0x01	; 1
    1b18:	8d a3       	std	Y+37, r24	; 0x25
    1b1a:	9e a3       	std	Y+38, r25	; 0x26
    1b1c:	af a3       	std	Y+39, r26	; 0x27
    1b1e:	b8 a7       	std	Y+40, r27	; 0x28

00001b20 <.Loc.290>:
    1b20:	6d a1       	ldd	r22, Y+37	; 0x25
    1b22:	7e a1       	ldd	r23, Y+38	; 0x26
    1b24:	8f a1       	ldd	r24, Y+39	; 0x27
    1b26:	98 a5       	ldd	r25, Y+40	; 0x28
    1b28:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    1b2c:	25 96       	adiw	r28, 0x05	; 5
    1b2e:	6c af       	std	Y+60, r22	; 0x3c
    1b30:	7d af       	std	Y+61, r23	; 0x3d
    1b32:	8e af       	std	Y+62, r24	; 0x3e
    1b34:	9f af       	std	Y+63, r25	; 0x3f
    1b36:	25 97       	sbiw	r28, 0x05	; 5
    1b38:	23 96       	adiw	r28, 0x03	; 3
    1b3a:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b3c:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b3e:	23 97       	sbiw	r28, 0x03	; 3
    1b40:	bc 83       	std	Y+4, r27	; 0x04
    1b42:	ab 83       	std	Y+3, r26	; 0x03

00001b44 <.Loc.291>:
        printgetal = (int)CurrentHeading;
    1b44:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1b48:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1b4c:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1b50:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1b54:	29 a7       	std	Y+41, r18	; 0x29
    1b56:	3a a7       	std	Y+42, r19	; 0x2a
    1b58:	4b a7       	std	Y+43, r20	; 0x2b
    1b5a:	5c a7       	std	Y+44, r21	; 0x2c

00001b5c <.Loc.292>:
    1b5c:	69 a5       	ldd	r22, Y+41	; 0x29
    1b5e:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b60:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b62:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b64:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    1b68:	29 96       	adiw	r28, 0x09	; 9
    1b6a:	6c af       	std	Y+60, r22	; 0x3c
    1b6c:	7d af       	std	Y+61, r23	; 0x3d
    1b6e:	8e af       	std	Y+62, r24	; 0x3e
    1b70:	9f af       	std	Y+63, r25	; 0x3f
    1b72:	29 97       	sbiw	r28, 0x09	; 9
    1b74:	27 96       	adiw	r28, 0x07	; 7
    1b76:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b78:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b7a:	27 97       	sbiw	r28, 0x07	; 7
    1b7c:	5e 83       	std	Y+6, r21	; 0x06
    1b7e:	4d 83       	std	Y+5, r20	; 0x05

00001b80 <.Loc.293>:
        display_getal(printgetal);
    1b80:	8d 81       	ldd	r24, Y+5	; 0x05
    1b82:	9e 81       	ldd	r25, Y+6	; 0x06
    1b84:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00001b88 <.Loc.294>:
        if(Difference > 0){
    1b88:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b8c:	00 97       	sbiw	r24, 0x00	; 0
    1b8e:	39 f0       	breq	.+14     	; 0x1b9e <.L82>
    1b90:	34 f0       	brlt	.+12     	; 0x1b9e <.L82>

00001b92 <.Loc.295>:
            Motor_1_set_power(25);
    1b92:	89 e1       	ldi	r24, 0x19	; 25
    1b94:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001b98 <.Loc.296>:
            Motor_2_set_power(-25);
    1b98:	87 ee       	ldi	r24, 0xE7	; 231
    1b9a:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001b9e <.L82>:
        }
        if(Difference > 10){
    1b9e:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ba2:	8a 30       	cpi	r24, 0x0A	; 10
    1ba4:	91 05       	cpc	r25, r1
    1ba6:	39 f0       	breq	.+14     	; 0x1bb6 <.L83>
    1ba8:	34 f0       	brlt	.+12     	; 0x1bb6 <.L83>

00001baa <.Loc.298>:
            Motor_1_set_power(35);
    1baa:	83 e2       	ldi	r24, 0x23	; 35
    1bac:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001bb0 <.Loc.299>:
            Motor_2_set_power(-35);
    1bb0:	8d ed       	ldi	r24, 0xDD	; 221
    1bb2:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001bb6 <.L83>:
        }
        if(Difference > 20){
    1bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    1bb8:	9c 81       	ldd	r25, Y+4	; 0x04
    1bba:	84 31       	cpi	r24, 0x14	; 20
    1bbc:	91 05       	cpc	r25, r1
    1bbe:	39 f0       	breq	.+14     	; 0x1bce <.L84>
    1bc0:	34 f0       	brlt	.+12     	; 0x1bce <.L84>

00001bc2 <.Loc.301>:
            Motor_1_set_power(45);
    1bc2:	8d e2       	ldi	r24, 0x2D	; 45
    1bc4:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001bc8 <.Loc.302>:
            Motor_2_set_power(-45);
    1bc8:	83 ed       	ldi	r24, 0xD3	; 211
    1bca:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001bce <.L84>:
        }
        if(Difference < 0){
    1bce:	8b 81       	ldd	r24, Y+3	; 0x03
    1bd0:	9c 81       	ldd	r25, Y+4	; 0x04
    1bd2:	99 23       	and	r25, r25
    1bd4:	34 f4       	brge	.+12     	; 0x1be2 <.L85>

00001bd6 <.Loc.304>:
            Motor_1_set_power(-25);
    1bd6:	87 ee       	ldi	r24, 0xE7	; 231
    1bd8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001bdc <.Loc.305>:
            Motor_2_set_power(25);
    1bdc:	89 e1       	ldi	r24, 0x19	; 25
    1bde:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001be2 <.L85>:
        }
        if(Difference < -10){
    1be2:	8b 81       	ldd	r24, Y+3	; 0x03
    1be4:	9c 81       	ldd	r25, Y+4	; 0x04
    1be6:	86 3f       	cpi	r24, 0xF6	; 246
    1be8:	5f ef       	ldi	r21, 0xFF	; 255
    1bea:	95 07       	cpc	r25, r21
    1bec:	34 f4       	brge	.+12     	; 0x1bfa <.L86>

00001bee <.Loc.307>:
            Motor_1_set_power(-35);
    1bee:	8d ed       	ldi	r24, 0xDD	; 221
    1bf0:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001bf4 <.Loc.308>:
            Motor_2_set_power(35);
    1bf4:	83 e2       	ldi	r24, 0x23	; 35
    1bf6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001bfa <.L86>:
        }
        if(Difference < -20){
    1bfa:	8b 81       	ldd	r24, Y+3	; 0x03
    1bfc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bfe:	8c 3e       	cpi	r24, 0xEC	; 236
    1c00:	af ef       	ldi	r26, 0xFF	; 255
    1c02:	9a 07       	cpc	r25, r26
    1c04:	34 f4       	brge	.+12     	; 0x1c12 <.L87>

00001c06 <.Loc.310>:
            Motor_1_set_power(-45);
    1c06:	83 ed       	ldi	r24, 0xD3	; 211
    1c08:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001c0c <.Loc.311>:
            Motor_2_set_power(45);
    1c0c:	8d e2       	ldi	r24, 0x2D	; 45
    1c0e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001c12 <.L87>:
        }
        if ( -1 < Difference && Difference < 1){
    1c12:	8b 81       	ldd	r24, Y+3	; 0x03
    1c14:	9c 81       	ldd	r25, Y+4	; 0x04
    1c16:	99 23       	and	r25, r25
    1c18:	6c f0       	brlt	.+26     	; 0x1c34 <.L81>

00001c1a <.Loc.313>:
    1c1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c1c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c1e:	00 97       	sbiw	r24, 0x00	; 0
    1c20:	09 f0       	breq	.+2      	; 0x1c24 <.Loc.314>

00001c22 <L0^A>:
    1c22:	44 f4       	brge	.+16     	; 0x1c34 <.L81>

00001c24 <.Loc.314>:
            Motor_1_set_power(0);
    1c24:	80 e0       	ldi	r24, 0x00	; 0
    1c26:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001c2a <.Loc.315>:
            Motor_2_set_power(0);
    1c2a:	80 e0       	ldi	r24, 0x00	; 0
    1c2c:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001c30 <.Loc.316>:
            turning = 0;
    1c30:	1a 82       	std	Y+2, r1	; 0x02
    1c32:	19 82       	std	Y+1, r1	; 0x01

00001c34 <.L81>:
    while (turning ==1){
    1c34:	89 81       	ldd	r24, Y+1	; 0x01
    1c36:	9a 81       	ldd	r25, Y+2	; 0x02
    1c38:	81 30       	cpi	r24, 0x01	; 1
    1c3a:	91 05       	cpc	r25, r1
    1c3c:	09 f4       	brne	.+2      	; 0x1c40 <.Loc.318>

00001c3e <L0^A>:
    1c3e:	1a cf       	rjmp	.-460    	; 0x1a74 <.L89>

00001c40 <.Loc.318>:
        }
    }

}
    1c40:	00 00       	nop
    1c42:	00 00       	nop
    1c44:	c8 5b       	subi	r28, 0xB8	; 184
    1c46:	df 4f       	sbci	r29, 0xFF	; 255
    1c48:	0f b6       	in	r0, 0x3f	; 63
    1c4a:	f8 94       	cli
    1c4c:	de bf       	out	0x3e, r29	; 62
    1c4e:	0f be       	out	0x3f, r0	; 63
    1c50:	cd bf       	out	0x3d, r28	; 61
    1c52:	df 91       	pop	r29
    1c54:	cf 91       	pop	r28
    1c56:	08 95       	ret

00001c58 <Drive>:
void Drive(int RijAfstand,int TargetHeading){
    1c58:	cf 93       	push	r28
    1c5a:	df 93       	push	r29
    1c5c:	cd b7       	in	r28, 0x3d	; 61
    1c5e:	de b7       	in	r29, 0x3e	; 62
    1c60:	a4 97       	sbiw	r28, 0x24	; 36
    1c62:	0f b6       	in	r0, 0x3f	; 63
    1c64:	f8 94       	cli
    1c66:	de bf       	out	0x3e, r29	; 62
    1c68:	0f be       	out	0x3f, r0	; 63
    1c6a:	cd bf       	out	0x3d, r28	; 61
    1c6c:	9e 83       	std	Y+6, r25	; 0x06
    1c6e:	8d 83       	std	Y+5, r24	; 0x05
    1c70:	78 87       	std	Y+8, r23	; 0x08
    1c72:	6f 83       	std	Y+7, r22	; 0x07

00001c74 <.LBB51>:
    int Difference;
    for(int i = 0; i<RijAfstand; i++){
    1c74:	1a 82       	std	Y+2, r1	; 0x02
    1c76:	19 82       	std	Y+1, r1	; 0x01

00001c78 <.Loc.321>:
    1c78:	c0 c0       	rjmp	.+384    	; 0x1dfa <.L91>

00001c7a <.L99>:
        CurrentHeading = UpdateHeading(CurrentHeading);
    1c7a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1c7e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1c82:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1c86:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1c8a:	29 87       	std	Y+9, r18	; 0x09
    1c8c:	3a 87       	std	Y+10, r19	; 0x0a
    1c8e:	4b 87       	std	Y+11, r20	; 0x0b
    1c90:	5c 87       	std	Y+12, r21	; 0x0c
    1c92:	69 85       	ldd	r22, Y+9	; 0x09
    1c94:	7a 85       	ldd	r23, Y+10	; 0x0a
    1c96:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c98:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c9a:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1c9e:	6d 87       	std	Y+13, r22	; 0x0d
    1ca0:	7e 87       	std	Y+14, r23	; 0x0e
    1ca2:	8f 87       	std	Y+15, r24	; 0x0f
    1ca4:	98 8b       	std	Y+16, r25	; 0x10

00001ca6 <.Loc.323>:
    1ca6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ca8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1caa:	af 85       	ldd	r26, Y+15	; 0x0f
    1cac:	b8 89       	ldd	r27, Y+16	; 0x10
    1cae:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1cb2:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1cb6:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1cba:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001cbe <.Loc.324>:
        Difference = TargetHeading - CurrentHeading;
    1cbe:	8f 81       	ldd	r24, Y+7	; 0x07
    1cc0:	98 85       	ldd	r25, Y+8	; 0x08
    1cc2:	9c 01       	movw	r18, r24
    1cc4:	99 0f       	add	r25, r25
    1cc6:	44 0b       	sbc	r20, r20
    1cc8:	55 0b       	sbc	r21, r21
    1cca:	29 8f       	std	Y+25, r18	; 0x19
    1ccc:	3a 8f       	std	Y+26, r19	; 0x1a
    1cce:	4b 8f       	std	Y+27, r20	; 0x1b
    1cd0:	5c 8f       	std	Y+28, r21	; 0x1c
    1cd2:	69 8d       	ldd	r22, Y+25	; 0x19
    1cd4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cd6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cd8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cda:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    1cde:	69 8b       	std	Y+17, r22	; 0x11
    1ce0:	7a 8b       	std	Y+18, r23	; 0x12
    1ce2:	8b 8b       	std	Y+19, r24	; 0x13
    1ce4:	9c 8b       	std	Y+20, r25	; 0x14
    1ce6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1cea:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1cee:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1cf2:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1cf6:	9c 01       	movw	r18, r24
    1cf8:	ad 01       	movw	r20, r26
    1cfa:	69 89       	ldd	r22, Y+17	; 0x11
    1cfc:	7a 89       	ldd	r23, Y+18	; 0x12
    1cfe:	8b 89       	ldd	r24, Y+19	; 0x13
    1d00:	9c 89       	ldd	r25, Y+20	; 0x14
    1d02:	0e 94 00 18 	call	0x3000	; 0x3000 <__subsf3>
    1d06:	6d 8f       	std	Y+29, r22	; 0x1d
    1d08:	7e 8f       	std	Y+30, r23	; 0x1e
    1d0a:	8f 8f       	std	Y+31, r24	; 0x1f
    1d0c:	98 a3       	std	Y+32, r25	; 0x20
    1d0e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d10:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d12:	af 8d       	ldd	r26, Y+31	; 0x1f
    1d14:	b8 a1       	ldd	r27, Y+32	; 0x20
    1d16:	8d 8b       	std	Y+21, r24	; 0x15
    1d18:	9e 8b       	std	Y+22, r25	; 0x16
    1d1a:	af 8b       	std	Y+23, r26	; 0x17
    1d1c:	b8 8f       	std	Y+24, r27	; 0x18

00001d1e <.Loc.325>:
    1d1e:	6d 89       	ldd	r22, Y+21	; 0x15
    1d20:	7e 89       	ldd	r23, Y+22	; 0x16
    1d22:	8f 89       	ldd	r24, Y+23	; 0x17
    1d24:	98 8d       	ldd	r25, Y+24	; 0x18
    1d26:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    1d2a:	69 a3       	std	Y+33, r22	; 0x21
    1d2c:	7a a3       	std	Y+34, r23	; 0x22
    1d2e:	8b a3       	std	Y+35, r24	; 0x23
    1d30:	9c a3       	std	Y+36, r25	; 0x24
    1d32:	a9 a1       	ldd	r26, Y+33	; 0x21
    1d34:	ba a1       	ldd	r27, Y+34	; 0x22
    1d36:	bc 83       	std	Y+4, r27	; 0x04
    1d38:	ab 83       	std	Y+3, r26	; 0x03

00001d3a <.Loc.326>:
        display_getal(i);
    1d3a:	89 81       	ldd	r24, Y+1	; 0x01
    1d3c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d3e:	0e 94 4f 10 	call	0x209e	; 0x209e <display_getal>

00001d42 <.Loc.327>:
        if(Difference > 1){
    1d42:	8b 81       	ldd	r24, Y+3	; 0x03
    1d44:	9c 81       	ldd	r25, Y+4	; 0x04
    1d46:	81 30       	cpi	r24, 0x01	; 1
    1d48:	91 05       	cpc	r25, r1
    1d4a:	39 f0       	breq	.+14     	; 0x1d5a <.L92>
    1d4c:	34 f0       	brlt	.+12     	; 0x1d5a <.L92>

00001d4e <.Loc.328>:
            //stuur naar links
            Motor_1_set_power(50);
    1d4e:	82 e3       	ldi	r24, 0x32	; 50
    1d50:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d54 <.Loc.329>:
            Motor_2_set_power(45);
    1d54:	8d e2       	ldi	r24, 0x2D	; 45
    1d56:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001d5a <.L92>:
        }
        if(Difference > 3){
    1d5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d5c:	9c 81       	ldd	r25, Y+4	; 0x04
    1d5e:	83 30       	cpi	r24, 0x03	; 3
    1d60:	91 05       	cpc	r25, r1
    1d62:	39 f0       	breq	.+14     	; 0x1d72 <.L93>
    1d64:	34 f0       	brlt	.+12     	; 0x1d72 <.L93>

00001d66 <.Loc.331>:
            //stuur naar links
            Motor_1_set_power(50);
    1d66:	82 e3       	ldi	r24, 0x32	; 50
    1d68:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d6c <.Loc.332>:
            Motor_2_set_power(40);
    1d6c:	88 e2       	ldi	r24, 0x28	; 40
    1d6e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001d72 <.L93>:
        }
        if(Difference > 8){
    1d72:	8b 81       	ldd	r24, Y+3	; 0x03
    1d74:	9c 81       	ldd	r25, Y+4	; 0x04
    1d76:	88 30       	cpi	r24, 0x08	; 8
    1d78:	91 05       	cpc	r25, r1
    1d7a:	39 f0       	breq	.+14     	; 0x1d8a <.L94>
    1d7c:	34 f0       	brlt	.+12     	; 0x1d8a <.L94>

00001d7e <.Loc.334>:
            //stuur naar links
            Motor_1_set_power(50);
    1d7e:	82 e3       	ldi	r24, 0x32	; 50
    1d80:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d84 <.Loc.335>:
            Motor_2_set_power(20);
    1d84:	84 e1       	ldi	r24, 0x14	; 20
    1d86:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001d8a <.L94>:
        }
        if(Difference < -1){
    1d8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d8c:	9c 81       	ldd	r25, Y+4	; 0x04
    1d8e:	8f 3f       	cpi	r24, 0xFF	; 255
    1d90:	bf ef       	ldi	r27, 0xFF	; 255
    1d92:	9b 07       	cpc	r25, r27
    1d94:	34 f4       	brge	.+12     	; 0x1da2 <.L95>

00001d96 <.Loc.337>:
            //stuur naar rechts
            Motor_1_set_power(45);
    1d96:	8d e2       	ldi	r24, 0x2D	; 45
    1d98:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d9c <.Loc.338>:
            Motor_2_set_power(50);
    1d9c:	82 e3       	ldi	r24, 0x32	; 50
    1d9e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001da2 <.L95>:
        }
        if(Difference < -3){
    1da2:	8b 81       	ldd	r24, Y+3	; 0x03
    1da4:	9c 81       	ldd	r25, Y+4	; 0x04
    1da6:	8d 3f       	cpi	r24, 0xFD	; 253
    1da8:	2f ef       	ldi	r18, 0xFF	; 255
    1daa:	92 07       	cpc	r25, r18
    1dac:	34 f4       	brge	.+12     	; 0x1dba <.L96>

00001dae <.Loc.340>:
            //stuur naar rechts
            Motor_1_set_power(40);
    1dae:	88 e2       	ldi	r24, 0x28	; 40
    1db0:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001db4 <.Loc.341>:
            Motor_2_set_power(50);
    1db4:	82 e3       	ldi	r24, 0x32	; 50
    1db6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001dba <.L96>:
        }
        if(Difference < -8){
    1dba:	8b 81       	ldd	r24, Y+3	; 0x03
    1dbc:	9c 81       	ldd	r25, Y+4	; 0x04
    1dbe:	88 3f       	cpi	r24, 0xF8	; 248
    1dc0:	3f ef       	ldi	r19, 0xFF	; 255
    1dc2:	93 07       	cpc	r25, r19
    1dc4:	34 f4       	brge	.+12     	; 0x1dd2 <.L97>

00001dc6 <.Loc.343>:
            //stuur naar rechts
            Motor_1_set_power(20);
    1dc6:	84 e1       	ldi	r24, 0x14	; 20
    1dc8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001dcc <.Loc.344>:
            Motor_2_set_power(50);
    1dcc:	82 e3       	ldi	r24, 0x32	; 50
    1dce:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001dd2 <.L97>:
        }
        if ( -1 < Difference && Difference < 1){
    1dd2:	8b 81       	ldd	r24, Y+3	; 0x03
    1dd4:	9c 81       	ldd	r25, Y+4	; 0x04
    1dd6:	99 23       	and	r25, r25
    1dd8:	5c f0       	brlt	.+22     	; 0x1df0 <.L98>

00001dda <.Loc.346>:
    1dda:	8b 81       	ldd	r24, Y+3	; 0x03
    1ddc:	9c 81       	ldd	r25, Y+4	; 0x04
    1dde:	00 97       	sbiw	r24, 0x00	; 0
    1de0:	09 f0       	breq	.+2      	; 0x1de4 <.Loc.347>

00001de2 <L0^A>:
    1de2:	34 f4       	brge	.+12     	; 0x1df0 <.L98>

00001de4 <.Loc.347>:
            Motor_1_set_power(50);
    1de4:	82 e3       	ldi	r24, 0x32	; 50
    1de6:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001dea <.Loc.348>:
            Motor_2_set_power(50);
    1dea:	82 e3       	ldi	r24, 0x32	; 50
    1dec:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001df0 <.L98>:
    for(int i = 0; i<RijAfstand; i++){
    1df0:	89 81       	ldd	r24, Y+1	; 0x01
    1df2:	9a 81       	ldd	r25, Y+2	; 0x02
    1df4:	01 96       	adiw	r24, 0x01	; 1
    1df6:	9a 83       	std	Y+2, r25	; 0x02
    1df8:	89 83       	std	Y+1, r24	; 0x01

00001dfa <.L91>:
    1dfa:	29 81       	ldd	r18, Y+1	; 0x01
    1dfc:	3a 81       	ldd	r19, Y+2	; 0x02
    1dfe:	8d 81       	ldd	r24, Y+5	; 0x05
    1e00:	9e 81       	ldd	r25, Y+6	; 0x06
    1e02:	28 17       	cp	r18, r24
    1e04:	39 07       	cpc	r19, r25
    1e06:	0c f4       	brge	.+2      	; 0x1e0a <.LBE51>

00001e08 <L0^A>:
    1e08:	38 cf       	rjmp	.-400    	; 0x1c7a <.L99>

00001e0a <.LBE51>:
        }
    }


}
    1e0a:	00 00       	nop
    1e0c:	00 00       	nop
    1e0e:	a4 96       	adiw	r28, 0x24	; 36
    1e10:	0f b6       	in	r0, 0x3f	; 63
    1e12:	f8 94       	cli
    1e14:	de bf       	out	0x3e, r29	; 62
    1e16:	0f be       	out	0x3f, r0	; 63
    1e18:	cd bf       	out	0x3d, r28	; 61
    1e1a:	df 91       	pop	r29
    1e1c:	cf 91       	pop	r28
    1e1e:	08 95       	ret

00001e20 <BochtMaken>:
void BochtMaken(void){
    1e20:	cf 93       	push	r28
    1e22:	df 93       	push	r29
    1e24:	cd b7       	in	r28, 0x3d	; 61
    1e26:	de b7       	in	r29, 0x3e	; 62

00001e28 <.Loc.353>:
    wait_ms(500);
    1e28:	84 ef       	ldi	r24, 0xF4	; 244
    1e2a:	91 e0       	ldi	r25, 0x01	; 1
    1e2c:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <wait_ms>

00001e30 <.Loc.354>:
    Drive(100, 360);
    1e30:	68 e6       	ldi	r22, 0x68	; 104
    1e32:	71 e0       	ldi	r23, 0x01	; 1
    1e34:	84 e6       	ldi	r24, 0x64	; 100
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <Drive>

00001e3c <.Loc.355>:
    TurnTo(450);
    1e3c:	82 ec       	ldi	r24, 0xC2	; 194
    1e3e:	91 e0       	ldi	r25, 0x01	; 1
    1e40:	0e 94 c8 0c 	call	0x1990	; 0x1990 <TurnTo>

00001e44 <.Loc.356>:
    Drive(180, 450);
    1e44:	62 ec       	ldi	r22, 0xC2	; 194
    1e46:	71 e0       	ldi	r23, 0x01	; 1
    1e48:	84 eb       	ldi	r24, 0xB4	; 180
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <Drive>

00001e50 <.Loc.357>:
    TurnTo(540);
    1e50:	8c e1       	ldi	r24, 0x1C	; 28
    1e52:	92 e0       	ldi	r25, 0x02	; 2
    1e54:	0e 94 c8 0c 	call	0x1990	; 0x1990 <TurnTo>

00001e58 <.Loc.358>:
    Drive(70, 540);
    1e58:	6c e1       	ldi	r22, 0x1C	; 28
    1e5a:	72 e0       	ldi	r23, 0x02	; 2
    1e5c:	86 e4       	ldi	r24, 0x46	; 70
    1e5e:	90 e0       	ldi	r25, 0x00	; 0
    1e60:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <Drive>

00001e64 <.Loc.359>:
}
    1e64:	00 00       	nop
    1e66:	df 91       	pop	r29
    1e68:	cf 91       	pop	r28
    1e6a:	08 95       	ret

00001e6c <initTimer>:

void initTimer(void)
{
    1e6c:	cf 93       	push	r28
    1e6e:	df 93       	push	r29
    1e70:	cd b7       	in	r28, 0x3d	; 61
    1e72:	de b7       	in	r29, 0x3e	; 62

00001e74 <.Loc.361>:
    TCCR4A = 0;
    1e74:	80 ea       	ldi	r24, 0xA0	; 160
    1e76:	90 e0       	ldi	r25, 0x00	; 0

00001e78 <.Loc.362>:
    1e78:	fc 01       	movw	r30, r24
    1e7a:	10 82       	st	Z, r1

00001e7c <.Loc.363>:
    TCCR4B |=  (1<<CS41);
    1e7c:	81 ea       	ldi	r24, 0xA1	; 161
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	fc 01       	movw	r30, r24
    1e82:	20 81       	ld	r18, Z
    1e84:	81 ea       	ldi	r24, 0xA1	; 161
    1e86:	90 e0       	ldi	r25, 0x00	; 0

00001e88 <.Loc.364>:
    1e88:	22 60       	ori	r18, 0x02	; 2
    1e8a:	fc 01       	movw	r30, r24
    1e8c:	20 83       	st	Z, r18

00001e8e <.Loc.365>:
}
    1e8e:	00 00       	nop
    1e90:	df 91       	pop	r29
    1e92:	cf 91       	pop	r28
    1e94:	08 95       	ret

00001e96 <wait_ms>:

void wait_ms(int ms){
    1e96:	cf 93       	push	r28
    1e98:	df 93       	push	r29
    1e9a:	00 d0       	rcall	.+0      	; 0x1e9c <L0^A>

00001e9c <L0^A>:
    1e9c:	00 d0       	rcall	.+0      	; 0x1e9e <L0^A>

00001e9e <L0^A>:
    1e9e:	cd b7       	in	r28, 0x3d	; 61
    1ea0:	de b7       	in	r29, 0x3e	; 62
    1ea2:	9e 83       	std	Y+6, r25	; 0x06
    1ea4:	8d 83       	std	Y+5, r24	; 0x05

00001ea6 <.Loc.367>:
    int WachtTijd = ms/33;
    1ea6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ea8:	9e 81       	ldd	r25, Y+6	; 0x06
    1eaa:	21 e2       	ldi	r18, 0x21	; 33
    1eac:	30 e0       	ldi	r19, 0x00	; 0
    1eae:	b9 01       	movw	r22, r18
    1eb0:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__divmodhi4>
    1eb4:	cb 01       	movw	r24, r22
    1eb6:	9c 83       	std	Y+4, r25	; 0x04
    1eb8:	8b 83       	std	Y+3, r24	; 0x03

00001eba <.Loc.368>:
    int teller =0;
    1eba:	1a 82       	std	Y+2, r1	; 0x02
    1ebc:	19 82       	std	Y+1, r1	; 0x01

00001ebe <.Loc.369>:
    while(teller < WachtTijd)
    1ebe:	14 c0       	rjmp	.+40     	; 0x1ee8 <.L104>

00001ec0 <.L105>:
    {
        if (TIFR4 & (1<<TOV4))
    1ec0:	89 e3       	ldi	r24, 0x39	; 57
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	fc 01       	movw	r30, r24
    1ec6:	80 81       	ld	r24, Z

00001ec8 <.Loc.371>:
    1ec8:	88 2f       	mov	r24, r24
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	81 70       	andi	r24, 0x01	; 1
    1ece:	99 27       	eor	r25, r25

00001ed0 <.Loc.372>:
    1ed0:	00 97       	sbiw	r24, 0x00	; 0
    1ed2:	51 f0       	breq	.+20     	; 0x1ee8 <.L104>

00001ed4 <.Loc.373>:
        {
            TIFR4 = (1<<TOV4);
    1ed4:	89 e3       	ldi	r24, 0x39	; 57
    1ed6:	90 e0       	ldi	r25, 0x00	; 0

00001ed8 <.Loc.374>:
    1ed8:	21 e0       	ldi	r18, 0x01	; 1
    1eda:	fc 01       	movw	r30, r24
    1edc:	20 83       	st	Z, r18

00001ede <.Loc.375>:
            teller++;
    1ede:	89 81       	ldd	r24, Y+1	; 0x01
    1ee0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ee2:	01 96       	adiw	r24, 0x01	; 1
    1ee4:	9a 83       	std	Y+2, r25	; 0x02
    1ee6:	89 83       	std	Y+1, r24	; 0x01

00001ee8 <.L104>:
    while(teller < WachtTijd)
    1ee8:	29 81       	ldd	r18, Y+1	; 0x01
    1eea:	3a 81       	ldd	r19, Y+2	; 0x02
    1eec:	8b 81       	ldd	r24, Y+3	; 0x03
    1eee:	9c 81       	ldd	r25, Y+4	; 0x04
    1ef0:	28 17       	cp	r18, r24
    1ef2:	39 07       	cpc	r19, r25
    1ef4:	2c f3       	brlt	.-54     	; 0x1ec0 <.L105>

00001ef6 <.Loc.377>:
        }
    }
}
    1ef6:	00 00       	nop
    1ef8:	00 00       	nop
    1efa:	0f 90       	pop	r0
    1efc:	0f 90       	pop	r0
    1efe:	0f 90       	pop	r0
    1f00:	0f 90       	pop	r0
    1f02:	0f 90       	pop	r0
    1f04:	0f 90       	pop	r0
    1f06:	df 91       	pop	r29
    1f08:	cf 91       	pop	r28
    1f0a:	08 95       	ret

00001f0c <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    1f0c:	cf 93       	push	r28
    1f0e:	df 93       	push	r29
    1f10:	cd b7       	in	r28, 0x3d	; 61
    1f12:	de b7       	in	r29, 0x3e	; 62

00001f14 <.Loc.379>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	91 e0       	ldi	r25, 0x01	; 1
    1f18:	fc 01       	movw	r30, r24
    1f1a:	20 81       	ld	r18, Z
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	91 e0       	ldi	r25, 0x01	; 1

00001f20 <.Loc.380>:
    1f20:	20 62       	ori	r18, 0x20	; 32
    1f22:	fc 01       	movw	r30, r24
    1f24:	20 83       	st	Z, r18

00001f26 <.Loc.381>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    1f26:	81 e0       	ldi	r24, 0x01	; 1
    1f28:	91 e0       	ldi	r25, 0x01	; 1
    1f2a:	fc 01       	movw	r30, r24
    1f2c:	20 81       	ld	r18, Z
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	91 e0       	ldi	r25, 0x01	; 1

00001f32 <.Loc.382>:
    1f32:	20 61       	ori	r18, 0x10	; 16
    1f34:	fc 01       	movw	r30, r24
    1f36:	20 83       	st	Z, r18

00001f38 <.Loc.383>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    1f38:	83 e3       	ldi	r24, 0x33	; 51
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	20 81       	ld	r18, Z
    1f40:	83 e3       	ldi	r24, 0x33	; 51
    1f42:	90 e0       	ldi	r25, 0x00	; 0

00001f44 <.Loc.384>:
    1f44:	20 62       	ori	r18, 0x20	; 32
    1f46:	fc 01       	movw	r30, r24
    1f48:	20 83       	st	Z, r18

00001f4a <.Loc.385>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1f4a:	82 e0       	ldi	r24, 0x02	; 2
    1f4c:	91 e0       	ldi	r25, 0x01	; 1
    1f4e:	fc 01       	movw	r30, r24
    1f50:	20 81       	ld	r18, Z

00001f52 <.Loc.386>:
    1f52:	82 e0       	ldi	r24, 0x02	; 2
    1f54:	91 e0       	ldi	r25, 0x01	; 1

00001f56 <.Loc.387>:
    1f56:	2f 7e       	andi	r18, 0xEF	; 239
    1f58:	fc 01       	movw	r30, r24
    1f5a:	20 83       	st	Z, r18

00001f5c <.Loc.388>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1f5c:	84 e3       	ldi	r24, 0x34	; 52
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	fc 01       	movw	r30, r24
    1f62:	20 81       	ld	r18, Z

00001f64 <.Loc.389>:
    1f64:	84 e3       	ldi	r24, 0x34	; 52
    1f66:	90 e0       	ldi	r25, 0x00	; 0

00001f68 <.Loc.390>:
    1f68:	2f 7d       	andi	r18, 0xDF	; 223
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	20 83       	st	Z, r18

00001f6e <.Loc.391>:
}
    1f6e:	00 00       	nop
    1f70:	df 91       	pop	r29
    1f72:	cf 91       	pop	r28
    1f74:	08 95       	ret

00001f76 <send_data>:

void send_data(char data)
{
    1f76:	cf 93       	push	r28
    1f78:	df 93       	push	r29
    1f7a:	00 d0       	rcall	.+0      	; 0x1f7c <L0^A>

00001f7c <L0^A>:
    1f7c:	0f 92       	push	r0
    1f7e:	0f 92       	push	r0
    1f80:	cd b7       	in	r28, 0x3d	; 61
    1f82:	de b7       	in	r29, 0x3e	; 62
    1f84:	8d 83       	std	Y+5, r24	; 0x05

00001f86 <.LBB53>:
	for (unsigned i = 0; i < 8; i++)
    1f86:	1a 82       	std	Y+2, r1	; 0x02
    1f88:	19 82       	std	Y+1, r1	; 0x01

00001f8a <.Loc.394>:
    1f8a:	39 c0       	rjmp	.+114    	; 0x1ffe <.L108>

00001f8c <.L111>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    1f8c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f8e:	08 2e       	mov	r0, r24
    1f90:	00 0c       	add	r0, r0
    1f92:	99 0b       	sbc	r25, r25

00001f94 <.Loc.396>:
    1f94:	81 70       	andi	r24, 0x01	; 1
    1f96:	99 27       	eor	r25, r25
    1f98:	9c 83       	std	Y+4, r25	; 0x04
    1f9a:	8b 83       	std	Y+3, r24	; 0x03

00001f9c <.Loc.397>:
		data >>= 1;
    1f9c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f9e:	85 95       	asr	r24
    1fa0:	8d 83       	std	Y+5, r24	; 0x05

00001fa2 <.Loc.398>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    1fa2:	8b 81       	ldd	r24, Y+3	; 0x03
    1fa4:	9c 81       	ldd	r25, Y+4	; 0x04
    1fa6:	00 97       	sbiw	r24, 0x00	; 0
    1fa8:	51 f0       	breq	.+20     	; 0x1fbe <.L109>

00001faa <.Loc.399>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    1faa:	82 e0       	ldi	r24, 0x02	; 2
    1fac:	91 e0       	ldi	r25, 0x01	; 1
    1fae:	fc 01       	movw	r30, r24
    1fb0:	20 81       	ld	r18, Z
    1fb2:	82 e0       	ldi	r24, 0x02	; 2
    1fb4:	91 e0       	ldi	r25, 0x01	; 1

00001fb6 <.Loc.400>:
    1fb6:	20 62       	ori	r18, 0x20	; 32
    1fb8:	fc 01       	movw	r30, r24
    1fba:	20 83       	st	Z, r18
    1fbc:	09 c0       	rjmp	.+18     	; 0x1fd0 <.L110>

00001fbe <.L109>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    1fbe:	82 e0       	ldi	r24, 0x02	; 2
    1fc0:	91 e0       	ldi	r25, 0x01	; 1
    1fc2:	fc 01       	movw	r30, r24
    1fc4:	20 81       	ld	r18, Z

00001fc6 <.Loc.402>:
    1fc6:	82 e0       	ldi	r24, 0x02	; 2
    1fc8:	91 e0       	ldi	r25, 0x01	; 1

00001fca <.Loc.403>:
    1fca:	2f 7d       	andi	r18, 0xDF	; 223
    1fcc:	fc 01       	movw	r30, r24
    1fce:	20 83       	st	Z, r18

00001fd0 <.L110>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    1fd0:	82 e0       	ldi	r24, 0x02	; 2
    1fd2:	91 e0       	ldi	r25, 0x01	; 1
    1fd4:	fc 01       	movw	r30, r24
    1fd6:	20 81       	ld	r18, Z
    1fd8:	82 e0       	ldi	r24, 0x02	; 2
    1fda:	91 e0       	ldi	r25, 0x01	; 1

00001fdc <.Loc.405>:
    1fdc:	20 61       	ori	r18, 0x10	; 16
    1fde:	fc 01       	movw	r30, r24
    1fe0:	20 83       	st	Z, r18

00001fe2 <.Loc.406>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1fe2:	82 e0       	ldi	r24, 0x02	; 2
    1fe4:	91 e0       	ldi	r25, 0x01	; 1
    1fe6:	fc 01       	movw	r30, r24
    1fe8:	20 81       	ld	r18, Z

00001fea <.Loc.407>:
    1fea:	82 e0       	ldi	r24, 0x02	; 2
    1fec:	91 e0       	ldi	r25, 0x01	; 1

00001fee <.Loc.408>:
    1fee:	2f 7e       	andi	r18, 0xEF	; 239
    1ff0:	fc 01       	movw	r30, r24
    1ff2:	20 83       	st	Z, r18

00001ff4 <.LBE54>:
	for (unsigned i = 0; i < 8; i++)
    1ff4:	89 81       	ldd	r24, Y+1	; 0x01
    1ff6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ff8:	01 96       	adiw	r24, 0x01	; 1
    1ffa:	9a 83       	std	Y+2, r25	; 0x02
    1ffc:	89 83       	std	Y+1, r24	; 0x01

00001ffe <.L108>:
    1ffe:	89 81       	ldd	r24, Y+1	; 0x01
    2000:	9a 81       	ldd	r25, Y+2	; 0x02
    2002:	87 30       	cpi	r24, 0x07	; 7
    2004:	91 05       	cpc	r25, r1
    2006:	11 f2       	breq	.-124    	; 0x1f8c <.L111>
    2008:	08 f2       	brcs	.-126    	; 0x1f8c <.L111>

0000200a <.LBE53>:
	}
}
    200a:	00 00       	nop
    200c:	00 00       	nop
    200e:	0f 90       	pop	r0
    2010:	0f 90       	pop	r0
    2012:	0f 90       	pop	r0
    2014:	0f 90       	pop	r0
    2016:	0f 90       	pop	r0
    2018:	df 91       	pop	r29
    201a:	cf 91       	pop	r28
    201c:	08 95       	ret

0000201e <send_enable>:

void send_enable(int display_nummer)
{
    201e:	cf 93       	push	r28
    2020:	df 93       	push	r29
    2022:	0f 92       	push	r0
    2024:	0f 92       	push	r0
    2026:	cd b7       	in	r28, 0x3d	; 61
    2028:	de b7       	in	r29, 0x3e	; 62
    202a:	9a 83       	std	Y+2, r25	; 0x02
    202c:	89 83       	std	Y+1, r24	; 0x01

0000202e <.Loc.413>:
	send_data(0x10 << display_nummer);
    202e:	80 e1       	ldi	r24, 0x10	; 16
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	09 80       	ldd	r0, Y+1	; 0x01
    2034:	02 c0       	rjmp	.+4      	; 0x203a <.L2^B1>

00002036 <.L1^B5>:
    2036:	88 0f       	add	r24, r24
    2038:	99 1f       	adc	r25, r25

0000203a <.L2^B1>:
    203a:	0a 94       	dec	r0
    203c:	e2 f7       	brpl	.-8      	; 0x2036 <.L1^B5>

0000203e <.Loc.414>:
    203e:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <send_data>

00002042 <.Loc.415>:
}
    2042:	00 00       	nop
    2044:	0f 90       	pop	r0
    2046:	0f 90       	pop	r0
    2048:	df 91       	pop	r29
    204a:	cf 91       	pop	r28
    204c:	08 95       	ret

0000204e <display>:

void display(char data, int display_nummer)
{
    204e:	cf 93       	push	r28
    2050:	df 93       	push	r29
    2052:	00 d0       	rcall	.+0      	; 0x2054 <L0^A>

00002054 <L0^A>:
    2054:	cd b7       	in	r28, 0x3d	; 61
    2056:	de b7       	in	r29, 0x3e	; 62
    2058:	89 83       	std	Y+1, r24	; 0x01
    205a:	7b 83       	std	Y+3, r23	; 0x03
    205c:	6a 83       	std	Y+2, r22	; 0x02

0000205e <.Loc.417>:
	send_data(data);
    205e:	89 81       	ldd	r24, Y+1	; 0x01
    2060:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <send_data>

00002064 <.Loc.418>:
	send_enable(display_nummer);
    2064:	8a 81       	ldd	r24, Y+2	; 0x02
    2066:	9b 81       	ldd	r25, Y+3	; 0x03
    2068:	0e 94 0f 10 	call	0x201e	; 0x201e <send_enable>

0000206c <.Loc.419>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    206c:	84 e3       	ldi	r24, 0x34	; 52
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	fc 01       	movw	r30, r24
    2072:	20 81       	ld	r18, Z
    2074:	84 e3       	ldi	r24, 0x34	; 52
    2076:	90 e0       	ldi	r25, 0x00	; 0

00002078 <.Loc.420>:
    2078:	20 62       	ori	r18, 0x20	; 32
    207a:	fc 01       	movw	r30, r24
    207c:	20 83       	st	Z, r18

0000207e <.Loc.421>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    207e:	84 e3       	ldi	r24, 0x34	; 52
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	fc 01       	movw	r30, r24
    2084:	20 81       	ld	r18, Z

00002086 <.Loc.422>:
    2086:	84 e3       	ldi	r24, 0x34	; 52
    2088:	90 e0       	ldi	r25, 0x00	; 0

0000208a <.Loc.423>:
    208a:	2f 7d       	andi	r18, 0xDF	; 223
    208c:	fc 01       	movw	r30, r24
    208e:	20 83       	st	Z, r18

00002090 <.Loc.424>:
}
    2090:	00 00       	nop
    2092:	0f 90       	pop	r0
    2094:	0f 90       	pop	r0
    2096:	0f 90       	pop	r0
    2098:	df 91       	pop	r29
    209a:	cf 91       	pop	r28
    209c:	08 95       	ret

0000209e <display_getal>:

void display_getal(unsigned int getal)
{
    209e:	cf 93       	push	r28
    20a0:	df 93       	push	r29
    20a2:	cd b7       	in	r28, 0x3d	; 61
    20a4:	de b7       	in	r29, 0x3e	; 62
    20a6:	a6 97       	sbiw	r28, 0x26	; 38
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	de bf       	out	0x3e, r29	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	cd bf       	out	0x3d, r28	; 61
    20b2:	9a 8b       	std	Y+18, r25	; 0x12
    20b4:	89 8b       	std	Y+17, r24	; 0x11

000020b6 <.LBB55>:
	for (int i = 0; i < 4; i++)
    20b6:	1a 82       	std	Y+2, r1	; 0x02
    20b8:	19 82       	std	Y+1, r1	; 0x01

000020ba <.Loc.427>:
    20ba:	cc c0       	rjmp	.+408    	; 0x2254 <.L115>

000020bc <.L124>:
	{
		display(segmentcodes[getal%10], i);
    20bc:	49 89       	ldd	r20, Y+17	; 0x11
    20be:	5a 89       	ldd	r21, Y+18	; 0x12
    20c0:	9a 01       	movw	r18, r20
    20c2:	ad ec       	ldi	r26, 0xCD	; 205
    20c4:	bc ec       	ldi	r27, 0xCC	; 204
    20c6:	0e 94 b0 17 	call	0x2f60	; 0x2f60 <__umulhisi3>
    20ca:	9c 01       	movw	r18, r24
    20cc:	36 95       	lsr	r19
    20ce:	27 95       	ror	r18
    20d0:	36 95       	lsr	r19
    20d2:	27 95       	ror	r18
    20d4:	36 95       	lsr	r19
    20d6:	27 95       	ror	r18
    20d8:	c9 01       	movw	r24, r18
    20da:	88 0f       	add	r24, r24
    20dc:	99 1f       	adc	r25, r25
    20de:	88 0f       	add	r24, r24
    20e0:	99 1f       	adc	r25, r25
    20e2:	82 0f       	add	r24, r18
    20e4:	93 1f       	adc	r25, r19
    20e6:	88 0f       	add	r24, r24
    20e8:	99 1f       	adc	r25, r25
    20ea:	9a 01       	movw	r18, r20
    20ec:	28 1b       	sub	r18, r24
    20ee:	39 0b       	sbc	r19, r25

000020f0 <.Loc.429>:
    20f0:	c9 01       	movw	r24, r18
    20f2:	88 0f       	add	r24, r24
    20f4:	99 1f       	adc	r25, r25
    20f6:	8c 5f       	subi	r24, 0xFC	; 252
    20f8:	9d 4f       	sbci	r25, 0xFD	; 253
    20fa:	dc 01       	movw	r26, r24
    20fc:	8d 91       	ld	r24, X+
    20fe:	9c 91       	ld	r25, X

00002100 <.Loc.430>:
    2100:	28 2f       	mov	r18, r24
    2102:	89 81       	ldd	r24, Y+1	; 0x01
    2104:	9a 81       	ldd	r25, Y+2	; 0x02
    2106:	bc 01       	movw	r22, r24
    2108:	82 2f       	mov	r24, r18
    210a:	0e 94 27 10 	call	0x204e	; 0x204e <display>

0000210e <.Loc.431>:
		getal /= 10;
    210e:	89 89       	ldd	r24, Y+17	; 0x11
    2110:	9a 89       	ldd	r25, Y+18	; 0x12
    2112:	9c 01       	movw	r18, r24
    2114:	ad ec       	ldi	r26, 0xCD	; 205
    2116:	bc ec       	ldi	r27, 0xCC	; 204
    2118:	0e 94 b0 17 	call	0x2f60	; 0x2f60 <__umulhisi3>
    211c:	96 95       	lsr	r25
    211e:	87 95       	ror	r24
    2120:	96 95       	lsr	r25
    2122:	87 95       	ror	r24
    2124:	96 95       	lsr	r25
    2126:	87 95       	ror	r24
    2128:	9a 8b       	std	Y+18, r25	; 0x12
    212a:	89 8b       	std	Y+17, r24	; 0x11
    212c:	80 e0       	ldi	r24, 0x00	; 0
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	a0 e8       	ldi	r26, 0x80	; 128
    2132:	bf e3       	ldi	r27, 0x3F	; 63
    2134:	8b 83       	std	Y+3, r24	; 0x03
    2136:	9c 83       	std	Y+4, r25	; 0x04
    2138:	ad 83       	std	Y+5, r26	; 0x05
    213a:	be 83       	std	Y+6, r27	; 0x06

0000213c <.LBB56>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	4a e7       	ldi	r20, 0x7A	; 122
    2142:	55 e4       	ldi	r21, 0x45	; 69
    2144:	6b 81       	ldd	r22, Y+3	; 0x03
    2146:	7c 81       	ldd	r23, Y+4	; 0x04
    2148:	8d 81       	ldd	r24, Y+5	; 0x05
    214a:	9e 81       	ldd	r25, Y+6	; 0x06
    214c:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2150:	6f 8b       	std	Y+23, r22	; 0x17
    2152:	78 8f       	std	Y+24, r23	; 0x18
    2154:	89 8f       	std	Y+25, r24	; 0x19
    2156:	9a 8f       	std	Y+26, r25	; 0x1a
    2158:	8f 89       	ldd	r24, Y+23	; 0x17
    215a:	98 8d       	ldd	r25, Y+24	; 0x18
    215c:	a9 8d       	ldd	r26, Y+25	; 0x19
    215e:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2160:	8f 83       	std	Y+7, r24	; 0x07
    2162:	98 87       	std	Y+8, r25	; 0x08
    2164:	a9 87       	std	Y+9, r26	; 0x09
    2166:	ba 87       	std	Y+10, r27	; 0x0a

00002168 <.Loc.433>:
	if (__tmp < 1.0)
    2168:	20 e0       	ldi	r18, 0x00	; 0
    216a:	30 e0       	ldi	r19, 0x00	; 0
    216c:	40 e8       	ldi	r20, 0x80	; 128
    216e:	5f e3       	ldi	r21, 0x3F	; 63
    2170:	6f 81       	ldd	r22, Y+7	; 0x07
    2172:	78 85       	ldd	r23, Y+8	; 0x08
    2174:	89 85       	ldd	r24, Y+9	; 0x09
    2176:	9a 85       	ldd	r25, Y+10	; 0x0a
    2178:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    217c:	88 23       	and	r24, r24
    217e:	2c f4       	brge	.+10     	; 0x218a <.L127>

00002180 <.Loc.434>:
		__ticks = 1;
    2180:	81 e0       	ldi	r24, 0x01	; 1
    2182:	90 e0       	ldi	r25, 0x00	; 0
    2184:	9c 87       	std	Y+12, r25	; 0x0c
    2186:	8b 87       	std	Y+11, r24	; 0x0b
    2188:	55 c0       	rjmp	.+170    	; 0x2234 <.L118>

0000218a <.L127>:
	else if (__tmp > 65535)
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	3f ef       	ldi	r19, 0xFF	; 255
    218e:	4f e7       	ldi	r20, 0x7F	; 127
    2190:	57 e4       	ldi	r21, 0x47	; 71
    2192:	6f 81       	ldd	r22, Y+7	; 0x07
    2194:	78 85       	ldd	r23, Y+8	; 0x08
    2196:	89 85       	ldd	r24, Y+9	; 0x09
    2198:	9a 85       	ldd	r25, Y+10	; 0x0a
    219a:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    219e:	88 23       	and	r24, r24
    21a0:	d9 f1       	breq	.+118    	; 0x2218 <.L128>
    21a2:	d4 f1       	brlt	.+116    	; 0x2218 <.L128>

000021a4 <.Loc.436>:
		__ticks = (uint16_t) (__ms * 10.0);
    21a4:	20 e0       	ldi	r18, 0x00	; 0
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	40 e2       	ldi	r20, 0x20	; 32
    21aa:	51 e4       	ldi	r21, 0x41	; 65
    21ac:	6b 81       	ldd	r22, Y+3	; 0x03
    21ae:	7c 81       	ldd	r23, Y+4	; 0x04
    21b0:	8d 81       	ldd	r24, Y+5	; 0x05
    21b2:	9e 81       	ldd	r25, Y+6	; 0x06
    21b4:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    21b8:	6b 8f       	std	Y+27, r22	; 0x1b
    21ba:	7c 8f       	std	Y+28, r23	; 0x1c
    21bc:	8d 8f       	std	Y+29, r24	; 0x1d
    21be:	9e 8f       	std	Y+30, r25	; 0x1e
    21c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21c4:	ad 8d       	ldd	r26, Y+29	; 0x1d
    21c6:	be 8d       	ldd	r27, Y+30	; 0x1e
    21c8:	8b 8b       	std	Y+19, r24	; 0x13
    21ca:	9c 8b       	std	Y+20, r25	; 0x14
    21cc:	ad 8b       	std	Y+21, r26	; 0x15
    21ce:	be 8b       	std	Y+22, r27	; 0x16

000021d0 <.Loc.437>:
    21d0:	6b 89       	ldd	r22, Y+19	; 0x13
    21d2:	7c 89       	ldd	r23, Y+20	; 0x14
    21d4:	8d 89       	ldd	r24, Y+21	; 0x15
    21d6:	9e 89       	ldd	r25, Y+22	; 0x16
    21d8:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    21dc:	6f 8f       	std	Y+31, r22	; 0x1f
    21de:	78 a3       	std	Y+32, r23	; 0x20
    21e0:	89 a3       	std	Y+33, r24	; 0x21
    21e2:	9a a3       	std	Y+34, r25	; 0x22
    21e4:	af 8d       	ldd	r26, Y+31	; 0x1f
    21e6:	b8 a1       	ldd	r27, Y+32	; 0x20
    21e8:	bc 87       	std	Y+12, r27	; 0x0c
    21ea:	ab 87       	std	Y+11, r26	; 0x0b

000021ec <.Loc.438>:
		while(__ticks)
    21ec:	10 c0       	rjmp	.+32     	; 0x220e <.L121>

000021ee <.L122>:
    21ee:	80 e9       	ldi	r24, 0x90	; 144
    21f0:	91 e0       	ldi	r25, 0x01	; 1
    21f2:	9e 87       	std	Y+14, r25	; 0x0e
    21f4:	8d 87       	std	Y+13, r24	; 0x0d

000021f6 <.LBB58>:
    21f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    21f8:	9e 85       	ldd	r25, Y+14	; 0x0e

000021fa <.L1^B6>:
    21fa:	01 97       	sbiw	r24, 0x01	; 1
    21fc:	f1 f7       	brne	.-4      	; 0x21fa <.L1^B6>
    21fe:	9e 87       	std	Y+14, r25	; 0x0e
    2200:	8d 87       	std	Y+13, r24	; 0x0d

00002202 <.Loc.440>:
	...

00002204 <.LBE58>:
			__ticks --;
    2204:	8b 85       	ldd	r24, Y+11	; 0x0b
    2206:	9c 85       	ldd	r25, Y+12	; 0x0c
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	9c 87       	std	Y+12, r25	; 0x0c
    220c:	8b 87       	std	Y+11, r24	; 0x0b

0000220e <.L121>:
		while(__ticks)
    220e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2210:	9c 85       	ldd	r25, Y+12	; 0x0c
    2212:	00 97       	sbiw	r24, 0x00	; 0
    2214:	61 f7       	brne	.-40     	; 0x21ee <.L122>

00002216 <.Loc.443>:
		return;
    2216:	19 c0       	rjmp	.+50     	; 0x224a <.L123>

00002218 <.L128>:
		__ticks = (uint16_t)__tmp;
    2218:	6f 81       	ldd	r22, Y+7	; 0x07
    221a:	78 85       	ldd	r23, Y+8	; 0x08
    221c:	89 85       	ldd	r24, Y+9	; 0x09
    221e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2220:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2224:	6b a3       	std	Y+35, r22	; 0x23
    2226:	7c a3       	std	Y+36, r23	; 0x24
    2228:	8d a3       	std	Y+37, r24	; 0x25
    222a:	9e a3       	std	Y+38, r25	; 0x26
    222c:	eb a1       	ldd	r30, Y+35	; 0x23
    222e:	fc a1       	ldd	r31, Y+36	; 0x24
    2230:	fc 87       	std	Y+12, r31	; 0x0c
    2232:	eb 87       	std	Y+11, r30	; 0x0b

00002234 <.L118>:
    2234:	8b 85       	ldd	r24, Y+11	; 0x0b
    2236:	9c 85       	ldd	r25, Y+12	; 0x0c
    2238:	98 8b       	std	Y+16, r25	; 0x10
    223a:	8f 87       	std	Y+15, r24	; 0x0f

0000223c <.LBB60>:
    223c:	8f 85       	ldd	r24, Y+15	; 0x0f
    223e:	98 89       	ldd	r25, Y+16	; 0x10

00002240 <.L1^B7>:
    2240:	01 97       	sbiw	r24, 0x01	; 1
    2242:	f1 f7       	brne	.-4      	; 0x2240 <.L1^B7>
    2244:	98 8b       	std	Y+16, r25	; 0x10
    2246:	8f 87       	std	Y+15, r24	; 0x0f

00002248 <.Loc.446>:
	...

0000224a <.L123>:
	for (int i = 0; i < 4; i++)
    224a:	89 81       	ldd	r24, Y+1	; 0x01
    224c:	9a 81       	ldd	r25, Y+2	; 0x02
    224e:	01 96       	adiw	r24, 0x01	; 1
    2250:	9a 83       	std	Y+2, r25	; 0x02
    2252:	89 83       	std	Y+1, r24	; 0x01

00002254 <.L115>:
    2254:	89 81       	ldd	r24, Y+1	; 0x01
    2256:	9a 81       	ldd	r25, Y+2	; 0x02
    2258:	83 30       	cpi	r24, 0x03	; 3
    225a:	91 05       	cpc	r25, r1
    225c:	09 f0       	breq	.+2      	; 0x2260 <L0^A>

0000225e <L0^A>:
    225e:	0c f4       	brge	.+2      	; 0x2262 <.LBE55>

00002260 <L0^A>:
    2260:	2d cf       	rjmp	.-422    	; 0x20bc <.L124>

00002262 <.LBE55>:
		_delay_ms(1);   // 1 kHz
	}
}
    2262:	00 00       	nop
    2264:	00 00       	nop
    2266:	a6 96       	adiw	r28, 0x26	; 38
    2268:	0f b6       	in	r0, 0x3f	; 63
    226a:	f8 94       	cli
    226c:	de bf       	out	0x3e, r29	; 62
    226e:	0f be       	out	0x3f, r0	; 63
    2270:	cd bf       	out	0x3d, r28	; 61
    2272:	df 91       	pop	r29
    2274:	cf 91       	pop	r28
    2276:	08 95       	ret

00002278 <init_SonicSensors>:
#include "Ultra_Sonic_Front.h"
#include <avr/io.h>
#include <avr/interrupt.h>
volatile int count = 0;

void init_SonicSensors(void){
    2278:	cf 93       	push	r28
    227a:	df 93       	push	r29
    227c:	cd b7       	in	r28, 0x3d	; 61
    227e:	de b7       	in	r29, 0x3e	; 62

00002280 <.Loc.1>:
	ddr_ech_F &= ~(1<<pin_ech_F);
    2280:	87 e0       	ldi	r24, 0x07	; 7
    2282:	91 e0       	ldi	r25, 0x01	; 1
    2284:	fc 01       	movw	r30, r24
    2286:	20 81       	ld	r18, Z

00002288 <.Loc.2>:
    2288:	87 e0       	ldi	r24, 0x07	; 7
    228a:	91 e0       	ldi	r25, 0x01	; 1

0000228c <.Loc.3>:
    228c:	27 7f       	andi	r18, 0xF7	; 247
    228e:	fc 01       	movw	r30, r24
    2290:	20 83       	st	Z, r18

00002292 <.Loc.4>:
	ddr_tri_F |= (1<<pin_tri_F);
    2292:	81 e2       	ldi	r24, 0x21	; 33
    2294:	90 e0       	ldi	r25, 0x00	; 0
    2296:	fc 01       	movw	r30, r24
    2298:	20 81       	ld	r18, Z
    229a:	81 e2       	ldi	r24, 0x21	; 33
    229c:	90 e0       	ldi	r25, 0x00	; 0

0000229e <.Loc.5>:
    229e:	21 60       	ori	r18, 0x01	; 1
    22a0:	fc 01       	movw	r30, r24
    22a2:	20 83       	st	Z, r18

000022a4 <.Loc.6>:
    port_tri_F &= ~(1<<pin_tri_F);
    22a4:	82 e2       	ldi	r24, 0x22	; 34
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	fc 01       	movw	r30, r24
    22aa:	20 81       	ld	r18, Z

000022ac <.Loc.7>:
    22ac:	82 e2       	ldi	r24, 0x22	; 34
    22ae:	90 e0       	ldi	r25, 0x00	; 0

000022b0 <.Loc.8>:
    22b0:	2e 7f       	andi	r18, 0xFE	; 254
    22b2:	fc 01       	movw	r30, r24
    22b4:	20 83       	st	Z, r18

000022b6 <.Loc.9>:

	ddr_ech_R &= ~(1<<pin_ech_R);
    22b6:	87 e0       	ldi	r24, 0x07	; 7
    22b8:	91 e0       	ldi	r25, 0x01	; 1
    22ba:	fc 01       	movw	r30, r24
    22bc:	20 81       	ld	r18, Z

000022be <.Loc.10>:
    22be:	87 e0       	ldi	r24, 0x07	; 7
    22c0:	91 e0       	ldi	r25, 0x01	; 1

000022c2 <.Loc.11>:
    22c2:	2d 7f       	andi	r18, 0xFD	; 253
    22c4:	fc 01       	movw	r30, r24
    22c6:	20 83       	st	Z, r18

000022c8 <.Loc.12>:
	ddr_tri_R |= (1<<pin_tri_R);
    22c8:	81 e2       	ldi	r24, 0x21	; 33
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	fc 01       	movw	r30, r24
    22ce:	20 81       	ld	r18, Z
    22d0:	81 e2       	ldi	r24, 0x21	; 33
    22d2:	90 e0       	ldi	r25, 0x00	; 0

000022d4 <.Loc.13>:
    22d4:	20 61       	ori	r18, 0x10	; 16
    22d6:	fc 01       	movw	r30, r24
    22d8:	20 83       	st	Z, r18

000022da <.Loc.14>:
    port_tri_R &= ~(1<<pin_tri_R);
    22da:	82 e2       	ldi	r24, 0x22	; 34
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	fc 01       	movw	r30, r24
    22e0:	20 81       	ld	r18, Z

000022e2 <.Loc.15>:
    22e2:	82 e2       	ldi	r24, 0x22	; 34
    22e4:	90 e0       	ldi	r25, 0x00	; 0

000022e6 <.Loc.16>:
    22e6:	2f 7e       	andi	r18, 0xEF	; 239
    22e8:	fc 01       	movw	r30, r24
    22ea:	20 83       	st	Z, r18

000022ec <.Loc.17>:

	ddr_ech_L &= ~(1<<pin_ech_L);
    22ec:	87 e0       	ldi	r24, 0x07	; 7
    22ee:	91 e0       	ldi	r25, 0x01	; 1
    22f0:	fc 01       	movw	r30, r24
    22f2:	20 81       	ld	r18, Z

000022f4 <.Loc.18>:
    22f4:	87 e0       	ldi	r24, 0x07	; 7
    22f6:	91 e0       	ldi	r25, 0x01	; 1

000022f8 <.Loc.19>:
    22f8:	2b 7f       	andi	r18, 0xFB	; 251
    22fa:	fc 01       	movw	r30, r24
    22fc:	20 83       	st	Z, r18

000022fe <.Loc.20>:
	ddr_tri_L |= (1<<pin_tri_L);
    22fe:	81 e2       	ldi	r24, 0x21	; 33
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	fc 01       	movw	r30, r24
    2304:	20 81       	ld	r18, Z
    2306:	81 e2       	ldi	r24, 0x21	; 33
    2308:	90 e0       	ldi	r25, 0x00	; 0

0000230a <.Loc.21>:
    230a:	24 60       	ori	r18, 0x04	; 4
    230c:	fc 01       	movw	r30, r24
    230e:	20 83       	st	Z, r18

00002310 <.Loc.22>:
    port_tri_L &= ~(1<<pin_tri_L);
    2310:	82 e2       	ldi	r24, 0x22	; 34
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	fc 01       	movw	r30, r24
    2316:	20 81       	ld	r18, Z

00002318 <.Loc.23>:
    2318:	82 e2       	ldi	r24, 0x22	; 34
    231a:	90 e0       	ldi	r25, 0x00	; 0

0000231c <.Loc.24>:
    231c:	2b 7f       	andi	r18, 0xFB	; 251
    231e:	fc 01       	movw	r30, r24
    2320:	20 83       	st	Z, r18

00002322 <.Loc.25>:

    TCCR2A = 0;
    2322:	80 eb       	ldi	r24, 0xB0	; 176
    2324:	90 e0       	ldi	r25, 0x00	; 0

00002326 <.Loc.26>:
    2326:	fc 01       	movw	r30, r24
    2328:	10 82       	st	Z, r1

0000232a <.Loc.27>:
    TCCR2B |= (1<<CS20) ;
    232a:	81 eb       	ldi	r24, 0xB1	; 177
    232c:	90 e0       	ldi	r25, 0x00	; 0
    232e:	fc 01       	movw	r30, r24
    2330:	20 81       	ld	r18, Z
    2332:	81 eb       	ldi	r24, 0xB1	; 177
    2334:	90 e0       	ldi	r25, 0x00	; 0

00002336 <.Loc.28>:
    2336:	21 60       	ori	r18, 0x01	; 1
    2338:	fc 01       	movw	r30, r24
    233a:	20 83       	st	Z, r18

0000233c <.Loc.29>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    233c:	80 e7       	ldi	r24, 0x70	; 112
    233e:	90 e0       	ldi	r25, 0x00	; 0

00002340 <.Loc.30>:
    2340:	21 e0       	ldi	r18, 0x01	; 1
    2342:	fc 01       	movw	r30, r24
    2344:	20 83       	st	Z, r18

00002346 <.Loc.31>:
}
    2346:	00 00       	nop
    2348:	df 91       	pop	r29
    234a:	cf 91       	pop	r28
    234c:	08 95       	ret

0000234e <GetDistanceFront>:

int GetDistanceFront(void){
    234e:	cf 93       	push	r28
    2350:	df 93       	push	r29
    2352:	cd b7       	in	r28, 0x3d	; 61
    2354:	de b7       	in	r29, 0x3e	; 62
    2356:	6e 97       	sbiw	r28, 0x1e	; 30
    2358:	0f b6       	in	r0, 0x3f	; 63
    235a:	f8 94       	cli
    235c:	de bf       	out	0x3e, r29	; 62
    235e:	0f be       	out	0x3f, r0	; 63
    2360:	cd bf       	out	0x3d, r28	; 61

00002362 <.Loc.33>:
    int Distance;
    TriggerPulseFront();
    2362:	0e 94 35 12 	call	0x246a	; 0x246a <TriggerPulseFront>

00002366 <.Loc.34>:
	...

00002368 <.L3>:
    while ((port_ech_F & (1<<pin_ech_F)) == 0){
    2368:	86 e0       	ldi	r24, 0x06	; 6
    236a:	91 e0       	ldi	r25, 0x01	; 1
    236c:	dc 01       	movw	r26, r24
    236e:	8c 91       	ld	r24, X

00002370 <.Loc.36>:
    2370:	88 2f       	mov	r24, r24
    2372:	90 e0       	ldi	r25, 0x00	; 0
    2374:	88 70       	andi	r24, 0x08	; 8
    2376:	99 27       	eor	r25, r25

00002378 <.Loc.37>:
    2378:	00 97       	sbiw	r24, 0x00	; 0
    237a:	b1 f3       	breq	.-20     	; 0x2368 <.L3>

0000237c <.Loc.38>:
    }
    TCNT2 = 0;
    237c:	82 eb       	ldi	r24, 0xB2	; 178
    237e:	90 e0       	ldi	r25, 0x00	; 0

00002380 <.Loc.39>:
    2380:	fc 01       	movw	r30, r24
    2382:	10 82       	st	Z, r1

00002384 <.Loc.40>:
    TIFR2 = 1<<TOV2;
    2384:	87 e3       	ldi	r24, 0x37	; 55
    2386:	90 e0       	ldi	r25, 0x00	; 0

00002388 <.Loc.41>:
    2388:	21 e0       	ldi	r18, 0x01	; 1
    238a:	dc 01       	movw	r26, r24
    238c:	2c 93       	st	X, r18

0000238e <.Loc.42>:
    count = 0;
    238e:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2392:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002396 <.Loc.43>:
	...

00002398 <.L4>:
    while ((port_ech_F & (1<<pin_ech_F)) != 0){
    2398:	86 e0       	ldi	r24, 0x06	; 6
    239a:	91 e0       	ldi	r25, 0x01	; 1
    239c:	fc 01       	movw	r30, r24
    239e:	80 81       	ld	r24, Z

000023a0 <.Loc.45>:
    23a0:	88 2f       	mov	r24, r24
    23a2:	90 e0       	ldi	r25, 0x00	; 0
    23a4:	88 70       	andi	r24, 0x08	; 8
    23a6:	99 27       	eor	r25, r25

000023a8 <.Loc.46>:
    23a8:	00 97       	sbiw	r24, 0x00	; 0
    23aa:	b1 f7       	brne	.-20     	; 0x2398 <.L4>

000023ac <.Loc.47>:

    }
    Distance = count;
    23ac:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    23b0:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    23b4:	9a 83       	std	Y+2, r25	; 0x02
    23b6:	89 83       	std	Y+1, r24	; 0x01

000023b8 <.Loc.48>:
    Distance = Distance * 0.008 * 343;
    23b8:	89 81       	ldd	r24, Y+1	; 0x01
    23ba:	9a 81       	ldd	r25, Y+2	; 0x02
    23bc:	9c 01       	movw	r18, r24
    23be:	99 0f       	add	r25, r25
    23c0:	44 0b       	sbc	r20, r20
    23c2:	55 0b       	sbc	r21, r21
    23c4:	2f 87       	std	Y+15, r18	; 0x0f
    23c6:	38 8b       	std	Y+16, r19	; 0x10
    23c8:	49 8b       	std	Y+17, r20	; 0x11
    23ca:	5a 8b       	std	Y+18, r21	; 0x12
    23cc:	6f 85       	ldd	r22, Y+15	; 0x0f
    23ce:	78 89       	ldd	r23, Y+16	; 0x10
    23d0:	89 89       	ldd	r24, Y+17	; 0x11
    23d2:	9a 89       	ldd	r25, Y+18	; 0x12
    23d4:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    23d8:	6b 83       	std	Y+3, r22	; 0x03
    23da:	7c 83       	std	Y+4, r23	; 0x04
    23dc:	8d 83       	std	Y+5, r24	; 0x05
    23de:	9e 83       	std	Y+6, r25	; 0x06
    23e0:	2f e6       	ldi	r18, 0x6F	; 111
    23e2:	32 e1       	ldi	r19, 0x12	; 18
    23e4:	43 e0       	ldi	r20, 0x03	; 3
    23e6:	5c e3       	ldi	r21, 0x3C	; 60
    23e8:	6b 81       	ldd	r22, Y+3	; 0x03
    23ea:	7c 81       	ldd	r23, Y+4	; 0x04
    23ec:	8d 81       	ldd	r24, Y+5	; 0x05
    23ee:	9e 81       	ldd	r25, Y+6	; 0x06
    23f0:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    23f4:	6b 8b       	std	Y+19, r22	; 0x13
    23f6:	7c 8b       	std	Y+20, r23	; 0x14
    23f8:	8d 8b       	std	Y+21, r24	; 0x15
    23fa:	9e 8b       	std	Y+22, r25	; 0x16
    23fc:	8b 89       	ldd	r24, Y+19	; 0x13
    23fe:	9c 89       	ldd	r25, Y+20	; 0x14
    2400:	ad 89       	ldd	r26, Y+21	; 0x15
    2402:	be 89       	ldd	r27, Y+22	; 0x16
    2404:	8f 83       	std	Y+7, r24	; 0x07
    2406:	98 87       	std	Y+8, r25	; 0x08
    2408:	a9 87       	std	Y+9, r26	; 0x09
    240a:	ba 87       	std	Y+10, r27	; 0x0a

0000240c <.Loc.49>:
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e8       	ldi	r19, 0x80	; 128
    2410:	4b ea       	ldi	r20, 0xAB	; 171
    2412:	53 e4       	ldi	r21, 0x43	; 67
    2414:	6f 81       	ldd	r22, Y+7	; 0x07
    2416:	78 85       	ldd	r23, Y+8	; 0x08
    2418:	89 85       	ldd	r24, Y+9	; 0x09
    241a:	9a 85       	ldd	r25, Y+10	; 0x0a
    241c:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2420:	6f 8b       	std	Y+23, r22	; 0x17
    2422:	78 8f       	std	Y+24, r23	; 0x18
    2424:	89 8f       	std	Y+25, r24	; 0x19
    2426:	9a 8f       	std	Y+26, r25	; 0x1a
    2428:	2f 89       	ldd	r18, Y+23	; 0x17
    242a:	38 8d       	ldd	r19, Y+24	; 0x18
    242c:	49 8d       	ldd	r20, Y+25	; 0x19
    242e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2430:	2b 87       	std	Y+11, r18	; 0x0b
    2432:	3c 87       	std	Y+12, r19	; 0x0c
    2434:	4d 87       	std	Y+13, r20	; 0x0d
    2436:	5e 87       	std	Y+14, r21	; 0x0e

00002438 <.Loc.50>:
    2438:	6b 85       	ldd	r22, Y+11	; 0x0b
    243a:	7c 85       	ldd	r23, Y+12	; 0x0c
    243c:	8d 85       	ldd	r24, Y+13	; 0x0d
    243e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2440:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    2444:	6b 8f       	std	Y+27, r22	; 0x1b
    2446:	7c 8f       	std	Y+28, r23	; 0x1c
    2448:	8d 8f       	std	Y+29, r24	; 0x1d
    244a:	9e 8f       	std	Y+30, r25	; 0x1e
    244c:	4b 8d       	ldd	r20, Y+27	; 0x1b
    244e:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2450:	5a 83       	std	Y+2, r21	; 0x02
    2452:	49 83       	std	Y+1, r20	; 0x01

00002454 <.Loc.51>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    2454:	89 81       	ldd	r24, Y+1	; 0x01
    2456:	9a 81       	ldd	r25, Y+2	; 0x02

00002458 <.Loc.52>:
}
    2458:	6e 96       	adiw	r28, 0x1e	; 30
    245a:	0f b6       	in	r0, 0x3f	; 63
    245c:	f8 94       	cli
    245e:	de bf       	out	0x3e, r29	; 62
    2460:	0f be       	out	0x3f, r0	; 63
    2462:	cd bf       	out	0x3d, r28	; 61
    2464:	df 91       	pop	r29
    2466:	cf 91       	pop	r28
    2468:	08 95       	ret

0000246a <TriggerPulseFront>:
void TriggerPulseFront (void){
    246a:	cf 93       	push	r28
    246c:	df 93       	push	r29
    246e:	cd b7       	in	r28, 0x3d	; 61
    2470:	de b7       	in	r29, 0x3e	; 62
    2472:	c8 54       	subi	r28, 0x48	; 72
    2474:	d1 09       	sbc	r29, r1
    2476:	0f b6       	in	r0, 0x3f	; 63
    2478:	f8 94       	cli
    247a:	de bf       	out	0x3e, r29	; 62
    247c:	0f be       	out	0x3f, r0	; 63
    247e:	cd bf       	out	0x3d, r28	; 61

00002480 <.Loc.54>:
    port_tri_F |= (1<<pin_tri_F);
    2480:	82 e2       	ldi	r24, 0x22	; 34
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	dc 01       	movw	r26, r24
    2486:	2c 91       	ld	r18, X
    2488:	82 e2       	ldi	r24, 0x22	; 34
    248a:	90 e0       	ldi	r25, 0x00	; 0

0000248c <.Loc.55>:
    248c:	21 60       	ori	r18, 0x01	; 1
    248e:	fc 01       	movw	r30, r24
    2490:	20 83       	st	Z, r18
    2492:	80 e0       	ldi	r24, 0x00	; 0
    2494:	90 e0       	ldi	r25, 0x00	; 0
    2496:	a0 e2       	ldi	r26, 0x20	; 32
    2498:	b1 e4       	ldi	r27, 0x41	; 65
    249a:	89 83       	std	Y+1, r24	; 0x01
    249c:	9a 83       	std	Y+2, r25	; 0x02
    249e:	ab 83       	std	Y+3, r26	; 0x03
    24a0:	bc 83       	std	Y+4, r27	; 0x04

000024a2 <.LBB56>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    24a2:	2b ea       	ldi	r18, 0xAB	; 171
    24a4:	3a ea       	ldi	r19, 0xAA	; 170
    24a6:	4a ea       	ldi	r20, 0xAA	; 170
    24a8:	50 e4       	ldi	r21, 0x40	; 64
    24aa:	69 81       	ldd	r22, Y+1	; 0x01
    24ac:	7a 81       	ldd	r23, Y+2	; 0x02
    24ae:	8b 81       	ldd	r24, Y+3	; 0x03
    24b0:	9c 81       	ldd	r25, Y+4	; 0x04
    24b2:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    24b6:	6d a3       	std	Y+37, r22	; 0x25
    24b8:	7e a3       	std	Y+38, r23	; 0x26
    24ba:	8f a3       	std	Y+39, r24	; 0x27
    24bc:	98 a7       	std	Y+40, r25	; 0x28
    24be:	8d a1       	ldd	r24, Y+37	; 0x25
    24c0:	9e a1       	ldd	r25, Y+38	; 0x26
    24c2:	af a1       	ldd	r26, Y+39	; 0x27
    24c4:	b8 a5       	ldd	r27, Y+40	; 0x28
    24c6:	8d 83       	std	Y+5, r24	; 0x05
    24c8:	9e 83       	std	Y+6, r25	; 0x06
    24ca:	af 83       	std	Y+7, r26	; 0x07
    24cc:	b8 87       	std	Y+8, r27	; 0x08

000024ce <.Loc.57>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    24ce:	20 e0       	ldi	r18, 0x00	; 0
    24d0:	30 e0       	ldi	r19, 0x00	; 0
    24d2:	40 e8       	ldi	r20, 0x80	; 128
    24d4:	50 e4       	ldi	r21, 0x40	; 64
    24d6:	69 81       	ldd	r22, Y+1	; 0x01
    24d8:	7a 81       	ldd	r23, Y+2	; 0x02
    24da:	8b 81       	ldd	r24, Y+3	; 0x03
    24dc:	9c 81       	ldd	r25, Y+4	; 0x04
    24de:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    24e2:	69 a7       	std	Y+41, r22	; 0x29
    24e4:	7a a7       	std	Y+42, r23	; 0x2a
    24e6:	8b a7       	std	Y+43, r24	; 0x2b
    24e8:	9c a7       	std	Y+44, r25	; 0x2c
    24ea:	89 a5       	ldd	r24, Y+41	; 0x29
    24ec:	9a a5       	ldd	r25, Y+42	; 0x2a
    24ee:	ab a5       	ldd	r26, Y+43	; 0x2b
    24f0:	bc a5       	ldd	r27, Y+44	; 0x2c
    24f2:	89 87       	std	Y+9, r24	; 0x09
    24f4:	9a 87       	std	Y+10, r25	; 0x0a
    24f6:	ab 87       	std	Y+11, r26	; 0x0b
    24f8:	bc 87       	std	Y+12, r27	; 0x0c

000024fa <.Loc.58>:
	if (__tmp < 1.0)
    24fa:	20 e0       	ldi	r18, 0x00	; 0
    24fc:	30 e0       	ldi	r19, 0x00	; 0
    24fe:	40 e8       	ldi	r20, 0x80	; 128
    2500:	5f e3       	ldi	r21, 0x3F	; 63
    2502:	6d 81       	ldd	r22, Y+5	; 0x05
    2504:	7e 81       	ldd	r23, Y+6	; 0x06
    2506:	8f 81       	ldd	r24, Y+7	; 0x07
    2508:	98 85       	ldd	r25, Y+8	; 0x08
    250a:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    250e:	88 23       	and	r24, r24
    2510:	1c f4       	brge	.+6      	; 0x2518 <.L28>

00002512 <.Loc.59>:
		__ticks = 1;
    2512:	81 e0       	ldi	r24, 0x01	; 1
    2514:	8d 87       	std	Y+13, r24	; 0x0d
    2516:	e8 c0       	rjmp	.+464    	; 0x26e8 <.L9>

00002518 <.L28>:
	else if (__tmp2 > 65535)
    2518:	20 e0       	ldi	r18, 0x00	; 0
    251a:	3f ef       	ldi	r19, 0xFF	; 255
    251c:	4f e7       	ldi	r20, 0x7F	; 127
    251e:	57 e4       	ldi	r21, 0x47	; 71
    2520:	69 85       	ldd	r22, Y+9	; 0x09
    2522:	7a 85       	ldd	r23, Y+10	; 0x0a
    2524:	8b 85       	ldd	r24, Y+11	; 0x0b
    2526:	9c 85       	ldd	r25, Y+12	; 0x0c
    2528:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    252c:	88 23       	and	r24, r24
    252e:	09 f0       	breq	.+2      	; 0x2532 <L0^A>

00002530 <L0^A>:
    2530:	0c f4       	brge	.+2      	; 0x2534 <.Loc.61>

00002532 <L0^A>:
    2532:	9f c0       	rjmp	.+318    	; 0x2672 <.L29>

00002534 <.Loc.61>:
	{
		_delay_ms(__us / 1000.0);
    2534:	20 e0       	ldi	r18, 0x00	; 0
    2536:	30 e0       	ldi	r19, 0x00	; 0
    2538:	4a e7       	ldi	r20, 0x7A	; 122
    253a:	54 e4       	ldi	r21, 0x44	; 68
    253c:	69 81       	ldd	r22, Y+1	; 0x01
    253e:	7a 81       	ldd	r23, Y+2	; 0x02
    2540:	8b 81       	ldd	r24, Y+3	; 0x03
    2542:	9c 81       	ldd	r25, Y+4	; 0x04
    2544:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
    2548:	6d a7       	std	Y+45, r22	; 0x2d
    254a:	7e a7       	std	Y+46, r23	; 0x2e
    254c:	8f a7       	std	Y+47, r24	; 0x2f
    254e:	98 ab       	std	Y+48, r25	; 0x30
    2550:	8d a5       	ldd	r24, Y+45	; 0x2d
    2552:	9e a5       	ldd	r25, Y+46	; 0x2e
    2554:	af a5       	ldd	r26, Y+47	; 0x2f
    2556:	b8 a9       	ldd	r27, Y+48	; 0x30
    2558:	8e 87       	std	Y+14, r24	; 0x0e
    255a:	9f 87       	std	Y+15, r25	; 0x0f
    255c:	a8 8b       	std	Y+16, r26	; 0x10
    255e:	b9 8b       	std	Y+17, r27	; 0x11

00002560 <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2560:	20 e0       	ldi	r18, 0x00	; 0
    2562:	30 e0       	ldi	r19, 0x00	; 0
    2564:	4a e7       	ldi	r20, 0x7A	; 122
    2566:	55 e4       	ldi	r21, 0x45	; 69
    2568:	6e 85       	ldd	r22, Y+14	; 0x0e
    256a:	7f 85       	ldd	r23, Y+15	; 0x0f
    256c:	88 89       	ldd	r24, Y+16	; 0x10
    256e:	99 89       	ldd	r25, Y+17	; 0x11
    2570:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2574:	69 ab       	std	Y+49, r22	; 0x31
    2576:	7a ab       	std	Y+50, r23	; 0x32
    2578:	8b ab       	std	Y+51, r24	; 0x33
    257a:	9c ab       	std	Y+52, r25	; 0x34
    257c:	89 a9       	ldd	r24, Y+49	; 0x31
    257e:	9a a9       	ldd	r25, Y+50	; 0x32
    2580:	ab a9       	ldd	r26, Y+51	; 0x33
    2582:	bc a9       	ldd	r27, Y+52	; 0x34
    2584:	8a 8b       	std	Y+18, r24	; 0x12
    2586:	9b 8b       	std	Y+19, r25	; 0x13
    2588:	ac 8b       	std	Y+20, r26	; 0x14
    258a:	bd 8b       	std	Y+21, r27	; 0x15

0000258c <.Loc.63>:
	if (__tmp < 1.0)
    258c:	20 e0       	ldi	r18, 0x00	; 0
    258e:	30 e0       	ldi	r19, 0x00	; 0
    2590:	40 e8       	ldi	r20, 0x80	; 128
    2592:	5f e3       	ldi	r21, 0x3F	; 63
    2594:	6a 89       	ldd	r22, Y+18	; 0x12
    2596:	7b 89       	ldd	r23, Y+19	; 0x13
    2598:	8c 89       	ldd	r24, Y+20	; 0x14
    259a:	9d 89       	ldd	r25, Y+21	; 0x15
    259c:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    25a0:	88 23       	and	r24, r24
    25a2:	2c f4       	brge	.+10     	; 0x25ae <.L30>

000025a4 <.Loc.64>:
		__ticks = 1;
    25a4:	81 e0       	ldi	r24, 0x01	; 1
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	9f 8b       	std	Y+23, r25	; 0x17
    25aa:	8e 8b       	std	Y+22, r24	; 0x16
    25ac:	57 c0       	rjmp	.+174    	; 0x265c <.L14>

000025ae <.L30>:
	else if (__tmp > 65535)
    25ae:	20 e0       	ldi	r18, 0x00	; 0
    25b0:	3f ef       	ldi	r19, 0xFF	; 255
    25b2:	4f e7       	ldi	r20, 0x7F	; 127
    25b4:	57 e4       	ldi	r21, 0x47	; 71
    25b6:	6a 89       	ldd	r22, Y+18	; 0x12
    25b8:	7b 89       	ldd	r23, Y+19	; 0x13
    25ba:	8c 89       	ldd	r24, Y+20	; 0x14
    25bc:	9d 89       	ldd	r25, Y+21	; 0x15
    25be:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    25c2:	88 23       	and	r24, r24
    25c4:	d9 f1       	breq	.+118    	; 0x263c <.L31>
    25c6:	d4 f1       	brlt	.+116    	; 0x263c <.L31>

000025c8 <.Loc.66>:
		__ticks = (uint16_t) (__ms * 10.0);
    25c8:	20 e0       	ldi	r18, 0x00	; 0
    25ca:	30 e0       	ldi	r19, 0x00	; 0
    25cc:	40 e2       	ldi	r20, 0x20	; 32
    25ce:	51 e4       	ldi	r21, 0x41	; 65
    25d0:	6e 85       	ldd	r22, Y+14	; 0x0e
    25d2:	7f 85       	ldd	r23, Y+15	; 0x0f
    25d4:	88 89       	ldd	r24, Y+16	; 0x10
    25d6:	99 89       	ldd	r25, Y+17	; 0x11
    25d8:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    25dc:	6d ab       	std	Y+53, r22	; 0x35
    25de:	7e ab       	std	Y+54, r23	; 0x36
    25e0:	8f ab       	std	Y+55, r24	; 0x37
    25e2:	98 af       	std	Y+56, r25	; 0x38
    25e4:	8d a9       	ldd	r24, Y+53	; 0x35
    25e6:	9e a9       	ldd	r25, Y+54	; 0x36
    25e8:	af a9       	ldd	r26, Y+55	; 0x37
    25ea:	b8 ad       	ldd	r27, Y+56	; 0x38
    25ec:	89 a3       	std	Y+33, r24	; 0x21
    25ee:	9a a3       	std	Y+34, r25	; 0x22
    25f0:	ab a3       	std	Y+35, r26	; 0x23
    25f2:	bc a3       	std	Y+36, r27	; 0x24

000025f4 <.Loc.67>:
    25f4:	69 a1       	ldd	r22, Y+33	; 0x21
    25f6:	7a a1       	ldd	r23, Y+34	; 0x22
    25f8:	8b a1       	ldd	r24, Y+35	; 0x23
    25fa:	9c a1       	ldd	r25, Y+36	; 0x24
    25fc:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2600:	69 af       	std	Y+57, r22	; 0x39
    2602:	7a af       	std	Y+58, r23	; 0x3a
    2604:	8b af       	std	Y+59, r24	; 0x3b
    2606:	9c af       	std	Y+60, r25	; 0x3c
    2608:	a9 ad       	ldd	r26, Y+57	; 0x39
    260a:	ba ad       	ldd	r27, Y+58	; 0x3a
    260c:	bf 8b       	std	Y+23, r27	; 0x17
    260e:	ae 8b       	std	Y+22, r26	; 0x16

00002610 <.Loc.68>:
		while(__ticks)
    2610:	10 c0       	rjmp	.+32     	; 0x2632 <.L17>

00002612 <.L18>:
    2612:	80 e9       	ldi	r24, 0x90	; 144
    2614:	91 e0       	ldi	r25, 0x01	; 1
    2616:	99 8f       	std	Y+25, r25	; 0x19
    2618:	88 8f       	std	Y+24, r24	; 0x18

0000261a <.LBB60>:
    261a:	88 8d       	ldd	r24, Y+24	; 0x18
    261c:	99 8d       	ldd	r25, Y+25	; 0x19

0000261e <.L1^B1>:
    261e:	01 97       	sbiw	r24, 0x01	; 1
    2620:	f1 f7       	brne	.-4      	; 0x261e <.L1^B1>
    2622:	99 8f       	std	Y+25, r25	; 0x19
    2624:	88 8f       	std	Y+24, r24	; 0x18

00002626 <.Loc.70>:
	...

00002628 <.LBE60>:
			__ticks --;
    2628:	8e 89       	ldd	r24, Y+22	; 0x16
    262a:	9f 89       	ldd	r25, Y+23	; 0x17
    262c:	01 97       	sbiw	r24, 0x01	; 1
    262e:	9f 8b       	std	Y+23, r25	; 0x17
    2630:	8e 8b       	std	Y+22, r24	; 0x16

00002632 <.L17>:
		while(__ticks)
    2632:	8e 89       	ldd	r24, Y+22	; 0x16
    2634:	9f 89       	ldd	r25, Y+23	; 0x17
    2636:	00 97       	sbiw	r24, 0x00	; 0
    2638:	61 f7       	brne	.-40     	; 0x2612 <.L18>

0000263a <.Loc.73>:
		return;
    263a:	56 c0       	rjmp	.+172    	; 0x26e8 <.L9>

0000263c <.L31>:
		__ticks = (uint16_t)__tmp;
    263c:	6a 89       	ldd	r22, Y+18	; 0x12
    263e:	7b 89       	ldd	r23, Y+19	; 0x13
    2640:	8c 89       	ldd	r24, Y+20	; 0x14
    2642:	9d 89       	ldd	r25, Y+21	; 0x15
    2644:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2648:	21 96       	adiw	r28, 0x01	; 1
    264a:	6c af       	std	Y+60, r22	; 0x3c
    264c:	7d af       	std	Y+61, r23	; 0x3d
    264e:	8e af       	std	Y+62, r24	; 0x3e
    2650:	9f af       	std	Y+63, r25	; 0x3f
    2652:	21 97       	sbiw	r28, 0x01	; 1
    2654:	ed ad       	ldd	r30, Y+61	; 0x3d
    2656:	fe ad       	ldd	r31, Y+62	; 0x3e
    2658:	ff 8b       	std	Y+23, r31	; 0x17
    265a:	ee 8b       	std	Y+22, r30	; 0x16

0000265c <.L14>:
    265c:	8e 89       	ldd	r24, Y+22	; 0x16
    265e:	9f 89       	ldd	r25, Y+23	; 0x17
    2660:	9b 8f       	std	Y+27, r25	; 0x1b
    2662:	8a 8f       	std	Y+26, r24	; 0x1a

00002664 <.LBB62>:
    2664:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2666:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002668 <.L1^B2>:
    2668:	01 97       	sbiw	r24, 0x01	; 1
    266a:	f1 f7       	brne	.-4      	; 0x2668 <.L1^B2>
    266c:	9b 8f       	std	Y+27, r25	; 0x1b
    266e:	8a 8f       	std	Y+26, r24	; 0x1a

00002670 <.Loc.76>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    2670:	3b c0       	rjmp	.+118    	; 0x26e8 <.L9>

00002672 <.L29>:
	}
	else if (__tmp > 255)
    2672:	20 e0       	ldi	r18, 0x00	; 0
    2674:	30 e0       	ldi	r19, 0x00	; 0
    2676:	4f e7       	ldi	r20, 0x7F	; 127
    2678:	53 e4       	ldi	r21, 0x43	; 67
    267a:	6d 81       	ldd	r22, Y+5	; 0x05
    267c:	7e 81       	ldd	r23, Y+6	; 0x06
    267e:	8f 81       	ldd	r24, Y+7	; 0x07
    2680:	98 85       	ldd	r25, Y+8	; 0x08
    2682:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2686:	88 23       	and	r24, r24
    2688:	f9 f0       	breq	.+62     	; 0x26c8 <.L32>
    268a:	f4 f0       	brlt	.+60     	; 0x26c8 <.L32>

0000268c <.LBB64>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    268c:	69 85       	ldd	r22, Y+9	; 0x09
    268e:	7a 85       	ldd	r23, Y+10	; 0x0a
    2690:	8b 85       	ldd	r24, Y+11	; 0x0b
    2692:	9c 85       	ldd	r25, Y+12	; 0x0c
    2694:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2698:	25 96       	adiw	r28, 0x05	; 5
    269a:	6c af       	std	Y+60, r22	; 0x3c
    269c:	7d af       	std	Y+61, r23	; 0x3d
    269e:	8e af       	std	Y+62, r24	; 0x3e
    26a0:	9f af       	std	Y+63, r25	; 0x3f
    26a2:	25 97       	sbiw	r28, 0x05	; 5
    26a4:	23 96       	adiw	r28, 0x03	; 3
    26a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    26a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    26aa:	23 97       	sbiw	r28, 0x03	; 3
    26ac:	9d 8f       	std	Y+29, r25	; 0x1d
    26ae:	8c 8f       	std	Y+28, r24	; 0x1c
    26b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    26b2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    26b4:	9f 8f       	std	Y+31, r25	; 0x1f
    26b6:	8e 8f       	std	Y+30, r24	; 0x1e

000026b8 <.LBB65>:
	__asm__ volatile (
    26b8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    26ba:	9f 8d       	ldd	r25, Y+31	; 0x1f

000026bc <.L1^B3>:
    26bc:	01 97       	sbiw	r24, 0x01	; 1
    26be:	f1 f7       	brne	.-4      	; 0x26bc <.L1^B3>
    26c0:	9f 8f       	std	Y+31, r25	; 0x1f
    26c2:	8e 8f       	std	Y+30, r24	; 0x1e

000026c4 <.Loc.80>:
	...

000026c6 <.LBE65>:
		_delay_loop_2(__ticks);
		return;
    26c6:	17 c0       	rjmp	.+46     	; 0x26f6 <.L22>

000026c8 <.L32>:
	}
	else
		__ticks = (uint8_t)__tmp;
    26c8:	6d 81       	ldd	r22, Y+5	; 0x05
    26ca:	7e 81       	ldd	r23, Y+6	; 0x06
    26cc:	8f 81       	ldd	r24, Y+7	; 0x07
    26ce:	98 85       	ldd	r25, Y+8	; 0x08
    26d0:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    26d4:	29 96       	adiw	r28, 0x09	; 9
    26d6:	6c af       	std	Y+60, r22	; 0x3c
    26d8:	7d af       	std	Y+61, r23	; 0x3d
    26da:	8e af       	std	Y+62, r24	; 0x3e
    26dc:	9f af       	std	Y+63, r25	; 0x3f
    26de:	29 97       	sbiw	r28, 0x09	; 9
    26e0:	26 96       	adiw	r28, 0x06	; 6
    26e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    26e4:	26 97       	sbiw	r28, 0x06	; 6
    26e6:	9d 87       	std	Y+13, r25	; 0x0d

000026e8 <.L9>:
    26e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    26ea:	88 a3       	std	Y+32, r24	; 0x20

000026ec <.LBB67>:
	__asm__ volatile (
    26ec:	88 a1       	ldd	r24, Y+32	; 0x20

000026ee <.L1^B4>:
    26ee:	8a 95       	dec	r24
    26f0:	f1 f7       	brne	.-4      	; 0x26ee <.L1^B4>
    26f2:	88 a3       	std	Y+32, r24	; 0x20

000026f4 <.Loc.84>:
	...

000026f6 <.L22>:
    _delay_us(10);
    port_tri_F &= (~(1<<pin_tri_F));
    26f6:	82 e2       	ldi	r24, 0x22	; 34
    26f8:	90 e0       	ldi	r25, 0x00	; 0
    26fa:	dc 01       	movw	r26, r24
    26fc:	2c 91       	ld	r18, X

000026fe <.Loc.86>:
    26fe:	82 e2       	ldi	r24, 0x22	; 34
    2700:	90 e0       	ldi	r25, 0x00	; 0

00002702 <.Loc.87>:
    2702:	2e 7f       	andi	r18, 0xFE	; 254
    2704:	fc 01       	movw	r30, r24
    2706:	20 83       	st	Z, r18

00002708 <.Loc.88>:
}
    2708:	00 00       	nop
    270a:	c8 5b       	subi	r28, 0xB8	; 184
    270c:	df 4f       	sbci	r29, 0xFF	; 255
    270e:	0f b6       	in	r0, 0x3f	; 63
    2710:	f8 94       	cli
    2712:	de bf       	out	0x3e, r29	; 62
    2714:	0f be       	out	0x3f, r0	; 63
    2716:	cd bf       	out	0x3d, r28	; 61
    2718:	df 91       	pop	r29
    271a:	cf 91       	pop	r28
    271c:	08 95       	ret

0000271e <GetDistanceLeft>:

int GetDistanceLeft(void){
    271e:	cf 93       	push	r28
    2720:	df 93       	push	r29
    2722:	cd b7       	in	r28, 0x3d	; 61
    2724:	de b7       	in	r29, 0x3e	; 62
    2726:	6e 97       	sbiw	r28, 0x1e	; 30
    2728:	0f b6       	in	r0, 0x3f	; 63
    272a:	f8 94       	cli
    272c:	de bf       	out	0x3e, r29	; 62
    272e:	0f be       	out	0x3f, r0	; 63
    2730:	cd bf       	out	0x3d, r28	; 61

00002732 <.Loc.90>:
    int Distance;
    TriggerPulseLeft();
    2732:	0e 94 1d 14 	call	0x283a	; 0x283a <TriggerPulseLeft>

00002736 <.Loc.91>:
	...

00002738 <.L34>:
    while ((port_ech_L & (1<<pin_ech_L)) == 0){
    2738:	86 e0       	ldi	r24, 0x06	; 6
    273a:	91 e0       	ldi	r25, 0x01	; 1
    273c:	dc 01       	movw	r26, r24
    273e:	8c 91       	ld	r24, X

00002740 <.Loc.93>:
    2740:	88 2f       	mov	r24, r24
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	84 70       	andi	r24, 0x04	; 4
    2746:	99 27       	eor	r25, r25

00002748 <.Loc.94>:
    2748:	00 97       	sbiw	r24, 0x00	; 0
    274a:	b1 f3       	breq	.-20     	; 0x2738 <.L34>

0000274c <.Loc.95>:
    }
    TCNT2 = 0;
    274c:	82 eb       	ldi	r24, 0xB2	; 178
    274e:	90 e0       	ldi	r25, 0x00	; 0

00002750 <.Loc.96>:
    2750:	fc 01       	movw	r30, r24
    2752:	10 82       	st	Z, r1

00002754 <.Loc.97>:
    TIFR2 = 1<<TOV2;
    2754:	87 e3       	ldi	r24, 0x37	; 55
    2756:	90 e0       	ldi	r25, 0x00	; 0

00002758 <.Loc.98>:
    2758:	21 e0       	ldi	r18, 0x01	; 1
    275a:	dc 01       	movw	r26, r24
    275c:	2c 93       	st	X, r18

0000275e <.Loc.99>:
    count = 0;
    275e:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2762:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002766 <.Loc.100>:
	...

00002768 <.L35>:
    while ((port_ech_L & (1<<pin_ech_L)) != 0){
    2768:	86 e0       	ldi	r24, 0x06	; 6
    276a:	91 e0       	ldi	r25, 0x01	; 1
    276c:	fc 01       	movw	r30, r24
    276e:	80 81       	ld	r24, Z

00002770 <.Loc.102>:
    2770:	88 2f       	mov	r24, r24
    2772:	90 e0       	ldi	r25, 0x00	; 0
    2774:	84 70       	andi	r24, 0x04	; 4
    2776:	99 27       	eor	r25, r25

00002778 <.Loc.103>:
    2778:	00 97       	sbiw	r24, 0x00	; 0
    277a:	b1 f7       	brne	.-20     	; 0x2768 <.L35>

0000277c <.Loc.104>:

    }
    Distance = count;
    277c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2780:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2784:	9a 83       	std	Y+2, r25	; 0x02
    2786:	89 83       	std	Y+1, r24	; 0x01

00002788 <.Loc.105>:
    Distance = Distance * 0.008 * 343;
    2788:	89 81       	ldd	r24, Y+1	; 0x01
    278a:	9a 81       	ldd	r25, Y+2	; 0x02
    278c:	9c 01       	movw	r18, r24
    278e:	99 0f       	add	r25, r25
    2790:	44 0b       	sbc	r20, r20
    2792:	55 0b       	sbc	r21, r21
    2794:	2f 87       	std	Y+15, r18	; 0x0f
    2796:	38 8b       	std	Y+16, r19	; 0x10
    2798:	49 8b       	std	Y+17, r20	; 0x11
    279a:	5a 8b       	std	Y+18, r21	; 0x12
    279c:	6f 85       	ldd	r22, Y+15	; 0x0f
    279e:	78 89       	ldd	r23, Y+16	; 0x10
    27a0:	89 89       	ldd	r24, Y+17	; 0x11
    27a2:	9a 89       	ldd	r25, Y+18	; 0x12
    27a4:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    27a8:	6b 83       	std	Y+3, r22	; 0x03
    27aa:	7c 83       	std	Y+4, r23	; 0x04
    27ac:	8d 83       	std	Y+5, r24	; 0x05
    27ae:	9e 83       	std	Y+6, r25	; 0x06
    27b0:	2f e6       	ldi	r18, 0x6F	; 111
    27b2:	32 e1       	ldi	r19, 0x12	; 18
    27b4:	43 e0       	ldi	r20, 0x03	; 3
    27b6:	5c e3       	ldi	r21, 0x3C	; 60
    27b8:	6b 81       	ldd	r22, Y+3	; 0x03
    27ba:	7c 81       	ldd	r23, Y+4	; 0x04
    27bc:	8d 81       	ldd	r24, Y+5	; 0x05
    27be:	9e 81       	ldd	r25, Y+6	; 0x06
    27c0:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    27c4:	6b 8b       	std	Y+19, r22	; 0x13
    27c6:	7c 8b       	std	Y+20, r23	; 0x14
    27c8:	8d 8b       	std	Y+21, r24	; 0x15
    27ca:	9e 8b       	std	Y+22, r25	; 0x16
    27cc:	8b 89       	ldd	r24, Y+19	; 0x13
    27ce:	9c 89       	ldd	r25, Y+20	; 0x14
    27d0:	ad 89       	ldd	r26, Y+21	; 0x15
    27d2:	be 89       	ldd	r27, Y+22	; 0x16
    27d4:	8f 83       	std	Y+7, r24	; 0x07
    27d6:	98 87       	std	Y+8, r25	; 0x08
    27d8:	a9 87       	std	Y+9, r26	; 0x09
    27da:	ba 87       	std	Y+10, r27	; 0x0a

000027dc <.Loc.106>:
    27dc:	20 e0       	ldi	r18, 0x00	; 0
    27de:	30 e8       	ldi	r19, 0x80	; 128
    27e0:	4b ea       	ldi	r20, 0xAB	; 171
    27e2:	53 e4       	ldi	r21, 0x43	; 67
    27e4:	6f 81       	ldd	r22, Y+7	; 0x07
    27e6:	78 85       	ldd	r23, Y+8	; 0x08
    27e8:	89 85       	ldd	r24, Y+9	; 0x09
    27ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    27ec:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    27f0:	6f 8b       	std	Y+23, r22	; 0x17
    27f2:	78 8f       	std	Y+24, r23	; 0x18
    27f4:	89 8f       	std	Y+25, r24	; 0x19
    27f6:	9a 8f       	std	Y+26, r25	; 0x1a
    27f8:	2f 89       	ldd	r18, Y+23	; 0x17
    27fa:	38 8d       	ldd	r19, Y+24	; 0x18
    27fc:	49 8d       	ldd	r20, Y+25	; 0x19
    27fe:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2800:	2b 87       	std	Y+11, r18	; 0x0b
    2802:	3c 87       	std	Y+12, r19	; 0x0c
    2804:	4d 87       	std	Y+13, r20	; 0x0d
    2806:	5e 87       	std	Y+14, r21	; 0x0e

00002808 <.Loc.107>:
    2808:	6b 85       	ldd	r22, Y+11	; 0x0b
    280a:	7c 85       	ldd	r23, Y+12	; 0x0c
    280c:	8d 85       	ldd	r24, Y+13	; 0x0d
    280e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2810:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    2814:	6b 8f       	std	Y+27, r22	; 0x1b
    2816:	7c 8f       	std	Y+28, r23	; 0x1c
    2818:	8d 8f       	std	Y+29, r24	; 0x1d
    281a:	9e 8f       	std	Y+30, r25	; 0x1e
    281c:	4b 8d       	ldd	r20, Y+27	; 0x1b
    281e:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2820:	5a 83       	std	Y+2, r21	; 0x02
    2822:	49 83       	std	Y+1, r20	; 0x01

00002824 <.Loc.108>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    2824:	89 81       	ldd	r24, Y+1	; 0x01
    2826:	9a 81       	ldd	r25, Y+2	; 0x02

00002828 <.Loc.109>:
}
    2828:	6e 96       	adiw	r28, 0x1e	; 30
    282a:	0f b6       	in	r0, 0x3f	; 63
    282c:	f8 94       	cli
    282e:	de bf       	out	0x3e, r29	; 62
    2830:	0f be       	out	0x3f, r0	; 63
    2832:	cd bf       	out	0x3d, r28	; 61
    2834:	df 91       	pop	r29
    2836:	cf 91       	pop	r28
    2838:	08 95       	ret

0000283a <TriggerPulseLeft>:
void TriggerPulseLeft (void){
    283a:	cf 93       	push	r28
    283c:	df 93       	push	r29
    283e:	cd b7       	in	r28, 0x3d	; 61
    2840:	de b7       	in	r29, 0x3e	; 62
    2842:	c8 54       	subi	r28, 0x48	; 72
    2844:	d1 09       	sbc	r29, r1
    2846:	0f b6       	in	r0, 0x3f	; 63
    2848:	f8 94       	cli
    284a:	de bf       	out	0x3e, r29	; 62
    284c:	0f be       	out	0x3f, r0	; 63
    284e:	cd bf       	out	0x3d, r28	; 61

00002850 <.Loc.111>:
    port_tri_L |= (1<<pin_tri_L);
    2850:	82 e2       	ldi	r24, 0x22	; 34
    2852:	90 e0       	ldi	r25, 0x00	; 0
    2854:	dc 01       	movw	r26, r24
    2856:	2c 91       	ld	r18, X
    2858:	82 e2       	ldi	r24, 0x22	; 34
    285a:	90 e0       	ldi	r25, 0x00	; 0

0000285c <.Loc.112>:
    285c:	24 60       	ori	r18, 0x04	; 4
    285e:	fc 01       	movw	r30, r24
    2860:	20 83       	st	Z, r18
    2862:	80 e0       	ldi	r24, 0x00	; 0
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	a0 e2       	ldi	r26, 0x20	; 32
    2868:	b1 e4       	ldi	r27, 0x41	; 65
    286a:	89 83       	std	Y+1, r24	; 0x01
    286c:	9a 83       	std	Y+2, r25	; 0x02
    286e:	ab 83       	std	Y+3, r26	; 0x03
    2870:	bc 83       	std	Y+4, r27	; 0x04

00002872 <.LBB69>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2872:	2b ea       	ldi	r18, 0xAB	; 171
    2874:	3a ea       	ldi	r19, 0xAA	; 170
    2876:	4a ea       	ldi	r20, 0xAA	; 170
    2878:	50 e4       	ldi	r21, 0x40	; 64
    287a:	69 81       	ldd	r22, Y+1	; 0x01
    287c:	7a 81       	ldd	r23, Y+2	; 0x02
    287e:	8b 81       	ldd	r24, Y+3	; 0x03
    2880:	9c 81       	ldd	r25, Y+4	; 0x04
    2882:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2886:	6d a3       	std	Y+37, r22	; 0x25
    2888:	7e a3       	std	Y+38, r23	; 0x26
    288a:	8f a3       	std	Y+39, r24	; 0x27
    288c:	98 a7       	std	Y+40, r25	; 0x28
    288e:	8d a1       	ldd	r24, Y+37	; 0x25
    2890:	9e a1       	ldd	r25, Y+38	; 0x26
    2892:	af a1       	ldd	r26, Y+39	; 0x27
    2894:	b8 a5       	ldd	r27, Y+40	; 0x28
    2896:	8d 83       	std	Y+5, r24	; 0x05
    2898:	9e 83       	std	Y+6, r25	; 0x06
    289a:	af 83       	std	Y+7, r26	; 0x07
    289c:	b8 87       	std	Y+8, r27	; 0x08

0000289e <.Loc.114>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    289e:	20 e0       	ldi	r18, 0x00	; 0
    28a0:	30 e0       	ldi	r19, 0x00	; 0
    28a2:	40 e8       	ldi	r20, 0x80	; 128
    28a4:	50 e4       	ldi	r21, 0x40	; 64
    28a6:	69 81       	ldd	r22, Y+1	; 0x01
    28a8:	7a 81       	ldd	r23, Y+2	; 0x02
    28aa:	8b 81       	ldd	r24, Y+3	; 0x03
    28ac:	9c 81       	ldd	r25, Y+4	; 0x04
    28ae:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    28b2:	69 a7       	std	Y+41, r22	; 0x29
    28b4:	7a a7       	std	Y+42, r23	; 0x2a
    28b6:	8b a7       	std	Y+43, r24	; 0x2b
    28b8:	9c a7       	std	Y+44, r25	; 0x2c
    28ba:	89 a5       	ldd	r24, Y+41	; 0x29
    28bc:	9a a5       	ldd	r25, Y+42	; 0x2a
    28be:	ab a5       	ldd	r26, Y+43	; 0x2b
    28c0:	bc a5       	ldd	r27, Y+44	; 0x2c
    28c2:	89 87       	std	Y+9, r24	; 0x09
    28c4:	9a 87       	std	Y+10, r25	; 0x0a
    28c6:	ab 87       	std	Y+11, r26	; 0x0b
    28c8:	bc 87       	std	Y+12, r27	; 0x0c

000028ca <.Loc.115>:
	if (__tmp < 1.0)
    28ca:	20 e0       	ldi	r18, 0x00	; 0
    28cc:	30 e0       	ldi	r19, 0x00	; 0
    28ce:	40 e8       	ldi	r20, 0x80	; 128
    28d0:	5f e3       	ldi	r21, 0x3F	; 63
    28d2:	6d 81       	ldd	r22, Y+5	; 0x05
    28d4:	7e 81       	ldd	r23, Y+6	; 0x06
    28d6:	8f 81       	ldd	r24, Y+7	; 0x07
    28d8:	98 85       	ldd	r25, Y+8	; 0x08
    28da:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    28de:	88 23       	and	r24, r24
    28e0:	1c f4       	brge	.+6      	; 0x28e8 <.L59>

000028e2 <.Loc.116>:
		__ticks = 1;
    28e2:	81 e0       	ldi	r24, 0x01	; 1
    28e4:	8d 87       	std	Y+13, r24	; 0x0d
    28e6:	e8 c0       	rjmp	.+464    	; 0x2ab8 <.L40>

000028e8 <.L59>:
	else if (__tmp2 > 65535)
    28e8:	20 e0       	ldi	r18, 0x00	; 0
    28ea:	3f ef       	ldi	r19, 0xFF	; 255
    28ec:	4f e7       	ldi	r20, 0x7F	; 127
    28ee:	57 e4       	ldi	r21, 0x47	; 71
    28f0:	69 85       	ldd	r22, Y+9	; 0x09
    28f2:	7a 85       	ldd	r23, Y+10	; 0x0a
    28f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    28f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    28f8:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    28fc:	88 23       	and	r24, r24
    28fe:	09 f0       	breq	.+2      	; 0x2902 <L0^A>

00002900 <L0^A>:
    2900:	0c f4       	brge	.+2      	; 0x2904 <.Loc.118>

00002902 <L0^A>:
    2902:	9f c0       	rjmp	.+318    	; 0x2a42 <.L60>

00002904 <.Loc.118>:
		_delay_ms(__us / 1000.0);
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	30 e0       	ldi	r19, 0x00	; 0
    2908:	4a e7       	ldi	r20, 0x7A	; 122
    290a:	54 e4       	ldi	r21, 0x44	; 68
    290c:	69 81       	ldd	r22, Y+1	; 0x01
    290e:	7a 81       	ldd	r23, Y+2	; 0x02
    2910:	8b 81       	ldd	r24, Y+3	; 0x03
    2912:	9c 81       	ldd	r25, Y+4	; 0x04
    2914:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
    2918:	6d a7       	std	Y+45, r22	; 0x2d
    291a:	7e a7       	std	Y+46, r23	; 0x2e
    291c:	8f a7       	std	Y+47, r24	; 0x2f
    291e:	98 ab       	std	Y+48, r25	; 0x30
    2920:	8d a5       	ldd	r24, Y+45	; 0x2d
    2922:	9e a5       	ldd	r25, Y+46	; 0x2e
    2924:	af a5       	ldd	r26, Y+47	; 0x2f
    2926:	b8 a9       	ldd	r27, Y+48	; 0x30
    2928:	8e 87       	std	Y+14, r24	; 0x0e
    292a:	9f 87       	std	Y+15, r25	; 0x0f
    292c:	a8 8b       	std	Y+16, r26	; 0x10
    292e:	b9 8b       	std	Y+17, r27	; 0x11

00002930 <.LBB71>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2930:	20 e0       	ldi	r18, 0x00	; 0
    2932:	30 e0       	ldi	r19, 0x00	; 0
    2934:	4a e7       	ldi	r20, 0x7A	; 122
    2936:	55 e4       	ldi	r21, 0x45	; 69
    2938:	6e 85       	ldd	r22, Y+14	; 0x0e
    293a:	7f 85       	ldd	r23, Y+15	; 0x0f
    293c:	88 89       	ldd	r24, Y+16	; 0x10
    293e:	99 89       	ldd	r25, Y+17	; 0x11
    2940:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2944:	69 ab       	std	Y+49, r22	; 0x31
    2946:	7a ab       	std	Y+50, r23	; 0x32
    2948:	8b ab       	std	Y+51, r24	; 0x33
    294a:	9c ab       	std	Y+52, r25	; 0x34
    294c:	89 a9       	ldd	r24, Y+49	; 0x31
    294e:	9a a9       	ldd	r25, Y+50	; 0x32
    2950:	ab a9       	ldd	r26, Y+51	; 0x33
    2952:	bc a9       	ldd	r27, Y+52	; 0x34
    2954:	8a 8b       	std	Y+18, r24	; 0x12
    2956:	9b 8b       	std	Y+19, r25	; 0x13
    2958:	ac 8b       	std	Y+20, r26	; 0x14
    295a:	bd 8b       	std	Y+21, r27	; 0x15

0000295c <.Loc.120>:
	if (__tmp < 1.0)
    295c:	20 e0       	ldi	r18, 0x00	; 0
    295e:	30 e0       	ldi	r19, 0x00	; 0
    2960:	40 e8       	ldi	r20, 0x80	; 128
    2962:	5f e3       	ldi	r21, 0x3F	; 63
    2964:	6a 89       	ldd	r22, Y+18	; 0x12
    2966:	7b 89       	ldd	r23, Y+19	; 0x13
    2968:	8c 89       	ldd	r24, Y+20	; 0x14
    296a:	9d 89       	ldd	r25, Y+21	; 0x15
    296c:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    2970:	88 23       	and	r24, r24
    2972:	2c f4       	brge	.+10     	; 0x297e <.L61>

00002974 <.Loc.121>:
		__ticks = 1;
    2974:	81 e0       	ldi	r24, 0x01	; 1
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	9f 8b       	std	Y+23, r25	; 0x17
    297a:	8e 8b       	std	Y+22, r24	; 0x16
    297c:	57 c0       	rjmp	.+174    	; 0x2a2c <.L45>

0000297e <.L61>:
	else if (__tmp > 65535)
    297e:	20 e0       	ldi	r18, 0x00	; 0
    2980:	3f ef       	ldi	r19, 0xFF	; 255
    2982:	4f e7       	ldi	r20, 0x7F	; 127
    2984:	57 e4       	ldi	r21, 0x47	; 71
    2986:	6a 89       	ldd	r22, Y+18	; 0x12
    2988:	7b 89       	ldd	r23, Y+19	; 0x13
    298a:	8c 89       	ldd	r24, Y+20	; 0x14
    298c:	9d 89       	ldd	r25, Y+21	; 0x15
    298e:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2992:	88 23       	and	r24, r24
    2994:	d9 f1       	breq	.+118    	; 0x2a0c <.L62>
    2996:	d4 f1       	brlt	.+116    	; 0x2a0c <.L62>

00002998 <.Loc.123>:
		__ticks = (uint16_t) (__ms * 10.0);
    2998:	20 e0       	ldi	r18, 0x00	; 0
    299a:	30 e0       	ldi	r19, 0x00	; 0
    299c:	40 e2       	ldi	r20, 0x20	; 32
    299e:	51 e4       	ldi	r21, 0x41	; 65
    29a0:	6e 85       	ldd	r22, Y+14	; 0x0e
    29a2:	7f 85       	ldd	r23, Y+15	; 0x0f
    29a4:	88 89       	ldd	r24, Y+16	; 0x10
    29a6:	99 89       	ldd	r25, Y+17	; 0x11
    29a8:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    29ac:	6d ab       	std	Y+53, r22	; 0x35
    29ae:	7e ab       	std	Y+54, r23	; 0x36
    29b0:	8f ab       	std	Y+55, r24	; 0x37
    29b2:	98 af       	std	Y+56, r25	; 0x38
    29b4:	8d a9       	ldd	r24, Y+53	; 0x35
    29b6:	9e a9       	ldd	r25, Y+54	; 0x36
    29b8:	af a9       	ldd	r26, Y+55	; 0x37
    29ba:	b8 ad       	ldd	r27, Y+56	; 0x38
    29bc:	89 a3       	std	Y+33, r24	; 0x21
    29be:	9a a3       	std	Y+34, r25	; 0x22
    29c0:	ab a3       	std	Y+35, r26	; 0x23
    29c2:	bc a3       	std	Y+36, r27	; 0x24

000029c4 <.Loc.124>:
    29c4:	69 a1       	ldd	r22, Y+33	; 0x21
    29c6:	7a a1       	ldd	r23, Y+34	; 0x22
    29c8:	8b a1       	ldd	r24, Y+35	; 0x23
    29ca:	9c a1       	ldd	r25, Y+36	; 0x24
    29cc:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    29d0:	69 af       	std	Y+57, r22	; 0x39
    29d2:	7a af       	std	Y+58, r23	; 0x3a
    29d4:	8b af       	std	Y+59, r24	; 0x3b
    29d6:	9c af       	std	Y+60, r25	; 0x3c
    29d8:	a9 ad       	ldd	r26, Y+57	; 0x39
    29da:	ba ad       	ldd	r27, Y+58	; 0x3a
    29dc:	bf 8b       	std	Y+23, r27	; 0x17
    29de:	ae 8b       	std	Y+22, r26	; 0x16

000029e0 <.Loc.125>:
		while(__ticks)
    29e0:	10 c0       	rjmp	.+32     	; 0x2a02 <.L48>

000029e2 <.L49>:
    29e2:	80 e9       	ldi	r24, 0x90	; 144
    29e4:	91 e0       	ldi	r25, 0x01	; 1
    29e6:	99 8f       	std	Y+25, r25	; 0x19
    29e8:	88 8f       	std	Y+24, r24	; 0x18

000029ea <.LBB73>:
	__asm__ volatile (
    29ea:	88 8d       	ldd	r24, Y+24	; 0x18
    29ec:	99 8d       	ldd	r25, Y+25	; 0x19

000029ee <.L1^B5>:
    29ee:	01 97       	sbiw	r24, 0x01	; 1
    29f0:	f1 f7       	brne	.-4      	; 0x29ee <.L1^B5>
    29f2:	99 8f       	std	Y+25, r25	; 0x19
    29f4:	88 8f       	std	Y+24, r24	; 0x18

000029f6 <.Loc.127>:
	...

000029f8 <.LBE73>:
			__ticks --;
    29f8:	8e 89       	ldd	r24, Y+22	; 0x16
    29fa:	9f 89       	ldd	r25, Y+23	; 0x17
    29fc:	01 97       	sbiw	r24, 0x01	; 1
    29fe:	9f 8b       	std	Y+23, r25	; 0x17
    2a00:	8e 8b       	std	Y+22, r24	; 0x16

00002a02 <.L48>:
		while(__ticks)
    2a02:	8e 89       	ldd	r24, Y+22	; 0x16
    2a04:	9f 89       	ldd	r25, Y+23	; 0x17
    2a06:	00 97       	sbiw	r24, 0x00	; 0
    2a08:	61 f7       	brne	.-40     	; 0x29e2 <.L49>

00002a0a <.Loc.130>:
		return;
    2a0a:	56 c0       	rjmp	.+172    	; 0x2ab8 <.L40>

00002a0c <.L62>:
		__ticks = (uint16_t)__tmp;
    2a0c:	6a 89       	ldd	r22, Y+18	; 0x12
    2a0e:	7b 89       	ldd	r23, Y+19	; 0x13
    2a10:	8c 89       	ldd	r24, Y+20	; 0x14
    2a12:	9d 89       	ldd	r25, Y+21	; 0x15
    2a14:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2a18:	21 96       	adiw	r28, 0x01	; 1
    2a1a:	6c af       	std	Y+60, r22	; 0x3c
    2a1c:	7d af       	std	Y+61, r23	; 0x3d
    2a1e:	8e af       	std	Y+62, r24	; 0x3e
    2a20:	9f af       	std	Y+63, r25	; 0x3f
    2a22:	21 97       	sbiw	r28, 0x01	; 1
    2a24:	ed ad       	ldd	r30, Y+61	; 0x3d
    2a26:	fe ad       	ldd	r31, Y+62	; 0x3e
    2a28:	ff 8b       	std	Y+23, r31	; 0x17
    2a2a:	ee 8b       	std	Y+22, r30	; 0x16

00002a2c <.L45>:
    2a2c:	8e 89       	ldd	r24, Y+22	; 0x16
    2a2e:	9f 89       	ldd	r25, Y+23	; 0x17
    2a30:	9b 8f       	std	Y+27, r25	; 0x1b
    2a32:	8a 8f       	std	Y+26, r24	; 0x1a

00002a34 <.LBB75>:
    2a34:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2a36:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002a38 <.L1^B6>:
    2a38:	01 97       	sbiw	r24, 0x01	; 1
    2a3a:	f1 f7       	brne	.-4      	; 0x2a38 <.L1^B6>
    2a3c:	9b 8f       	std	Y+27, r25	; 0x1b
    2a3e:	8a 8f       	std	Y+26, r24	; 0x1a

00002a40 <.Loc.133>:
}
    2a40:	3b c0       	rjmp	.+118    	; 0x2ab8 <.L40>

00002a42 <.L60>:
	else if (__tmp > 255)
    2a42:	20 e0       	ldi	r18, 0x00	; 0
    2a44:	30 e0       	ldi	r19, 0x00	; 0
    2a46:	4f e7       	ldi	r20, 0x7F	; 127
    2a48:	53 e4       	ldi	r21, 0x43	; 67
    2a4a:	6d 81       	ldd	r22, Y+5	; 0x05
    2a4c:	7e 81       	ldd	r23, Y+6	; 0x06
    2a4e:	8f 81       	ldd	r24, Y+7	; 0x07
    2a50:	98 85       	ldd	r25, Y+8	; 0x08
    2a52:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2a56:	88 23       	and	r24, r24
    2a58:	f9 f0       	breq	.+62     	; 0x2a98 <.L63>
    2a5a:	f4 f0       	brlt	.+60     	; 0x2a98 <.L63>

00002a5c <.LBB77>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2a5c:	69 85       	ldd	r22, Y+9	; 0x09
    2a5e:	7a 85       	ldd	r23, Y+10	; 0x0a
    2a60:	8b 85       	ldd	r24, Y+11	; 0x0b
    2a62:	9c 85       	ldd	r25, Y+12	; 0x0c
    2a64:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2a68:	25 96       	adiw	r28, 0x05	; 5
    2a6a:	6c af       	std	Y+60, r22	; 0x3c
    2a6c:	7d af       	std	Y+61, r23	; 0x3d
    2a6e:	8e af       	std	Y+62, r24	; 0x3e
    2a70:	9f af       	std	Y+63, r25	; 0x3f
    2a72:	25 97       	sbiw	r28, 0x05	; 5
    2a74:	23 96       	adiw	r28, 0x03	; 3
    2a76:	8e ad       	ldd	r24, Y+62	; 0x3e
    2a78:	9f ad       	ldd	r25, Y+63	; 0x3f
    2a7a:	23 97       	sbiw	r28, 0x03	; 3
    2a7c:	9d 8f       	std	Y+29, r25	; 0x1d
    2a7e:	8c 8f       	std	Y+28, r24	; 0x1c
    2a80:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a82:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a84:	9f 8f       	std	Y+31, r25	; 0x1f
    2a86:	8e 8f       	std	Y+30, r24	; 0x1e

00002a88 <.LBB78>:
	__asm__ volatile (
    2a88:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2a8a:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002a8c <.L1^B7>:
    2a8c:	01 97       	sbiw	r24, 0x01	; 1
    2a8e:	f1 f7       	brne	.-4      	; 0x2a8c <.L1^B7>
    2a90:	9f 8f       	std	Y+31, r25	; 0x1f
    2a92:	8e 8f       	std	Y+30, r24	; 0x1e

00002a94 <.Loc.137>:
	...

00002a96 <.LBE78>:
		return;
    2a96:	17 c0       	rjmp	.+46     	; 0x2ac6 <.L53>

00002a98 <.L63>:
		__ticks = (uint8_t)__tmp;
    2a98:	6d 81       	ldd	r22, Y+5	; 0x05
    2a9a:	7e 81       	ldd	r23, Y+6	; 0x06
    2a9c:	8f 81       	ldd	r24, Y+7	; 0x07
    2a9e:	98 85       	ldd	r25, Y+8	; 0x08
    2aa0:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2aa4:	29 96       	adiw	r28, 0x09	; 9
    2aa6:	6c af       	std	Y+60, r22	; 0x3c
    2aa8:	7d af       	std	Y+61, r23	; 0x3d
    2aaa:	8e af       	std	Y+62, r24	; 0x3e
    2aac:	9f af       	std	Y+63, r25	; 0x3f
    2aae:	29 97       	sbiw	r28, 0x09	; 9
    2ab0:	26 96       	adiw	r28, 0x06	; 6
    2ab2:	9f ad       	ldd	r25, Y+63	; 0x3f
    2ab4:	26 97       	sbiw	r28, 0x06	; 6
    2ab6:	9d 87       	std	Y+13, r25	; 0x0d

00002ab8 <.L40>:
    2ab8:	8d 85       	ldd	r24, Y+13	; 0x0d
    2aba:	88 a3       	std	Y+32, r24	; 0x20

00002abc <.LBB80>:
	__asm__ volatile (
    2abc:	88 a1       	ldd	r24, Y+32	; 0x20

00002abe <.L1^B8>:
    2abe:	8a 95       	dec	r24
    2ac0:	f1 f7       	brne	.-4      	; 0x2abe <.L1^B8>
    2ac2:	88 a3       	std	Y+32, r24	; 0x20

00002ac4 <.Loc.141>:
	...

00002ac6 <.L53>:
    _delay_us(10);
    port_tri_L &= (~(1<<pin_tri_L));
    2ac6:	82 e2       	ldi	r24, 0x22	; 34
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	dc 01       	movw	r26, r24
    2acc:	2c 91       	ld	r18, X

00002ace <.Loc.143>:
    2ace:	82 e2       	ldi	r24, 0x22	; 34
    2ad0:	90 e0       	ldi	r25, 0x00	; 0

00002ad2 <.Loc.144>:
    2ad2:	2b 7f       	andi	r18, 0xFB	; 251
    2ad4:	fc 01       	movw	r30, r24
    2ad6:	20 83       	st	Z, r18

00002ad8 <.Loc.145>:
}
    2ad8:	00 00       	nop
    2ada:	c8 5b       	subi	r28, 0xB8	; 184
    2adc:	df 4f       	sbci	r29, 0xFF	; 255
    2ade:	0f b6       	in	r0, 0x3f	; 63
    2ae0:	f8 94       	cli
    2ae2:	de bf       	out	0x3e, r29	; 62
    2ae4:	0f be       	out	0x3f, r0	; 63
    2ae6:	cd bf       	out	0x3d, r28	; 61
    2ae8:	df 91       	pop	r29
    2aea:	cf 91       	pop	r28
    2aec:	08 95       	ret

00002aee <GetDistanceRight>:

int GetDistanceRight(void){
    2aee:	cf 93       	push	r28
    2af0:	df 93       	push	r29
    2af2:	cd b7       	in	r28, 0x3d	; 61
    2af4:	de b7       	in	r29, 0x3e	; 62
    2af6:	6e 97       	sbiw	r28, 0x1e	; 30
    2af8:	0f b6       	in	r0, 0x3f	; 63
    2afa:	f8 94       	cli
    2afc:	de bf       	out	0x3e, r29	; 62
    2afe:	0f be       	out	0x3f, r0	; 63
    2b00:	cd bf       	out	0x3d, r28	; 61

00002b02 <.Loc.147>:
    int Distance;
    TriggerPulseRight();
    2b02:	0e 94 05 16 	call	0x2c0a	; 0x2c0a <TriggerPulseRight>

00002b06 <.Loc.148>:
	...

00002b08 <.L65>:
    while ((port_ech_R & (1<<pin_ech_R)) == 0){
    2b08:	86 e0       	ldi	r24, 0x06	; 6
    2b0a:	91 e0       	ldi	r25, 0x01	; 1
    2b0c:	dc 01       	movw	r26, r24
    2b0e:	8c 91       	ld	r24, X

00002b10 <.Loc.150>:
    2b10:	88 2f       	mov	r24, r24
    2b12:	90 e0       	ldi	r25, 0x00	; 0
    2b14:	82 70       	andi	r24, 0x02	; 2
    2b16:	99 27       	eor	r25, r25

00002b18 <.Loc.151>:
    2b18:	00 97       	sbiw	r24, 0x00	; 0
    2b1a:	b1 f3       	breq	.-20     	; 0x2b08 <.L65>

00002b1c <.Loc.152>:
    }
    TCNT2 = 0;
    2b1c:	82 eb       	ldi	r24, 0xB2	; 178
    2b1e:	90 e0       	ldi	r25, 0x00	; 0

00002b20 <.Loc.153>:
    2b20:	fc 01       	movw	r30, r24
    2b22:	10 82       	st	Z, r1

00002b24 <.Loc.154>:
    TIFR2 = 1<<TOV2;
    2b24:	87 e3       	ldi	r24, 0x37	; 55
    2b26:	90 e0       	ldi	r25, 0x00	; 0

00002b28 <.Loc.155>:
    2b28:	21 e0       	ldi	r18, 0x01	; 1
    2b2a:	dc 01       	movw	r26, r24
    2b2c:	2c 93       	st	X, r18

00002b2e <.Loc.156>:
    count = 0;
    2b2e:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2b32:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002b36 <.Loc.157>:
	...

00002b38 <.L66>:
    while ((port_ech_R & (1<<pin_ech_R)) != 0){
    2b38:	86 e0       	ldi	r24, 0x06	; 6
    2b3a:	91 e0       	ldi	r25, 0x01	; 1
    2b3c:	fc 01       	movw	r30, r24
    2b3e:	80 81       	ld	r24, Z

00002b40 <.Loc.159>:
    2b40:	88 2f       	mov	r24, r24
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	82 70       	andi	r24, 0x02	; 2
    2b46:	99 27       	eor	r25, r25

00002b48 <.Loc.160>:
    2b48:	00 97       	sbiw	r24, 0x00	; 0
    2b4a:	b1 f7       	brne	.-20     	; 0x2b38 <.L66>

00002b4c <.Loc.161>:

    }
    Distance = count;
    2b4c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2b50:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2b54:	9a 83       	std	Y+2, r25	; 0x02
    2b56:	89 83       	std	Y+1, r24	; 0x01

00002b58 <.Loc.162>:
    Distance = Distance * 0.008 * 343;
    2b58:	89 81       	ldd	r24, Y+1	; 0x01
    2b5a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b5c:	9c 01       	movw	r18, r24
    2b5e:	99 0f       	add	r25, r25
    2b60:	44 0b       	sbc	r20, r20
    2b62:	55 0b       	sbc	r21, r21
    2b64:	2f 87       	std	Y+15, r18	; 0x0f
    2b66:	38 8b       	std	Y+16, r19	; 0x10
    2b68:	49 8b       	std	Y+17, r20	; 0x11
    2b6a:	5a 8b       	std	Y+18, r21	; 0x12
    2b6c:	6f 85       	ldd	r22, Y+15	; 0x0f
    2b6e:	78 89       	ldd	r23, Y+16	; 0x10
    2b70:	89 89       	ldd	r24, Y+17	; 0x11
    2b72:	9a 89       	ldd	r25, Y+18	; 0x12
    2b74:	0e 94 1c 19 	call	0x3238	; 0x3238 <__floatsisf>
    2b78:	6b 83       	std	Y+3, r22	; 0x03
    2b7a:	7c 83       	std	Y+4, r23	; 0x04
    2b7c:	8d 83       	std	Y+5, r24	; 0x05
    2b7e:	9e 83       	std	Y+6, r25	; 0x06
    2b80:	2f e6       	ldi	r18, 0x6F	; 111
    2b82:	32 e1       	ldi	r19, 0x12	; 18
    2b84:	43 e0       	ldi	r20, 0x03	; 3
    2b86:	5c e3       	ldi	r21, 0x3C	; 60
    2b88:	6b 81       	ldd	r22, Y+3	; 0x03
    2b8a:	7c 81       	ldd	r23, Y+4	; 0x04
    2b8c:	8d 81       	ldd	r24, Y+5	; 0x05
    2b8e:	9e 81       	ldd	r25, Y+6	; 0x06
    2b90:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2b94:	6b 8b       	std	Y+19, r22	; 0x13
    2b96:	7c 8b       	std	Y+20, r23	; 0x14
    2b98:	8d 8b       	std	Y+21, r24	; 0x15
    2b9a:	9e 8b       	std	Y+22, r25	; 0x16
    2b9c:	8b 89       	ldd	r24, Y+19	; 0x13
    2b9e:	9c 89       	ldd	r25, Y+20	; 0x14
    2ba0:	ad 89       	ldd	r26, Y+21	; 0x15
    2ba2:	be 89       	ldd	r27, Y+22	; 0x16
    2ba4:	8f 83       	std	Y+7, r24	; 0x07
    2ba6:	98 87       	std	Y+8, r25	; 0x08
    2ba8:	a9 87       	std	Y+9, r26	; 0x09
    2baa:	ba 87       	std	Y+10, r27	; 0x0a

00002bac <.Loc.163>:
    2bac:	20 e0       	ldi	r18, 0x00	; 0
    2bae:	30 e8       	ldi	r19, 0x80	; 128
    2bb0:	4b ea       	ldi	r20, 0xAB	; 171
    2bb2:	53 e4       	ldi	r21, 0x43	; 67
    2bb4:	6f 81       	ldd	r22, Y+7	; 0x07
    2bb6:	78 85       	ldd	r23, Y+8	; 0x08
    2bb8:	89 85       	ldd	r24, Y+9	; 0x09
    2bba:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bbc:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2bc0:	6f 8b       	std	Y+23, r22	; 0x17
    2bc2:	78 8f       	std	Y+24, r23	; 0x18
    2bc4:	89 8f       	std	Y+25, r24	; 0x19
    2bc6:	9a 8f       	std	Y+26, r25	; 0x1a
    2bc8:	2f 89       	ldd	r18, Y+23	; 0x17
    2bca:	38 8d       	ldd	r19, Y+24	; 0x18
    2bcc:	49 8d       	ldd	r20, Y+25	; 0x19
    2bce:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2bd0:	2b 87       	std	Y+11, r18	; 0x0b
    2bd2:	3c 87       	std	Y+12, r19	; 0x0c
    2bd4:	4d 87       	std	Y+13, r20	; 0x0d
    2bd6:	5e 87       	std	Y+14, r21	; 0x0e

00002bd8 <.Loc.164>:
    2bd8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2bda:	7c 85       	ldd	r23, Y+12	; 0x0c
    2bdc:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bde:	9e 85       	ldd	r25, Y+14	; 0x0e
    2be0:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <__fixsfsi>
    2be4:	6b 8f       	std	Y+27, r22	; 0x1b
    2be6:	7c 8f       	std	Y+28, r23	; 0x1c
    2be8:	8d 8f       	std	Y+29, r24	; 0x1d
    2bea:	9e 8f       	std	Y+30, r25	; 0x1e
    2bec:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2bee:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2bf0:	5a 83       	std	Y+2, r21	; 0x02
    2bf2:	49 83       	std	Y+1, r20	; 0x01

00002bf4 <.Loc.165>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    2bf4:	89 81       	ldd	r24, Y+1	; 0x01
    2bf6:	9a 81       	ldd	r25, Y+2	; 0x02

00002bf8 <.Loc.166>:
}
    2bf8:	6e 96       	adiw	r28, 0x1e	; 30
    2bfa:	0f b6       	in	r0, 0x3f	; 63
    2bfc:	f8 94       	cli
    2bfe:	de bf       	out	0x3e, r29	; 62
    2c00:	0f be       	out	0x3f, r0	; 63
    2c02:	cd bf       	out	0x3d, r28	; 61
    2c04:	df 91       	pop	r29
    2c06:	cf 91       	pop	r28
    2c08:	08 95       	ret

00002c0a <TriggerPulseRight>:
void TriggerPulseRight (void){
    2c0a:	cf 93       	push	r28
    2c0c:	df 93       	push	r29
    2c0e:	cd b7       	in	r28, 0x3d	; 61
    2c10:	de b7       	in	r29, 0x3e	; 62
    2c12:	c8 54       	subi	r28, 0x48	; 72
    2c14:	d1 09       	sbc	r29, r1
    2c16:	0f b6       	in	r0, 0x3f	; 63
    2c18:	f8 94       	cli
    2c1a:	de bf       	out	0x3e, r29	; 62
    2c1c:	0f be       	out	0x3f, r0	; 63
    2c1e:	cd bf       	out	0x3d, r28	; 61

00002c20 <.Loc.168>:
    port_tri_R |= (1<<pin_tri_R);
    2c20:	82 e2       	ldi	r24, 0x22	; 34
    2c22:	90 e0       	ldi	r25, 0x00	; 0
    2c24:	dc 01       	movw	r26, r24
    2c26:	2c 91       	ld	r18, X
    2c28:	82 e2       	ldi	r24, 0x22	; 34
    2c2a:	90 e0       	ldi	r25, 0x00	; 0

00002c2c <.Loc.169>:
    2c2c:	20 61       	ori	r18, 0x10	; 16
    2c2e:	fc 01       	movw	r30, r24
    2c30:	20 83       	st	Z, r18
    2c32:	80 e0       	ldi	r24, 0x00	; 0
    2c34:	90 e0       	ldi	r25, 0x00	; 0
    2c36:	a0 e2       	ldi	r26, 0x20	; 32
    2c38:	b1 e4       	ldi	r27, 0x41	; 65
    2c3a:	89 83       	std	Y+1, r24	; 0x01
    2c3c:	9a 83       	std	Y+2, r25	; 0x02
    2c3e:	ab 83       	std	Y+3, r26	; 0x03
    2c40:	bc 83       	std	Y+4, r27	; 0x04

00002c42 <.LBB82>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2c42:	2b ea       	ldi	r18, 0xAB	; 171
    2c44:	3a ea       	ldi	r19, 0xAA	; 170
    2c46:	4a ea       	ldi	r20, 0xAA	; 170
    2c48:	50 e4       	ldi	r21, 0x40	; 64
    2c4a:	69 81       	ldd	r22, Y+1	; 0x01
    2c4c:	7a 81       	ldd	r23, Y+2	; 0x02
    2c4e:	8b 81       	ldd	r24, Y+3	; 0x03
    2c50:	9c 81       	ldd	r25, Y+4	; 0x04
    2c52:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2c56:	6d a3       	std	Y+37, r22	; 0x25
    2c58:	7e a3       	std	Y+38, r23	; 0x26
    2c5a:	8f a3       	std	Y+39, r24	; 0x27
    2c5c:	98 a7       	std	Y+40, r25	; 0x28
    2c5e:	8d a1       	ldd	r24, Y+37	; 0x25
    2c60:	9e a1       	ldd	r25, Y+38	; 0x26
    2c62:	af a1       	ldd	r26, Y+39	; 0x27
    2c64:	b8 a5       	ldd	r27, Y+40	; 0x28
    2c66:	8d 83       	std	Y+5, r24	; 0x05
    2c68:	9e 83       	std	Y+6, r25	; 0x06
    2c6a:	af 83       	std	Y+7, r26	; 0x07
    2c6c:	b8 87       	std	Y+8, r27	; 0x08

00002c6e <.Loc.171>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2c6e:	20 e0       	ldi	r18, 0x00	; 0
    2c70:	30 e0       	ldi	r19, 0x00	; 0
    2c72:	40 e8       	ldi	r20, 0x80	; 128
    2c74:	50 e4       	ldi	r21, 0x40	; 64
    2c76:	69 81       	ldd	r22, Y+1	; 0x01
    2c78:	7a 81       	ldd	r23, Y+2	; 0x02
    2c7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c7c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c7e:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2c82:	69 a7       	std	Y+41, r22	; 0x29
    2c84:	7a a7       	std	Y+42, r23	; 0x2a
    2c86:	8b a7       	std	Y+43, r24	; 0x2b
    2c88:	9c a7       	std	Y+44, r25	; 0x2c
    2c8a:	89 a5       	ldd	r24, Y+41	; 0x29
    2c8c:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c8e:	ab a5       	ldd	r26, Y+43	; 0x2b
    2c90:	bc a5       	ldd	r27, Y+44	; 0x2c
    2c92:	89 87       	std	Y+9, r24	; 0x09
    2c94:	9a 87       	std	Y+10, r25	; 0x0a
    2c96:	ab 87       	std	Y+11, r26	; 0x0b
    2c98:	bc 87       	std	Y+12, r27	; 0x0c

00002c9a <.Loc.172>:
	if (__tmp < 1.0)
    2c9a:	20 e0       	ldi	r18, 0x00	; 0
    2c9c:	30 e0       	ldi	r19, 0x00	; 0
    2c9e:	40 e8       	ldi	r20, 0x80	; 128
    2ca0:	5f e3       	ldi	r21, 0x3F	; 63
    2ca2:	6d 81       	ldd	r22, Y+5	; 0x05
    2ca4:	7e 81       	ldd	r23, Y+6	; 0x06
    2ca6:	8f 81       	ldd	r24, Y+7	; 0x07
    2ca8:	98 85       	ldd	r25, Y+8	; 0x08
    2caa:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    2cae:	88 23       	and	r24, r24
    2cb0:	1c f4       	brge	.+6      	; 0x2cb8 <.L90>

00002cb2 <.Loc.173>:
		__ticks = 1;
    2cb2:	81 e0       	ldi	r24, 0x01	; 1
    2cb4:	8d 87       	std	Y+13, r24	; 0x0d
    2cb6:	e8 c0       	rjmp	.+464    	; 0x2e88 <.L71>

00002cb8 <.L90>:
	else if (__tmp2 > 65535)
    2cb8:	20 e0       	ldi	r18, 0x00	; 0
    2cba:	3f ef       	ldi	r19, 0xFF	; 255
    2cbc:	4f e7       	ldi	r20, 0x7F	; 127
    2cbe:	57 e4       	ldi	r21, 0x47	; 71
    2cc0:	69 85       	ldd	r22, Y+9	; 0x09
    2cc2:	7a 85       	ldd	r23, Y+10	; 0x0a
    2cc4:	8b 85       	ldd	r24, Y+11	; 0x0b
    2cc6:	9c 85       	ldd	r25, Y+12	; 0x0c
    2cc8:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2ccc:	88 23       	and	r24, r24
    2cce:	09 f0       	breq	.+2      	; 0x2cd2 <L0^A>

00002cd0 <L0^A>:
    2cd0:	0c f4       	brge	.+2      	; 0x2cd4 <.Loc.175>

00002cd2 <L0^A>:
    2cd2:	9f c0       	rjmp	.+318    	; 0x2e12 <.L91>

00002cd4 <.Loc.175>:
		_delay_ms(__us / 1000.0);
    2cd4:	20 e0       	ldi	r18, 0x00	; 0
    2cd6:	30 e0       	ldi	r19, 0x00	; 0
    2cd8:	4a e7       	ldi	r20, 0x7A	; 122
    2cda:	54 e4       	ldi	r21, 0x44	; 68
    2cdc:	69 81       	ldd	r22, Y+1	; 0x01
    2cde:	7a 81       	ldd	r23, Y+2	; 0x02
    2ce0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ce2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ce4:	0e 94 72 18 	call	0x30e4	; 0x30e4 <__divsf3>
    2ce8:	6d a7       	std	Y+45, r22	; 0x2d
    2cea:	7e a7       	std	Y+46, r23	; 0x2e
    2cec:	8f a7       	std	Y+47, r24	; 0x2f
    2cee:	98 ab       	std	Y+48, r25	; 0x30
    2cf0:	8d a5       	ldd	r24, Y+45	; 0x2d
    2cf2:	9e a5       	ldd	r25, Y+46	; 0x2e
    2cf4:	af a5       	ldd	r26, Y+47	; 0x2f
    2cf6:	b8 a9       	ldd	r27, Y+48	; 0x30
    2cf8:	8e 87       	std	Y+14, r24	; 0x0e
    2cfa:	9f 87       	std	Y+15, r25	; 0x0f
    2cfc:	a8 8b       	std	Y+16, r26	; 0x10
    2cfe:	b9 8b       	std	Y+17, r27	; 0x11

00002d00 <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2d00:	20 e0       	ldi	r18, 0x00	; 0
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	4a e7       	ldi	r20, 0x7A	; 122
    2d06:	55 e4       	ldi	r21, 0x45	; 69
    2d08:	6e 85       	ldd	r22, Y+14	; 0x0e
    2d0a:	7f 85       	ldd	r23, Y+15	; 0x0f
    2d0c:	88 89       	ldd	r24, Y+16	; 0x10
    2d0e:	99 89       	ldd	r25, Y+17	; 0x11
    2d10:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2d14:	69 ab       	std	Y+49, r22	; 0x31
    2d16:	7a ab       	std	Y+50, r23	; 0x32
    2d18:	8b ab       	std	Y+51, r24	; 0x33
    2d1a:	9c ab       	std	Y+52, r25	; 0x34
    2d1c:	89 a9       	ldd	r24, Y+49	; 0x31
    2d1e:	9a a9       	ldd	r25, Y+50	; 0x32
    2d20:	ab a9       	ldd	r26, Y+51	; 0x33
    2d22:	bc a9       	ldd	r27, Y+52	; 0x34
    2d24:	8a 8b       	std	Y+18, r24	; 0x12
    2d26:	9b 8b       	std	Y+19, r25	; 0x13
    2d28:	ac 8b       	std	Y+20, r26	; 0x14
    2d2a:	bd 8b       	std	Y+21, r27	; 0x15

00002d2c <.Loc.177>:
	if (__tmp < 1.0)
    2d2c:	20 e0       	ldi	r18, 0x00	; 0
    2d2e:	30 e0       	ldi	r19, 0x00	; 0
    2d30:	40 e8       	ldi	r20, 0x80	; 128
    2d32:	5f e3       	ldi	r21, 0x3F	; 63
    2d34:	6a 89       	ldd	r22, Y+18	; 0x12
    2d36:	7b 89       	ldd	r23, Y+19	; 0x13
    2d38:	8c 89       	ldd	r24, Y+20	; 0x14
    2d3a:	9d 89       	ldd	r25, Y+21	; 0x15
    2d3c:	0e 94 6d 18 	call	0x30da	; 0x30da <__cmpsf2>
    2d40:	88 23       	and	r24, r24
    2d42:	2c f4       	brge	.+10     	; 0x2d4e <.L92>

00002d44 <.Loc.178>:
		__ticks = 1;
    2d44:	81 e0       	ldi	r24, 0x01	; 1
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	9f 8b       	std	Y+23, r25	; 0x17
    2d4a:	8e 8b       	std	Y+22, r24	; 0x16
    2d4c:	57 c0       	rjmp	.+174    	; 0x2dfc <.L76>

00002d4e <.L92>:
	else if (__tmp > 65535)
    2d4e:	20 e0       	ldi	r18, 0x00	; 0
    2d50:	3f ef       	ldi	r19, 0xFF	; 255
    2d52:	4f e7       	ldi	r20, 0x7F	; 127
    2d54:	57 e4       	ldi	r21, 0x47	; 71
    2d56:	6a 89       	ldd	r22, Y+18	; 0x12
    2d58:	7b 89       	ldd	r23, Y+19	; 0x13
    2d5a:	8c 89       	ldd	r24, Y+20	; 0x14
    2d5c:	9d 89       	ldd	r25, Y+21	; 0x15
    2d5e:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2d62:	88 23       	and	r24, r24
    2d64:	d9 f1       	breq	.+118    	; 0x2ddc <.L93>
    2d66:	d4 f1       	brlt	.+116    	; 0x2ddc <.L93>

00002d68 <.Loc.180>:
		__ticks = (uint16_t) (__ms * 10.0);
    2d68:	20 e0       	ldi	r18, 0x00	; 0
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	40 e2       	ldi	r20, 0x20	; 32
    2d6e:	51 e4       	ldi	r21, 0x41	; 65
    2d70:	6e 85       	ldd	r22, Y+14	; 0x0e
    2d72:	7f 85       	ldd	r23, Y+15	; 0x0f
    2d74:	88 89       	ldd	r24, Y+16	; 0x10
    2d76:	99 89       	ldd	r25, Y+17	; 0x11
    2d78:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsf3>
    2d7c:	6d ab       	std	Y+53, r22	; 0x35
    2d7e:	7e ab       	std	Y+54, r23	; 0x36
    2d80:	8f ab       	std	Y+55, r24	; 0x37
    2d82:	98 af       	std	Y+56, r25	; 0x38
    2d84:	8d a9       	ldd	r24, Y+53	; 0x35
    2d86:	9e a9       	ldd	r25, Y+54	; 0x36
    2d88:	af a9       	ldd	r26, Y+55	; 0x37
    2d8a:	b8 ad       	ldd	r27, Y+56	; 0x38
    2d8c:	89 a3       	std	Y+33, r24	; 0x21
    2d8e:	9a a3       	std	Y+34, r25	; 0x22
    2d90:	ab a3       	std	Y+35, r26	; 0x23
    2d92:	bc a3       	std	Y+36, r27	; 0x24

00002d94 <.Loc.181>:
    2d94:	69 a1       	ldd	r22, Y+33	; 0x21
    2d96:	7a a1       	ldd	r23, Y+34	; 0x22
    2d98:	8b a1       	ldd	r24, Y+35	; 0x23
    2d9a:	9c a1       	ldd	r25, Y+36	; 0x24
    2d9c:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2da0:	69 af       	std	Y+57, r22	; 0x39
    2da2:	7a af       	std	Y+58, r23	; 0x3a
    2da4:	8b af       	std	Y+59, r24	; 0x3b
    2da6:	9c af       	std	Y+60, r25	; 0x3c
    2da8:	a9 ad       	ldd	r26, Y+57	; 0x39
    2daa:	ba ad       	ldd	r27, Y+58	; 0x3a
    2dac:	bf 8b       	std	Y+23, r27	; 0x17
    2dae:	ae 8b       	std	Y+22, r26	; 0x16

00002db0 <.Loc.182>:
		while(__ticks)
    2db0:	10 c0       	rjmp	.+32     	; 0x2dd2 <.L79>

00002db2 <.L80>:
    2db2:	80 e9       	ldi	r24, 0x90	; 144
    2db4:	91 e0       	ldi	r25, 0x01	; 1
    2db6:	99 8f       	std	Y+25, r25	; 0x19
    2db8:	88 8f       	std	Y+24, r24	; 0x18

00002dba <.LBB86>:
	__asm__ volatile (
    2dba:	88 8d       	ldd	r24, Y+24	; 0x18
    2dbc:	99 8d       	ldd	r25, Y+25	; 0x19

00002dbe <.L1^B9>:
    2dbe:	01 97       	sbiw	r24, 0x01	; 1
    2dc0:	f1 f7       	brne	.-4      	; 0x2dbe <.L1^B9>
    2dc2:	99 8f       	std	Y+25, r25	; 0x19
    2dc4:	88 8f       	std	Y+24, r24	; 0x18

00002dc6 <.Loc.184>:
	...

00002dc8 <.LBE86>:
			__ticks --;
    2dc8:	8e 89       	ldd	r24, Y+22	; 0x16
    2dca:	9f 89       	ldd	r25, Y+23	; 0x17
    2dcc:	01 97       	sbiw	r24, 0x01	; 1
    2dce:	9f 8b       	std	Y+23, r25	; 0x17
    2dd0:	8e 8b       	std	Y+22, r24	; 0x16

00002dd2 <.L79>:
		while(__ticks)
    2dd2:	8e 89       	ldd	r24, Y+22	; 0x16
    2dd4:	9f 89       	ldd	r25, Y+23	; 0x17
    2dd6:	00 97       	sbiw	r24, 0x00	; 0
    2dd8:	61 f7       	brne	.-40     	; 0x2db2 <.L80>

00002dda <.Loc.187>:
		return;
    2dda:	56 c0       	rjmp	.+172    	; 0x2e88 <.L71>

00002ddc <.L93>:
		__ticks = (uint16_t)__tmp;
    2ddc:	6a 89       	ldd	r22, Y+18	; 0x12
    2dde:	7b 89       	ldd	r23, Y+19	; 0x13
    2de0:	8c 89       	ldd	r24, Y+20	; 0x14
    2de2:	9d 89       	ldd	r25, Y+21	; 0x15
    2de4:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2de8:	21 96       	adiw	r28, 0x01	; 1
    2dea:	6c af       	std	Y+60, r22	; 0x3c
    2dec:	7d af       	std	Y+61, r23	; 0x3d
    2dee:	8e af       	std	Y+62, r24	; 0x3e
    2df0:	9f af       	std	Y+63, r25	; 0x3f
    2df2:	21 97       	sbiw	r28, 0x01	; 1
    2df4:	ed ad       	ldd	r30, Y+61	; 0x3d
    2df6:	fe ad       	ldd	r31, Y+62	; 0x3e
    2df8:	ff 8b       	std	Y+23, r31	; 0x17
    2dfa:	ee 8b       	std	Y+22, r30	; 0x16

00002dfc <.L76>:
    2dfc:	8e 89       	ldd	r24, Y+22	; 0x16
    2dfe:	9f 89       	ldd	r25, Y+23	; 0x17
    2e00:	9b 8f       	std	Y+27, r25	; 0x1b
    2e02:	8a 8f       	std	Y+26, r24	; 0x1a

00002e04 <.LBB88>:
    2e04:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2e06:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002e08 <.L1^B10>:
    2e08:	01 97       	sbiw	r24, 0x01	; 1
    2e0a:	f1 f7       	brne	.-4      	; 0x2e08 <.L1^B10>
    2e0c:	9b 8f       	std	Y+27, r25	; 0x1b
    2e0e:	8a 8f       	std	Y+26, r24	; 0x1a

00002e10 <.Loc.190>:
}
    2e10:	3b c0       	rjmp	.+118    	; 0x2e88 <.L71>

00002e12 <.L91>:
	else if (__tmp > 255)
    2e12:	20 e0       	ldi	r18, 0x00	; 0
    2e14:	30 e0       	ldi	r19, 0x00	; 0
    2e16:	4f e7       	ldi	r20, 0x7F	; 127
    2e18:	53 e4       	ldi	r21, 0x43	; 67
    2e1a:	6d 81       	ldd	r22, Y+5	; 0x05
    2e1c:	7e 81       	ldd	r23, Y+6	; 0x06
    2e1e:	8f 81       	ldd	r24, Y+7	; 0x07
    2e20:	98 85       	ldd	r25, Y+8	; 0x08
    2e22:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2e26:	88 23       	and	r24, r24
    2e28:	f9 f0       	breq	.+62     	; 0x2e68 <.L94>
    2e2a:	f4 f0       	brlt	.+60     	; 0x2e68 <.L94>

00002e2c <.LBB90>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2e2c:	69 85       	ldd	r22, Y+9	; 0x09
    2e2e:	7a 85       	ldd	r23, Y+10	; 0x0a
    2e30:	8b 85       	ldd	r24, Y+11	; 0x0b
    2e32:	9c 85       	ldd	r25, Y+12	; 0x0c
    2e34:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2e38:	25 96       	adiw	r28, 0x05	; 5
    2e3a:	6c af       	std	Y+60, r22	; 0x3c
    2e3c:	7d af       	std	Y+61, r23	; 0x3d
    2e3e:	8e af       	std	Y+62, r24	; 0x3e
    2e40:	9f af       	std	Y+63, r25	; 0x3f
    2e42:	25 97       	sbiw	r28, 0x05	; 5
    2e44:	23 96       	adiw	r28, 0x03	; 3
    2e46:	8e ad       	ldd	r24, Y+62	; 0x3e
    2e48:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e4a:	23 97       	sbiw	r28, 0x03	; 3
    2e4c:	9d 8f       	std	Y+29, r25	; 0x1d
    2e4e:	8c 8f       	std	Y+28, r24	; 0x1c
    2e50:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2e52:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2e54:	9f 8f       	std	Y+31, r25	; 0x1f
    2e56:	8e 8f       	std	Y+30, r24	; 0x1e

00002e58 <.LBB91>:
	__asm__ volatile (
    2e58:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2e5a:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002e5c <.L1^B11>:
    2e5c:	01 97       	sbiw	r24, 0x01	; 1
    2e5e:	f1 f7       	brne	.-4      	; 0x2e5c <.L1^B11>
    2e60:	9f 8f       	std	Y+31, r25	; 0x1f
    2e62:	8e 8f       	std	Y+30, r24	; 0x1e

00002e64 <.Loc.194>:
	...

00002e66 <.LBE91>:
		return;
    2e66:	17 c0       	rjmp	.+46     	; 0x2e96 <.L84>

00002e68 <.L94>:
		__ticks = (uint8_t)__tmp;
    2e68:	6d 81       	ldd	r22, Y+5	; 0x05
    2e6a:	7e 81       	ldd	r23, Y+6	; 0x06
    2e6c:	8f 81       	ldd	r24, Y+7	; 0x07
    2e6e:	98 85       	ldd	r25, Y+8	; 0x08
    2e70:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    2e74:	29 96       	adiw	r28, 0x09	; 9
    2e76:	6c af       	std	Y+60, r22	; 0x3c
    2e78:	7d af       	std	Y+61, r23	; 0x3d
    2e7a:	8e af       	std	Y+62, r24	; 0x3e
    2e7c:	9f af       	std	Y+63, r25	; 0x3f
    2e7e:	29 97       	sbiw	r28, 0x09	; 9
    2e80:	26 96       	adiw	r28, 0x06	; 6
    2e82:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e84:	26 97       	sbiw	r28, 0x06	; 6
    2e86:	9d 87       	std	Y+13, r25	; 0x0d

00002e88 <.L71>:
    2e88:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e8a:	88 a3       	std	Y+32, r24	; 0x20

00002e8c <.LBB93>:
	__asm__ volatile (
    2e8c:	88 a1       	ldd	r24, Y+32	; 0x20

00002e8e <.L1^B12>:
    2e8e:	8a 95       	dec	r24
    2e90:	f1 f7       	brne	.-4      	; 0x2e8e <.L1^B12>
    2e92:	88 a3       	std	Y+32, r24	; 0x20

00002e94 <.Loc.198>:
	...

00002e96 <.L84>:
    _delay_us(10);
    port_tri_R &= (~(1<<pin_tri_R));
    2e96:	82 e2       	ldi	r24, 0x22	; 34
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	dc 01       	movw	r26, r24
    2e9c:	2c 91       	ld	r18, X

00002e9e <.Loc.200>:
    2e9e:	82 e2       	ldi	r24, 0x22	; 34
    2ea0:	90 e0       	ldi	r25, 0x00	; 0

00002ea2 <.Loc.201>:
    2ea2:	2f 7e       	andi	r18, 0xEF	; 239
    2ea4:	fc 01       	movw	r30, r24
    2ea6:	20 83       	st	Z, r18

00002ea8 <.Loc.202>:
}
    2ea8:	00 00       	nop
    2eaa:	c8 5b       	subi	r28, 0xB8	; 184
    2eac:	df 4f       	sbci	r29, 0xFF	; 255
    2eae:	0f b6       	in	r0, 0x3f	; 63
    2eb0:	f8 94       	cli
    2eb2:	de bf       	out	0x3e, r29	; 62
    2eb4:	0f be       	out	0x3f, r0	; 63
    2eb6:	cd bf       	out	0x3d, r28	; 61
    2eb8:	df 91       	pop	r29
    2eba:	cf 91       	pop	r28
    2ebc:	08 95       	ret

00002ebe <__vector_15>:

ISR(TIMER2_OVF_vect){
    2ebe:	1f 92       	push	r1
    2ec0:	0f 92       	push	r0
    2ec2:	0f b6       	in	r0, 0x3f	; 63
    2ec4:	0f 92       	push	r0
    2ec6:	11 24       	eor	r1, r1
    2ec8:	8f 93       	push	r24
    2eca:	9f 93       	push	r25
    2ecc:	cf 93       	push	r28
    2ece:	df 93       	push	r29
    2ed0:	cd b7       	in	r28, 0x3d	; 61
    2ed2:	de b7       	in	r29, 0x3e	; 62

00002ed4 <.Loc.204>:
    count++;
    2ed4:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2ed8:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2edc:	01 96       	adiw	r24, 0x01	; 1
    2ede:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <count+0x1>
    2ee2:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <count>

00002ee6 <.Loc.205>:
}
    2ee6:	00 00       	nop
    2ee8:	df 91       	pop	r29
    2eea:	cf 91       	pop	r28
    2eec:	9f 91       	pop	r25
    2eee:	8f 91       	pop	r24
    2ef0:	0f 90       	pop	r0
    2ef2:	0f be       	out	0x3f, r0	; 63
    2ef4:	0f 90       	pop	r0
    2ef6:	1f 90       	pop	r1
    2ef8:	18 95       	reti

00002efa <__divmodhi4>:
    2efa:	97 fb       	bst	r25, 7

00002efc <.Loc.1>:
    2efc:	07 2e       	mov	r0, r23

00002efe <.Loc.2>:
    2efe:	16 f4       	brtc	.+4      	; 0x2f04 <.L^B1>

00002f00 <.Loc.3>:
    2f00:	00 94       	com	r0

00002f02 <.Loc.4>:
    2f02:	07 d0       	rcall	.+14     	; 0x2f12 <__divmodhi4_neg1>

00002f04 <.L^B1>:
    2f04:	77 fd       	sbrc	r23, 7

00002f06 <.Loc.6>:
    2f06:	09 d0       	rcall	.+18     	; 0x2f1a <__divmodhi4_neg2>

00002f08 <.Loc.7>:
    2f08:	0e 94 ca 17 	call	0x2f94	; 0x2f94 <__udivmodhi4>

00002f0c <.Loc.8>:
    2f0c:	07 fc       	sbrc	r0, 7

00002f0e <.Loc.9>:
    2f0e:	05 d0       	rcall	.+10     	; 0x2f1a <__divmodhi4_neg2>

00002f10 <.Loc.10>:
    2f10:	3e f4       	brtc	.+14     	; 0x2f20 <__divmodhi4_exit>

00002f12 <__divmodhi4_neg1>:
    2f12:	90 95       	com	r25

00002f14 <.Loc.12>:
    2f14:	81 95       	neg	r24

00002f16 <.Loc.13>:
    2f16:	9f 4f       	sbci	r25, 0xFF	; 255

00002f18 <.Loc.14>:
    2f18:	08 95       	ret

00002f1a <__divmodhi4_neg2>:
    2f1a:	70 95       	com	r23

00002f1c <.Loc.16>:
    2f1c:	61 95       	neg	r22

00002f1e <.Loc.17>:
    2f1e:	7f 4f       	sbci	r23, 0xFF	; 255

00002f20 <__divmodhi4_exit>:
    2f20:	08 95       	ret

00002f22 <__divmodsi4>:
    2f22:	05 2e       	mov	r0, r21

00002f24 <.Loc.1>:
    2f24:	97 fb       	bst	r25, 7

00002f26 <.Loc.2>:
    2f26:	1e f4       	brtc	.+6      	; 0x2f2e <.L^B1>

00002f28 <.Loc.3>:
    2f28:	00 94       	com	r0

00002f2a <.Loc.4>:
    2f2a:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <__negsi2>

00002f2e <.L^B1>:
    2f2e:	57 fd       	sbrc	r21, 7

00002f30 <.Loc.6>:
    2f30:	07 d0       	rcall	.+14     	; 0x2f40 <__divmodsi4_neg2>

00002f32 <.Loc.7>:
    2f32:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <__udivmodsi4>

00002f36 <.Loc.8>:
    2f36:	07 fc       	sbrc	r0, 7

00002f38 <.Loc.9>:
    2f38:	03 d0       	rcall	.+6      	; 0x2f40 <__divmodsi4_neg2>

00002f3a <.Loc.10>:
    2f3a:	4e f4       	brtc	.+18     	; 0x2f4e <__divmodsi4_exit>

00002f3c <.Loc.11>:
    2f3c:	0c 94 a8 17 	jmp	0x2f50	; 0x2f50 <__negsi2>

00002f40 <__divmodsi4_neg2>:
    2f40:	50 95       	com	r21

00002f42 <.Loc.13>:
    2f42:	40 95       	com	r20

00002f44 <.Loc.14>:
    2f44:	30 95       	com	r19

00002f46 <.Loc.15>:
    2f46:	21 95       	neg	r18

00002f48 <.Loc.16>:
    2f48:	3f 4f       	sbci	r19, 0xFF	; 255

00002f4a <.Loc.17>:
    2f4a:	4f 4f       	sbci	r20, 0xFF	; 255

00002f4c <.Loc.18>:
    2f4c:	5f 4f       	sbci	r21, 0xFF	; 255

00002f4e <__divmodsi4_exit>:
    2f4e:	08 95       	ret

00002f50 <__negsi2>:
    2f50:	90 95       	com	r25
    2f52:	80 95       	com	r24
    2f54:	70 95       	com	r23
    2f56:	61 95       	neg	r22
    2f58:	7f 4f       	sbci	r23, 0xFF	; 255
    2f5a:	8f 4f       	sbci	r24, 0xFF	; 255
    2f5c:	9f 4f       	sbci	r25, 0xFF	; 255

00002f5e <.Loc.1>:
    2f5e:	08 95       	ret

00002f60 <__umulhisi3>:
    2f60:	a2 9f       	mul	r26, r18

00002f62 <.Loc.1>:
    2f62:	b0 01       	movw	r22, r0

00002f64 <.Loc.2>:
    2f64:	b3 9f       	mul	r27, r19

00002f66 <.Loc.3>:
    2f66:	c0 01       	movw	r24, r0

00002f68 <.Loc.4>:
    2f68:	a3 9f       	mul	r26, r19

00002f6a <.Loc.5>:
    2f6a:	70 0d       	add	r23, r0

00002f6c <.Loc.6>:
    2f6c:	81 1d       	adc	r24, r1

00002f6e <.Loc.7>:
    2f6e:	11 24       	eor	r1, r1

00002f70 <.Loc.8>:
    2f70:	91 1d       	adc	r25, r1

00002f72 <.Loc.9>:
    2f72:	b2 9f       	mul	r27, r18

00002f74 <.Loc.10>:
    2f74:	70 0d       	add	r23, r0

00002f76 <.Loc.11>:
    2f76:	81 1d       	adc	r24, r1

00002f78 <.Loc.12>:
    2f78:	11 24       	eor	r1, r1

00002f7a <.Loc.13>:
    2f7a:	91 1d       	adc	r25, r1

00002f7c <.Loc.14>:
    2f7c:	08 95       	ret

00002f7e <__muluhisi3>:
    2f7e:	0e 94 b0 17 	call	0x2f60	; 0x2f60 <__umulhisi3>

00002f82 <.Loc.1>:
    2f82:	a5 9f       	mul	r26, r21

00002f84 <.Loc.2>:
    2f84:	90 0d       	add	r25, r0

00002f86 <.Loc.3>:
    2f86:	b4 9f       	mul	r27, r20

00002f88 <.Loc.4>:
    2f88:	90 0d       	add	r25, r0

00002f8a <.Loc.5>:
    2f8a:	a4 9f       	mul	r26, r20

00002f8c <.Loc.6>:
    2f8c:	80 0d       	add	r24, r0

00002f8e <.Loc.7>:
    2f8e:	91 1d       	adc	r25, r1

00002f90 <.Loc.8>:
    2f90:	11 24       	eor	r1, r1

00002f92 <.Loc.9>:
    2f92:	08 95       	ret

00002f94 <__udivmodhi4>:
    2f94:	aa 1b       	sub	r26, r26

00002f96 <.Loc.1>:
    2f96:	bb 1b       	sub	r27, r27

00002f98 <.Loc.2>:
    2f98:	51 e1       	ldi	r21, 0x11	; 17

00002f9a <.Loc.3>:
    2f9a:	07 c0       	rjmp	.+14     	; 0x2faa <__udivmodhi4_ep>

00002f9c <__udivmodhi4_loop>:
    2f9c:	aa 1f       	adc	r26, r26

00002f9e <.Loc.5>:
    2f9e:	bb 1f       	adc	r27, r27

00002fa0 <.Loc.6>:
    2fa0:	a6 17       	cp	r26, r22

00002fa2 <.Loc.7>:
    2fa2:	b7 07       	cpc	r27, r23

00002fa4 <.Loc.8>:
    2fa4:	10 f0       	brcs	.+4      	; 0x2faa <__udivmodhi4_ep>

00002fa6 <.Loc.9>:
    2fa6:	a6 1b       	sub	r26, r22

00002fa8 <.Loc.10>:
    2fa8:	b7 0b       	sbc	r27, r23

00002faa <__udivmodhi4_ep>:
    2faa:	88 1f       	adc	r24, r24

00002fac <.Loc.12>:
    2fac:	99 1f       	adc	r25, r25

00002fae <.Loc.13>:
    2fae:	5a 95       	dec	r21

00002fb0 <.Loc.14>:
    2fb0:	a9 f7       	brne	.-22     	; 0x2f9c <__udivmodhi4_loop>

00002fb2 <.Loc.15>:
    2fb2:	80 95       	com	r24

00002fb4 <.Loc.16>:
    2fb4:	90 95       	com	r25

00002fb6 <.Loc.17>:
    2fb6:	bc 01       	movw	r22, r24

00002fb8 <.Loc.18>:
    2fb8:	cd 01       	movw	r24, r26

00002fba <.Loc.19>:
    2fba:	08 95       	ret

00002fbc <__udivmodsi4>:
    2fbc:	a1 e2       	ldi	r26, 0x21	; 33

00002fbe <.Loc.1>:
    2fbe:	1a 2e       	mov	r1, r26

00002fc0 <.Loc.2>:
    2fc0:	aa 1b       	sub	r26, r26

00002fc2 <.Loc.3>:
    2fc2:	bb 1b       	sub	r27, r27

00002fc4 <.Loc.4>:
    2fc4:	fd 01       	movw	r30, r26

00002fc6 <.Loc.5>:
    2fc6:	0d c0       	rjmp	.+26     	; 0x2fe2 <__udivmodsi4_ep>

00002fc8 <__udivmodsi4_loop>:
    2fc8:	aa 1f       	adc	r26, r26

00002fca <.Loc.7>:
    2fca:	bb 1f       	adc	r27, r27

00002fcc <.Loc.8>:
    2fcc:	ee 1f       	adc	r30, r30

00002fce <.Loc.9>:
    2fce:	ff 1f       	adc	r31, r31

00002fd0 <.Loc.10>:
    2fd0:	a2 17       	cp	r26, r18

00002fd2 <.Loc.11>:
    2fd2:	b3 07       	cpc	r27, r19

00002fd4 <.Loc.12>:
    2fd4:	e4 07       	cpc	r30, r20

00002fd6 <.Loc.13>:
    2fd6:	f5 07       	cpc	r31, r21

00002fd8 <.Loc.14>:
    2fd8:	20 f0       	brcs	.+8      	; 0x2fe2 <__udivmodsi4_ep>

00002fda <.Loc.15>:
    2fda:	a2 1b       	sub	r26, r18

00002fdc <.Loc.16>:
    2fdc:	b3 0b       	sbc	r27, r19

00002fde <.Loc.17>:
    2fde:	e4 0b       	sbc	r30, r20

00002fe0 <.Loc.18>:
    2fe0:	f5 0b       	sbc	r31, r21

00002fe2 <__udivmodsi4_ep>:
    2fe2:	66 1f       	adc	r22, r22

00002fe4 <.Loc.20>:
    2fe4:	77 1f       	adc	r23, r23

00002fe6 <.Loc.21>:
    2fe6:	88 1f       	adc	r24, r24

00002fe8 <.Loc.22>:
    2fe8:	99 1f       	adc	r25, r25

00002fea <.Loc.23>:
    2fea:	1a 94       	dec	r1

00002fec <.Loc.24>:
    2fec:	69 f7       	brne	.-38     	; 0x2fc8 <__udivmodsi4_loop>

00002fee <.Loc.25>:
    2fee:	60 95       	com	r22

00002ff0 <.Loc.26>:
    2ff0:	70 95       	com	r23

00002ff2 <.Loc.27>:
    2ff2:	80 95       	com	r24

00002ff4 <.Loc.28>:
    2ff4:	90 95       	com	r25

00002ff6 <.Loc.29>:
    2ff6:	9b 01       	movw	r18, r22

00002ff8 <.Loc.30>:
    2ff8:	ac 01       	movw	r20, r24

00002ffa <.Loc.31>:
    2ffa:	bd 01       	movw	r22, r26

00002ffc <.Loc.32>:
    2ffc:	cf 01       	movw	r24, r30

00002ffe <.Loc.33>:
    2ffe:	08 95       	ret

00003000 <__subsf3>:
    3000:	50 58       	subi	r21, 0x80	; 128

00003002 <__addsf3>:
    3002:	bb 27       	eor	r27, r27
    3004:	aa 27       	eor	r26, r26
    3006:	0e 94 18 18 	call	0x3030	; 0x3030 <__addsf3x>
    300a:	0c 94 92 19 	jmp	0x3324	; 0x3324 <__fp_round>

0000300e <.L^B1>:
    300e:	0e 94 84 19 	call	0x3308	; 0x3308 <__fp_pscA>
    3012:	38 f0       	brcs	.+14     	; 0x3022 <.L_nan>
    3014:	0e 94 8b 19 	call	0x3316	; 0x3316 <__fp_pscB>
    3018:	20 f0       	brcs	.+8      	; 0x3022 <.L_nan>
    301a:	39 f4       	brne	.+14     	; 0x302a <.L_inf>
    301c:	9f 3f       	cpi	r25, 0xFF	; 255
    301e:	19 f4       	brne	.+6      	; 0x3026 <.L_infB>
    3020:	26 f4       	brtc	.+8      	; 0x302a <.L_inf>

00003022 <.L_nan>:
    3022:	0c 94 81 19 	jmp	0x3302	; 0x3302 <__fp_nan>

00003026 <.L_infB>:
    3026:	0e f4       	brtc	.+2      	; 0x302a <.L_inf>
    3028:	e0 95       	com	r30

0000302a <.L_inf>:
    302a:	e7 fb       	bst	r30, 7
    302c:	0c 94 7b 19 	jmp	0x32f6	; 0x32f6 <__fp_inf>

00003030 <__addsf3x>:
    3030:	e9 2f       	mov	r30, r25
    3032:	0e 94 a3 19 	call	0x3346	; 0x3346 <__fp_split3>
    3036:	58 f3       	brcs	.-42     	; 0x300e <.L^B1>
    3038:	ba 17       	cp	r27, r26
    303a:	62 07       	cpc	r22, r18
    303c:	73 07       	cpc	r23, r19
    303e:	84 07       	cpc	r24, r20
    3040:	95 07       	cpc	r25, r21
    3042:	20 f0       	brcs	.+8      	; 0x304c <.L2^B1>
    3044:	79 f4       	brne	.+30     	; 0x3064 <.L4^B1>
    3046:	a6 f5       	brtc	.+104    	; 0x30b0 <.L_add>
    3048:	0c 94 c5 19 	jmp	0x338a	; 0x338a <__fp_zero>

0000304c <.L2^B1>:
    304c:	0e f4       	brtc	.+2      	; 0x3050 <.L3^B1>
    304e:	e0 95       	com	r30

00003050 <.L3^B1>:
    3050:	0b 2e       	mov	r0, r27
    3052:	ba 2f       	mov	r27, r26
    3054:	a0 2d       	mov	r26, r0
    3056:	0b 01       	movw	r0, r22
    3058:	b9 01       	movw	r22, r18
    305a:	90 01       	movw	r18, r0
    305c:	0c 01       	movw	r0, r24
    305e:	ca 01       	movw	r24, r20
    3060:	a0 01       	movw	r20, r0
    3062:	11 24       	eor	r1, r1

00003064 <.L4^B1>:
    3064:	ff 27       	eor	r31, r31
    3066:	59 1b       	sub	r21, r25

00003068 <.L5^B1>:
    3068:	99 f0       	breq	.+38     	; 0x3090 <.L7^B1>
    306a:	59 3f       	cpi	r21, 0xF9	; 249
    306c:	50 f4       	brcc	.+20     	; 0x3082 <.L6^B1>
    306e:	50 3e       	cpi	r21, 0xE0	; 224
    3070:	68 f1       	brcs	.+90     	; 0x30cc <.L_ret>
    3072:	1a 16       	cp	r1, r26
    3074:	f0 40       	sbci	r31, 0x00	; 0
    3076:	a2 2f       	mov	r26, r18
    3078:	23 2f       	mov	r18, r19
    307a:	34 2f       	mov	r19, r20
    307c:	44 27       	eor	r20, r20
    307e:	58 5f       	subi	r21, 0xF8	; 248
    3080:	f3 cf       	rjmp	.-26     	; 0x3068 <.L5^B1>

00003082 <.L6^B1>:
    3082:	46 95       	lsr	r20
    3084:	37 95       	ror	r19
    3086:	27 95       	ror	r18
    3088:	a7 95       	ror	r26
    308a:	f0 40       	sbci	r31, 0x00	; 0
    308c:	53 95       	inc	r21
    308e:	c9 f7       	brne	.-14     	; 0x3082 <.L6^B1>

00003090 <.L7^B1>:
    3090:	7e f4       	brtc	.+30     	; 0x30b0 <.L_add>
    3092:	1f 16       	cp	r1, r31
    3094:	ba 0b       	sbc	r27, r26
    3096:	62 0b       	sbc	r22, r18
    3098:	73 0b       	sbc	r23, r19
    309a:	84 0b       	sbc	r24, r20
    309c:	ba f0       	brmi	.+46     	; 0x30cc <.L_ret>

0000309e <.L8^B1>:
    309e:	91 50       	subi	r25, 0x01	; 1
    30a0:	a1 f0       	breq	.+40     	; 0x30ca <.L9^B1>
    30a2:	ff 0f       	add	r31, r31
    30a4:	bb 1f       	adc	r27, r27
    30a6:	66 1f       	adc	r22, r22
    30a8:	77 1f       	adc	r23, r23
    30aa:	88 1f       	adc	r24, r24
    30ac:	c2 f7       	brpl	.-16     	; 0x309e <.L8^B1>
    30ae:	0e c0       	rjmp	.+28     	; 0x30cc <.L_ret>

000030b0 <.L_add>:
    30b0:	ba 0f       	add	r27, r26
    30b2:	62 1f       	adc	r22, r18
    30b4:	73 1f       	adc	r23, r19
    30b6:	84 1f       	adc	r24, r20
    30b8:	48 f4       	brcc	.+18     	; 0x30cc <.L_ret>
    30ba:	87 95       	ror	r24
    30bc:	77 95       	ror	r23
    30be:	67 95       	ror	r22
    30c0:	b7 95       	ror	r27
    30c2:	f7 95       	ror	r31
    30c4:	9e 3f       	cpi	r25, 0xFE	; 254
    30c6:	08 f0       	brcs	.+2      	; 0x30ca <.L9^B1>
    30c8:	b0 cf       	rjmp	.-160    	; 0x302a <.L_inf>

000030ca <.L9^B1>:
    30ca:	93 95       	inc	r25

000030cc <.L_ret>:
    30cc:	88 0f       	add	r24, r24
    30ce:	08 f0       	brcs	.+2      	; 0x30d2 <.L1^B1>
    30d0:	99 27       	eor	r25, r25

000030d2 <.L1^B1>:
    30d2:	ee 0f       	add	r30, r30
    30d4:	97 95       	ror	r25
    30d6:	87 95       	ror	r24
    30d8:	08 95       	ret

000030da <__cmpsf2>:
    30da:	0e 94 57 19 	call	0x32ae	; 0x32ae <__fp_cmp>
    30de:	08 f4       	brcc	.+2      	; 0x30e2 <.L1^B1>
    30e0:	81 e0       	ldi	r24, 0x01	; 1

000030e2 <.L1^B1>:
    30e2:	08 95       	ret

000030e4 <__divsf3>:
    30e4:	0e 94 86 18 	call	0x310c	; 0x310c <__divsf3x>
    30e8:	0c 94 92 19 	jmp	0x3324	; 0x3324 <__fp_round>

000030ec <.L^B1>:
    30ec:	0e 94 8b 19 	call	0x3316	; 0x3316 <__fp_pscB>
    30f0:	58 f0       	brcs	.+22     	; 0x3108 <.L_nan>
    30f2:	0e 94 84 19 	call	0x3308	; 0x3308 <__fp_pscA>
    30f6:	40 f0       	brcs	.+16     	; 0x3108 <.L_nan>
    30f8:	29 f4       	brne	.+10     	; 0x3104 <.L_zr>
    30fa:	5f 3f       	cpi	r21, 0xFF	; 255
    30fc:	29 f0       	breq	.+10     	; 0x3108 <.L_nan>

000030fe <.L_inf>:
    30fe:	0c 94 7b 19 	jmp	0x32f6	; 0x32f6 <__fp_inf>

00003102 <.L1^B1>:
    3102:	51 11       	cpse	r21, r1

00003104 <.L_zr>:
    3104:	0c 94 c6 19 	jmp	0x338c	; 0x338c <__fp_szero>

00003108 <.L_nan>:
    3108:	0c 94 81 19 	jmp	0x3302	; 0x3302 <__fp_nan>

0000310c <__divsf3x>:
    310c:	0e 94 a3 19 	call	0x3346	; 0x3346 <__fp_split3>
    3110:	68 f3       	brcs	.-38     	; 0x30ec <.L^B1>

00003112 <__divsf3_pse>:
    3112:	99 23       	and	r25, r25
    3114:	b1 f3       	breq	.-20     	; 0x3102 <.L1^B1>
    3116:	55 23       	and	r21, r21
    3118:	91 f3       	breq	.-28     	; 0x30fe <.L_inf>
    311a:	95 1b       	sub	r25, r21
    311c:	55 0b       	sbc	r21, r21
    311e:	bb 27       	eor	r27, r27
    3120:	aa 27       	eor	r26, r26

00003122 <.L2^B1>:
    3122:	62 17       	cp	r22, r18
    3124:	73 07       	cpc	r23, r19
    3126:	84 07       	cpc	r24, r20
    3128:	38 f0       	brcs	.+14     	; 0x3138 <.L3^B1>
    312a:	9f 5f       	subi	r25, 0xFF	; 255
    312c:	5f 4f       	sbci	r21, 0xFF	; 255
    312e:	22 0f       	add	r18, r18
    3130:	33 1f       	adc	r19, r19
    3132:	44 1f       	adc	r20, r20
    3134:	aa 1f       	adc	r26, r26
    3136:	a9 f3       	breq	.-22     	; 0x3122 <.L2^B1>

00003138 <.L3^B1>:
    3138:	35 d0       	rcall	.+106    	; 0x31a4 <.L_div>
    313a:	0e 2e       	mov	r0, r30
    313c:	3a f0       	brmi	.+14     	; 0x314c <.L5^B1>

0000313e <.L4^B1>:
    313e:	e0 e8       	ldi	r30, 0x80	; 128
    3140:	32 d0       	rcall	.+100    	; 0x31a6 <.L_div1>
    3142:	91 50       	subi	r25, 0x01	; 1
    3144:	50 40       	sbci	r21, 0x00	; 0
    3146:	e6 95       	lsr	r30
    3148:	00 1c       	adc	r0, r0
    314a:	ca f7       	brpl	.-14     	; 0x313e <.L4^B1>

0000314c <.L5^B1>:
    314c:	2b d0       	rcall	.+86     	; 0x31a4 <.L_div>
    314e:	fe 2f       	mov	r31, r30
    3150:	29 d0       	rcall	.+82     	; 0x31a4 <.L_div>
    3152:	66 0f       	add	r22, r22
    3154:	77 1f       	adc	r23, r23
    3156:	88 1f       	adc	r24, r24
    3158:	bb 1f       	adc	r27, r27
    315a:	26 17       	cp	r18, r22
    315c:	37 07       	cpc	r19, r23
    315e:	48 07       	cpc	r20, r24
    3160:	ab 07       	cpc	r26, r27
    3162:	b0 e8       	ldi	r27, 0x80	; 128
    3164:	09 f0       	breq	.+2      	; 0x3168 <.L4^B2>
    3166:	bb 0b       	sbc	r27, r27

00003168 <.L4^B2>:
    3168:	80 2d       	mov	r24, r0
    316a:	bf 01       	movw	r22, r30
    316c:	ff 27       	eor	r31, r31
    316e:	93 58       	subi	r25, 0x83	; 131
    3170:	5f 4f       	sbci	r21, 0xFF	; 255
    3172:	3a f0       	brmi	.+14     	; 0x3182 <.L13^B1>
    3174:	9e 3f       	cpi	r25, 0xFE	; 254
    3176:	51 05       	cpc	r21, r1
    3178:	78 f0       	brcs	.+30     	; 0x3198 <.L15^B1>
    317a:	0c 94 7b 19 	jmp	0x32f6	; 0x32f6 <__fp_inf>

0000317e <.L12^B1>:
    317e:	0c 94 c6 19 	jmp	0x338c	; 0x338c <__fp_szero>

00003182 <.L13^B1>:
    3182:	5f 3f       	cpi	r21, 0xFF	; 255
    3184:	e4 f3       	brlt	.-8      	; 0x317e <.L12^B1>
    3186:	98 3e       	cpi	r25, 0xE8	; 232
    3188:	d4 f3       	brlt	.-12     	; 0x317e <.L12^B1>

0000318a <.L14^B1>:
    318a:	86 95       	lsr	r24
    318c:	77 95       	ror	r23
    318e:	67 95       	ror	r22
    3190:	b7 95       	ror	r27
    3192:	f7 95       	ror	r31
    3194:	9f 5f       	subi	r25, 0xFF	; 255
    3196:	c9 f7       	brne	.-14     	; 0x318a <.L14^B1>

00003198 <.L15^B1>:
    3198:	88 0f       	add	r24, r24
    319a:	91 1d       	adc	r25, r1
    319c:	96 95       	lsr	r25
    319e:	87 95       	ror	r24
    31a0:	97 f9       	bld	r25, 7
    31a2:	08 95       	ret

000031a4 <.L_div>:
    31a4:	e1 e0       	ldi	r30, 0x01	; 1

000031a6 <.L_div1>:
    31a6:	66 0f       	add	r22, r22
    31a8:	77 1f       	adc	r23, r23
    31aa:	88 1f       	adc	r24, r24
    31ac:	bb 1f       	adc	r27, r27
    31ae:	62 17       	cp	r22, r18
    31b0:	73 07       	cpc	r23, r19
    31b2:	84 07       	cpc	r24, r20
    31b4:	ba 07       	cpc	r27, r26
    31b6:	20 f0       	brcs	.+8      	; 0x31c0 <.L2^B2>
    31b8:	62 1b       	sub	r22, r18
    31ba:	73 0b       	sbc	r23, r19
    31bc:	84 0b       	sbc	r24, r20
    31be:	ba 0b       	sbc	r27, r26

000031c0 <.L2^B2>:
    31c0:	ee 1f       	adc	r30, r30
    31c2:	88 f7       	brcc	.-30     	; 0x31a6 <.L_div1>
    31c4:	e0 95       	com	r30
    31c6:	08 95       	ret

000031c8 <__fixsfsi>:
    31c8:	0e 94 eb 18 	call	0x31d6	; 0x31d6 <__fixunssfsi>
    31cc:	68 94       	set
    31ce:	b1 11       	cpse	r27, r1
    31d0:	0c 94 c6 19 	jmp	0x338c	; 0x338c <__fp_szero>
    31d4:	08 95       	ret

000031d6 <__fixunssfsi>:
    31d6:	0e 94 ab 19 	call	0x3356	; 0x3356 <__fp_splitA>
    31da:	88 f0       	brcs	.+34     	; 0x31fe <.L_err>
    31dc:	9f 57       	subi	r25, 0x7F	; 127
    31de:	98 f0       	brcs	.+38     	; 0x3206 <.L_zr>
    31e0:	b9 2f       	mov	r27, r25
    31e2:	99 27       	eor	r25, r25
    31e4:	b7 51       	subi	r27, 0x17	; 23
    31e6:	b0 f0       	brcs	.+44     	; 0x3214 <.L4^B1>
    31e8:	e1 f0       	breq	.+56     	; 0x3222 <.L_sign>

000031ea <.L1^B1>:
    31ea:	66 0f       	add	r22, r22
    31ec:	77 1f       	adc	r23, r23
    31ee:	88 1f       	adc	r24, r24
    31f0:	99 1f       	adc	r25, r25
    31f2:	1a f0       	brmi	.+6      	; 0x31fa <.L2^B1>
    31f4:	ba 95       	dec	r27
    31f6:	c9 f7       	brne	.-14     	; 0x31ea <.L1^B1>
    31f8:	14 c0       	rjmp	.+40     	; 0x3222 <.L_sign>

000031fa <.L2^B1>:
    31fa:	b1 30       	cpi	r27, 0x01	; 1
    31fc:	91 f0       	breq	.+36     	; 0x3222 <.L_sign>

000031fe <.L_err>:
    31fe:	0e 94 c5 19 	call	0x338a	; 0x338a <__fp_zero>
    3202:	b1 e0       	ldi	r27, 0x01	; 1
    3204:	08 95       	ret

00003206 <.L_zr>:
    3206:	0c 94 c5 19 	jmp	0x338a	; 0x338a <__fp_zero>

0000320a <.L3^B1>:
    320a:	67 2f       	mov	r22, r23
    320c:	78 2f       	mov	r23, r24
    320e:	88 27       	eor	r24, r24
    3210:	b8 5f       	subi	r27, 0xF8	; 248
    3212:	39 f0       	breq	.+14     	; 0x3222 <.L_sign>

00003214 <.L4^B1>:
    3214:	b9 3f       	cpi	r27, 0xF9	; 249
    3216:	cc f3       	brlt	.-14     	; 0x320a <.L3^B1>

00003218 <.L5^B1>:
    3218:	86 95       	lsr	r24
    321a:	77 95       	ror	r23
    321c:	67 95       	ror	r22
    321e:	b3 95       	inc	r27
    3220:	d9 f7       	brne	.-10     	; 0x3218 <.L5^B1>

00003222 <.L_sign>:
    3222:	3e f4       	brtc	.+14     	; 0x3232 <.L6^B1>
    3224:	90 95       	com	r25
    3226:	80 95       	com	r24
    3228:	70 95       	com	r23
    322a:	61 95       	neg	r22
    322c:	7f 4f       	sbci	r23, 0xFF	; 255
    322e:	8f 4f       	sbci	r24, 0xFF	; 255
    3230:	9f 4f       	sbci	r25, 0xFF	; 255

00003232 <.L6^B1>:
    3232:	08 95       	ret

00003234 <__floatunsisf>:
    3234:	e8 94       	clt
    3236:	09 c0       	rjmp	.+18     	; 0x324a <.L1^B1>

00003238 <__floatsisf>:
    3238:	97 fb       	bst	r25, 7
    323a:	3e f4       	brtc	.+14     	; 0x324a <.L1^B1>
    323c:	90 95       	com	r25
    323e:	80 95       	com	r24
    3240:	70 95       	com	r23
    3242:	61 95       	neg	r22
    3244:	7f 4f       	sbci	r23, 0xFF	; 255
    3246:	8f 4f       	sbci	r24, 0xFF	; 255
    3248:	9f 4f       	sbci	r25, 0xFF	; 255

0000324a <.L1^B1>:
    324a:	99 23       	and	r25, r25
    324c:	a9 f0       	breq	.+42     	; 0x3278 <.L4^B1>
    324e:	f9 2f       	mov	r31, r25
    3250:	96 e9       	ldi	r25, 0x96	; 150
    3252:	bb 27       	eor	r27, r27

00003254 <.L2^B1>:
    3254:	93 95       	inc	r25
    3256:	f6 95       	lsr	r31
    3258:	87 95       	ror	r24
    325a:	77 95       	ror	r23
    325c:	67 95       	ror	r22
    325e:	b7 95       	ror	r27
    3260:	f1 11       	cpse	r31, r1
    3262:	f8 cf       	rjmp	.-16     	; 0x3254 <.L2^B1>
    3264:	fa f4       	brpl	.+62     	; 0x32a4 <.L_pack>
    3266:	bb 0f       	add	r27, r27
    3268:	11 f4       	brne	.+4      	; 0x326e <.L3^B1>
    326a:	60 ff       	sbrs	r22, 0
    326c:	1b c0       	rjmp	.+54     	; 0x32a4 <.L_pack>

0000326e <.L3^B1>:
    326e:	6f 5f       	subi	r22, 0xFF	; 255
    3270:	7f 4f       	sbci	r23, 0xFF	; 255
    3272:	8f 4f       	sbci	r24, 0xFF	; 255
    3274:	9f 4f       	sbci	r25, 0xFF	; 255
    3276:	16 c0       	rjmp	.+44     	; 0x32a4 <.L_pack>

00003278 <.L4^B1>:
    3278:	88 23       	and	r24, r24
    327a:	11 f0       	breq	.+4      	; 0x3280 <.L5^B1>
    327c:	96 e9       	ldi	r25, 0x96	; 150
    327e:	11 c0       	rjmp	.+34     	; 0x32a2 <.L8^B1>

00003280 <.L5^B1>:
    3280:	77 23       	and	r23, r23
    3282:	21 f0       	breq	.+8      	; 0x328c <.L6^B1>
    3284:	9e e8       	ldi	r25, 0x8E	; 142
    3286:	87 2f       	mov	r24, r23
    3288:	76 2f       	mov	r23, r22
    328a:	05 c0       	rjmp	.+10     	; 0x3296 <.L7^B1>

0000328c <.L6^B1>:
    328c:	66 23       	and	r22, r22
    328e:	71 f0       	breq	.+28     	; 0x32ac <.L9^B1>
    3290:	96 e8       	ldi	r25, 0x86	; 134
    3292:	86 2f       	mov	r24, r22
    3294:	70 e0       	ldi	r23, 0x00	; 0

00003296 <.L7^B1>:
    3296:	60 e0       	ldi	r22, 0x00	; 0
    3298:	2a f0       	brmi	.+10     	; 0x32a4 <.L_pack>

0000329a <.L10^B1>:
    329a:	9a 95       	dec	r25
    329c:	66 0f       	add	r22, r22
    329e:	77 1f       	adc	r23, r23
    32a0:	88 1f       	adc	r24, r24

000032a2 <.L8^B1>:
    32a2:	da f7       	brpl	.-10     	; 0x329a <.L10^B1>

000032a4 <.L_pack>:
    32a4:	88 0f       	add	r24, r24
    32a6:	96 95       	lsr	r25
    32a8:	87 95       	ror	r24
    32aa:	97 f9       	bld	r25, 7

000032ac <.L9^B1>:
    32ac:	08 95       	ret

000032ae <__fp_cmp>:
    32ae:	99 0f       	add	r25, r25
    32b0:	00 08       	sbc	r0, r0
    32b2:	55 0f       	add	r21, r21
    32b4:	aa 0b       	sbc	r26, r26
    32b6:	e0 e8       	ldi	r30, 0x80	; 128
    32b8:	fe ef       	ldi	r31, 0xFE	; 254
    32ba:	16 16       	cp	r1, r22
    32bc:	17 06       	cpc	r1, r23
    32be:	e8 07       	cpc	r30, r24
    32c0:	f9 07       	cpc	r31, r25
    32c2:	c0 f0       	brcs	.+48     	; 0x32f4 <.L9^B1>
    32c4:	12 16       	cp	r1, r18
    32c6:	13 06       	cpc	r1, r19
    32c8:	e4 07       	cpc	r30, r20
    32ca:	f5 07       	cpc	r31, r21
    32cc:	98 f0       	brcs	.+38     	; 0x32f4 <.L9^B1>
    32ce:	62 1b       	sub	r22, r18
    32d0:	73 0b       	sbc	r23, r19
    32d2:	84 0b       	sbc	r24, r20
    32d4:	95 0b       	sbc	r25, r21
    32d6:	39 f4       	brne	.+14     	; 0x32e6 <.L1^B1>
    32d8:	0a 26       	eor	r0, r26
    32da:	61 f0       	breq	.+24     	; 0x32f4 <.L9^B1>
    32dc:	23 2b       	or	r18, r19
    32de:	24 2b       	or	r18, r20
    32e0:	25 2b       	or	r18, r21
    32e2:	21 f4       	brne	.+8      	; 0x32ec <.L2^B1>
    32e4:	08 95       	ret

000032e6 <.L1^B1>:
    32e6:	0a 26       	eor	r0, r26
    32e8:	09 f4       	brne	.+2      	; 0x32ec <.L2^B1>
    32ea:	a1 40       	sbci	r26, 0x01	; 1

000032ec <.L2^B1>:
    32ec:	a6 95       	lsr	r26
    32ee:	8f ef       	ldi	r24, 0xFF	; 255
    32f0:	81 1d       	adc	r24, r1
    32f2:	81 1d       	adc	r24, r1

000032f4 <.L9^B1>:
    32f4:	08 95       	ret

000032f6 <__fp_inf>:
    32f6:	97 f9       	bld	r25, 7
    32f8:	9f 67       	ori	r25, 0x7F	; 127
    32fa:	80 e8       	ldi	r24, 0x80	; 128
    32fc:	70 e0       	ldi	r23, 0x00	; 0
    32fe:	60 e0       	ldi	r22, 0x00	; 0
    3300:	08 95       	ret

00003302 <__fp_nan>:
    3302:	9f ef       	ldi	r25, 0xFF	; 255
    3304:	80 ec       	ldi	r24, 0xC0	; 192
    3306:	08 95       	ret

00003308 <__fp_pscA>:
    3308:	00 24       	eor	r0, r0
    330a:	0a 94       	dec	r0
    330c:	16 16       	cp	r1, r22
    330e:	17 06       	cpc	r1, r23
    3310:	18 06       	cpc	r1, r24
    3312:	09 06       	cpc	r0, r25
    3314:	08 95       	ret

00003316 <__fp_pscB>:
    3316:	00 24       	eor	r0, r0
    3318:	0a 94       	dec	r0
    331a:	12 16       	cp	r1, r18
    331c:	13 06       	cpc	r1, r19
    331e:	14 06       	cpc	r1, r20
    3320:	05 06       	cpc	r0, r21
    3322:	08 95       	ret

00003324 <__fp_round>:
    3324:	09 2e       	mov	r0, r25
    3326:	03 94       	inc	r0
    3328:	00 0c       	add	r0, r0
    332a:	11 f4       	brne	.+4      	; 0x3330 <.L1^B1>
    332c:	88 23       	and	r24, r24
    332e:	52 f0       	brmi	.+20     	; 0x3344 <.L3^B1>

00003330 <.L1^B1>:
    3330:	bb 0f       	add	r27, r27
    3332:	40 f4       	brcc	.+16     	; 0x3344 <.L3^B1>
    3334:	bf 2b       	or	r27, r31
    3336:	11 f4       	brne	.+4      	; 0x333c <.L2^B1>
    3338:	60 ff       	sbrs	r22, 0
    333a:	04 c0       	rjmp	.+8      	; 0x3344 <.L3^B1>

0000333c <.L2^B1>:
    333c:	6f 5f       	subi	r22, 0xFF	; 255
    333e:	7f 4f       	sbci	r23, 0xFF	; 255
    3340:	8f 4f       	sbci	r24, 0xFF	; 255
    3342:	9f 4f       	sbci	r25, 0xFF	; 255

00003344 <.L3^B1>:
    3344:	08 95       	ret

00003346 <__fp_split3>:
    3346:	57 fd       	sbrc	r21, 7
    3348:	90 58       	subi	r25, 0x80	; 128
    334a:	44 0f       	add	r20, r20
    334c:	55 1f       	adc	r21, r21
    334e:	59 f0       	breq	.+22     	; 0x3366 <.L4^B1>
    3350:	5f 3f       	cpi	r21, 0xFF	; 255
    3352:	71 f0       	breq	.+28     	; 0x3370 <.L5^B1>

00003354 <.L1^B1>:
    3354:	47 95       	ror	r20

00003356 <__fp_splitA>:
    3356:	88 0f       	add	r24, r24
    3358:	97 fb       	bst	r25, 7
    335a:	99 1f       	adc	r25, r25
    335c:	61 f0       	breq	.+24     	; 0x3376 <.L6^B1>
    335e:	9f 3f       	cpi	r25, 0xFF	; 255
    3360:	79 f0       	breq	.+30     	; 0x3380 <.L7^B1>

00003362 <.L3^B1>:
    3362:	87 95       	ror	r24
    3364:	08 95       	ret

00003366 <.L4^B1>:
    3366:	12 16       	cp	r1, r18
    3368:	13 06       	cpc	r1, r19
    336a:	14 06       	cpc	r1, r20
    336c:	55 1f       	adc	r21, r21
    336e:	f2 cf       	rjmp	.-28     	; 0x3354 <.L1^B1>

00003370 <.L5^B1>:
    3370:	46 95       	lsr	r20
    3372:	f1 df       	rcall	.-30     	; 0x3356 <__fp_splitA>
    3374:	08 c0       	rjmp	.+16     	; 0x3386 <.L8^B1>

00003376 <.L6^B1>:
    3376:	16 16       	cp	r1, r22
    3378:	17 06       	cpc	r1, r23
    337a:	18 06       	cpc	r1, r24
    337c:	99 1f       	adc	r25, r25
    337e:	f1 cf       	rjmp	.-30     	; 0x3362 <.L3^B1>

00003380 <.L7^B1>:
    3380:	86 95       	lsr	r24
    3382:	71 05       	cpc	r23, r1
    3384:	61 05       	cpc	r22, r1

00003386 <.L8^B1>:
    3386:	08 94       	sec
    3388:	08 95       	ret

0000338a <__fp_zero>:
    338a:	e8 94       	clt

0000338c <__fp_szero>:
    338c:	bb 27       	eor	r27, r27
    338e:	66 27       	eor	r22, r22
    3390:	77 27       	eor	r23, r23
    3392:	cb 01       	movw	r24, r22
    3394:	97 f9       	bld	r25, 7
    3396:	08 95       	ret

00003398 <__gesf2>:
    3398:	0e 94 57 19 	call	0x32ae	; 0x32ae <__fp_cmp>
    339c:	08 f4       	brcc	.+2      	; 0x33a0 <.L1^B1>
    339e:	8f ef       	ldi	r24, 0xFF	; 255

000033a0 <.L1^B1>:
    33a0:	08 95       	ret

000033a2 <__mulsf3>:
    33a2:	0e 94 e4 19 	call	0x33c8	; 0x33c8 <__mulsf3x>
    33a6:	0c 94 92 19 	jmp	0x3324	; 0x3324 <__fp_round>

000033aa <.L^B1>:
    33aa:	0e 94 84 19 	call	0x3308	; 0x3308 <__fp_pscA>
    33ae:	38 f0       	brcs	.+14     	; 0x33be <.L1^B1>
    33b0:	0e 94 8b 19 	call	0x3316	; 0x3316 <__fp_pscB>
    33b4:	20 f0       	brcs	.+8      	; 0x33be <.L1^B1>
    33b6:	95 23       	and	r25, r21
    33b8:	11 f0       	breq	.+4      	; 0x33be <.L1^B1>
    33ba:	0c 94 7b 19 	jmp	0x32f6	; 0x32f6 <__fp_inf>

000033be <.L1^B1>:
    33be:	0c 94 81 19 	jmp	0x3302	; 0x3302 <__fp_nan>

000033c2 <.L2^B1>:
    33c2:	11 24       	eor	r1, r1
    33c4:	0c 94 c6 19 	jmp	0x338c	; 0x338c <__fp_szero>

000033c8 <__mulsf3x>:
    33c8:	0e 94 a3 19 	call	0x3346	; 0x3346 <__fp_split3>
    33cc:	70 f3       	brcs	.-36     	; 0x33aa <.L^B1>

000033ce <__mulsf3_pse>:
    33ce:	95 9f       	mul	r25, r21
    33d0:	c1 f3       	breq	.-16     	; 0x33c2 <.L2^B1>
    33d2:	95 0f       	add	r25, r21
    33d4:	50 e0       	ldi	r21, 0x00	; 0
    33d6:	55 1f       	adc	r21, r21
    33d8:	62 9f       	mul	r22, r18
    33da:	f0 01       	movw	r30, r0
    33dc:	72 9f       	mul	r23, r18
    33de:	bb 27       	eor	r27, r27
    33e0:	f0 0d       	add	r31, r0
    33e2:	b1 1d       	adc	r27, r1
    33e4:	63 9f       	mul	r22, r19
    33e6:	aa 27       	eor	r26, r26
    33e8:	f0 0d       	add	r31, r0
    33ea:	b1 1d       	adc	r27, r1
    33ec:	aa 1f       	adc	r26, r26
    33ee:	64 9f       	mul	r22, r20
    33f0:	66 27       	eor	r22, r22
    33f2:	b0 0d       	add	r27, r0
    33f4:	a1 1d       	adc	r26, r1
    33f6:	66 1f       	adc	r22, r22
    33f8:	82 9f       	mul	r24, r18
    33fa:	22 27       	eor	r18, r18
    33fc:	b0 0d       	add	r27, r0
    33fe:	a1 1d       	adc	r26, r1
    3400:	62 1f       	adc	r22, r18
    3402:	73 9f       	mul	r23, r19
    3404:	b0 0d       	add	r27, r0
    3406:	a1 1d       	adc	r26, r1
    3408:	62 1f       	adc	r22, r18
    340a:	83 9f       	mul	r24, r19
    340c:	a0 0d       	add	r26, r0
    340e:	61 1d       	adc	r22, r1
    3410:	22 1f       	adc	r18, r18
    3412:	74 9f       	mul	r23, r20
    3414:	33 27       	eor	r19, r19
    3416:	a0 0d       	add	r26, r0
    3418:	61 1d       	adc	r22, r1
    341a:	23 1f       	adc	r18, r19
    341c:	84 9f       	mul	r24, r20
    341e:	60 0d       	add	r22, r0
    3420:	21 1d       	adc	r18, r1
    3422:	82 2f       	mov	r24, r18
    3424:	76 2f       	mov	r23, r22
    3426:	6a 2f       	mov	r22, r26
    3428:	11 24       	eor	r1, r1
    342a:	9f 57       	subi	r25, 0x7F	; 127
    342c:	50 40       	sbci	r21, 0x00	; 0
    342e:	9a f0       	brmi	.+38     	; 0x3456 <.L13^B1>
    3430:	f1 f0       	breq	.+60     	; 0x346e <.L15^B1>

00003432 <.L10^B1>:
    3432:	88 23       	and	r24, r24
    3434:	4a f0       	brmi	.+18     	; 0x3448 <.L11^B1>
    3436:	ee 0f       	add	r30, r30
    3438:	ff 1f       	adc	r31, r31
    343a:	bb 1f       	adc	r27, r27
    343c:	66 1f       	adc	r22, r22
    343e:	77 1f       	adc	r23, r23
    3440:	88 1f       	adc	r24, r24
    3442:	91 50       	subi	r25, 0x01	; 1
    3444:	50 40       	sbci	r21, 0x00	; 0
    3446:	a9 f7       	brne	.-22     	; 0x3432 <.L10^B1>

00003448 <.L11^B1>:
    3448:	9e 3f       	cpi	r25, 0xFE	; 254
    344a:	51 05       	cpc	r21, r1
    344c:	80 f0       	brcs	.+32     	; 0x346e <.L15^B1>
    344e:	0c 94 7b 19 	jmp	0x32f6	; 0x32f6 <__fp_inf>

00003452 <.L12^B1>:
    3452:	0c 94 c6 19 	jmp	0x338c	; 0x338c <__fp_szero>

00003456 <.L13^B1>:
    3456:	5f 3f       	cpi	r21, 0xFF	; 255
    3458:	e4 f3       	brlt	.-8      	; 0x3452 <.L12^B1>
    345a:	98 3e       	cpi	r25, 0xE8	; 232
    345c:	d4 f3       	brlt	.-12     	; 0x3452 <.L12^B1>

0000345e <.L14^B1>:
    345e:	86 95       	lsr	r24
    3460:	77 95       	ror	r23
    3462:	67 95       	ror	r22
    3464:	b7 95       	ror	r27
    3466:	f7 95       	ror	r31
    3468:	e7 95       	ror	r30
    346a:	9f 5f       	subi	r25, 0xFF	; 255
    346c:	c1 f7       	brne	.-16     	; 0x345e <.L14^B1>

0000346e <.L15^B1>:
    346e:	fe 2b       	or	r31, r30
    3470:	88 0f       	add	r24, r24
    3472:	91 1d       	adc	r25, r1
    3474:	96 95       	lsr	r25
    3476:	87 95       	ror	r24
    3478:	97 f9       	bld	r25, 7
    347a:	08 95       	ret

0000347c <_exit>:
    347c:	f8 94       	cli

0000347e <__stop_program>:
    347e:	ff cf       	rjmp	.-2      	; 0x347e <__stop_program>
