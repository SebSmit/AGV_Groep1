
bin\Debug\AVGcode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  00003576  0000362a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003576  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800224  00800224  0000364e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000364e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00003651  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003664  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000001f8  00000000  00000000  000036a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001fb1  00000000  00000000  000038a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 0000134c  00000000  00000000  00005851  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000027a0  00000000  00000000  00006b9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000810  00000000  00000000  00009340  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000099d  00000000  00000000  00009b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001c3  00000000  00000000  0000a4ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 da 17 	jmp	0x2fb4	; 0x2fb4 <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 03 04 	jmp	0x806	; 0x806 <__vector_17>
      48:	0c 94 33 04 	jmp	0x866	; 0x866 <__vector_18>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 90 03 	jmp	0x720	; 0x720 <__vector_20>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__vector_32>
      84:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <__vector_33>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__vector_35>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e6 e7       	ldi	r30, 0x76	; 118

000000fc <.Loc.4>:
      fc:	f5 e3       	ldi	r31, 0x35	; 53

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a4 32       	cpi	r26, 0x24	; 36

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a4 e2       	ldi	r26, 0x24	; 36

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a4 33       	cpi	r26, 0x34	; 52

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 ba 06 	call	0xd74	; 0xd74 <main>
     122:	0c 94 b9 1a 	jmp	0x3572	; 0x3572 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <I2C_Init>:

volatile int Gyro_count = 0;
volatile float DS_1 = 0;
volatile float DS_2 = 0;

void I2C_Init() {
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    // Set SCL frequency to 100kHz
    TWBR = 72;
     132:	88 eb       	ldi	r24, 0xB8	; 184
     134:	90 e0       	ldi	r25, 0x00	; 0

00000136 <.Loc.2>:
     136:	28 e4       	ldi	r18, 0x48	; 72
     138:	fc 01       	movw	r30, r24
     13a:	20 83       	st	Z, r18

0000013c <.Loc.3>:
}
     13c:	00 00       	nop
     13e:	df 91       	pop	r29
     140:	cf 91       	pop	r28
     142:	08 95       	ret

00000144 <I2C_Start>:

void I2C_Start() {
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62

0000014c <.Loc.5>:
    TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
     14c:	8c eb       	ldi	r24, 0xBC	; 188
     14e:	90 e0       	ldi	r25, 0x00	; 0

00000150 <.Loc.6>:
     150:	24 ea       	ldi	r18, 0xA4	; 164
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18

00000156 <.Loc.7>:
	...

00000158 <.L3>:
    while (!(TWCR & (1 << TWINT)));
     158:	8c eb       	ldi	r24, 0xBC	; 188
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	fc 01       	movw	r30, r24
     15e:	80 81       	ld	r24, Z

00000160 <.Loc.9>:
     160:	88 23       	and	r24, r24
     162:	d4 f7       	brge	.-12     	; 0x158 <.L3>

00000164 <.Loc.10>:
}
     164:	00 00       	nop
     166:	00 00       	nop
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	08 95       	ret

0000016e <I2C_Stop>:

void I2C_Stop() {
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62

00000176 <.Loc.12>:
    TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
     176:	8c eb       	ldi	r24, 0xBC	; 188
     178:	90 e0       	ldi	r25, 0x00	; 0

0000017a <.Loc.13>:
     17a:	24 e9       	ldi	r18, 0x94	; 148
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18

00000180 <.Loc.14>:
}
     180:	00 00       	nop
     182:	df 91       	pop	r29
     184:	cf 91       	pop	r28
     186:	08 95       	ret

00000188 <I2C_Write>:

void I2C_Write(uint8_t data) {
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	0f 92       	push	r0
     18e:	cd b7       	in	r28, 0x3d	; 61
     190:	de b7       	in	r29, 0x3e	; 62
     192:	89 83       	std	Y+1, r24	; 0x01

00000194 <.Loc.16>:
    TWDR = data;
     194:	8b eb       	ldi	r24, 0xBB	; 187
     196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.17>:
     198:	29 81       	ldd	r18, Y+1	; 0x01
     19a:	fc 01       	movw	r30, r24
     19c:	20 83       	st	Z, r18

0000019e <.Loc.18>:
    TWCR = (1 << TWINT) | (1 << TWEN);
     19e:	8c eb       	ldi	r24, 0xBC	; 188
     1a0:	90 e0       	ldi	r25, 0x00	; 0

000001a2 <.Loc.19>:
     1a2:	24 e8       	ldi	r18, 0x84	; 132
     1a4:	fc 01       	movw	r30, r24
     1a6:	20 83       	st	Z, r18

000001a8 <.Loc.20>:
	...

000001aa <.L6>:
    while (!(TWCR & (1 << TWINT)));
     1aa:	8c eb       	ldi	r24, 0xBC	; 188
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	fc 01       	movw	r30, r24
     1b0:	80 81       	ld	r24, Z

000001b2 <.Loc.22>:
     1b2:	88 23       	and	r24, r24
     1b4:	d4 f7       	brge	.-12     	; 0x1aa <.L6>

000001b6 <.Loc.23>:
}
     1b6:	00 00       	nop
     1b8:	00 00       	nop
     1ba:	0f 90       	pop	r0
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <I2C_ReadACK>:

uint8_t I2C_ReadACK() {
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62

000001ca <.Loc.25>:
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
     1ca:	8c eb       	ldi	r24, 0xBC	; 188
     1cc:	90 e0       	ldi	r25, 0x00	; 0

000001ce <.Loc.26>:
     1ce:	24 ec       	ldi	r18, 0xC4	; 196
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18

000001d4 <.Loc.27>:
	...

000001d6 <.L8>:
    while (!(TWCR & (1 << TWINT)));
     1d6:	8c eb       	ldi	r24, 0xBC	; 188
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	fc 01       	movw	r30, r24
     1dc:	80 81       	ld	r24, Z

000001de <.Loc.29>:
     1de:	88 23       	and	r24, r24
     1e0:	d4 f7       	brge	.-12     	; 0x1d6 <.L8>

000001e2 <.Loc.30>:
    return TWDR;
     1e2:	8b eb       	ldi	r24, 0xBB	; 187
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	fc 01       	movw	r30, r24
     1e8:	80 81       	ld	r24, Z

000001ea <.Loc.31>:
}
     1ea:	df 91       	pop	r29
     1ec:	cf 91       	pop	r28
     1ee:	08 95       	ret

000001f0 <I2C_ReadNACK>:

uint8_t I2C_ReadNACK() {
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	cd b7       	in	r28, 0x3d	; 61
     1f6:	de b7       	in	r29, 0x3e	; 62

000001f8 <.Loc.33>:
    TWCR = (1 << TWINT) | (1 << TWEN);
     1f8:	8c eb       	ldi	r24, 0xBC	; 188
     1fa:	90 e0       	ldi	r25, 0x00	; 0

000001fc <.Loc.34>:
     1fc:	24 e8       	ldi	r18, 0x84	; 132
     1fe:	fc 01       	movw	r30, r24
     200:	20 83       	st	Z, r18

00000202 <.Loc.35>:
	...

00000204 <.L11>:
    while (!(TWCR & (1 << TWINT)));
     204:	8c eb       	ldi	r24, 0xBC	; 188
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	fc 01       	movw	r30, r24
     20a:	80 81       	ld	r24, Z

0000020c <.Loc.37>:
     20c:	88 23       	and	r24, r24
     20e:	d4 f7       	brge	.-12     	; 0x204 <.L11>

00000210 <.Loc.38>:
    return TWDR;
     210:	8b eb       	ldi	r24, 0xBB	; 187
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	fc 01       	movw	r30, r24
     216:	80 81       	ld	r24, Z

00000218 <.Loc.39>:
}
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <MPU6050_WriteReg>:

void MPU6050_WriteReg(uint8_t reg, uint8_t data) {
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	0f 92       	push	r0
     224:	0f 92       	push	r0
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	89 83       	std	Y+1, r24	; 0x01
     22c:	6a 83       	std	Y+2, r22	; 0x02

0000022e <.Loc.41>:
    I2C_Start();
     22e:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000232 <.Loc.42>:
    I2C_Write(MPU6050_ADDR << 1);
     232:	80 ed       	ldi	r24, 0xD0	; 208
     234:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000238 <.Loc.43>:
    I2C_Write(reg);
     238:	89 81       	ldd	r24, Y+1	; 0x01
     23a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000023e <.Loc.44>:
    I2C_Write(data);
     23e:	8a 81       	ldd	r24, Y+2	; 0x02
     240:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000244 <.Loc.45>:
    I2C_Stop();
     244:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C_Stop>

00000248 <.Loc.46>:
}
     248:	00 00       	nop
     24a:	0f 90       	pop	r0
     24c:	0f 90       	pop	r0
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <MPU6050_ReadGyro>:

int16_t MPU6050_ReadGyro(uint8_t reg) {
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	00 d0       	rcall	.+0      	; 0x25e <L0^A>

0000025e <L0^A>:
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	8b 83       	std	Y+3, r24	; 0x03

00000264 <.Loc.48>:
    int16_t value;
    I2C_Start();
     264:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000268 <.Loc.49>:
    I2C_Write(MPU6050_ADDR << 1);
     268:	80 ed       	ldi	r24, 0xD0	; 208
     26a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000026e <.Loc.50>:
    I2C_Write(reg);
     26e:	8b 81       	ldd	r24, Y+3	; 0x03
     270:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000274 <.Loc.51>:
    I2C_Start();
     274:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000278 <.Loc.52>:
    I2C_Write((MPU6050_ADDR << 1) | 0x01);
     278:	81 ed       	ldi	r24, 0xD1	; 209
     27a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000027e <.Loc.53>:
    value = (I2C_ReadACK() << 8) | I2C_ReadNACK();
     27e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <I2C_ReadACK>
     282:	88 2f       	mov	r24, r24
     284:	90 e0       	ldi	r25, 0x00	; 0

00000286 <.Loc.54>:
     286:	18 2f       	mov	r17, r24
     288:	00 27       	eor	r16, r16

0000028a <.Loc.55>:
     28a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <I2C_ReadNACK>
     28e:	88 2f       	mov	r24, r24
     290:	90 e0       	ldi	r25, 0x00	; 0

00000292 <.Loc.56>:
     292:	80 2b       	or	r24, r16
     294:	91 2b       	or	r25, r17
     296:	9a 83       	std	Y+2, r25	; 0x02
     298:	89 83       	std	Y+1, r24	; 0x01

0000029a <.Loc.57>:
    I2C_Stop();
     29a:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C_Stop>

0000029e <.Loc.58>:
    return value;
     29e:	89 81       	ldd	r24, Y+1	; 0x01
     2a0:	9a 81       	ldd	r25, Y+2	; 0x02

000002a2 <.Loc.59>:
}
     2a2:	0f 90       	pop	r0
     2a4:	0f 90       	pop	r0
     2a6:	0f 90       	pop	r0
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	1f 91       	pop	r17
     2ae:	0f 91       	pop	r16
     2b0:	08 95       	ret

000002b2 <Read_Gyro_X>:

float Read_Gyro_X(void){
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	cd b7       	in	r28, 0x3d	; 61
     2b8:	de b7       	in	r29, 0x3e	; 62
     2ba:	66 97       	sbiw	r28, 0x16	; 22
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	f8 94       	cli
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	cd bf       	out	0x3d, r28	; 61

000002c6 <.Loc.61>:
    int16_t GyroX = MPU6050_ReadGyro(0x43);
     2c6:	83 e4       	ldi	r24, 0x43	; 67
     2c8:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     2cc:	9a 83       	std	Y+2, r25	; 0x02
     2ce:	89 83       	std	Y+1, r24	; 0x01

000002d0 <.Loc.62>:
    GyroX += 248;
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	9a 81       	ldd	r25, Y+2	; 0x02
     2d4:	88 50       	subi	r24, 0x08	; 8
     2d6:	9f 4f       	sbci	r25, 0xFF	; 255
     2d8:	9a 83       	std	Y+2, r25	; 0x02
     2da:	89 83       	std	Y+1, r24	; 0x01

000002dc <.Loc.63>:
    float GyroX_degPerSec = (float)GyroX / 131.0;
     2dc:	89 81       	ldd	r24, Y+1	; 0x01
     2de:	9a 81       	ldd	r25, Y+2	; 0x02
     2e0:	9c 01       	movw	r18, r24
     2e2:	99 0f       	add	r25, r25
     2e4:	44 0b       	sbc	r20, r20
     2e6:	55 0b       	sbc	r21, r21
     2e8:	2f 87       	std	Y+15, r18	; 0x0f
     2ea:	38 8b       	std	Y+16, r19	; 0x10
     2ec:	49 8b       	std	Y+17, r20	; 0x11
     2ee:	5a 8b       	std	Y+18, r21	; 0x12
     2f0:	6f 85       	ldd	r22, Y+15	; 0x0f
     2f2:	78 89       	ldd	r23, Y+16	; 0x10
     2f4:	89 89       	ldd	r24, Y+17	; 0x11
     2f6:	9a 89       	ldd	r25, Y+18	; 0x12
     2f8:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
     2fc:	6f 83       	std	Y+7, r22	; 0x07
     2fe:	78 87       	std	Y+8, r23	; 0x08
     300:	89 87       	std	Y+9, r24	; 0x09
     302:	9a 87       	std	Y+10, r25	; 0x0a

00000304 <.Loc.64>:
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	43 e0       	ldi	r20, 0x03	; 3
     30a:	53 e4       	ldi	r21, 0x43	; 67
     30c:	6f 81       	ldd	r22, Y+7	; 0x07
     30e:	78 85       	ldd	r23, Y+8	; 0x08
     310:	89 85       	ldd	r24, Y+9	; 0x09
     312:	9a 85       	ldd	r25, Y+10	; 0x0a
     314:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
     318:	6b 8b       	std	Y+19, r22	; 0x13
     31a:	7c 8b       	std	Y+20, r23	; 0x14
     31c:	8d 8b       	std	Y+21, r24	; 0x15
     31e:	9e 8b       	std	Y+22, r25	; 0x16
     320:	8b 89       	ldd	r24, Y+19	; 0x13
     322:	9c 89       	ldd	r25, Y+20	; 0x14
     324:	ad 89       	ldd	r26, Y+21	; 0x15
     326:	be 89       	ldd	r27, Y+22	; 0x16
     328:	8b 83       	std	Y+3, r24	; 0x03
     32a:	9c 83       	std	Y+4, r25	; 0x04
     32c:	ad 83       	std	Y+5, r26	; 0x05
     32e:	be 83       	std	Y+6, r27	; 0x06

00000330 <.Loc.65>:
    return GyroX_degPerSec;
     330:	8b 81       	ldd	r24, Y+3	; 0x03
     332:	9c 81       	ldd	r25, Y+4	; 0x04
     334:	ad 81       	ldd	r26, Y+5	; 0x05
     336:	be 81       	ldd	r27, Y+6	; 0x06
     338:	8b 87       	std	Y+11, r24	; 0x0b
     33a:	9c 87       	std	Y+12, r25	; 0x0c
     33c:	ad 87       	std	Y+13, r26	; 0x0d
     33e:	be 87       	std	Y+14, r27	; 0x0e

00000340 <.Loc.66>:
}
     340:	6b 85       	ldd	r22, Y+11	; 0x0b
     342:	7c 85       	ldd	r23, Y+12	; 0x0c
     344:	8d 85       	ldd	r24, Y+13	; 0x0d
     346:	9e 85       	ldd	r25, Y+14	; 0x0e
     348:	66 96       	adiw	r28, 0x16	; 22
     34a:	0f b6       	in	r0, 0x3f	; 63
     34c:	f8 94       	cli
     34e:	de bf       	out	0x3e, r29	; 62
     350:	0f be       	out	0x3f, r0	; 63
     352:	cd bf       	out	0x3d, r28	; 61
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <Read_Gyro_Y>:
float Read_Gyro_Y(void){
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
     362:	66 97       	sbiw	r28, 0x16	; 22
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	f8 94       	cli
     368:	de bf       	out	0x3e, r29	; 62
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	cd bf       	out	0x3d, r28	; 61

0000036e <.Loc.68>:
    int16_t GyroY = MPU6050_ReadGyro(0x45);
     36e:	85 e4       	ldi	r24, 0x45	; 69
     370:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     374:	9a 83       	std	Y+2, r25	; 0x02
     376:	89 83       	std	Y+1, r24	; 0x01

00000378 <.Loc.69>:
    float GyroY_degPerSec = (float)GyroY / 131.0;
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
     37c:	9c 01       	movw	r18, r24
     37e:	99 0f       	add	r25, r25
     380:	44 0b       	sbc	r20, r20
     382:	55 0b       	sbc	r21, r21
     384:	2f 87       	std	Y+15, r18	; 0x0f
     386:	38 8b       	std	Y+16, r19	; 0x10
     388:	49 8b       	std	Y+17, r20	; 0x11
     38a:	5a 8b       	std	Y+18, r21	; 0x12
     38c:	6f 85       	ldd	r22, Y+15	; 0x0f
     38e:	78 89       	ldd	r23, Y+16	; 0x10
     390:	89 89       	ldd	r24, Y+17	; 0x11
     392:	9a 89       	ldd	r25, Y+18	; 0x12
     394:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
     398:	6f 83       	std	Y+7, r22	; 0x07
     39a:	78 87       	std	Y+8, r23	; 0x08
     39c:	89 87       	std	Y+9, r24	; 0x09
     39e:	9a 87       	std	Y+10, r25	; 0x0a

000003a0 <.Loc.70>:
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	43 e0       	ldi	r20, 0x03	; 3
     3a6:	53 e4       	ldi	r21, 0x43	; 67
     3a8:	6f 81       	ldd	r22, Y+7	; 0x07
     3aa:	78 85       	ldd	r23, Y+8	; 0x08
     3ac:	89 85       	ldd	r24, Y+9	; 0x09
     3ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b0:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
     3b4:	6b 8b       	std	Y+19, r22	; 0x13
     3b6:	7c 8b       	std	Y+20, r23	; 0x14
     3b8:	8d 8b       	std	Y+21, r24	; 0x15
     3ba:	9e 8b       	std	Y+22, r25	; 0x16
     3bc:	8b 89       	ldd	r24, Y+19	; 0x13
     3be:	9c 89       	ldd	r25, Y+20	; 0x14
     3c0:	ad 89       	ldd	r26, Y+21	; 0x15
     3c2:	be 89       	ldd	r27, Y+22	; 0x16
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	9c 83       	std	Y+4, r25	; 0x04
     3c8:	ad 83       	std	Y+5, r26	; 0x05
     3ca:	be 83       	std	Y+6, r27	; 0x06

000003cc <.Loc.71>:
    return GyroY_degPerSec;
     3cc:	8b 81       	ldd	r24, Y+3	; 0x03
     3ce:	9c 81       	ldd	r25, Y+4	; 0x04
     3d0:	ad 81       	ldd	r26, Y+5	; 0x05
     3d2:	be 81       	ldd	r27, Y+6	; 0x06
     3d4:	8b 87       	std	Y+11, r24	; 0x0b
     3d6:	9c 87       	std	Y+12, r25	; 0x0c
     3d8:	ad 87       	std	Y+13, r26	; 0x0d
     3da:	be 87       	std	Y+14, r27	; 0x0e

000003dc <.Loc.72>:
}
     3dc:	6b 85       	ldd	r22, Y+11	; 0x0b
     3de:	7c 85       	ldd	r23, Y+12	; 0x0c
     3e0:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e2:	9e 85       	ldd	r25, Y+14	; 0x0e
     3e4:	66 96       	adiw	r28, 0x16	; 22
     3e6:	0f b6       	in	r0, 0x3f	; 63
     3e8:	f8 94       	cli
     3ea:	de bf       	out	0x3e, r29	; 62
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	cd bf       	out	0x3d, r28	; 61
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <Read_Gyro_Z>:
float Read_Gyro_Z(void){
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	cd b7       	in	r28, 0x3d	; 61
     3fc:	de b7       	in	r29, 0x3e	; 62
     3fe:	66 97       	sbiw	r28, 0x16	; 22
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61

0000040a <.Loc.74>:
    int16_t GyroZ = MPU6050_ReadGyro(0x47);
     40a:	87 e4       	ldi	r24, 0x47	; 71
     40c:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	89 83       	std	Y+1, r24	; 0x01

00000414 <.Loc.75>:
    float GyroZ_degPerSec = (float)GyroZ / 131.0;
     414:	89 81       	ldd	r24, Y+1	; 0x01
     416:	9a 81       	ldd	r25, Y+2	; 0x02
     418:	9c 01       	movw	r18, r24
     41a:	99 0f       	add	r25, r25
     41c:	44 0b       	sbc	r20, r20
     41e:	55 0b       	sbc	r21, r21
     420:	2f 87       	std	Y+15, r18	; 0x0f
     422:	38 8b       	std	Y+16, r19	; 0x10
     424:	49 8b       	std	Y+17, r20	; 0x11
     426:	5a 8b       	std	Y+18, r21	; 0x12
     428:	6f 85       	ldd	r22, Y+15	; 0x0f
     42a:	78 89       	ldd	r23, Y+16	; 0x10
     42c:	89 89       	ldd	r24, Y+17	; 0x11
     42e:	9a 89       	ldd	r25, Y+18	; 0x12
     430:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
     434:	6f 83       	std	Y+7, r22	; 0x07
     436:	78 87       	std	Y+8, r23	; 0x08
     438:	89 87       	std	Y+9, r24	; 0x09
     43a:	9a 87       	std	Y+10, r25	; 0x0a

0000043c <.Loc.76>:
     43c:	20 e0       	ldi	r18, 0x00	; 0
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	43 e0       	ldi	r20, 0x03	; 3
     442:	53 e4       	ldi	r21, 0x43	; 67
     444:	6f 81       	ldd	r22, Y+7	; 0x07
     446:	78 85       	ldd	r23, Y+8	; 0x08
     448:	89 85       	ldd	r24, Y+9	; 0x09
     44a:	9a 85       	ldd	r25, Y+10	; 0x0a
     44c:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
     450:	6b 8b       	std	Y+19, r22	; 0x13
     452:	7c 8b       	std	Y+20, r23	; 0x14
     454:	8d 8b       	std	Y+21, r24	; 0x15
     456:	9e 8b       	std	Y+22, r25	; 0x16
     458:	8b 89       	ldd	r24, Y+19	; 0x13
     45a:	9c 89       	ldd	r25, Y+20	; 0x14
     45c:	ad 89       	ldd	r26, Y+21	; 0x15
     45e:	be 89       	ldd	r27, Y+22	; 0x16
     460:	8b 83       	std	Y+3, r24	; 0x03
     462:	9c 83       	std	Y+4, r25	; 0x04
     464:	ad 83       	std	Y+5, r26	; 0x05
     466:	be 83       	std	Y+6, r27	; 0x06

00000468 <.Loc.77>:
    return GyroZ_degPerSec;
     468:	8b 81       	ldd	r24, Y+3	; 0x03
     46a:	9c 81       	ldd	r25, Y+4	; 0x04
     46c:	ad 81       	ldd	r26, Y+5	; 0x05
     46e:	be 81       	ldd	r27, Y+6	; 0x06
     470:	8b 87       	std	Y+11, r24	; 0x0b
     472:	9c 87       	std	Y+12, r25	; 0x0c
     474:	ad 87       	std	Y+13, r26	; 0x0d
     476:	be 87       	std	Y+14, r27	; 0x0e

00000478 <.Loc.78>:
}
     478:	6b 85       	ldd	r22, Y+11	; 0x0b
     47a:	7c 85       	ldd	r23, Y+12	; 0x0c
     47c:	8d 85       	ldd	r24, Y+13	; 0x0d
     47e:	9e 85       	ldd	r25, Y+14	; 0x0e
     480:	66 96       	adiw	r28, 0x16	; 22
     482:	0f b6       	in	r0, 0x3f	; 63
     484:	f8 94       	cli
     486:	de bf       	out	0x3e, r29	; 62
     488:	0f be       	out	0x3f, r0	; 63
     48a:	cd bf       	out	0x3d, r28	; 61
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <MPU6050_Init>:


void MPU6050_Init() {
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62

0000049a <.Loc.80>:
    MPU6050_WriteReg(0x6B, 0x00); // Power on the MPU6050
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	8b e6       	ldi	r24, 0x6B	; 107
     49e:	0e 94 0f 01 	call	0x21e	; 0x21e <MPU6050_WriteReg>

000004a2 <.Loc.81>:
}
     4a2:	00 00       	nop
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <initTimerGyro>:

void initTimerGyro(void){
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62

000004b2 <.Loc.83>:
    TCCR0A = 0;
     4b2:	84 e4       	ldi	r24, 0x44	; 68
     4b4:	90 e0       	ldi	r25, 0x00	; 0

000004b6 <.Loc.84>:
     4b6:	fc 01       	movw	r30, r24
     4b8:	10 82       	st	Z, r1

000004ba <.Loc.85>:
    TCCR0B |= (1<<CS00);
     4ba:	85 e4       	ldi	r24, 0x45	; 69
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	fc 01       	movw	r30, r24
     4c0:	20 81       	ld	r18, Z
     4c2:	85 e4       	ldi	r24, 0x45	; 69
     4c4:	90 e0       	ldi	r25, 0x00	; 0

000004c6 <.Loc.86>:
     4c6:	21 60       	ori	r18, 0x01	; 1
     4c8:	fc 01       	movw	r30, r24
     4ca:	20 83       	st	Z, r18

000004cc <.Loc.87>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s = 0.016ms = 16us
    //62500x/sec
    TIMSK0 = (1<<TOIE0);
     4cc:	8e e6       	ldi	r24, 0x6E	; 110
     4ce:	90 e0       	ldi	r25, 0x00	; 0

000004d0 <.Loc.88>:
     4d0:	21 e0       	ldi	r18, 0x01	; 1
     4d2:	fc 01       	movw	r30, r24
     4d4:	20 83       	st	Z, r18

000004d6 <.Loc.89>:
    sei();
     4d6:	78 94       	sei

000004d8 <.Loc.90>:
}
     4d8:	00 00       	nop
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	08 95       	ret

000004e0 <__vector_23>:
ISR(TIMER0_OVF_vect){
     4e0:	1f 92       	push	r1
     4e2:	0f 92       	push	r0
     4e4:	0f b6       	in	r0, 0x3f	; 63
     4e6:	0f 92       	push	r0
     4e8:	11 24       	eor	r1, r1
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62

000004f6 <.Loc.92>:
    Gyro_count++;
     4f6:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Gyro_count>
     4fa:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <Gyro_count+0x1>
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <Gyro_count+0x1>
     504:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <Gyro_count>

00000508 <.Loc.93>:
}
     508:	00 00       	nop
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	9f 91       	pop	r25
     510:	8f 91       	pop	r24
     512:	0f 90       	pop	r0
     514:	0f be       	out	0x3f, r0	; 63
     516:	0f 90       	pop	r0
     518:	1f 90       	pop	r1
     51a:	18 95       	reti

0000051c <UpdateHeading>:

float UpdateHeading(float CurrentHeading){
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	ec 97       	sbiw	r28, 0x3c	; 60
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
     530:	69 87       	std	Y+9, r22	; 0x09
     532:	7a 87       	std	Y+10, r23	; 0x0a
     534:	8b 87       	std	Y+11, r24	; 0x0b
     536:	9c 87       	std	Y+12, r25	; 0x0c

00000538 <.Loc.95>:

    float DeltaTijd = 0;
     538:	19 82       	std	Y+1, r1	; 0x01
     53a:	1a 82       	std	Y+2, r1	; 0x02
     53c:	1b 82       	std	Y+3, r1	; 0x03
     53e:	1c 82       	std	Y+4, r1	; 0x04

00000540 <.Loc.96>:
    float DeltaHeading;

    // Read gyroscopic rotation data
    DS_2 = Read_Gyro_X();
     540:	0e 94 59 01 	call	0x2b2	; 0x2b2 <Read_Gyro_X>
     544:	6d 87       	std	Y+13, r22	; 0x0d
     546:	7e 87       	std	Y+14, r23	; 0x0e
     548:	8f 87       	std	Y+15, r24	; 0x0f
     54a:	98 8b       	std	Y+16, r25	; 0x10

0000054c <.Loc.97>:
     54c:	2d 85       	ldd	r18, Y+13	; 0x0d
     54e:	3e 85       	ldd	r19, Y+14	; 0x0e
     550:	4f 85       	ldd	r20, Y+15	; 0x0f
     552:	58 89       	ldd	r21, Y+16	; 0x10
     554:	20 93 2a 02 	sts	0x022A, r18	; 0x80022a <DS_2>
     558:	30 93 2b 02 	sts	0x022B, r19	; 0x80022b <DS_2+0x1>
     55c:	40 93 2c 02 	sts	0x022C, r20	; 0x80022c <DS_2+0x2>
     560:	50 93 2d 02 	sts	0x022D, r21	; 0x80022d <DS_2+0x3>

00000564 <.Loc.98>:
    //Timer uitlezen
    //16us * count is aantal s
    DeltaTijd = Gyro_count;
     564:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Gyro_count>
     568:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <Gyro_count+0x1>
     56c:	9c 01       	movw	r18, r24
     56e:	99 0f       	add	r25, r25
     570:	44 0b       	sbc	r20, r20
     572:	55 0b       	sbc	r21, r21
     574:	29 a3       	std	Y+33, r18	; 0x21
     576:	3a a3       	std	Y+34, r19	; 0x22
     578:	4b a3       	std	Y+35, r20	; 0x23
     57a:	5c a3       	std	Y+36, r21	; 0x24
     57c:	69 a1       	ldd	r22, Y+33	; 0x21
     57e:	7a a1       	ldd	r23, Y+34	; 0x22
     580:	8b a1       	ldd	r24, Y+35	; 0x23
     582:	9c a1       	ldd	r25, Y+36	; 0x24
     584:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
     588:	6d a3       	std	Y+37, r22	; 0x25
     58a:	7e a3       	std	Y+38, r23	; 0x26
     58c:	8f a3       	std	Y+39, r24	; 0x27
     58e:	98 a7       	std	Y+40, r25	; 0x28
     590:	8d a1       	ldd	r24, Y+37	; 0x25
     592:	9e a1       	ldd	r25, Y+38	; 0x26
     594:	af a1       	ldd	r26, Y+39	; 0x27
     596:	b8 a5       	ldd	r27, Y+40	; 0x28
     598:	89 83       	std	Y+1, r24	; 0x01
     59a:	9a 83       	std	Y+2, r25	; 0x02
     59c:	ab 83       	std	Y+3, r26	; 0x03
     59e:	bc 83       	std	Y+4, r27	; 0x04

000005a0 <.Loc.99>:

    //reset timer
    TCNT0 = 0;
     5a0:	86 e4       	ldi	r24, 0x46	; 70
     5a2:	90 e0       	ldi	r25, 0x00	; 0

000005a4 <.Loc.100>:
     5a4:	dc 01       	movw	r26, r24
     5a6:	1c 92       	st	X, r1

000005a8 <.Loc.101>:
    TIFR0 = 1<<TOV0;
     5a8:	85 e3       	ldi	r24, 0x35	; 53
     5aa:	90 e0       	ldi	r25, 0x00	; 0

000005ac <.Loc.102>:
     5ac:	21 e0       	ldi	r18, 0x01	; 1
     5ae:	fc 01       	movw	r30, r24
     5b0:	20 83       	st	Z, r18

000005b2 <.Loc.103>:
    Gyro_count = 0;
     5b2:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <Gyro_count+0x1>
     5b6:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <Gyro_count>

000005ba <.Loc.104>:
    DeltaTijd = DeltaTijd * 0.000016; //DT nu in s
     5ba:	2d eb       	ldi	r18, 0xBD	; 189
     5bc:	37 e3       	ldi	r19, 0x37	; 55
     5be:	46 e8       	ldi	r20, 0x86	; 134
     5c0:	57 e3       	ldi	r21, 0x37	; 55
     5c2:	69 81       	ldd	r22, Y+1	; 0x01
     5c4:	7a 81       	ldd	r23, Y+2	; 0x02
     5c6:	8b 81       	ldd	r24, Y+3	; 0x03
     5c8:	9c 81       	ldd	r25, Y+4	; 0x04
     5ca:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
     5ce:	69 a7       	std	Y+41, r22	; 0x29
     5d0:	7a a7       	std	Y+42, r23	; 0x2a
     5d2:	8b a7       	std	Y+43, r24	; 0x2b
     5d4:	9c a7       	std	Y+44, r25	; 0x2c
     5d6:	29 a5       	ldd	r18, Y+41	; 0x29
     5d8:	3a a5       	ldd	r19, Y+42	; 0x2a
     5da:	4b a5       	ldd	r20, Y+43	; 0x2b
     5dc:	5c a5       	ldd	r21, Y+44	; 0x2c
     5de:	29 83       	std	Y+1, r18	; 0x01
     5e0:	3a 83       	std	Y+2, r19	; 0x02
     5e2:	4b 83       	std	Y+3, r20	; 0x03
     5e4:	5c 83       	std	Y+4, r21	; 0x04

000005e6 <.Loc.105>:
    DeltaHeading = ((DS_1 + DS_2)*(DeltaTijd))/2.0;
     5e6:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <DS_1>
     5ea:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <DS_1+0x1>
     5ee:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <DS_1+0x2>
     5f2:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <DS_1+0x3>
     5f6:	89 8b       	std	Y+17, r24	; 0x11
     5f8:	9a 8b       	std	Y+18, r25	; 0x12
     5fa:	ab 8b       	std	Y+19, r26	; 0x13
     5fc:	bc 8b       	std	Y+20, r27	; 0x14
     5fe:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <DS_2>
     602:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <DS_2+0x1>
     606:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <DS_2+0x2>
     60a:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <DS_2+0x3>
     60e:	9c 01       	movw	r18, r24
     610:	ad 01       	movw	r20, r26
     612:	69 89       	ldd	r22, Y+17	; 0x11
     614:	7a 89       	ldd	r23, Y+18	; 0x12
     616:	8b 89       	ldd	r24, Y+19	; 0x13
     618:	9c 89       	ldd	r25, Y+20	; 0x14
     61a:	0e 94 7c 18 	call	0x30f8	; 0x30f8 <__addsf3>
     61e:	6d a7       	std	Y+45, r22	; 0x2d
     620:	7e a7       	std	Y+46, r23	; 0x2e
     622:	8f a7       	std	Y+47, r24	; 0x2f
     624:	98 ab       	std	Y+48, r25	; 0x30
     626:	2d a5       	ldd	r18, Y+45	; 0x2d
     628:	3e a5       	ldd	r19, Y+46	; 0x2e
     62a:	4f a5       	ldd	r20, Y+47	; 0x2f
     62c:	58 a9       	ldd	r21, Y+48	; 0x30
     62e:	2d 8b       	std	Y+21, r18	; 0x15
     630:	3e 8b       	std	Y+22, r19	; 0x16
     632:	4f 8b       	std	Y+23, r20	; 0x17
     634:	58 8f       	std	Y+24, r21	; 0x18

00000636 <.Loc.106>:
     636:	29 81       	ldd	r18, Y+1	; 0x01
     638:	3a 81       	ldd	r19, Y+2	; 0x02
     63a:	4b 81       	ldd	r20, Y+3	; 0x03
     63c:	5c 81       	ldd	r21, Y+4	; 0x04
     63e:	6d 89       	ldd	r22, Y+21	; 0x15
     640:	7e 89       	ldd	r23, Y+22	; 0x16
     642:	8f 89       	ldd	r24, Y+23	; 0x17
     644:	98 8d       	ldd	r25, Y+24	; 0x18
     646:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
     64a:	69 ab       	std	Y+49, r22	; 0x31
     64c:	7a ab       	std	Y+50, r23	; 0x32
     64e:	8b ab       	std	Y+51, r24	; 0x33
     650:	9c ab       	std	Y+52, r25	; 0x34
     652:	89 a9       	ldd	r24, Y+49	; 0x31
     654:	9a a9       	ldd	r25, Y+50	; 0x32
     656:	ab a9       	ldd	r26, Y+51	; 0x33
     658:	bc a9       	ldd	r27, Y+52	; 0x34
     65a:	89 8f       	std	Y+25, r24	; 0x19
     65c:	9a 8f       	std	Y+26, r25	; 0x1a
     65e:	ab 8f       	std	Y+27, r26	; 0x1b
     660:	bc 8f       	std	Y+28, r27	; 0x1c

00000662 <.Loc.107>:
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	40 e0       	ldi	r20, 0x00	; 0
     668:	50 e4       	ldi	r21, 0x40	; 64
     66a:	69 8d       	ldd	r22, Y+25	; 0x19
     66c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     66e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     670:	9c 8d       	ldd	r25, Y+28	; 0x1c
     672:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
     676:	6d ab       	std	Y+53, r22	; 0x35
     678:	7e ab       	std	Y+54, r23	; 0x36
     67a:	8f ab       	std	Y+55, r24	; 0x37
     67c:	98 af       	std	Y+56, r25	; 0x38
     67e:	2d a9       	ldd	r18, Y+53	; 0x35
     680:	3e a9       	ldd	r19, Y+54	; 0x36
     682:	4f a9       	ldd	r20, Y+55	; 0x37
     684:	58 ad       	ldd	r21, Y+56	; 0x38
     686:	2d 83       	std	Y+5, r18	; 0x05
     688:	3e 83       	std	Y+6, r19	; 0x06
     68a:	4f 83       	std	Y+7, r20	; 0x07
     68c:	58 87       	std	Y+8, r21	; 0x08

0000068e <.Loc.108>:
    CurrentHeading = CurrentHeading + DeltaHeading;
     68e:	2d 81       	ldd	r18, Y+5	; 0x05
     690:	3e 81       	ldd	r19, Y+6	; 0x06
     692:	4f 81       	ldd	r20, Y+7	; 0x07
     694:	58 85       	ldd	r21, Y+8	; 0x08
     696:	69 85       	ldd	r22, Y+9	; 0x09
     698:	7a 85       	ldd	r23, Y+10	; 0x0a
     69a:	8b 85       	ldd	r24, Y+11	; 0x0b
     69c:	9c 85       	ldd	r25, Y+12	; 0x0c
     69e:	0e 94 7c 18 	call	0x30f8	; 0x30f8 <__addsf3>
     6a2:	69 af       	std	Y+57, r22	; 0x39
     6a4:	7a af       	std	Y+58, r23	; 0x3a
     6a6:	8b af       	std	Y+59, r24	; 0x3b
     6a8:	9c af       	std	Y+60, r25	; 0x3c
     6aa:	89 ad       	ldd	r24, Y+57	; 0x39
     6ac:	9a ad       	ldd	r25, Y+58	; 0x3a
     6ae:	ab ad       	ldd	r26, Y+59	; 0x3b
     6b0:	bc ad       	ldd	r27, Y+60	; 0x3c
     6b2:	89 87       	std	Y+9, r24	; 0x09
     6b4:	9a 87       	std	Y+10, r25	; 0x0a
     6b6:	ab 87       	std	Y+11, r26	; 0x0b
     6b8:	bc 87       	std	Y+12, r27	; 0x0c

000006ba <.Loc.109>:
    DS_1 = DS_2;
     6ba:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <DS_2>
     6be:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <DS_2+0x1>
     6c2:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <DS_2+0x2>
     6c6:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <DS_2+0x3>
     6ca:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <DS_1>
     6ce:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <DS_1+0x1>
     6d2:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <DS_1+0x2>
     6d6:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <DS_1+0x3>

000006da <.Loc.110>:

	return CurrentHeading;
     6da:	89 85       	ldd	r24, Y+9	; 0x09
     6dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     6de:	ab 85       	ldd	r26, Y+11	; 0x0b
     6e0:	bc 85       	ldd	r27, Y+12	; 0x0c
     6e2:	8d 8f       	std	Y+29, r24	; 0x1d
     6e4:	9e 8f       	std	Y+30, r25	; 0x1e
     6e6:	af 8f       	std	Y+31, r26	; 0x1f
     6e8:	b8 a3       	std	Y+32, r27	; 0x20

000006ea <.Loc.111>:
}
     6ea:	6d 8d       	ldd	r22, Y+29	; 0x1d
     6ec:	7e 8d       	ldd	r23, Y+30	; 0x1e
     6ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
     6f0:	98 a1       	ldd	r25, Y+32	; 0x20
     6f2:	ec 96       	adiw	r28, 0x3c	; 60
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	cd bf       	out	0x3d, r28	; 61
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	08 95       	ret

00000704 <init_Gyro>:

void init_Gyro(){
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	cd b7       	in	r28, 0x3d	; 61
     70a:	de b7       	in	r29, 0x3e	; 62

0000070c <.Loc.113>:
    I2C_Init();
     70c:	0e 94 95 00 	call	0x12a	; 0x12a <I2C_Init>

00000710 <.Loc.114>:
    MPU6050_Init();
     710:	0e 94 49 02 	call	0x492	; 0x492 <MPU6050_Init>

00000714 <.Loc.115>:
    initTimerGyro();
     714:	0e 94 55 02 	call	0x4aa	; 0x4aa <initTimerGyro>

00000718 <.Loc.116>:
}
     718:	00 00       	nop
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	08 95       	ret

00000720 <__vector_20>:
#include "h_bridge_1.h"
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER1_OVF_vect){
     720:	1f 92       	push	r1
     722:	0f 92       	push	r0
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	0f 92       	push	r0
     728:	11 24       	eor	r1, r1
     72a:	0b b6       	in	r0, 0x3b	; 59
     72c:	0f 92       	push	r0
     72e:	2f 93       	push	r18
     730:	8f 93       	push	r24
     732:	9f 93       	push	r25
     734:	ef 93       	push	r30
     736:	ff 93       	push	r31
     738:	cf 93       	push	r28
     73a:	df 93       	push	r29
     73c:	cd b7       	in	r28, 0x3d	; 61
     73e:	de b7       	in	r29, 0x3e	; 62

00000740 <.Loc.1>:
	if (OCR1A == 0 && OCR1B == 0){
     740:	88 e8       	ldi	r24, 0x88	; 136
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	fc 01       	movw	r30, r24
     746:	80 81       	ld	r24, Z
     748:	91 81       	ldd	r25, Z+1	; 0x01

0000074a <.Loc.2>:
     74a:	00 97       	sbiw	r24, 0x00	; 0
     74c:	d1 f4       	brne	.+52     	; 0x782 <.L2>

0000074e <.Loc.3>:
     74e:	8a e8       	ldi	r24, 0x8A	; 138
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	fc 01       	movw	r30, r24
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01

00000758 <.Loc.4>:
     758:	00 97       	sbiw	r24, 0x00	; 0
     75a:	99 f4       	brne	.+38     	; 0x782 <.L2>

0000075c <.Loc.5>:
		port_R1 &= ~(1<<pin_R1);
     75c:	88 e0       	ldi	r24, 0x08	; 8
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	fc 01       	movw	r30, r24
     762:	20 81       	ld	r18, Z

00000764 <.Loc.6>:
     764:	88 e0       	ldi	r24, 0x08	; 8
     766:	91 e0       	ldi	r25, 0x01	; 1

00000768 <.Loc.7>:
     768:	2f 7d       	andi	r18, 0xDF	; 223
     76a:	fc 01       	movw	r30, r24
     76c:	20 83       	st	Z, r18

0000076e <.Loc.8>:
		port_L1 &= ~(1<<pin_L1);
     76e:	88 e0       	ldi	r24, 0x08	; 8
     770:	91 e0       	ldi	r25, 0x01	; 1
     772:	fc 01       	movw	r30, r24
     774:	20 81       	ld	r18, Z

00000776 <.Loc.9>:
     776:	88 e0       	ldi	r24, 0x08	; 8
     778:	91 e0       	ldi	r25, 0x01	; 1

0000077a <.Loc.10>:
     77a:	2f 7e       	andi	r18, 0xEF	; 239
     77c:	fc 01       	movw	r30, r24
     77e:	20 83       	st	Z, r18

00000780 <.Loc.11>:
	}
	else if (OCR1B != 0){
		port_R1 &= ~(1<<pin_R1);
		port_L1 |= (1<<pin_L1);
	}
}
     780:	33 c0       	rjmp	.+102    	; 0x7e8 <.L5>

00000782 <.L2>:
	else if (OCR1A != 0){
     782:	88 e8       	ldi	r24, 0x88	; 136
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	fc 01       	movw	r30, r24
     788:	80 81       	ld	r24, Z
     78a:	91 81       	ldd	r25, Z+1	; 0x01

0000078c <.Loc.13>:
     78c:	00 97       	sbiw	r24, 0x00	; 0
     78e:	99 f0       	breq	.+38     	; 0x7b6 <.L4>

00000790 <.Loc.14>:
		port_R1 |= (1<<pin_R1);
     790:	88 e0       	ldi	r24, 0x08	; 8
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	fc 01       	movw	r30, r24
     796:	20 81       	ld	r18, Z
     798:	88 e0       	ldi	r24, 0x08	; 8
     79a:	91 e0       	ldi	r25, 0x01	; 1

0000079c <.Loc.15>:
     79c:	20 62       	ori	r18, 0x20	; 32
     79e:	fc 01       	movw	r30, r24
     7a0:	20 83       	st	Z, r18

000007a2 <.Loc.16>:
		port_L1 &= ~(1<<pin_L1);
     7a2:	88 e0       	ldi	r24, 0x08	; 8
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	fc 01       	movw	r30, r24
     7a8:	20 81       	ld	r18, Z

000007aa <.Loc.17>:
     7aa:	88 e0       	ldi	r24, 0x08	; 8
     7ac:	91 e0       	ldi	r25, 0x01	; 1

000007ae <.Loc.18>:
     7ae:	2f 7e       	andi	r18, 0xEF	; 239
     7b0:	fc 01       	movw	r30, r24
     7b2:	20 83       	st	Z, r18

000007b4 <.Loc.19>:
}
     7b4:	19 c0       	rjmp	.+50     	; 0x7e8 <.L5>

000007b6 <.L4>:
	else if (OCR1B != 0){
     7b6:	8a e8       	ldi	r24, 0x8A	; 138
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	fc 01       	movw	r30, r24
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01

000007c0 <.Loc.21>:
     7c0:	00 97       	sbiw	r24, 0x00	; 0
     7c2:	91 f0       	breq	.+36     	; 0x7e8 <.L5>

000007c4 <.Loc.22>:
		port_R1 &= ~(1<<pin_R1);
     7c4:	88 e0       	ldi	r24, 0x08	; 8
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	fc 01       	movw	r30, r24
     7ca:	20 81       	ld	r18, Z

000007cc <.Loc.23>:
     7cc:	88 e0       	ldi	r24, 0x08	; 8
     7ce:	91 e0       	ldi	r25, 0x01	; 1

000007d0 <.Loc.24>:
     7d0:	2f 7d       	andi	r18, 0xDF	; 223
     7d2:	fc 01       	movw	r30, r24
     7d4:	20 83       	st	Z, r18

000007d6 <.Loc.25>:
		port_L1 |= (1<<pin_L1);
     7d6:	88 e0       	ldi	r24, 0x08	; 8
     7d8:	91 e0       	ldi	r25, 0x01	; 1
     7da:	fc 01       	movw	r30, r24
     7dc:	20 81       	ld	r18, Z
     7de:	88 e0       	ldi	r24, 0x08	; 8
     7e0:	91 e0       	ldi	r25, 0x01	; 1

000007e2 <.Loc.26>:
     7e2:	20 61       	ori	r18, 0x10	; 16
     7e4:	fc 01       	movw	r30, r24
     7e6:	20 83       	st	Z, r18

000007e8 <.L5>:
}
     7e8:	00 00       	nop
     7ea:	df 91       	pop	r29
     7ec:	cf 91       	pop	r28
     7ee:	ff 91       	pop	r31
     7f0:	ef 91       	pop	r30
     7f2:	9f 91       	pop	r25
     7f4:	8f 91       	pop	r24
     7f6:	2f 91       	pop	r18
     7f8:	0f 90       	pop	r0
     7fa:	0b be       	out	0x3b, r0	; 59
     7fc:	0f 90       	pop	r0
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	0f 90       	pop	r0
     802:	1f 90       	pop	r1
     804:	18 95       	reti

00000806 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     806:	1f 92       	push	r1
     808:	0f 92       	push	r0
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	0f 92       	push	r0
     80e:	11 24       	eor	r1, r1
     810:	0b b6       	in	r0, 0x3b	; 59
     812:	0f 92       	push	r0
     814:	2f 93       	push	r18
     816:	8f 93       	push	r24
     818:	9f 93       	push	r25
     81a:	ef 93       	push	r30
     81c:	ff 93       	push	r31
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	cd b7       	in	r28, 0x3d	; 61
     824:	de b7       	in	r29, 0x3e	; 62

00000826 <.Loc.29>:
	if (OCR1A != 65535){
     826:	88 e8       	ldi	r24, 0x88	; 136
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	fc 01       	movw	r30, r24
     82c:	80 81       	ld	r24, Z
     82e:	91 81       	ldd	r25, Z+1	; 0x01

00000830 <.Loc.30>:
     830:	8f 3f       	cpi	r24, 0xFF	; 255
     832:	98 07       	cpc	r25, r24
     834:	49 f0       	breq	.+18     	; 0x848 <.L8>

00000836 <.Loc.31>:
		port_R1 &= ~(1<<pin_R1);
     836:	88 e0       	ldi	r24, 0x08	; 8
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	fc 01       	movw	r30, r24
     83c:	20 81       	ld	r18, Z

0000083e <.Loc.32>:
     83e:	88 e0       	ldi	r24, 0x08	; 8
     840:	91 e0       	ldi	r25, 0x01	; 1

00000842 <.Loc.33>:
     842:	2f 7d       	andi	r18, 0xDF	; 223
     844:	fc 01       	movw	r30, r24
     846:	20 83       	st	Z, r18

00000848 <.L8>:
	}
}
     848:	00 00       	nop
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	ff 91       	pop	r31
     850:	ef 91       	pop	r30
     852:	9f 91       	pop	r25
     854:	8f 91       	pop	r24
     856:	2f 91       	pop	r18
     858:	0f 90       	pop	r0
     85a:	0b be       	out	0x3b, r0	; 59
     85c:	0f 90       	pop	r0
     85e:	0f be       	out	0x3f, r0	; 63
     860:	0f 90       	pop	r0
     862:	1f 90       	pop	r1
     864:	18 95       	reti

00000866 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     866:	1f 92       	push	r1
     868:	0f 92       	push	r0
     86a:	0f b6       	in	r0, 0x3f	; 63
     86c:	0f 92       	push	r0
     86e:	11 24       	eor	r1, r1
     870:	0b b6       	in	r0, 0x3b	; 59
     872:	0f 92       	push	r0
     874:	2f 93       	push	r18
     876:	8f 93       	push	r24
     878:	9f 93       	push	r25
     87a:	ef 93       	push	r30
     87c:	ff 93       	push	r31
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62

00000886 <.Loc.36>:
	if (OCR1B != 65535){
     886:	8a e8       	ldi	r24, 0x8A	; 138
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	fc 01       	movw	r30, r24
     88c:	80 81       	ld	r24, Z
     88e:	91 81       	ldd	r25, Z+1	; 0x01

00000890 <.Loc.37>:
     890:	8f 3f       	cpi	r24, 0xFF	; 255
     892:	98 07       	cpc	r25, r24
     894:	49 f0       	breq	.+18     	; 0x8a8 <.L11>

00000896 <.Loc.38>:
		port_L1 &= ~(1<<pin_L1);
     896:	88 e0       	ldi	r24, 0x08	; 8
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	fc 01       	movw	r30, r24
     89c:	20 81       	ld	r18, Z

0000089e <.Loc.39>:
     89e:	88 e0       	ldi	r24, 0x08	; 8
     8a0:	91 e0       	ldi	r25, 0x01	; 1

000008a2 <.Loc.40>:
     8a2:	2f 7e       	andi	r18, 0xEF	; 239
     8a4:	fc 01       	movw	r30, r24
     8a6:	20 83       	st	Z, r18

000008a8 <.L11>:
	}
}
     8a8:	00 00       	nop
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	ff 91       	pop	r31
     8b0:	ef 91       	pop	r30
     8b2:	9f 91       	pop	r25
     8b4:	8f 91       	pop	r24
     8b6:	2f 91       	pop	r18
     8b8:	0f 90       	pop	r0
     8ba:	0b be       	out	0x3b, r0	; 59
     8bc:	0f 90       	pop	r0
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	0f 90       	pop	r0
     8c2:	1f 90       	pop	r1
     8c4:	18 95       	reti

000008c6 <init_motor_1>:

void init_motor_1(void)
{
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62

000008ce <.Loc.43>:
	// Pin outputs
	ddr_R1 |= (1<<pin_R1);
     8ce:	87 e0       	ldi	r24, 0x07	; 7
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	fc 01       	movw	r30, r24
     8d4:	20 81       	ld	r18, Z
     8d6:	87 e0       	ldi	r24, 0x07	; 7
     8d8:	91 e0       	ldi	r25, 0x01	; 1

000008da <.Loc.44>:
     8da:	20 62       	ori	r18, 0x20	; 32
     8dc:	fc 01       	movw	r30, r24
     8de:	20 83       	st	Z, r18

000008e0 <.Loc.45>:
	ddr_L1 |= (1<<pin_L1);
     8e0:	87 e0       	ldi	r24, 0x07	; 7
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	fc 01       	movw	r30, r24
     8e6:	20 81       	ld	r18, Z
     8e8:	87 e0       	ldi	r24, 0x07	; 7
     8ea:	91 e0       	ldi	r25, 0x01	; 1

000008ec <.Loc.46>:
     8ec:	20 61       	ori	r18, 0x10	; 16
     8ee:	fc 01       	movw	r30, r24
     8f0:	20 83       	st	Z, r18

000008f2 <.Loc.47>:

	// zekerheid laag
	port_R1 &= ~(1<<pin_R1);
     8f2:	88 e0       	ldi	r24, 0x08	; 8
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	fc 01       	movw	r30, r24
     8f8:	20 81       	ld	r18, Z

000008fa <.Loc.48>:
     8fa:	88 e0       	ldi	r24, 0x08	; 8
     8fc:	91 e0       	ldi	r25, 0x01	; 1

000008fe <.Loc.49>:
     8fe:	2f 7d       	andi	r18, 0xDF	; 223
     900:	fc 01       	movw	r30, r24
     902:	20 83       	st	Z, r18

00000904 <.Loc.50>:
	port_L1 &= ~(1<<pin_L1);
     904:	88 e0       	ldi	r24, 0x08	; 8
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	fc 01       	movw	r30, r24
     90a:	20 81       	ld	r18, Z

0000090c <.Loc.51>:
     90c:	88 e0       	ldi	r24, 0x08	; 8
     90e:	91 e0       	ldi	r25, 0x01	; 1

00000910 <.Loc.52>:
     910:	2f 7e       	andi	r18, 0xEF	; 239
     912:	fc 01       	movw	r30, r24
     914:	20 83       	st	Z, r18

00000916 <.Loc.53>:

	// prescale 64
	TCCR1A = 0;
     916:	80 e8       	ldi	r24, 0x80	; 128
     918:	90 e0       	ldi	r25, 0x00	; 0

0000091a <.Loc.54>:
     91a:	fc 01       	movw	r30, r24
     91c:	10 82       	st	Z, r1

0000091e <.Loc.55>:
	TCCR1B = (0<<CS12) | (0<<CS11) | (1<<CS10);
     91e:	81 e8       	ldi	r24, 0x81	; 129
     920:	90 e0       	ldi	r25, 0x00	; 0

00000922 <.Loc.56>:
     922:	21 e0       	ldi	r18, 0x01	; 1
     924:	fc 01       	movw	r30, r24
     926:	20 83       	st	Z, r18

00000928 <.Loc.57>:

	// standaard 0
	OCR1A = 0;
     928:	88 e8       	ldi	r24, 0x88	; 136
     92a:	90 e0       	ldi	r25, 0x00	; 0

0000092c <.Loc.58>:
     92c:	fc 01       	movw	r30, r24
     92e:	11 82       	std	Z+1, r1	; 0x01
     930:	10 82       	st	Z, r1

00000932 <.Loc.59>:
	OCR1B = 0;
     932:	8a e8       	ldi	r24, 0x8A	; 138
     934:	90 e0       	ldi	r25, 0x00	; 0

00000936 <.Loc.60>:
     936:	fc 01       	movw	r30, r24
     938:	11 82       	std	Z+1, r1	; 0x01
     93a:	10 82       	st	Z, r1

0000093c <.Loc.61>:
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     93c:	8f e6       	ldi	r24, 0x6F	; 111
     93e:	90 e0       	ldi	r25, 0x00	; 0

00000940 <.Loc.62>:
     940:	27 e0       	ldi	r18, 0x07	; 7
     942:	fc 01       	movw	r30, r24
     944:	20 83       	st	Z, r18

00000946 <.Loc.63>:
	Motor_1_set_power(0);
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000094c <.Loc.64>:
}
     94c:	00 00       	nop
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	08 95       	ret

00000954 <Motor_1_set_power>:

void Motor_1_set_power(signed char power)
{
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	00 d0       	rcall	.+0      	; 0x95e <L0^A>

0000095e <L0^A>:
     95e:	00 d0       	rcall	.+0      	; 0x960 <L0^A>

00000960 <L0^A>:
     960:	00 d0       	rcall	.+0      	; 0x962 <L0^A>

00000962 <L0^A>:
     962:	cd b7       	in	r28, 0x3d	; 61
     964:	de b7       	in	r29, 0x3e	; 62
     966:	89 83       	std	Y+1, r24	; 0x01

00000968 <.Loc.66>:
	if (power >= -100 && power <= 100){
     968:	89 81       	ldd	r24, Y+1	; 0x01
     96a:	8c 39       	cpi	r24, 0x9C	; 156
     96c:	0c f4       	brge	.+2      	; 0x970 <.Loc.67>

0000096e <L0^A>:
     96e:	61 c0       	rjmp	.+194    	; 0xa32 <.L16>

00000970 <.Loc.67>:
     970:	89 81       	ldd	r24, Y+1	; 0x01
     972:	84 36       	cpi	r24, 0x64	; 100
     974:	11 f0       	breq	.+4      	; 0x97a <.Loc.68>

00000976 <L0^A>:
     976:	0c f0       	brlt	.+2      	; 0x97a <.Loc.68>

00000978 <L0^A>:
     978:	5c c0       	rjmp	.+184    	; 0xa32 <.L16>

0000097a <.Loc.68>:
		if (power >= 0){
     97a:	89 81       	ldd	r24, Y+1	; 0x01
     97c:	88 23       	and	r24, r24
     97e:	6c f1       	brlt	.+90     	; 0x9da <.L15>

00000980 <.Loc.69>:
			OCR1B = 0;
     980:	8a e8       	ldi	r24, 0x8A	; 138
     982:	90 e0       	ldi	r25, 0x00	; 0

00000984 <.Loc.70>:
     984:	fc 01       	movw	r30, r24
     986:	11 82       	std	Z+1, r1	; 0x01
     988:	10 82       	st	Z, r1

0000098a <.Loc.71>:
			OCR1A = (65535*power)/100;
     98a:	89 81       	ldd	r24, Y+1	; 0x01
     98c:	48 2f       	mov	r20, r24
     98e:	88 0f       	add	r24, r24
     990:	55 0b       	sbc	r21, r21
     992:	66 0b       	sbc	r22, r22
     994:	77 0b       	sbc	r23, r23
     996:	8f ef       	ldi	r24, 0xFF	; 255
     998:	9f ef       	ldi	r25, 0xFF	; 255
     99a:	dc 01       	movw	r26, r24
     99c:	9a 01       	movw	r18, r20
     99e:	ab 01       	movw	r20, r22
     9a0:	0e 94 3a 18 	call	0x3074	; 0x3074 <__muluhisi3>
     9a4:	6a 83       	std	Y+2, r22	; 0x02
     9a6:	7b 83       	std	Y+3, r23	; 0x03
     9a8:	8c 83       	std	Y+4, r24	; 0x04
     9aa:	9d 83       	std	Y+5, r25	; 0x05

000009ac <.Loc.72>:
     9ac:	04 e6       	ldi	r16, 0x64	; 100
     9ae:	10 e0       	ldi	r17, 0x00	; 0
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	6a 81       	ldd	r22, Y+2	; 0x02
     9b6:	7b 81       	ldd	r23, Y+3	; 0x03
     9b8:	8c 81       	ldd	r24, Y+4	; 0x04
     9ba:	9d 81       	ldd	r25, Y+5	; 0x05
     9bc:	a9 01       	movw	r20, r18
     9be:	98 01       	movw	r18, r16
     9c0:	0e 94 0c 18 	call	0x3018	; 0x3018 <__divmodsi4>
     9c4:	da 01       	movw	r26, r20
     9c6:	c9 01       	movw	r24, r18
     9c8:	ac 01       	movw	r20, r24
     9ca:	bd 01       	movw	r22, r26

000009cc <.Loc.73>:
     9cc:	88 e8       	ldi	r24, 0x88	; 136
     9ce:	90 e0       	ldi	r25, 0x00	; 0

000009d0 <.Loc.74>:
     9d0:	9a 01       	movw	r18, r20
     9d2:	fc 01       	movw	r30, r24
     9d4:	31 83       	std	Z+1, r19	; 0x01
     9d6:	20 83       	st	Z, r18

000009d8 <.Loc.75>:
		else {
			OCR1A = 0;
			OCR1B = (65535*power)/-100;
		}
	}
}
     9d8:	2c c0       	rjmp	.+88     	; 0xa32 <.L16>

000009da <.L15>:
			OCR1A = 0;
     9da:	88 e8       	ldi	r24, 0x88	; 136
     9dc:	90 e0       	ldi	r25, 0x00	; 0

000009de <.Loc.77>:
     9de:	fc 01       	movw	r30, r24
     9e0:	11 82       	std	Z+1, r1	; 0x01
     9e2:	10 82       	st	Z, r1

000009e4 <.Loc.78>:
			OCR1B = (65535*power)/-100;
     9e4:	89 81       	ldd	r24, Y+1	; 0x01
     9e6:	48 2f       	mov	r20, r24
     9e8:	88 0f       	add	r24, r24
     9ea:	55 0b       	sbc	r21, r21
     9ec:	66 0b       	sbc	r22, r22
     9ee:	77 0b       	sbc	r23, r23
     9f0:	8f ef       	ldi	r24, 0xFF	; 255
     9f2:	9f ef       	ldi	r25, 0xFF	; 255
     9f4:	dc 01       	movw	r26, r24
     9f6:	9a 01       	movw	r18, r20
     9f8:	ab 01       	movw	r20, r22
     9fa:	0e 94 3a 18 	call	0x3074	; 0x3074 <__muluhisi3>
     9fe:	6e 83       	std	Y+6, r22	; 0x06
     a00:	7f 83       	std	Y+7, r23	; 0x07
     a02:	88 87       	std	Y+8, r24	; 0x08
     a04:	99 87       	std	Y+9, r25	; 0x09

00000a06 <.Loc.79>:
     a06:	0c e9       	ldi	r16, 0x9C	; 156
     a08:	1f ef       	ldi	r17, 0xFF	; 255
     a0a:	2f ef       	ldi	r18, 0xFF	; 255
     a0c:	3f ef       	ldi	r19, 0xFF	; 255
     a0e:	6e 81       	ldd	r22, Y+6	; 0x06
     a10:	7f 81       	ldd	r23, Y+7	; 0x07
     a12:	88 85       	ldd	r24, Y+8	; 0x08
     a14:	99 85       	ldd	r25, Y+9	; 0x09
     a16:	a9 01       	movw	r20, r18
     a18:	98 01       	movw	r18, r16
     a1a:	0e 94 0c 18 	call	0x3018	; 0x3018 <__divmodsi4>
     a1e:	da 01       	movw	r26, r20
     a20:	c9 01       	movw	r24, r18
     a22:	ac 01       	movw	r20, r24
     a24:	bd 01       	movw	r22, r26

00000a26 <.Loc.80>:
     a26:	8a e8       	ldi	r24, 0x8A	; 138
     a28:	90 e0       	ldi	r25, 0x00	; 0

00000a2a <.Loc.81>:
     a2a:	9a 01       	movw	r18, r20
     a2c:	fc 01       	movw	r30, r24
     a2e:	31 83       	std	Z+1, r19	; 0x01
     a30:	20 83       	st	Z, r18

00000a32 <.L16>:
}
     a32:	00 00       	nop
     a34:	29 96       	adiw	r28, 0x09	; 9
     a36:	0f b6       	in	r0, 0x3f	; 63
     a38:	f8 94       	cli
     a3a:	de bf       	out	0x3e, r29	; 62
     a3c:	0f be       	out	0x3f, r0	; 63
     a3e:	cd bf       	out	0x3d, r28	; 61
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	1f 91       	pop	r17
     a46:	0f 91       	pop	r16
     a48:	08 95       	ret

00000a4a <__vector_35>:
#include "h_bridge_2.h"
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER3_OVF_vect){
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	0f 92       	push	r0
     a52:	11 24       	eor	r1, r1
     a54:	0b b6       	in	r0, 0x3b	; 59
     a56:	0f 92       	push	r0
     a58:	2f 93       	push	r18
     a5a:	8f 93       	push	r24
     a5c:	9f 93       	push	r25
     a5e:	ef 93       	push	r30
     a60:	ff 93       	push	r31
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62

00000a6a <.Loc.1>:
	if (OCR3A == 0 && OCR3B == 0){
     a6a:	88 e9       	ldi	r24, 0x98	; 152
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	fc 01       	movw	r30, r24
     a70:	80 81       	ld	r24, Z
     a72:	91 81       	ldd	r25, Z+1	; 0x01

00000a74 <.Loc.2>:
     a74:	00 97       	sbiw	r24, 0x00	; 0
     a76:	d1 f4       	brne	.+52     	; 0xaac <.L2>

00000a78 <.Loc.3>:
     a78:	8a e9       	ldi	r24, 0x9A	; 154
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	fc 01       	movw	r30, r24
     a7e:	80 81       	ld	r24, Z
     a80:	91 81       	ldd	r25, Z+1	; 0x01

00000a82 <.Loc.4>:
     a82:	00 97       	sbiw	r24, 0x00	; 0
     a84:	99 f4       	brne	.+38     	; 0xaac <.L2>

00000a86 <.Loc.5>:
		port_R2 &= ~(1<<pin_R2);
     a86:	88 e0       	ldi	r24, 0x08	; 8
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	fc 01       	movw	r30, r24
     a8c:	20 81       	ld	r18, Z

00000a8e <.Loc.6>:
     a8e:	88 e0       	ldi	r24, 0x08	; 8
     a90:	91 e0       	ldi	r25, 0x01	; 1

00000a92 <.Loc.7>:
     a92:	2f 77       	andi	r18, 0x7F	; 127
     a94:	fc 01       	movw	r30, r24
     a96:	20 83       	st	Z, r18

00000a98 <.Loc.8>:
		port_L2 &= ~(1<<pin_L2);
     a98:	88 e0       	ldi	r24, 0x08	; 8
     a9a:	91 e0       	ldi	r25, 0x01	; 1
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 81       	ld	r18, Z

00000aa0 <.Loc.9>:
     aa0:	88 e0       	ldi	r24, 0x08	; 8
     aa2:	91 e0       	ldi	r25, 0x01	; 1

00000aa4 <.Loc.10>:
     aa4:	2f 7b       	andi	r18, 0xBF	; 191
     aa6:	fc 01       	movw	r30, r24
     aa8:	20 83       	st	Z, r18

00000aaa <.Loc.11>:
	}
	else if (OCR3B != 0){
		port_R2 &= ~(1<<pin_R2);
		port_L2 |= (1<<pin_L2);
	}
}
     aaa:	33 c0       	rjmp	.+102    	; 0xb12 <.L5>

00000aac <.L2>:
	else if (OCR3A != 0){
     aac:	88 e9       	ldi	r24, 0x98	; 152
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	fc 01       	movw	r30, r24
     ab2:	80 81       	ld	r24, Z
     ab4:	91 81       	ldd	r25, Z+1	; 0x01

00000ab6 <.Loc.13>:
     ab6:	00 97       	sbiw	r24, 0x00	; 0
     ab8:	99 f0       	breq	.+38     	; 0xae0 <.L4>

00000aba <.Loc.14>:
		port_R2 |= (1<<pin_R2);
     aba:	88 e0       	ldi	r24, 0x08	; 8
     abc:	91 e0       	ldi	r25, 0x01	; 1
     abe:	fc 01       	movw	r30, r24
     ac0:	20 81       	ld	r18, Z
     ac2:	88 e0       	ldi	r24, 0x08	; 8
     ac4:	91 e0       	ldi	r25, 0x01	; 1

00000ac6 <.Loc.15>:
     ac6:	20 68       	ori	r18, 0x80	; 128
     ac8:	fc 01       	movw	r30, r24
     aca:	20 83       	st	Z, r18

00000acc <.Loc.16>:
		port_L2 &= ~(1<<pin_L2);
     acc:	88 e0       	ldi	r24, 0x08	; 8
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 81       	ld	r18, Z

00000ad4 <.Loc.17>:
     ad4:	88 e0       	ldi	r24, 0x08	; 8
     ad6:	91 e0       	ldi	r25, 0x01	; 1

00000ad8 <.Loc.18>:
     ad8:	2f 7b       	andi	r18, 0xBF	; 191
     ada:	fc 01       	movw	r30, r24
     adc:	20 83       	st	Z, r18

00000ade <.Loc.19>:
}
     ade:	19 c0       	rjmp	.+50     	; 0xb12 <.L5>

00000ae0 <.L4>:
	else if (OCR3B != 0){
     ae0:	8a e9       	ldi	r24, 0x9A	; 154
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	fc 01       	movw	r30, r24
     ae6:	80 81       	ld	r24, Z
     ae8:	91 81       	ldd	r25, Z+1	; 0x01

00000aea <.Loc.21>:
     aea:	00 97       	sbiw	r24, 0x00	; 0
     aec:	91 f0       	breq	.+36     	; 0xb12 <.L5>

00000aee <.Loc.22>:
		port_R2 &= ~(1<<pin_R2);
     aee:	88 e0       	ldi	r24, 0x08	; 8
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	fc 01       	movw	r30, r24
     af4:	20 81       	ld	r18, Z

00000af6 <.Loc.23>:
     af6:	88 e0       	ldi	r24, 0x08	; 8
     af8:	91 e0       	ldi	r25, 0x01	; 1

00000afa <.Loc.24>:
     afa:	2f 77       	andi	r18, 0x7F	; 127
     afc:	fc 01       	movw	r30, r24
     afe:	20 83       	st	Z, r18

00000b00 <.Loc.25>:
		port_L2 |= (1<<pin_L2);
     b00:	88 e0       	ldi	r24, 0x08	; 8
     b02:	91 e0       	ldi	r25, 0x01	; 1
     b04:	fc 01       	movw	r30, r24
     b06:	20 81       	ld	r18, Z
     b08:	88 e0       	ldi	r24, 0x08	; 8
     b0a:	91 e0       	ldi	r25, 0x01	; 1

00000b0c <.Loc.26>:
     b0c:	20 64       	ori	r18, 0x40	; 64
     b0e:	fc 01       	movw	r30, r24
     b10:	20 83       	st	Z, r18

00000b12 <.L5>:
}
     b12:	00 00       	nop
     b14:	df 91       	pop	r29
     b16:	cf 91       	pop	r28
     b18:	ff 91       	pop	r31
     b1a:	ef 91       	pop	r30
     b1c:	9f 91       	pop	r25
     b1e:	8f 91       	pop	r24
     b20:	2f 91       	pop	r18
     b22:	0f 90       	pop	r0
     b24:	0b be       	out	0x3b, r0	; 59
     b26:	0f 90       	pop	r0
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	0f 90       	pop	r0
     b2c:	1f 90       	pop	r1
     b2e:	18 95       	reti

00000b30 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     b30:	1f 92       	push	r1
     b32:	0f 92       	push	r0
     b34:	0f b6       	in	r0, 0x3f	; 63
     b36:	0f 92       	push	r0
     b38:	11 24       	eor	r1, r1
     b3a:	0b b6       	in	r0, 0x3b	; 59
     b3c:	0f 92       	push	r0
     b3e:	2f 93       	push	r18
     b40:	8f 93       	push	r24
     b42:	9f 93       	push	r25
     b44:	ef 93       	push	r30
     b46:	ff 93       	push	r31
     b48:	cf 93       	push	r28
     b4a:	df 93       	push	r29
     b4c:	cd b7       	in	r28, 0x3d	; 61
     b4e:	de b7       	in	r29, 0x3e	; 62

00000b50 <.Loc.29>:
	if (OCR3A != 65535){
     b50:	88 e9       	ldi	r24, 0x98	; 152
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	fc 01       	movw	r30, r24
     b56:	80 81       	ld	r24, Z
     b58:	91 81       	ldd	r25, Z+1	; 0x01

00000b5a <.Loc.30>:
     b5a:	8f 3f       	cpi	r24, 0xFF	; 255
     b5c:	98 07       	cpc	r25, r24
     b5e:	49 f0       	breq	.+18     	; 0xb72 <.L8>

00000b60 <.Loc.31>:
		port_R2 &= ~(1<<pin_R2);
     b60:	88 e0       	ldi	r24, 0x08	; 8
     b62:	91 e0       	ldi	r25, 0x01	; 1
     b64:	fc 01       	movw	r30, r24
     b66:	20 81       	ld	r18, Z

00000b68 <.Loc.32>:
     b68:	88 e0       	ldi	r24, 0x08	; 8
     b6a:	91 e0       	ldi	r25, 0x01	; 1

00000b6c <.Loc.33>:
     b6c:	2f 77       	andi	r18, 0x7F	; 127
     b6e:	fc 01       	movw	r30, r24
     b70:	20 83       	st	Z, r18

00000b72 <.L8>:
	}
}
     b72:	00 00       	nop
     b74:	df 91       	pop	r29
     b76:	cf 91       	pop	r28
     b78:	ff 91       	pop	r31
     b7a:	ef 91       	pop	r30
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	2f 91       	pop	r18
     b82:	0f 90       	pop	r0
     b84:	0b be       	out	0x3b, r0	; 59
     b86:	0f 90       	pop	r0
     b88:	0f be       	out	0x3f, r0	; 63
     b8a:	0f 90       	pop	r0
     b8c:	1f 90       	pop	r1
     b8e:	18 95       	reti

00000b90 <__vector_33>:

ISR(TIMER3_COMPB_vect)
{
     b90:	1f 92       	push	r1
     b92:	0f 92       	push	r0
     b94:	0f b6       	in	r0, 0x3f	; 63
     b96:	0f 92       	push	r0
     b98:	11 24       	eor	r1, r1
     b9a:	0b b6       	in	r0, 0x3b	; 59
     b9c:	0f 92       	push	r0
     b9e:	2f 93       	push	r18
     ba0:	8f 93       	push	r24
     ba2:	9f 93       	push	r25
     ba4:	ef 93       	push	r30
     ba6:	ff 93       	push	r31
     ba8:	cf 93       	push	r28
     baa:	df 93       	push	r29
     bac:	cd b7       	in	r28, 0x3d	; 61
     bae:	de b7       	in	r29, 0x3e	; 62

00000bb0 <.Loc.36>:
	if (OCR3B != 65535){
     bb0:	8a e9       	ldi	r24, 0x9A	; 154
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	fc 01       	movw	r30, r24
     bb6:	80 81       	ld	r24, Z
     bb8:	91 81       	ldd	r25, Z+1	; 0x01

00000bba <.Loc.37>:
     bba:	8f 3f       	cpi	r24, 0xFF	; 255
     bbc:	98 07       	cpc	r25, r24
     bbe:	49 f0       	breq	.+18     	; 0xbd2 <.L11>

00000bc0 <.Loc.38>:
		port_L2 &= ~(1<<pin_L2);
     bc0:	88 e0       	ldi	r24, 0x08	; 8
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	fc 01       	movw	r30, r24
     bc6:	20 81       	ld	r18, Z

00000bc8 <.Loc.39>:
     bc8:	88 e0       	ldi	r24, 0x08	; 8
     bca:	91 e0       	ldi	r25, 0x01	; 1

00000bcc <.Loc.40>:
     bcc:	2f 7b       	andi	r18, 0xBF	; 191
     bce:	fc 01       	movw	r30, r24
     bd0:	20 83       	st	Z, r18

00000bd2 <.L11>:
	}
}
     bd2:	00 00       	nop
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	ff 91       	pop	r31
     bda:	ef 91       	pop	r30
     bdc:	9f 91       	pop	r25
     bde:	8f 91       	pop	r24
     be0:	2f 91       	pop	r18
     be2:	0f 90       	pop	r0
     be4:	0b be       	out	0x3b, r0	; 59
     be6:	0f 90       	pop	r0
     be8:	0f be       	out	0x3f, r0	; 63
     bea:	0f 90       	pop	r0
     bec:	1f 90       	pop	r1
     bee:	18 95       	reti

00000bf0 <init_motor_2>:

void init_motor_2(void)
{
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	cd b7       	in	r28, 0x3d	; 61
     bf6:	de b7       	in	r29, 0x3e	; 62

00000bf8 <.Loc.43>:
	// Pin outputs
	ddr_R2 |= (1<<pin_R2);
     bf8:	87 e0       	ldi	r24, 0x07	; 7
     bfa:	91 e0       	ldi	r25, 0x01	; 1
     bfc:	fc 01       	movw	r30, r24
     bfe:	20 81       	ld	r18, Z
     c00:	87 e0       	ldi	r24, 0x07	; 7
     c02:	91 e0       	ldi	r25, 0x01	; 1

00000c04 <.Loc.44>:
     c04:	20 68       	ori	r18, 0x80	; 128
     c06:	fc 01       	movw	r30, r24
     c08:	20 83       	st	Z, r18

00000c0a <.Loc.45>:
	ddr_L2 |= (1<<pin_L2);
     c0a:	87 e0       	ldi	r24, 0x07	; 7
     c0c:	91 e0       	ldi	r25, 0x01	; 1
     c0e:	fc 01       	movw	r30, r24
     c10:	20 81       	ld	r18, Z
     c12:	87 e0       	ldi	r24, 0x07	; 7
     c14:	91 e0       	ldi	r25, 0x01	; 1

00000c16 <.Loc.46>:
     c16:	20 64       	ori	r18, 0x40	; 64
     c18:	fc 01       	movw	r30, r24
     c1a:	20 83       	st	Z, r18

00000c1c <.Loc.47>:

	// zekerheid laag
	port_R2 &= ~(1<<pin_R2);
     c1c:	88 e0       	ldi	r24, 0x08	; 8
     c1e:	91 e0       	ldi	r25, 0x01	; 1
     c20:	fc 01       	movw	r30, r24
     c22:	20 81       	ld	r18, Z

00000c24 <.Loc.48>:
     c24:	88 e0       	ldi	r24, 0x08	; 8
     c26:	91 e0       	ldi	r25, 0x01	; 1

00000c28 <.Loc.49>:
     c28:	2f 77       	andi	r18, 0x7F	; 127
     c2a:	fc 01       	movw	r30, r24
     c2c:	20 83       	st	Z, r18

00000c2e <.Loc.50>:
	port_L2 &= ~(1<<pin_L2);
     c2e:	88 e0       	ldi	r24, 0x08	; 8
     c30:	91 e0       	ldi	r25, 0x01	; 1
     c32:	fc 01       	movw	r30, r24
     c34:	20 81       	ld	r18, Z

00000c36 <.Loc.51>:
     c36:	88 e0       	ldi	r24, 0x08	; 8
     c38:	91 e0       	ldi	r25, 0x01	; 1

00000c3a <.Loc.52>:
     c3a:	2f 7b       	andi	r18, 0xBF	; 191
     c3c:	fc 01       	movw	r30, r24
     c3e:	20 83       	st	Z, r18

00000c40 <.Loc.53>:

	// prescale 64
	TCCR3A = 0;
     c40:	80 e9       	ldi	r24, 0x90	; 144
     c42:	90 e0       	ldi	r25, 0x00	; 0

00000c44 <.Loc.54>:
     c44:	fc 01       	movw	r30, r24
     c46:	10 82       	st	Z, r1

00000c48 <.Loc.55>:
	TCCR3B = (0<<CS32) | (0<<CS31) | (1<<CS30);
     c48:	81 e9       	ldi	r24, 0x91	; 145
     c4a:	90 e0       	ldi	r25, 0x00	; 0

00000c4c <.Loc.56>:
     c4c:	21 e0       	ldi	r18, 0x01	; 1
     c4e:	fc 01       	movw	r30, r24
     c50:	20 83       	st	Z, r18

00000c52 <.Loc.57>:

	// standaard 0
	OCR3A = 0;
     c52:	88 e9       	ldi	r24, 0x98	; 152
     c54:	90 e0       	ldi	r25, 0x00	; 0

00000c56 <.Loc.58>:
     c56:	fc 01       	movw	r30, r24
     c58:	11 82       	std	Z+1, r1	; 0x01
     c5a:	10 82       	st	Z, r1

00000c5c <.Loc.59>:
	OCR3B = 0;
     c5c:	8a e9       	ldi	r24, 0x9A	; 154
     c5e:	90 e0       	ldi	r25, 0x00	; 0

00000c60 <.Loc.60>:
     c60:	fc 01       	movw	r30, r24
     c62:	11 82       	std	Z+1, r1	; 0x01
     c64:	10 82       	st	Z, r1

00000c66 <.Loc.61>:
	TIMSK3 = (1<<OCIE3B) | (1<<OCIE3A) | (1<<TOIE3);
     c66:	81 e7       	ldi	r24, 0x71	; 113
     c68:	90 e0       	ldi	r25, 0x00	; 0

00000c6a <.Loc.62>:
     c6a:	27 e0       	ldi	r18, 0x07	; 7
     c6c:	fc 01       	movw	r30, r24
     c6e:	20 83       	st	Z, r18

00000c70 <.Loc.63>:
	Motor_2_set_power(0);
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00000c76 <.Loc.64>:
}
     c76:	00 00       	nop
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	08 95       	ret

00000c7e <Motor_2_set_power>:

void Motor_2_set_power(signed char power)
{
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
     c82:	cf 93       	push	r28
     c84:	df 93       	push	r29
     c86:	00 d0       	rcall	.+0      	; 0xc88 <L0^A>

00000c88 <L0^A>:
     c88:	00 d0       	rcall	.+0      	; 0xc8a <L0^A>

00000c8a <L0^A>:
     c8a:	00 d0       	rcall	.+0      	; 0xc8c <L0^A>

00000c8c <L0^A>:
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	89 83       	std	Y+1, r24	; 0x01

00000c92 <.Loc.66>:
	if (power >= -100 && power <= 100){
     c92:	89 81       	ldd	r24, Y+1	; 0x01
     c94:	8c 39       	cpi	r24, 0x9C	; 156
     c96:	0c f4       	brge	.+2      	; 0xc9a <.Loc.67>

00000c98 <L0^A>:
     c98:	61 c0       	rjmp	.+194    	; 0xd5c <.L16>

00000c9a <.Loc.67>:
     c9a:	89 81       	ldd	r24, Y+1	; 0x01
     c9c:	84 36       	cpi	r24, 0x64	; 100
     c9e:	11 f0       	breq	.+4      	; 0xca4 <.Loc.68>

00000ca0 <L0^A>:
     ca0:	0c f0       	brlt	.+2      	; 0xca4 <.Loc.68>

00000ca2 <L0^A>:
     ca2:	5c c0       	rjmp	.+184    	; 0xd5c <.L16>

00000ca4 <.Loc.68>:
		if (power >= 0){
     ca4:	89 81       	ldd	r24, Y+1	; 0x01
     ca6:	88 23       	and	r24, r24
     ca8:	6c f1       	brlt	.+90     	; 0xd04 <.L15>

00000caa <.Loc.69>:
			OCR3B = 0;
     caa:	8a e9       	ldi	r24, 0x9A	; 154
     cac:	90 e0       	ldi	r25, 0x00	; 0

00000cae <.Loc.70>:
     cae:	fc 01       	movw	r30, r24
     cb0:	11 82       	std	Z+1, r1	; 0x01
     cb2:	10 82       	st	Z, r1

00000cb4 <.Loc.71>:
			OCR3A = (65535*power)/98;
     cb4:	89 81       	ldd	r24, Y+1	; 0x01
     cb6:	48 2f       	mov	r20, r24
     cb8:	88 0f       	add	r24, r24
     cba:	55 0b       	sbc	r21, r21
     cbc:	66 0b       	sbc	r22, r22
     cbe:	77 0b       	sbc	r23, r23
     cc0:	8f ef       	ldi	r24, 0xFF	; 255
     cc2:	9f ef       	ldi	r25, 0xFF	; 255
     cc4:	dc 01       	movw	r26, r24
     cc6:	9a 01       	movw	r18, r20
     cc8:	ab 01       	movw	r20, r22
     cca:	0e 94 3a 18 	call	0x3074	; 0x3074 <__muluhisi3>
     cce:	6a 83       	std	Y+2, r22	; 0x02
     cd0:	7b 83       	std	Y+3, r23	; 0x03
     cd2:	8c 83       	std	Y+4, r24	; 0x04
     cd4:	9d 83       	std	Y+5, r25	; 0x05

00000cd6 <.Loc.72>:
     cd6:	02 e6       	ldi	r16, 0x62	; 98
     cd8:	10 e0       	ldi	r17, 0x00	; 0
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	6a 81       	ldd	r22, Y+2	; 0x02
     ce0:	7b 81       	ldd	r23, Y+3	; 0x03
     ce2:	8c 81       	ldd	r24, Y+4	; 0x04
     ce4:	9d 81       	ldd	r25, Y+5	; 0x05
     ce6:	a9 01       	movw	r20, r18
     ce8:	98 01       	movw	r18, r16
     cea:	0e 94 0c 18 	call	0x3018	; 0x3018 <__divmodsi4>
     cee:	da 01       	movw	r26, r20
     cf0:	c9 01       	movw	r24, r18
     cf2:	ac 01       	movw	r20, r24
     cf4:	bd 01       	movw	r22, r26

00000cf6 <.Loc.73>:
     cf6:	88 e9       	ldi	r24, 0x98	; 152
     cf8:	90 e0       	ldi	r25, 0x00	; 0

00000cfa <.Loc.74>:
     cfa:	9a 01       	movw	r18, r20
     cfc:	fc 01       	movw	r30, r24
     cfe:	31 83       	std	Z+1, r19	; 0x01
     d00:	20 83       	st	Z, r18

00000d02 <.Loc.75>:
		else {
			OCR3A = 0;
			OCR3B = (65535*power)/-98;
		}
	}
}
     d02:	2c c0       	rjmp	.+88     	; 0xd5c <.L16>

00000d04 <.L15>:
			OCR3A = 0;
     d04:	88 e9       	ldi	r24, 0x98	; 152
     d06:	90 e0       	ldi	r25, 0x00	; 0

00000d08 <.Loc.77>:
     d08:	fc 01       	movw	r30, r24
     d0a:	11 82       	std	Z+1, r1	; 0x01
     d0c:	10 82       	st	Z, r1

00000d0e <.Loc.78>:
			OCR3B = (65535*power)/-98;
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	48 2f       	mov	r20, r24
     d12:	88 0f       	add	r24, r24
     d14:	55 0b       	sbc	r21, r21
     d16:	66 0b       	sbc	r22, r22
     d18:	77 0b       	sbc	r23, r23
     d1a:	8f ef       	ldi	r24, 0xFF	; 255
     d1c:	9f ef       	ldi	r25, 0xFF	; 255
     d1e:	dc 01       	movw	r26, r24
     d20:	9a 01       	movw	r18, r20
     d22:	ab 01       	movw	r20, r22
     d24:	0e 94 3a 18 	call	0x3074	; 0x3074 <__muluhisi3>
     d28:	6e 83       	std	Y+6, r22	; 0x06
     d2a:	7f 83       	std	Y+7, r23	; 0x07
     d2c:	88 87       	std	Y+8, r24	; 0x08
     d2e:	99 87       	std	Y+9, r25	; 0x09

00000d30 <.Loc.79>:
     d30:	0e e9       	ldi	r16, 0x9E	; 158
     d32:	1f ef       	ldi	r17, 0xFF	; 255
     d34:	2f ef       	ldi	r18, 0xFF	; 255
     d36:	3f ef       	ldi	r19, 0xFF	; 255
     d38:	6e 81       	ldd	r22, Y+6	; 0x06
     d3a:	7f 81       	ldd	r23, Y+7	; 0x07
     d3c:	88 85       	ldd	r24, Y+8	; 0x08
     d3e:	99 85       	ldd	r25, Y+9	; 0x09
     d40:	a9 01       	movw	r20, r18
     d42:	98 01       	movw	r18, r16
     d44:	0e 94 0c 18 	call	0x3018	; 0x3018 <__divmodsi4>
     d48:	da 01       	movw	r26, r20
     d4a:	c9 01       	movw	r24, r18
     d4c:	ac 01       	movw	r20, r24
     d4e:	bd 01       	movw	r22, r26

00000d50 <.Loc.80>:
     d50:	8a e9       	ldi	r24, 0x9A	; 154
     d52:	90 e0       	ldi	r25, 0x00	; 0

00000d54 <.Loc.81>:
     d54:	9a 01       	movw	r18, r20
     d56:	fc 01       	movw	r30, r24
     d58:	31 83       	std	Z+1, r19	; 0x01
     d5a:	20 83       	st	Z, r18

00000d5c <.L16>:
}
     d5c:	00 00       	nop
     d5e:	29 96       	adiw	r28, 0x09	; 9
     d60:	0f b6       	in	r0, 0x3f	; 63
     d62:	f8 94       	cli
     d64:	de bf       	out	0x3e, r29	; 62
     d66:	0f be       	out	0x3f, r0	; 63
     d68:	cd bf       	out	0x3d, r28	; 61
     d6a:	df 91       	pop	r29
     d6c:	cf 91       	pop	r28
     d6e:	1f 91       	pop	r17
     d70:	0f 91       	pop	r16
     d72:	08 95       	ret

00000d74 <main>:
*/

float CurrentHeading = 360.0;

int main(void)
{
     d74:	cf 93       	push	r28
     d76:	df 93       	push	r29
     d78:	cd b7       	in	r28, 0x3d	; 61
     d7a:	de b7       	in	r29, 0x3e	; 62
     d7c:	c6 56       	subi	r28, 0x66	; 102
     d7e:	d1 09       	sbc	r29, r1
     d80:	0f b6       	in	r0, 0x3f	; 63
     d82:	f8 94       	cli
     d84:	de bf       	out	0x3e, r29	; 62
     d86:	0f be       	out	0x3f, r0	; 63
     d88:	cd bf       	out	0x3d, r28	; 61

00000d8a <.Loc.1>:
    init();
     d8a:	0e 94 a4 0a 	call	0x1548	; 0x1548 <init>

00000d8e <.Loc.2>:
    init_display_meneer();
     d8e:	0e 94 01 10 	call	0x2002	; 0x2002 <init_display_meneer>

00000d92 <.Loc.3>:
    int VolgModus = 0;
     d92:	1a 82       	std	Y+2, r1	; 0x02
     d94:	19 82       	std	Y+1, r1	; 0x01

00000d96 <.Loc.4>:
    int KolommenModus =1;
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	9c 83       	std	Y+4, r25	; 0x04
     d9c:	8b 83       	std	Y+3, r24	; 0x03

00000d9e <.Loc.5>:
    int TestModus =0;
     d9e:	1e 86       	std	Y+14, r1	; 0x0e
     da0:	1d 86       	std	Y+13, r1	; 0x0d

00000da2 <.Loc.6>:

    int VolgTarget = 80;
     da2:	80 e5       	ldi	r24, 0x50	; 80
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	98 8b       	std	Y+16, r25	; 0x10
     da8:	8f 87       	std	Y+15, r24	; 0x0f

00000daa <.Loc.7>:

    int TargetHeading = 360;
     daa:	88 e6       	ldi	r24, 0x68	; 104
     dac:	91 e0       	ldi	r25, 0x01	; 1
     dae:	9e 83       	std	Y+6, r25	; 0x06
     db0:	8d 83       	std	Y+5, r24	; 0x05

00000db2 <.Loc.8>:
    int Afstand = 0;
     db2:	1a 8a       	std	Y+18, r1	; 0x12
     db4:	19 8a       	std	Y+17, r1	; 0x11

00000db6 <.Loc.9>:
    int Difference =0;
     db6:	1c 8a       	std	Y+20, r1	; 0x14
     db8:	1b 8a       	std	Y+19, r1	; 0x13

00000dba <.Loc.10>:
    int HeadingDifference = 0;
     dba:	1e 8a       	std	Y+22, r1	; 0x16
     dbc:	1d 8a       	std	Y+21, r1	; 0x15

00000dbe <.Loc.11>:
    int FrontDifference = 0;
     dbe:	18 8e       	std	Y+24, r1	; 0x18
     dc0:	1f 8a       	std	Y+23, r1	; 0x17

00000dc2 <.Loc.12>:
    int Obstructie = 0;
     dc2:	18 86       	std	Y+8, r1	; 0x08
     dc4:	1f 82       	std	Y+7, r1	; 0x07

00000dc6 <.Loc.13>:

    int CurrentKolom = 1;
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	9a 87       	std	Y+10, r25	; 0x0a
     dcc:	89 87       	std	Y+9, r24	; 0x09

00000dce <.Loc.14>:
    int InKolom = 1;
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	9c 87       	std	Y+12, r25	; 0x0c
     dd4:	8b 87       	std	Y+11, r24	; 0x0b

00000dd6 <.Loc.15>:

    int printgetal;
    DDRB |= ((1<<PB7) | (1<<PB6) | (1<<PB5));
     dd6:	84 e2       	ldi	r24, 0x24	; 36
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	dc 01       	movw	r26, r24
     ddc:	2c 91       	ld	r18, X
     dde:	84 e2       	ldi	r24, 0x24	; 36
     de0:	90 e0       	ldi	r25, 0x00	; 0

00000de2 <.Loc.16>:
     de2:	20 6e       	ori	r18, 0xE0	; 224
     de4:	fc 01       	movw	r30, r24
     de6:	20 83       	st	Z, r18

00000de8 <.Loc.17>:
    PORTB |= ((1<<PB7) | (1<<PB6) | (1<<PB5));
     de8:	85 e2       	ldi	r24, 0x25	; 37
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	dc 01       	movw	r26, r24
     dee:	2c 91       	ld	r18, X
     df0:	85 e2       	ldi	r24, 0x25	; 37
     df2:	90 e0       	ldi	r25, 0x00	; 0

00000df4 <.Loc.18>:
     df4:	20 6e       	ori	r18, 0xE0	; 224
     df6:	fc 01       	movw	r30, r24
     df8:	20 83       	st	Z, r18

00000dfa <.Loc.19>:
    DDRE |= (1<<PE5);
     dfa:	8d e2       	ldi	r24, 0x2D	; 45
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	dc 01       	movw	r26, r24
     e00:	2c 91       	ld	r18, X
     e02:	8d e2       	ldi	r24, 0x2D	; 45
     e04:	90 e0       	ldi	r25, 0x00	; 0

00000e06 <.Loc.20>:
     e06:	20 62       	ori	r18, 0x20	; 32
     e08:	fc 01       	movw	r30, r24
     e0a:	20 83       	st	Z, r18

00000e0c <.Loc.21>:
    PORTE |= (1<<PE5);
     e0c:	8e e2       	ldi	r24, 0x2E	; 46
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	dc 01       	movw	r26, r24
     e12:	2c 91       	ld	r18, X
     e14:	8e e2       	ldi	r24, 0x2E	; 46
     e16:	90 e0       	ldi	r25, 0x00	; 0

00000e18 <.Loc.22>:
     e18:	20 62       	ori	r18, 0x20	; 32
     e1a:	fc 01       	movw	r30, r24
     e1c:	20 83       	st	Z, r18

00000e1e <.L42>:
    while(1)
    {

        while(RedSwitch() == 0){
     e1e:	60 c0       	rjmp	.+192    	; 0xee0 <.L4>

00000e20 <.L5>:
            Motor_1_set_power(0);
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000e26 <.Loc.25>:
            Motor_2_set_power(0);
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00000e2c <.Loc.26>:
            PORTB &= ~(1<<PB7);
     e2c:	85 e2       	ldi	r24, 0x25	; 37
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	dc 01       	movw	r26, r24
     e32:	2c 91       	ld	r18, X

00000e34 <.Loc.27>:
     e34:	85 e2       	ldi	r24, 0x25	; 37
     e36:	90 e0       	ldi	r25, 0x00	; 0

00000e38 <.Loc.28>:
     e38:	2f 77       	andi	r18, 0x7F	; 127
     e3a:	fc 01       	movw	r30, r24
     e3c:	20 83       	st	Z, r18

00000e3e <.Loc.29>:
            PORTB |= ((1<<PB6) | (1<<PB5));
     e3e:	85 e2       	ldi	r24, 0x25	; 37
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	dc 01       	movw	r26, r24
     e44:	2c 91       	ld	r18, X
     e46:	85 e2       	ldi	r24, 0x25	; 37
     e48:	90 e0       	ldi	r25, 0x00	; 0

00000e4a <.Loc.30>:
     e4a:	20 66       	ori	r18, 0x60	; 96
     e4c:	fc 01       	movw	r30, r24
     e4e:	20 83       	st	Z, r18

00000e50 <.Loc.31>:
            CurrentHeading = UpdateHeading(CurrentHeading);
     e50:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     e54:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     e58:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     e5c:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     e60:	2f 8f       	std	Y+31, r18	; 0x1f
     e62:	38 a3       	std	Y+32, r19	; 0x20
     e64:	49 a3       	std	Y+33, r20	; 0x21
     e66:	5a a3       	std	Y+34, r21	; 0x22
     e68:	6f 8d       	ldd	r22, Y+31	; 0x1f
     e6a:	78 a1       	ldd	r23, Y+32	; 0x20
     e6c:	89 a1       	ldd	r24, Y+33	; 0x21
     e6e:	9a a1       	ldd	r25, Y+34	; 0x22
     e70:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
     e74:	6b a3       	std	Y+35, r22	; 0x23
     e76:	7c a3       	std	Y+36, r23	; 0x24
     e78:	8d a3       	std	Y+37, r24	; 0x25
     e7a:	9e a3       	std	Y+38, r25	; 0x26

00000e7c <.Loc.32>:
     e7c:	8b a1       	ldd	r24, Y+35	; 0x23
     e7e:	9c a1       	ldd	r25, Y+36	; 0x24
     e80:	ad a1       	ldd	r26, Y+37	; 0x25
     e82:	be a1       	ldd	r27, Y+38	; 0x26
     e84:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
     e88:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
     e8c:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
     e90:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00000e94 <.LBB29>:

            if(ModeSwitch1()){
     e94:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <ModeSwitch1>

00000e98 <.Loc.34>:
     e98:	00 97       	sbiw	r24, 0x00	; 0
     e9a:	79 f0       	breq	.+30     	; 0xeba <.L3>

00000e9c <.Loc.35>:
                PORTB &= ~(1<<PB6);
     e9c:	85 e2       	ldi	r24, 0x25	; 37
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	dc 01       	movw	r26, r24
     ea2:	2c 91       	ld	r18, X

00000ea4 <.Loc.36>:
     ea4:	85 e2       	ldi	r24, 0x25	; 37
     ea6:	90 e0       	ldi	r25, 0x00	; 0

00000ea8 <.Loc.37>:
     ea8:	2f 7b       	andi	r18, 0xBF	; 191
     eaa:	fc 01       	movw	r30, r24
     eac:	20 83       	st	Z, r18

00000eae <.Loc.38>:
                VolgModus = 1;
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	9a 83       	std	Y+2, r25	; 0x02
     eb4:	89 83       	std	Y+1, r24	; 0x01

00000eb6 <.Loc.39>:
                KolommenModus = 0;
     eb6:	1c 82       	std	Y+4, r1	; 0x04
     eb8:	1b 82       	std	Y+3, r1	; 0x03

00000eba <.L3>:
            }
            if(ModeSwitch2()){
     eba:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <ModeSwitch2>

00000ebe <.Loc.41>:
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	79 f0       	breq	.+30     	; 0xee0 <.L4>

00000ec2 <.Loc.42>:
                PORTB &= ~(1<<PB5);
     ec2:	85 e2       	ldi	r24, 0x25	; 37
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	dc 01       	movw	r26, r24
     ec8:	2c 91       	ld	r18, X

00000eca <.Loc.43>:
     eca:	85 e2       	ldi	r24, 0x25	; 37
     ecc:	90 e0       	ldi	r25, 0x00	; 0

00000ece <.Loc.44>:
     ece:	2f 7d       	andi	r18, 0xDF	; 223
     ed0:	fc 01       	movw	r30, r24
     ed2:	20 83       	st	Z, r18

00000ed4 <.Loc.45>:
                VolgModus = 0;
     ed4:	1a 82       	std	Y+2, r1	; 0x02
     ed6:	19 82       	std	Y+1, r1	; 0x01

00000ed8 <.Loc.46>:
                KolommenModus = 1;
     ed8:	81 e0       	ldi	r24, 0x01	; 1
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	9c 83       	std	Y+4, r25	; 0x04
     ede:	8b 83       	std	Y+3, r24	; 0x03

00000ee0 <.L4>:
        while(RedSwitch() == 0){
     ee0:	0e 94 07 0b 	call	0x160e	; 0x160e <RedSwitch>

00000ee4 <.Loc.48>:
     ee4:	00 97       	sbiw	r24, 0x00	; 0
     ee6:	09 f4       	brne	.+2      	; 0xeea <.LBE28>

00000ee8 <L0^A>:
     ee8:	9b cf       	rjmp	.-202    	; 0xe20 <.L5>

00000eea <.LBE28>:
            }
        }
        wait_ms(1000);
     eea:	88 ee       	ldi	r24, 0xE8	; 232
     eec:	93 e0       	ldi	r25, 0x03	; 3
     eee:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00000ef2 <.Loc.50>:
        PORTB |= (1<<PB7);
     ef2:	85 e2       	ldi	r24, 0x25	; 37
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	dc 01       	movw	r26, r24
     ef8:	2c 91       	ld	r18, X
     efa:	85 e2       	ldi	r24, 0x25	; 37
     efc:	90 e0       	ldi	r25, 0x00	; 0

00000efe <.Loc.51>:
     efe:	20 68       	ori	r18, 0x80	; 128
     f00:	fc 01       	movw	r30, r24
     f02:	20 83       	st	Z, r18

00000f04 <.Loc.52>:
        while(TestModus == 1){
     f04:	34 c0       	rjmp	.+104    	; 0xf6e <.L9>

00000f06 <.L10>:
            PORTB |= ((1<<PB7) | (1<<PB6) | (1<<PB5));
     f06:	85 e2       	ldi	r24, 0x25	; 37
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	dc 01       	movw	r26, r24
     f0c:	2c 91       	ld	r18, X
     f0e:	85 e2       	ldi	r24, 0x25	; 37
     f10:	90 e0       	ldi	r25, 0x00	; 0

00000f12 <.Loc.54>:
     f12:	20 6e       	ori	r18, 0xE0	; 224
     f14:	fc 01       	movw	r30, r24
     f16:	20 83       	st	Z, r18

00000f18 <.LBB31>:
            if(RedSwitch()){
     f18:	0e 94 07 0b 	call	0x160e	; 0x160e <RedSwitch>

00000f1c <.Loc.56>:
     f1c:	00 97       	sbiw	r24, 0x00	; 0
     f1e:	69 f0       	breq	.+26     	; 0xf3a <.L7>

00000f20 <.Loc.57>:
                PORTB &= ~(1<<PB7);
     f20:	85 e2       	ldi	r24, 0x25	; 37
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	dc 01       	movw	r26, r24
     f26:	2c 91       	ld	r18, X

00000f28 <.Loc.58>:
     f28:	85 e2       	ldi	r24, 0x25	; 37
     f2a:	90 e0       	ldi	r25, 0x00	; 0

00000f2c <.Loc.59>:
     f2c:	2f 77       	andi	r18, 0x7F	; 127
     f2e:	fc 01       	movw	r30, r24
     f30:	20 83       	st	Z, r18

00000f32 <.Loc.60>:
                wait_ms(300);
     f32:	8c e2       	ldi	r24, 0x2C	; 44
     f34:	91 e0       	ldi	r25, 0x01	; 1
     f36:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00000f3a <.L7>:
            }
            if(ModeSwitch1()){//onder
     f3a:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <ModeSwitch1>

00000f3e <.Loc.62>:
     f3e:	00 97       	sbiw	r24, 0x00	; 0
     f40:	49 f0       	breq	.+18     	; 0xf54 <.L8>

00000f42 <.Loc.63>:
                PORTB &= ~(1<<PB6);
     f42:	85 e2       	ldi	r24, 0x25	; 37
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	dc 01       	movw	r26, r24
     f48:	2c 91       	ld	r18, X

00000f4a <.Loc.64>:
     f4a:	85 e2       	ldi	r24, 0x25	; 37
     f4c:	90 e0       	ldi	r25, 0x00	; 0

00000f4e <.Loc.65>:
     f4e:	2f 7b       	andi	r18, 0xBF	; 191
     f50:	fc 01       	movw	r30, r24
     f52:	20 83       	st	Z, r18

00000f54 <.L8>:
            }
            if(ModeSwitch2()){ //boven
     f54:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <ModeSwitch2>

00000f58 <.Loc.67>:
     f58:	00 97       	sbiw	r24, 0x00	; 0
     f5a:	49 f0       	breq	.+18     	; 0xf6e <.L9>

00000f5c <.Loc.68>:
                PORTB &= ~(1<<PB5);
     f5c:	85 e2       	ldi	r24, 0x25	; 37
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	dc 01       	movw	r26, r24
     f62:	2c 91       	ld	r18, X

00000f64 <.Loc.69>:
     f64:	85 e2       	ldi	r24, 0x25	; 37
     f66:	90 e0       	ldi	r25, 0x00	; 0

00000f68 <.Loc.70>:
     f68:	2f 7d       	andi	r18, 0xDF	; 223
     f6a:	fc 01       	movw	r30, r24
     f6c:	20 83       	st	Z, r18

00000f6e <.L9>:
        while(TestModus == 1){
     f6e:	8d 85       	ldd	r24, Y+13	; 0x0d
     f70:	9e 85       	ldd	r25, Y+14	; 0x0e
     f72:	81 30       	cpi	r24, 0x01	; 1
     f74:	91 05       	cpc	r25, r1
     f76:	39 f2       	breq	.-114    	; 0xf06 <.L10>

00000f78 <.Loc.72>:
            }
        }
        while(VolgModus == 1){
     f78:	0f c1       	rjmp	.+542    	; 0x1198 <.L11>

00000f7a <.L22>:
            if(RedSwitch()){
     f7a:	0e 94 07 0b 	call	0x160e	; 0x160e <RedSwitch>

00000f7e <.Loc.74>:
     f7e:	00 97       	sbiw	r24, 0x00	; 0
     f80:	21 f0       	breq	.+8      	; 0xf8a <.L12>

00000f82 <.Loc.75>:
                VolgModus = 0;
     f82:	1a 82       	std	Y+2, r1	; 0x02
     f84:	19 82       	std	Y+1, r1	; 0x01

00000f86 <.Loc.76>:
                KolommenModus = 0;
     f86:	1c 82       	std	Y+4, r1	; 0x04
     f88:	1b 82       	std	Y+3, r1	; 0x03

00000f8a <.L12>:
            }

            Afstand = GetDistanceFront();
     f8a:	0e 94 22 12 	call	0x2444	; 0x2444 <GetDistanceFront>
     f8e:	9a 8b       	std	Y+18, r25	; 0x12
     f90:	89 8b       	std	Y+17, r24	; 0x11

00000f92 <.Loc.78>:
            Difference = Afstand - VolgTarget;
     f92:	29 89       	ldd	r18, Y+17	; 0x11
     f94:	3a 89       	ldd	r19, Y+18	; 0x12
     f96:	8f 85       	ldd	r24, Y+15	; 0x0f
     f98:	98 89       	ldd	r25, Y+16	; 0x10
     f9a:	a9 01       	movw	r20, r18
     f9c:	48 1b       	sub	r20, r24
     f9e:	59 0b       	sbc	r21, r25
     fa0:	ca 01       	movw	r24, r20
     fa2:	9c 8b       	std	Y+20, r25	; 0x14
     fa4:	8b 8b       	std	Y+19, r24	; 0x13

00000fa6 <.Loc.79>:
            display_getal(Afstand);
     fa6:	89 89       	ldd	r24, Y+17	; 0x11
     fa8:	9a 89       	ldd	r25, Y+18	; 0x12
     faa:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

00000fae <.Loc.80>:

            CurrentHeading = UpdateHeading(CurrentHeading);
     fae:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
     fb2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
     fb6:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
     fba:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
     fbe:	8f a3       	std	Y+39, r24	; 0x27
     fc0:	98 a7       	std	Y+40, r25	; 0x28
     fc2:	a9 a7       	std	Y+41, r26	; 0x29
     fc4:	ba a7       	std	Y+42, r27	; 0x2a
     fc6:	6f a1       	ldd	r22, Y+39	; 0x27
     fc8:	78 a5       	ldd	r23, Y+40	; 0x28
     fca:	89 a5       	ldd	r24, Y+41	; 0x29
     fcc:	9a a5       	ldd	r25, Y+42	; 0x2a
     fce:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
     fd2:	6b a7       	std	Y+43, r22	; 0x2b
     fd4:	7c a7       	std	Y+44, r23	; 0x2c
     fd6:	8d a7       	std	Y+45, r24	; 0x2d
     fd8:	9e a7       	std	Y+46, r25	; 0x2e

00000fda <.Loc.81>:
     fda:	2b a5       	ldd	r18, Y+43	; 0x2b
     fdc:	3c a5       	ldd	r19, Y+44	; 0x2c
     fde:	4d a5       	ldd	r20, Y+45	; 0x2d
     fe0:	5e a5       	ldd	r21, Y+46	; 0x2e
     fe2:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <CurrentHeading>
     fe6:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <CurrentHeading+0x1>
     fea:	40 93 02 02 	sts	0x0202, r20	; 0x800202 <CurrentHeading+0x2>
     fee:	50 93 03 02 	sts	0x0203, r21	; 0x800203 <CurrentHeading+0x3>

00000ff2 <.Loc.82>:
            HeadingDifference = TargetHeading - CurrentHeading;
     ff2:	8d 81       	ldd	r24, Y+5	; 0x05
     ff4:	9e 81       	ldd	r25, Y+6	; 0x06
     ff6:	9c 01       	movw	r18, r24
     ff8:	99 0f       	add	r25, r25
     ffa:	44 0b       	sbc	r20, r20
     ffc:	55 0b       	sbc	r21, r21
     ffe:	2f 96       	adiw	r28, 0x0f	; 15
    1000:	2c af       	std	Y+60, r18	; 0x3c
    1002:	3d af       	std	Y+61, r19	; 0x3d
    1004:	4e af       	std	Y+62, r20	; 0x3e
    1006:	5f af       	std	Y+63, r21	; 0x3f
    1008:	2f 97       	sbiw	r28, 0x0f	; 15
    100a:	2f 96       	adiw	r28, 0x0f	; 15
    100c:	6c ad       	ldd	r22, Y+60	; 0x3c
    100e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1010:	8e ad       	ldd	r24, Y+62	; 0x3e
    1012:	9f ad       	ldd	r25, Y+63	; 0x3f
    1014:	2f 97       	sbiw	r28, 0x0f	; 15
    1016:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    101a:	6f a7       	std	Y+47, r22	; 0x2f
    101c:	78 ab       	std	Y+48, r23	; 0x30
    101e:	89 ab       	std	Y+49, r24	; 0x31
    1020:	9a ab       	std	Y+50, r25	; 0x32
    1022:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1026:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    102a:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    102e:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1032:	9c 01       	movw	r18, r24
    1034:	ad 01       	movw	r20, r26
    1036:	6f a5       	ldd	r22, Y+47	; 0x2f
    1038:	78 a9       	ldd	r23, Y+48	; 0x30
    103a:	89 a9       	ldd	r24, Y+49	; 0x31
    103c:	9a a9       	ldd	r25, Y+50	; 0x32
    103e:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <__subsf3>
    1042:	63 96       	adiw	r28, 0x13	; 19
    1044:	6c af       	std	Y+60, r22	; 0x3c
    1046:	7d af       	std	Y+61, r23	; 0x3d
    1048:	8e af       	std	Y+62, r24	; 0x3e
    104a:	9f af       	std	Y+63, r25	; 0x3f
    104c:	63 97       	sbiw	r28, 0x13	; 19
    104e:	63 96       	adiw	r28, 0x13	; 19
    1050:	8c ad       	ldd	r24, Y+60	; 0x3c
    1052:	9d ad       	ldd	r25, Y+61	; 0x3d
    1054:	ae ad       	ldd	r26, Y+62	; 0x3e
    1056:	bf ad       	ldd	r27, Y+63	; 0x3f
    1058:	63 97       	sbiw	r28, 0x13	; 19
    105a:	8b ab       	std	Y+51, r24	; 0x33
    105c:	9c ab       	std	Y+52, r25	; 0x34
    105e:	ad ab       	std	Y+53, r26	; 0x35
    1060:	be ab       	std	Y+54, r27	; 0x36

00001062 <.Loc.83>:
    1062:	6b a9       	ldd	r22, Y+51	; 0x33
    1064:	7c a9       	ldd	r23, Y+52	; 0x34
    1066:	8d a9       	ldd	r24, Y+53	; 0x35
    1068:	9e a9       	ldd	r25, Y+54	; 0x36
    106a:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    106e:	67 96       	adiw	r28, 0x17	; 23
    1070:	6c af       	std	Y+60, r22	; 0x3c
    1072:	7d af       	std	Y+61, r23	; 0x3d
    1074:	8e af       	std	Y+62, r24	; 0x3e
    1076:	9f af       	std	Y+63, r25	; 0x3f
    1078:	67 97       	sbiw	r28, 0x17	; 23
    107a:	65 96       	adiw	r28, 0x15	; 21
    107c:	ae ad       	ldd	r26, Y+62	; 0x3e
    107e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1080:	65 97       	sbiw	r28, 0x15	; 21
    1082:	be 8b       	std	Y+22, r27	; 0x16
    1084:	ad 8b       	std	Y+21, r26	; 0x15

00001086 <.Loc.84>:

            if (HeadingDifference > 3){
    1086:	8d 89       	ldd	r24, Y+21	; 0x15
    1088:	9e 89       	ldd	r25, Y+22	; 0x16
    108a:	83 30       	cpi	r24, 0x03	; 3
    108c:	91 05       	cpc	r25, r1
    108e:	39 f0       	breq	.+14     	; 0x109e <.L13>
    1090:	34 f0       	brlt	.+12     	; 0x109e <.L13>

00001092 <.Loc.85>:
                Motor_1_set_power(35);
    1092:	83 e2       	ldi	r24, 0x23	; 35
    1094:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001098 <.Loc.86>:
                Motor_2_set_power(25);
    1098:	89 e1       	ldi	r24, 0x19	; 25
    109a:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000109e <.L13>:
            }
            if (HeadingDifference < -3){
    109e:	8d 89       	ldd	r24, Y+21	; 0x15
    10a0:	9e 89       	ldd	r25, Y+22	; 0x16
    10a2:	8d 3f       	cpi	r24, 0xFD	; 253
    10a4:	bf ef       	ldi	r27, 0xFF	; 255
    10a6:	9b 07       	cpc	r25, r27
    10a8:	34 f4       	brge	.+12     	; 0x10b6 <.L14>

000010aa <.Loc.88>:
                Motor_1_set_power(25);
    10aa:	89 e1       	ldi	r24, 0x19	; 25
    10ac:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000010b0 <.Loc.89>:
                Motor_2_set_power(35);
    10b0:	83 e2       	ldi	r24, 0x23	; 35
    10b2:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000010b6 <.L14>:
            }
            if (Difference > 200){
    10b6:	8b 89       	ldd	r24, Y+19	; 0x13
    10b8:	9c 89       	ldd	r25, Y+20	; 0x14
    10ba:	88 3c       	cpi	r24, 0xC8	; 200
    10bc:	91 05       	cpc	r25, r1
    10be:	39 f0       	breq	.+14     	; 0x10ce <.L15>
    10c0:	34 f0       	brlt	.+12     	; 0x10ce <.L15>

000010c2 <.Loc.91>:
                Motor_1_set_power(35);
    10c2:	83 e2       	ldi	r24, 0x23	; 35
    10c4:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000010c8 <.Loc.92>:
                Motor_2_set_power(35);
    10c8:	83 e2       	ldi	r24, 0x23	; 35
    10ca:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000010ce <.L15>:
            }
            if (Difference > 120 && Difference < 200){
    10ce:	8b 89       	ldd	r24, Y+19	; 0x13
    10d0:	9c 89       	ldd	r25, Y+20	; 0x14
    10d2:	88 37       	cpi	r24, 0x78	; 120
    10d4:	91 05       	cpc	r25, r1
    10d6:	69 f0       	breq	.+26     	; 0x10f2 <.L16>
    10d8:	64 f0       	brlt	.+24     	; 0x10f2 <.L16>

000010da <.Loc.94>:
    10da:	8b 89       	ldd	r24, Y+19	; 0x13
    10dc:	9c 89       	ldd	r25, Y+20	; 0x14
    10de:	87 3c       	cpi	r24, 0xC7	; 199
    10e0:	91 05       	cpc	r25, r1
    10e2:	09 f0       	breq	.+2      	; 0x10e6 <.Loc.95>

000010e4 <L0^A>:
    10e4:	34 f4       	brge	.+12     	; 0x10f2 <.L16>

000010e6 <.Loc.95>:
                Motor_1_set_power(22);
    10e6:	86 e1       	ldi	r24, 0x16	; 22
    10e8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000010ec <.Loc.96>:
                Motor_2_set_power(22);
    10ec:	86 e1       	ldi	r24, 0x16	; 22
    10ee:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000010f2 <.L16>:
            }
            if (Difference > 60 && Difference < 120){
    10f2:	8b 89       	ldd	r24, Y+19	; 0x13
    10f4:	9c 89       	ldd	r25, Y+20	; 0x14
    10f6:	8c 33       	cpi	r24, 0x3C	; 60
    10f8:	91 05       	cpc	r25, r1
    10fa:	69 f0       	breq	.+26     	; 0x1116 <.L17>
    10fc:	64 f0       	brlt	.+24     	; 0x1116 <.L17>

000010fe <.Loc.98>:
    10fe:	8b 89       	ldd	r24, Y+19	; 0x13
    1100:	9c 89       	ldd	r25, Y+20	; 0x14
    1102:	87 37       	cpi	r24, 0x77	; 119
    1104:	91 05       	cpc	r25, r1
    1106:	09 f0       	breq	.+2      	; 0x110a <.Loc.99>

00001108 <L0^A>:
    1108:	34 f4       	brge	.+12     	; 0x1116 <.L17>

0000110a <.Loc.99>:
                Motor_1_set_power(18);
    110a:	82 e1       	ldi	r24, 0x12	; 18
    110c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001110 <.Loc.100>:
                Motor_2_set_power(18);
    1110:	82 e1       	ldi	r24, 0x12	; 18
    1112:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001116 <.L17>:
            }
            if (Difference > 20 && Difference < 60){
    1116:	8b 89       	ldd	r24, Y+19	; 0x13
    1118:	9c 89       	ldd	r25, Y+20	; 0x14
    111a:	84 31       	cpi	r24, 0x14	; 20
    111c:	91 05       	cpc	r25, r1
    111e:	69 f0       	breq	.+26     	; 0x113a <.L18>
    1120:	64 f0       	brlt	.+24     	; 0x113a <.L18>

00001122 <.Loc.102>:
    1122:	8b 89       	ldd	r24, Y+19	; 0x13
    1124:	9c 89       	ldd	r25, Y+20	; 0x14
    1126:	8b 33       	cpi	r24, 0x3B	; 59
    1128:	91 05       	cpc	r25, r1
    112a:	09 f0       	breq	.+2      	; 0x112e <.Loc.103>

0000112c <L0^A>:
    112c:	34 f4       	brge	.+12     	; 0x113a <.L18>

0000112e <.Loc.103>:
                Motor_1_set_power(15);
    112e:	8f e0       	ldi	r24, 0x0F	; 15
    1130:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001134 <.Loc.104>:
                Motor_2_set_power(15);
    1134:	8f e0       	ldi	r24, 0x0F	; 15
    1136:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000113a <.L18>:
            }
            if (Difference > 0 && Difference < 20){
    113a:	8b 89       	ldd	r24, Y+19	; 0x13
    113c:	9c 89       	ldd	r25, Y+20	; 0x14
    113e:	00 97       	sbiw	r24, 0x00	; 0
    1140:	69 f0       	breq	.+26     	; 0x115c <.L19>
    1142:	64 f0       	brlt	.+24     	; 0x115c <.L19>

00001144 <.Loc.106>:
    1144:	8b 89       	ldd	r24, Y+19	; 0x13
    1146:	9c 89       	ldd	r25, Y+20	; 0x14
    1148:	83 31       	cpi	r24, 0x13	; 19
    114a:	91 05       	cpc	r25, r1
    114c:	09 f0       	breq	.+2      	; 0x1150 <.Loc.107>

0000114e <L0^A>:
    114e:	34 f4       	brge	.+12     	; 0x115c <.L19>

00001150 <.Loc.107>:
                Motor_1_set_power(12);
    1150:	8c e0       	ldi	r24, 0x0C	; 12
    1152:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001156 <.Loc.108>:
                Motor_2_set_power(12);
    1156:	8c e0       	ldi	r24, 0x0C	; 12
    1158:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000115c <.L19>:
            }
            if (Difference < -5){
    115c:	8b 89       	ldd	r24, Y+19	; 0x13
    115e:	9c 89       	ldd	r25, Y+20	; 0x14
    1160:	8b 3f       	cpi	r24, 0xFB	; 251
    1162:	ef ef       	ldi	r30, 0xFF	; 255
    1164:	9e 07       	cpc	r25, r30
    1166:	34 f4       	brge	.+12     	; 0x1174 <.L20>

00001168 <.Loc.110>:
                Motor_1_set_power(-18);
    1168:	8e ee       	ldi	r24, 0xEE	; 238
    116a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000116e <.Loc.111>:
                Motor_2_set_power(-18);
    116e:	8e ee       	ldi	r24, 0xEE	; 238
    1170:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001174 <.L20>:
            }
            if ( -5 < Difference && Difference < 5){
    1174:	8b 89       	ldd	r24, Y+19	; 0x13
    1176:	9c 89       	ldd	r25, Y+20	; 0x14
    1178:	8c 3f       	cpi	r24, 0xFC	; 252
    117a:	ff ef       	ldi	r31, 0xFF	; 255
    117c:	9f 07       	cpc	r25, r31
    117e:	64 f0       	brlt	.+24     	; 0x1198 <.L11>

00001180 <.Loc.113>:
    1180:	8b 89       	ldd	r24, Y+19	; 0x13
    1182:	9c 89       	ldd	r25, Y+20	; 0x14
    1184:	84 30       	cpi	r24, 0x04	; 4
    1186:	91 05       	cpc	r25, r1
    1188:	09 f0       	breq	.+2      	; 0x118c <.Loc.114>

0000118a <L0^A>:
    118a:	34 f4       	brge	.+12     	; 0x1198 <.L11>

0000118c <.Loc.114>:
                Motor_1_set_power(0);
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001192 <.Loc.115>:
                Motor_2_set_power(0);
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001198 <.L11>:
        while(VolgModus == 1){
    1198:	89 81       	ldd	r24, Y+1	; 0x01
    119a:	9a 81       	ldd	r25, Y+2	; 0x02
    119c:	81 30       	cpi	r24, 0x01	; 1
    119e:	91 05       	cpc	r25, r1
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <.Loc.117>

000011a2 <L0^A>:
    11a2:	eb ce       	rjmp	.-554    	; 0xf7a <.L22>

000011a4 <.Loc.117>:
            }

        }
        while(KolommenModus == 1){
    11a4:	ca c1       	rjmp	.+916    	; 0x153a <.L23>

000011a6 <.L41>:
            if(RedSwitch()){
    11a6:	0e 94 07 0b 	call	0x160e	; 0x160e <RedSwitch>

000011aa <.Loc.119>:
    11aa:	00 97       	sbiw	r24, 0x00	; 0
    11ac:	21 f0       	breq	.+8      	; 0x11b6 <.L24>

000011ae <.Loc.120>:
                VolgModus = 0;
    11ae:	1a 82       	std	Y+2, r1	; 0x02
    11b0:	19 82       	std	Y+1, r1	; 0x01

000011b2 <.Loc.121>:
                KolommenModus = 0;
    11b2:	1c 82       	std	Y+4, r1	; 0x04
    11b4:	1b 82       	std	Y+3, r1	; 0x03

000011b6 <.L24>:
            }

            Afstand = GetDistanceFront();
    11b6:	0e 94 22 12 	call	0x2444	; 0x2444 <GetDistanceFront>
    11ba:	9a 8b       	std	Y+18, r25	; 0x12
    11bc:	89 8b       	std	Y+17, r24	; 0x11

000011be <.Loc.123>:
            FrontDifference = Afstand - VolgTarget;
    11be:	29 89       	ldd	r18, Y+17	; 0x11
    11c0:	3a 89       	ldd	r19, Y+18	; 0x12
    11c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    11c4:	98 89       	ldd	r25, Y+16	; 0x10
    11c6:	a9 01       	movw	r20, r18
    11c8:	48 1b       	sub	r20, r24
    11ca:	59 0b       	sbc	r21, r25
    11cc:	ca 01       	movw	r24, r20
    11ce:	98 8f       	std	Y+24, r25	; 0x18
    11d0:	8f 8b       	std	Y+23, r24	; 0x17

000011d2 <.Loc.124>:

            int AfstandLinks = GetDistanceLeft();
    11d2:	0e 94 0a 14 	call	0x2814	; 0x2814 <GetDistanceLeft>
    11d6:	9a 8f       	std	Y+26, r25	; 0x1a
    11d8:	89 8f       	std	Y+25, r24	; 0x19

000011da <.Loc.125>:
            int AfstandRechts = GetDistanceRight();
    11da:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <GetDistanceRight>
    11de:	9c 8f       	std	Y+28, r25	; 0x1c
    11e0:	8b 8f       	std	Y+27, r24	; 0x1b

000011e2 <.Loc.126>:
            CurrentHeading = UpdateHeading(CurrentHeading);
    11e2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    11e6:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    11ea:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    11ee:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    11f2:	8f ab       	std	Y+55, r24	; 0x37
    11f4:	98 af       	std	Y+56, r25	; 0x38
    11f6:	a9 af       	std	Y+57, r26	; 0x39
    11f8:	ba af       	std	Y+58, r27	; 0x3a
    11fa:	6f a9       	ldd	r22, Y+55	; 0x37
    11fc:	78 ad       	ldd	r23, Y+56	; 0x38
    11fe:	89 ad       	ldd	r24, Y+57	; 0x39
    1200:	9a ad       	ldd	r25, Y+58	; 0x3a
    1202:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1206:	6b af       	std	Y+59, r22	; 0x3b
    1208:	7c af       	std	Y+60, r23	; 0x3c
    120a:	8d af       	std	Y+61, r24	; 0x3d
    120c:	9e af       	std	Y+62, r25	; 0x3e

0000120e <.Loc.127>:
    120e:	2b ad       	ldd	r18, Y+59	; 0x3b
    1210:	3c ad       	ldd	r19, Y+60	; 0x3c
    1212:	4d ad       	ldd	r20, Y+61	; 0x3d
    1214:	5e ad       	ldd	r21, Y+62	; 0x3e
    1216:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <CurrentHeading>
    121a:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <CurrentHeading+0x1>
    121e:	40 93 02 02 	sts	0x0202, r20	; 0x800202 <CurrentHeading+0x2>
    1222:	50 93 03 02 	sts	0x0203, r21	; 0x800203 <CurrentHeading+0x3>

00001226 <.Loc.128>:
            printgetal = (int)CurrentHeading;
    1226:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    122a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    122e:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1232:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1236:	23 96       	adiw	r28, 0x03	; 3
    1238:	8c af       	std	Y+60, r24	; 0x3c
    123a:	9d af       	std	Y+61, r25	; 0x3d
    123c:	ae af       	std	Y+62, r26	; 0x3e
    123e:	bf af       	std	Y+63, r27	; 0x3f
    1240:	23 97       	sbiw	r28, 0x03	; 3

00001242 <.Loc.129>:
    1242:	23 96       	adiw	r28, 0x03	; 3
    1244:	6c ad       	ldd	r22, Y+60	; 0x3c
    1246:	7d ad       	ldd	r23, Y+61	; 0x3d
    1248:	8e ad       	ldd	r24, Y+62	; 0x3e
    124a:	9f ad       	ldd	r25, Y+63	; 0x3f
    124c:	23 97       	sbiw	r28, 0x03	; 3
    124e:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    1252:	6b 96       	adiw	r28, 0x1b	; 27
    1254:	6c af       	std	Y+60, r22	; 0x3c
    1256:	7d af       	std	Y+61, r23	; 0x3d
    1258:	8e af       	std	Y+62, r24	; 0x3e
    125a:	9f af       	std	Y+63, r25	; 0x3f
    125c:	6b 97       	sbiw	r28, 0x1b	; 27
    125e:	69 96       	adiw	r28, 0x19	; 25
    1260:	ae ad       	ldd	r26, Y+62	; 0x3e
    1262:	bf ad       	ldd	r27, Y+63	; 0x3f
    1264:	69 97       	sbiw	r28, 0x19	; 25
    1266:	be 8f       	std	Y+30, r27	; 0x1e
    1268:	ad 8f       	std	Y+29, r26	; 0x1d

0000126a <.Loc.130>:
            display_getal(AfstandLinks);
    126a:	89 8d       	ldd	r24, Y+25	; 0x19
    126c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    126e:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

00001272 <.Loc.131>:
            Difference = TargetHeading - CurrentHeading;
    1272:	8d 81       	ldd	r24, Y+5	; 0x05
    1274:	9e 81       	ldd	r25, Y+6	; 0x06
    1276:	9c 01       	movw	r18, r24
    1278:	99 0f       	add	r25, r25
    127a:	44 0b       	sbc	r20, r20
    127c:	55 0b       	sbc	r21, r21
    127e:	6f 96       	adiw	r28, 0x1f	; 31
    1280:	2c af       	std	Y+60, r18	; 0x3c
    1282:	3d af       	std	Y+61, r19	; 0x3d
    1284:	4e af       	std	Y+62, r20	; 0x3e
    1286:	5f af       	std	Y+63, r21	; 0x3f
    1288:	6f 97       	sbiw	r28, 0x1f	; 31
    128a:	6f 96       	adiw	r28, 0x1f	; 31
    128c:	6c ad       	ldd	r22, Y+60	; 0x3c
    128e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1290:	8e ad       	ldd	r24, Y+62	; 0x3e
    1292:	9f ad       	ldd	r25, Y+63	; 0x3f
    1294:	6f 97       	sbiw	r28, 0x1f	; 31
    1296:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    129a:	27 96       	adiw	r28, 0x07	; 7
    129c:	6c af       	std	Y+60, r22	; 0x3c
    129e:	7d af       	std	Y+61, r23	; 0x3d
    12a0:	8e af       	std	Y+62, r24	; 0x3e
    12a2:	9f af       	std	Y+63, r25	; 0x3f
    12a4:	27 97       	sbiw	r28, 0x07	; 7
    12a6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    12aa:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    12ae:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    12b2:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    12b6:	9c 01       	movw	r18, r24
    12b8:	ad 01       	movw	r20, r26
    12ba:	27 96       	adiw	r28, 0x07	; 7
    12bc:	6c ad       	ldd	r22, Y+60	; 0x3c
    12be:	7d ad       	ldd	r23, Y+61	; 0x3d
    12c0:	8e ad       	ldd	r24, Y+62	; 0x3e
    12c2:	9f ad       	ldd	r25, Y+63	; 0x3f
    12c4:	27 97       	sbiw	r28, 0x07	; 7
    12c6:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <__subsf3>
    12ca:	a3 96       	adiw	r28, 0x23	; 35
    12cc:	6c af       	std	Y+60, r22	; 0x3c
    12ce:	7d af       	std	Y+61, r23	; 0x3d
    12d0:	8e af       	std	Y+62, r24	; 0x3e
    12d2:	9f af       	std	Y+63, r25	; 0x3f
    12d4:	a3 97       	sbiw	r28, 0x23	; 35
    12d6:	a3 96       	adiw	r28, 0x23	; 35
    12d8:	8c ad       	ldd	r24, Y+60	; 0x3c
    12da:	9d ad       	ldd	r25, Y+61	; 0x3d
    12dc:	ae ad       	ldd	r26, Y+62	; 0x3e
    12de:	bf ad       	ldd	r27, Y+63	; 0x3f
    12e0:	a3 97       	sbiw	r28, 0x23	; 35
    12e2:	2b 96       	adiw	r28, 0x0b	; 11
    12e4:	8c af       	std	Y+60, r24	; 0x3c
    12e6:	9d af       	std	Y+61, r25	; 0x3d
    12e8:	ae af       	std	Y+62, r26	; 0x3e
    12ea:	bf af       	std	Y+63, r27	; 0x3f
    12ec:	2b 97       	sbiw	r28, 0x0b	; 11

000012ee <.Loc.132>:
    12ee:	2b 96       	adiw	r28, 0x0b	; 11
    12f0:	6c ad       	ldd	r22, Y+60	; 0x3c
    12f2:	7d ad       	ldd	r23, Y+61	; 0x3d
    12f4:	8e ad       	ldd	r24, Y+62	; 0x3e
    12f6:	9f ad       	ldd	r25, Y+63	; 0x3f
    12f8:	2b 97       	sbiw	r28, 0x0b	; 11
    12fa:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    12fe:	a7 96       	adiw	r28, 0x27	; 39
    1300:	6c af       	std	Y+60, r22	; 0x3c
    1302:	7d af       	std	Y+61, r23	; 0x3d
    1304:	8e af       	std	Y+62, r24	; 0x3e
    1306:	9f af       	std	Y+63, r25	; 0x3f
    1308:	a7 97       	sbiw	r28, 0x27	; 39
    130a:	a5 96       	adiw	r28, 0x25	; 37
    130c:	ae ad       	ldd	r26, Y+62	; 0x3e
    130e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1310:	a5 97       	sbiw	r28, 0x25	; 37
    1312:	bc 8b       	std	Y+20, r27	; 0x14
    1314:	ab 8b       	std	Y+19, r26	; 0x13

00001316 <.Loc.133>:

            if(FrontDifference < 60){
    1316:	8f 89       	ldd	r24, Y+23	; 0x17
    1318:	98 8d       	ldd	r25, Y+24	; 0x18
    131a:	8b 33       	cpi	r24, 0x3B	; 59
    131c:	91 05       	cpc	r25, r1
    131e:	11 f0       	breq	.+4      	; 0x1324 <.Loc.134>

00001320 <L0^A>:
    1320:	0c f0       	brlt	.+2      	; 0x1324 <.Loc.134>

00001322 <L0^A>:
    1322:	53 c0       	rjmp	.+166    	; 0x13ca <.L25>

00001324 <.Loc.134>:
                Obstructie = 1;
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	98 87       	std	Y+8, r25	; 0x08
    132a:	8f 83       	std	Y+7, r24	; 0x07

0000132c <.Loc.135>:
                if (FrontDifference > 20 && FrontDifference < 60){
    132c:	8f 89       	ldd	r24, Y+23	; 0x17
    132e:	98 8d       	ldd	r25, Y+24	; 0x18
    1330:	84 31       	cpi	r24, 0x14	; 20
    1332:	91 05       	cpc	r25, r1
    1334:	69 f0       	breq	.+26     	; 0x1350 <.L26>
    1336:	64 f0       	brlt	.+24     	; 0x1350 <.L26>

00001338 <.Loc.136>:
    1338:	8f 89       	ldd	r24, Y+23	; 0x17
    133a:	98 8d       	ldd	r25, Y+24	; 0x18
    133c:	8b 33       	cpi	r24, 0x3B	; 59
    133e:	91 05       	cpc	r25, r1
    1340:	09 f0       	breq	.+2      	; 0x1344 <.Loc.137>

00001342 <L0^A>:
    1342:	34 f4       	brge	.+12     	; 0x1350 <.L26>

00001344 <.Loc.137>:
                Motor_1_set_power(15);
    1344:	8f e0       	ldi	r24, 0x0F	; 15
    1346:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000134a <.Loc.138>:
                Motor_2_set_power(15);
    134a:	8f e0       	ldi	r24, 0x0F	; 15
    134c:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001350 <.L26>:
                }
                if (FrontDifference > 0 && FrontDifference < 20){
    1350:	8f 89       	ldd	r24, Y+23	; 0x17
    1352:	98 8d       	ldd	r25, Y+24	; 0x18
    1354:	00 97       	sbiw	r24, 0x00	; 0
    1356:	69 f0       	breq	.+26     	; 0x1372 <.L27>
    1358:	64 f0       	brlt	.+24     	; 0x1372 <.L27>

0000135a <.Loc.140>:
    135a:	8f 89       	ldd	r24, Y+23	; 0x17
    135c:	98 8d       	ldd	r25, Y+24	; 0x18
    135e:	83 31       	cpi	r24, 0x13	; 19
    1360:	91 05       	cpc	r25, r1
    1362:	09 f0       	breq	.+2      	; 0x1366 <.Loc.141>

00001364 <L0^A>:
    1364:	34 f4       	brge	.+12     	; 0x1372 <.L27>

00001366 <.Loc.141>:
                    Motor_1_set_power(12);
    1366:	8c e0       	ldi	r24, 0x0C	; 12
    1368:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000136c <.Loc.142>:
                    Motor_2_set_power(12);
    136c:	8c e0       	ldi	r24, 0x0C	; 12
    136e:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001372 <.L27>:
                }
                if ( -5 < FrontDifference && FrontDifference < 5){
    1372:	8f 89       	ldd	r24, Y+23	; 0x17
    1374:	98 8d       	ldd	r25, Y+24	; 0x18
    1376:	8c 3f       	cpi	r24, 0xFC	; 252
    1378:	bf ef       	ldi	r27, 0xFF	; 255
    137a:	9b 07       	cpc	r25, r27
    137c:	34 f1       	brlt	.+76     	; 0x13ca <.L25>

0000137e <.Loc.144>:
    137e:	8f 89       	ldd	r24, Y+23	; 0x17
    1380:	98 8d       	ldd	r25, Y+24	; 0x18
    1382:	84 30       	cpi	r24, 0x04	; 4
    1384:	91 05       	cpc	r25, r1
    1386:	09 f0       	breq	.+2      	; 0x138a <.Loc.145>

00001388 <L0^A>:
    1388:	04 f5       	brge	.+64     	; 0x13ca <.L25>

0000138a <.Loc.145>:
                    Motor_1_set_power(0);
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001390 <.Loc.146>:
                    Motor_2_set_power(0);
    1390:	80 e0       	ldi	r24, 0x00	; 0
    1392:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001396 <.Loc.147>:
                    PORTE &= ~(1<<PE5);
    1396:	8e e2       	ldi	r24, 0x2E	; 46
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	fc 01       	movw	r30, r24
    139c:	20 81       	ld	r18, Z

0000139e <.Loc.148>:
    139e:	8e e2       	ldi	r24, 0x2E	; 46
    13a0:	90 e0       	ldi	r25, 0x00	; 0

000013a2 <.Loc.149>:
    13a2:	2f 7d       	andi	r18, 0xDF	; 223
    13a4:	dc 01       	movw	r26, r24
    13a6:	2c 93       	st	X, r18

000013a8 <.Loc.150>:
                    wait_ms(20);
    13a8:	84 e1       	ldi	r24, 0x14	; 20
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

000013b0 <.Loc.151>:
                    PORTE |= (1<<PE5);
    13b0:	8e e2       	ldi	r24, 0x2E	; 46
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	fc 01       	movw	r30, r24
    13b6:	20 81       	ld	r18, Z
    13b8:	8e e2       	ldi	r24, 0x2E	; 46
    13ba:	90 e0       	ldi	r25, 0x00	; 0

000013bc <.Loc.152>:
    13bc:	20 62       	ori	r18, 0x20	; 32
    13be:	dc 01       	movw	r26, r24
    13c0:	2c 93       	st	X, r18

000013c2 <.Loc.153>:
                    wait_ms(20);
    13c2:	84 e1       	ldi	r24, 0x14	; 20
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

000013ca <.L25>:
                }
            }
            if (FrontDifference > 90){
    13ca:	8f 89       	ldd	r24, Y+23	; 0x17
    13cc:	98 8d       	ldd	r25, Y+24	; 0x18
    13ce:	8a 35       	cpi	r24, 0x5A	; 90
    13d0:	91 05       	cpc	r25, r1
    13d2:	19 f0       	breq	.+6      	; 0x13da <.L28>
    13d4:	14 f0       	brlt	.+4      	; 0x13da <.L28>

000013d6 <.Loc.155>:
                Obstructie = 0;
    13d6:	18 86       	std	Y+8, r1	; 0x08
    13d8:	1f 82       	std	Y+7, r1	; 0x07

000013da <.L28>:
            }

            if(Obstructie ==0 && InKolom != 0){
    13da:	8f 81       	ldd	r24, Y+7	; 0x07
    13dc:	98 85       	ldd	r25, Y+8	; 0x08
    13de:	00 97       	sbiw	r24, 0x00	; 0
    13e0:	09 f0       	breq	.+2      	; 0x13e4 <.Loc.157>

000013e2 <L0^A>:
    13e2:	94 c0       	rjmp	.+296    	; 0x150c <.L29>

000013e4 <.Loc.157>:
    13e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    13e6:	9c 85       	ldd	r25, Y+12	; 0x0c
    13e8:	00 97       	sbiw	r24, 0x00	; 0
    13ea:	09 f4       	brne	.+2      	; 0x13ee <.Loc.158>

000013ec <L0^A>:
    13ec:	8f c0       	rjmp	.+286    	; 0x150c <.L29>

000013ee <.Loc.158>:
                if(Difference > 1){
    13ee:	8b 89       	ldd	r24, Y+19	; 0x13
    13f0:	9c 89       	ldd	r25, Y+20	; 0x14
    13f2:	81 30       	cpi	r24, 0x01	; 1
    13f4:	91 05       	cpc	r25, r1
    13f6:	39 f0       	breq	.+14     	; 0x1406 <.L30>
    13f8:	34 f0       	brlt	.+12     	; 0x1406 <.L30>

000013fa <.Loc.159>:
                //stuur naar links
                Motor_1_set_power(50);
    13fa:	82 e3       	ldi	r24, 0x32	; 50
    13fc:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001400 <.Loc.160>:
                Motor_2_set_power(45);
    1400:	8d e2       	ldi	r24, 0x2D	; 45
    1402:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001406 <.L30>:
                }
                if(Difference > 3){
    1406:	8b 89       	ldd	r24, Y+19	; 0x13
    1408:	9c 89       	ldd	r25, Y+20	; 0x14
    140a:	83 30       	cpi	r24, 0x03	; 3
    140c:	91 05       	cpc	r25, r1
    140e:	39 f0       	breq	.+14     	; 0x141e <.L31>
    1410:	34 f0       	brlt	.+12     	; 0x141e <.L31>

00001412 <.Loc.162>:
                    //stuur naar links
                    Motor_1_set_power(50);
    1412:	82 e3       	ldi	r24, 0x32	; 50
    1414:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001418 <.Loc.163>:
                    Motor_2_set_power(40);
    1418:	88 e2       	ldi	r24, 0x28	; 40
    141a:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000141e <.L31>:
                }
                if(Difference > 8){
    141e:	8b 89       	ldd	r24, Y+19	; 0x13
    1420:	9c 89       	ldd	r25, Y+20	; 0x14
    1422:	88 30       	cpi	r24, 0x08	; 8
    1424:	91 05       	cpc	r25, r1
    1426:	39 f0       	breq	.+14     	; 0x1436 <.L32>
    1428:	34 f0       	brlt	.+12     	; 0x1436 <.L32>

0000142a <.Loc.165>:
                    //stuur naar links
                    Motor_1_set_power(50);
    142a:	82 e3       	ldi	r24, 0x32	; 50
    142c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001430 <.Loc.166>:
                    Motor_2_set_power(20);
    1430:	84 e1       	ldi	r24, 0x14	; 20
    1432:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001436 <.L32>:
                }
                if(Difference < -1){
    1436:	8b 89       	ldd	r24, Y+19	; 0x13
    1438:	9c 89       	ldd	r25, Y+20	; 0x14
    143a:	8f 3f       	cpi	r24, 0xFF	; 255
    143c:	bf ef       	ldi	r27, 0xFF	; 255
    143e:	9b 07       	cpc	r25, r27
    1440:	34 f4       	brge	.+12     	; 0x144e <.L33>

00001442 <.Loc.168>:
                    //stuur naar rechts
                    Motor_1_set_power(45);
    1442:	8d e2       	ldi	r24, 0x2D	; 45
    1444:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001448 <.Loc.169>:
                    Motor_2_set_power(50);
    1448:	82 e3       	ldi	r24, 0x32	; 50
    144a:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000144e <.L33>:
                }
                if(Difference < -3){
    144e:	8b 89       	ldd	r24, Y+19	; 0x13
    1450:	9c 89       	ldd	r25, Y+20	; 0x14
    1452:	8d 3f       	cpi	r24, 0xFD	; 253
    1454:	ef ef       	ldi	r30, 0xFF	; 255
    1456:	9e 07       	cpc	r25, r30
    1458:	34 f4       	brge	.+12     	; 0x1466 <.L34>

0000145a <.Loc.171>:
                    //stuur naar rechts
                    Motor_1_set_power(40);
    145a:	88 e2       	ldi	r24, 0x28	; 40
    145c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001460 <.Loc.172>:
                    Motor_2_set_power(50);
    1460:	82 e3       	ldi	r24, 0x32	; 50
    1462:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001466 <.L34>:
                }
                if(Difference < -8){
    1466:	8b 89       	ldd	r24, Y+19	; 0x13
    1468:	9c 89       	ldd	r25, Y+20	; 0x14
    146a:	88 3f       	cpi	r24, 0xF8	; 248
    146c:	ff ef       	ldi	r31, 0xFF	; 255
    146e:	9f 07       	cpc	r25, r31
    1470:	34 f4       	brge	.+12     	; 0x147e <.L35>

00001472 <.Loc.174>:
                    //stuur naar rechts
                    Motor_1_set_power(20);
    1472:	84 e1       	ldi	r24, 0x14	; 20
    1474:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001478 <.Loc.175>:
                    Motor_2_set_power(50);
    1478:	82 e3       	ldi	r24, 0x32	; 50
    147a:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000147e <.L35>:
                }
                if ( -1 < Difference && Difference < 1){
    147e:	8b 89       	ldd	r24, Y+19	; 0x13
    1480:	9c 89       	ldd	r25, Y+20	; 0x14
    1482:	99 23       	and	r25, r25
    1484:	5c f0       	brlt	.+22     	; 0x149c <.L36>

00001486 <.Loc.177>:
    1486:	8b 89       	ldd	r24, Y+19	; 0x13
    1488:	9c 89       	ldd	r25, Y+20	; 0x14
    148a:	00 97       	sbiw	r24, 0x00	; 0
    148c:	09 f0       	breq	.+2      	; 0x1490 <.Loc.178>

0000148e <L0^A>:
    148e:	34 f4       	brge	.+12     	; 0x149c <.L36>

00001490 <.Loc.178>:
                    Motor_1_set_power(50);
    1490:	82 e3       	ldi	r24, 0x32	; 50
    1492:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001496 <.Loc.179>:
                    Motor_2_set_power(50);
    1496:	82 e3       	ldi	r24, 0x32	; 50
    1498:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

0000149c <.L36>:
                }
                if(BoomDetectie() == 1){
    149c:	0e 94 33 0b 	call	0x1666	; 0x1666 <BoomDetectie>

000014a0 <.Loc.181>:
    14a0:	81 30       	cpi	r24, 0x01	; 1
    14a2:	91 05       	cpc	r25, r1
    14a4:	b1 f4       	brne	.+44     	; 0x14d2 <.L37>

000014a6 <.LBB39>:
                    Motor_1_set_power(0);
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000014ac <.Loc.183>:
                    Motor_2_set_power(0);
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000014b2 <.Loc.184>:
                    GeluidSignaal();
    14b2:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <GeluidSignaal>

000014b6 <.Loc.185>:
                    wait_ms(2000);
    14b6:	80 ed       	ldi	r24, 0xD0	; 208
    14b8:	97 e0       	ldi	r25, 0x07	; 7
    14ba:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

000014be <.Loc.186>:
                    Motor_1_set_power(50);
    14be:	82 e3       	ldi	r24, 0x32	; 50
    14c0:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000014c4 <.Loc.187>:
                    Motor_2_set_power(50);
    14c4:	82 e3       	ldi	r24, 0x32	; 50
    14c6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

000014ca <.Loc.188>:
                    wait_ms(180);
    14ca:	84 eb       	ldi	r24, 0xB4	; 180
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

000014d2 <.L37>:
                }
                if(KolomIR()==1){
    14d2:	0e 94 1d 0b 	call	0x163a	; 0x163a <KolomIR>

000014d6 <.Loc.190>:
    14d6:	81 30       	cpi	r24, 0x01	; 1
    14d8:	91 05       	cpc	r25, r1
    14da:	41 f4       	brne	.+16     	; 0x14ec <.L38>

000014dc <.Loc.191>:
                    InKolom = 2;
    14dc:	82 e0       	ldi	r24, 0x02	; 2
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	9c 87       	std	Y+12, r25	; 0x0c
    14e2:	8b 87       	std	Y+11, r24	; 0x0b

000014e4 <.Loc.192>:
                   display_getal(5555);
    14e4:	83 eb       	ldi	r24, 0xB3	; 179
    14e6:	95 e1       	ldi	r25, 0x15	; 21
    14e8:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

000014ec <.L38>:
                }
                if(KolomIR()==0){
    14ec:	0e 94 1d 0b 	call	0x163a	; 0x163a <KolomIR>

000014f0 <.Loc.194>:
    14f0:	00 97       	sbiw	r24, 0x00	; 0
    14f2:	61 f4       	brne	.+24     	; 0x150c <.L29>

000014f4 <.Loc.195>:
                    if(InKolom == 2){
    14f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    14f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    14f8:	82 30       	cpi	r24, 0x02	; 2
    14fa:	91 05       	cpc	r25, r1
    14fc:	19 f4       	brne	.+6      	; 0x1504 <.L39>

000014fe <.Loc.196>:
                        InKolom =0;
    14fe:	1c 86       	std	Y+12, r1	; 0x0c
    1500:	1b 86       	std	Y+11, r1	; 0x0b
    1502:	04 c0       	rjmp	.+8      	; 0x150c <.L29>

00001504 <.L39>:
                    }
                    else{
                       display_getal(0000);
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

0000150c <.L29>:
                    }
                }
            }
            if(InKolom == 0){
    150c:	8b 85       	ldd	r24, Y+11	; 0x0b
    150e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1510:	00 97       	sbiw	r24, 0x00	; 0
    1512:	99 f4       	brne	.+38     	; 0x153a <.L23>

00001514 <.LBB42>:
                display_getal(0000);
    1514:	80 e0       	ldi	r24, 0x00	; 0
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

0000151c <.Loc.200>:
                BochtMaken();
    151c:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <BochtMaken>

00001520 <.Loc.201>:
                CurrentKolom++;
    1520:	89 85       	ldd	r24, Y+9	; 0x09
    1522:	9a 85       	ldd	r25, Y+10	; 0x0a
    1524:	01 96       	adiw	r24, 0x01	; 1
    1526:	9a 87       	std	Y+10, r25	; 0x0a
    1528:	89 87       	std	Y+9, r24	; 0x09

0000152a <.Loc.202>:
                TargetHeading = 538;
    152a:	8a e1       	ldi	r24, 0x1A	; 26
    152c:	92 e0       	ldi	r25, 0x02	; 2
    152e:	9e 83       	std	Y+6, r25	; 0x06
    1530:	8d 83       	std	Y+5, r24	; 0x05

00001532 <.Loc.203>:
                InKolom = 1;
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	9c 87       	std	Y+12, r25	; 0x0c
    1538:	8b 87       	std	Y+11, r24	; 0x0b

0000153a <.L23>:
        while(KolommenModus == 1){
    153a:	8b 81       	ldd	r24, Y+3	; 0x03
    153c:	9c 81       	ldd	r25, Y+4	; 0x04
    153e:	81 30       	cpi	r24, 0x01	; 1
    1540:	91 05       	cpc	r25, r1
    1542:	09 f4       	brne	.+2      	; 0x1546 <.LBE27>

00001544 <L0^A>:
    1544:	30 ce       	rjmp	.-928    	; 0x11a6 <.L41>

00001546 <.LBE27>:
    {
    1546:	6b cc       	rjmp	.-1834   	; 0xe1e <.L42>

00001548 <init>:

    return 0;
}


void init (void){
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	cd b7       	in	r28, 0x3d	; 61
    154e:	de b7       	in	r29, 0x3e	; 62

00001550 <.Loc.207>:
    init_SonicSensors();
    1550:	0e 94 b7 11 	call	0x236e	; 0x236e <init_SonicSensors>

00001554 <.Loc.208>:
    initTimer();
    1554:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <initTimer>

00001558 <.Loc.209>:
    init_motor_1();
    1558:	0e 94 63 04 	call	0x8c6	; 0x8c6 <init_motor_1>

0000155c <.Loc.210>:
    init_motor_2();
    155c:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <init_motor_2>

00001560 <.Loc.211>:
    init_Gyro();
    1560:	0e 94 82 03 	call	0x704	; 0x704 <init_Gyro>

00001564 <.Loc.212>:
    DDRK &= ~(1<<PK0);
    1564:	87 e0       	ldi	r24, 0x07	; 7
    1566:	91 e0       	ldi	r25, 0x01	; 1
    1568:	fc 01       	movw	r30, r24
    156a:	20 81       	ld	r18, Z

0000156c <.Loc.213>:
    156c:	87 e0       	ldi	r24, 0x07	; 7
    156e:	91 e0       	ldi	r25, 0x01	; 1

00001570 <.Loc.214>:
    1570:	2e 7f       	andi	r18, 0xFE	; 254
    1572:	fc 01       	movw	r30, r24
    1574:	20 83       	st	Z, r18

00001576 <.Loc.215>:

    DDRJ &= ~(1<<PJ1);
    1576:	84 e0       	ldi	r24, 0x04	; 4
    1578:	91 e0       	ldi	r25, 0x01	; 1
    157a:	fc 01       	movw	r30, r24
    157c:	20 81       	ld	r18, Z

0000157e <.Loc.216>:
    157e:	84 e0       	ldi	r24, 0x04	; 4
    1580:	91 e0       	ldi	r25, 0x01	; 1

00001582 <.Loc.217>:
    1582:	2d 7f       	andi	r18, 0xFD	; 253
    1584:	fc 01       	movw	r30, r24
    1586:	20 83       	st	Z, r18

00001588 <.Loc.218>:
    DDRD &= ~(1<<PD2);
    1588:	8a e2       	ldi	r24, 0x2A	; 42
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	fc 01       	movw	r30, r24
    158e:	20 81       	ld	r18, Z

00001590 <.Loc.219>:
    1590:	8a e2       	ldi	r24, 0x2A	; 42
    1592:	90 e0       	ldi	r25, 0x00	; 0

00001594 <.Loc.220>:
    1594:	2b 7f       	andi	r18, 0xFB	; 251
    1596:	fc 01       	movw	r30, r24
    1598:	20 83       	st	Z, r18

0000159a <.Loc.221>:
    DDRD &= ~(1<<PD3);
    159a:	8a e2       	ldi	r24, 0x2A	; 42
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	fc 01       	movw	r30, r24
    15a0:	20 81       	ld	r18, Z

000015a2 <.Loc.222>:
    15a2:	8a e2       	ldi	r24, 0x2A	; 42
    15a4:	90 e0       	ldi	r25, 0x00	; 0

000015a6 <.Loc.223>:
    15a6:	27 7f       	andi	r18, 0xF7	; 247
    15a8:	fc 01       	movw	r30, r24
    15aa:	20 83       	st	Z, r18

000015ac <.Loc.224>:




    sei();
    15ac:	78 94       	sei

000015ae <.Loc.225>:
}
    15ae:	00 00       	nop
    15b0:	df 91       	pop	r29
    15b2:	cf 91       	pop	r28
    15b4:	08 95       	ret

000015b6 <ModeSwitch1>:


// 48 46 44
int ModeSwitch1(){
    15b6:	cf 93       	push	r28
    15b8:	df 93       	push	r29
    15ba:	cd b7       	in	r28, 0x3d	; 61
    15bc:	de b7       	in	r29, 0x3e	; 62

000015be <.Loc.227>:
    if (PINJ & (1<<PJ1)){//D15
    15be:	83 e0       	ldi	r24, 0x03	; 3
    15c0:	91 e0       	ldi	r25, 0x01	; 1
    15c2:	fc 01       	movw	r30, r24
    15c4:	80 81       	ld	r24, Z

000015c6 <.Loc.228>:
    15c6:	88 2f       	mov	r24, r24
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	82 70       	andi	r24, 0x02	; 2
    15cc:	99 27       	eor	r25, r25

000015ce <.Loc.229>:
    15ce:	00 97       	sbiw	r24, 0x00	; 0
    15d0:	19 f0       	breq	.+6      	; 0x15d8 <.L45>

000015d2 <.Loc.230>:
        return 1;
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <.L46>

000015d8 <.L45>:
    }
    else{
        return 0;
    15d8:	80 e0       	ldi	r24, 0x00	; 0
    15da:	90 e0       	ldi	r25, 0x00	; 0

000015dc <.L46>:
    }
}
    15dc:	df 91       	pop	r29
    15de:	cf 91       	pop	r28
    15e0:	08 95       	ret

000015e2 <ModeSwitch2>:
int ModeSwitch2(){
    15e2:	cf 93       	push	r28
    15e4:	df 93       	push	r29
    15e6:	cd b7       	in	r28, 0x3d	; 61
    15e8:	de b7       	in	r29, 0x3e	; 62

000015ea <.Loc.234>:
    if (PIND & (1<<PD3)){//D16
    15ea:	89 e2       	ldi	r24, 0x29	; 41
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	fc 01       	movw	r30, r24
    15f0:	80 81       	ld	r24, Z

000015f2 <.Loc.235>:
    15f2:	88 2f       	mov	r24, r24
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	88 70       	andi	r24, 0x08	; 8
    15f8:	99 27       	eor	r25, r25

000015fa <.Loc.236>:
    15fa:	00 97       	sbiw	r24, 0x00	; 0
    15fc:	19 f0       	breq	.+6      	; 0x1604 <.L48>

000015fe <.Loc.237>:
        return 1;
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	02 c0       	rjmp	.+4      	; 0x1608 <.L49>

00001604 <.L48>:
    }
    else{
        return 0;
    1604:	80 e0       	ldi	r24, 0x00	; 0
    1606:	90 e0       	ldi	r25, 0x00	; 0

00001608 <.L49>:
    }
}
    1608:	df 91       	pop	r29
    160a:	cf 91       	pop	r28
    160c:	08 95       	ret

0000160e <RedSwitch>:
int RedSwitch(){
    160e:	cf 93       	push	r28
    1610:	df 93       	push	r29
    1612:	cd b7       	in	r28, 0x3d	; 61
    1614:	de b7       	in	r29, 0x3e	; 62

00001616 <.Loc.241>:
    if (PIND & (1<<PD2)){//D14
    1616:	89 e2       	ldi	r24, 0x29	; 41
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	fc 01       	movw	r30, r24
    161c:	80 81       	ld	r24, Z

0000161e <.Loc.242>:
    161e:	88 2f       	mov	r24, r24
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	84 70       	andi	r24, 0x04	; 4
    1624:	99 27       	eor	r25, r25

00001626 <.Loc.243>:
    1626:	00 97       	sbiw	r24, 0x00	; 0
    1628:	19 f0       	breq	.+6      	; 0x1630 <.L51>

0000162a <.Loc.244>:
        return 1;
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <.L52>

00001630 <.L51>:
    }
    else{
        return 0;
    1630:	80 e0       	ldi	r24, 0x00	; 0
    1632:	90 e0       	ldi	r25, 0x00	; 0

00001634 <.L52>:
    }
}
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	08 95       	ret

0000163a <KolomIR>:
int KolomIR(){
    163a:	cf 93       	push	r28
    163c:	df 93       	push	r29
    163e:	cd b7       	in	r28, 0x3d	; 61
    1640:	de b7       	in	r29, 0x3e	; 62

00001642 <.Loc.248>:
    if (PINK & (1<<PK0)){//A8
    1642:	86 e0       	ldi	r24, 0x06	; 6
    1644:	91 e0       	ldi	r25, 0x01	; 1
    1646:	fc 01       	movw	r30, r24
    1648:	80 81       	ld	r24, Z

0000164a <.Loc.249>:
    164a:	88 2f       	mov	r24, r24
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	81 70       	andi	r24, 0x01	; 1
    1650:	99 27       	eor	r25, r25

00001652 <.Loc.250>:
    1652:	00 97       	sbiw	r24, 0x00	; 0
    1654:	19 f0       	breq	.+6      	; 0x165c <.L54>

00001656 <.Loc.251>:
        return 0;
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	02 c0       	rjmp	.+4      	; 0x1660 <.L55>

0000165c <.L54>:
    }
    else{
        return 1;
    165c:	81 e0       	ldi	r24, 0x01	; 1
    165e:	90 e0       	ldi	r25, 0x00	; 0

00001660 <.L55>:
    }
}
    1660:	df 91       	pop	r29
    1662:	cf 91       	pop	r28
    1664:	08 95       	ret

00001666 <BoomDetectie>:

volatile int LinksDetectie = 0;
volatile int RechtsDetectie = 0;
int BoomDetectie(){
    1666:	cf 93       	push	r28
    1668:	df 93       	push	r29
    166a:	cd b7       	in	r28, 0x3d	; 61
    166c:	de b7       	in	r29, 0x3e	; 62
    166e:	c8 54       	subi	r28, 0x48	; 72
    1670:	d1 09       	sbc	r29, r1
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	f8 94       	cli
    1676:	de bf       	out	0x3e, r29	; 62
    1678:	0f be       	out	0x3f, r0	; 63
    167a:	cd bf       	out	0x3d, r28	; 61

0000167c <.Loc.255>:
    int afstand_Links = GetDistanceLeft();
    167c:	0e 94 0a 14 	call	0x2814	; 0x2814 <GetDistanceLeft>
    1680:	9a 83       	std	Y+2, r25	; 0x02
    1682:	89 83       	std	Y+1, r24	; 0x01

00001684 <.Loc.256>:
    int afstand_Rechts = GetDistanceRight();
    1684:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <GetDistanceRight>
    1688:	9c 83       	std	Y+4, r25	; 0x04
    168a:	8b 83       	std	Y+3, r24	; 0x03

0000168c <.Loc.257>:

    if (afstand_Links <= 80)
    168c:	89 81       	ldd	r24, Y+1	; 0x01
    168e:	9a 81       	ldd	r25, Y+2	; 0x02
    1690:	80 35       	cpi	r24, 0x50	; 80
    1692:	91 05       	cpc	r25, r1
    1694:	09 f0       	breq	.+2      	; 0x1698 <.Loc.258>

00001696 <L0^A>:
    1696:	9c f4       	brge	.+38     	; 0x16be <.L57>

00001698 <.Loc.258>:
        {
            if (LinksDetectie == 0) // knop is niet al eerder ingedrukt
    1698:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <LinksDetectie>
    169c:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <LinksDetectie+0x1>

000016a0 <.Loc.259>:
    16a0:	00 97       	sbiw	r24, 0x00	; 0
    16a2:	69 f4       	brne	.+26     	; 0x16be <.L57>

000016a4 <.LBB43>:
            {
                wait_ms(20);
    16a4:	84 e1       	ldi	r24, 0x14	; 20
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

000016ac <.Loc.261>:
                LinksDetectie = 1;
    16ac:	81 e0       	ldi	r24, 0x01	; 1
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <LinksDetectie+0x1>
    16b4:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <LinksDetectie>

000016b8 <.Loc.262>:
				return 1;
    16b8:	81 e0       	ldi	r24, 0x01	; 1
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	6c c1       	rjmp	.+728    	; 0x1996 <.L56>

000016be <.L57>:
            }
        }
    if (afstand_Links > 90)
    16be:	89 81       	ldd	r24, Y+1	; 0x01
    16c0:	9a 81       	ldd	r25, Y+2	; 0x02
    16c2:	8a 35       	cpi	r24, 0x5A	; 90
    16c4:	91 05       	cpc	r25, r1
    16c6:	09 f0       	breq	.+2      	; 0x16ca <L0^A>

000016c8 <L0^A>:
    16c8:	0c f4       	brge	.+2      	; 0x16cc <.Loc.264>

000016ca <L0^A>:
    16ca:	9a c0       	rjmp	.+308    	; 0x1800 <.L59>

000016cc <.Loc.264>:
        {
            if (LinksDetectie != 0) // knop is zojuist losgelaten
    16cc:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <LinksDetectie>
    16d0:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <LinksDetectie+0x1>

000016d4 <.Loc.265>:
    16d4:	00 97       	sbiw	r24, 0x00	; 0
    16d6:	09 f4       	brne	.+2      	; 0x16da <L0^A+0x2>

000016d8 <L0^A>:
    16d8:	93 c0       	rjmp	.+294    	; 0x1800 <.L59>
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	a0 ea       	ldi	r26, 0xA0	; 160
    16e0:	b1 e4       	ldi	r27, 0x41	; 65
    16e2:	8d 83       	std	Y+5, r24	; 0x05
    16e4:	9e 83       	std	Y+6, r25	; 0x06
    16e6:	af 83       	std	Y+7, r26	; 0x07
    16e8:	b8 87       	std	Y+8, r27	; 0x08

000016ea <.LBB44>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    16ea:	20 e0       	ldi	r18, 0x00	; 0
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	4a e7       	ldi	r20, 0x7A	; 122
    16f0:	55 e4       	ldi	r21, 0x45	; 69
    16f2:	6d 81       	ldd	r22, Y+5	; 0x05
    16f4:	7e 81       	ldd	r23, Y+6	; 0x06
    16f6:	8f 81       	ldd	r24, Y+7	; 0x07
    16f8:	98 85       	ldd	r25, Y+8	; 0x08
    16fa:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    16fe:	69 a7       	std	Y+41, r22	; 0x29
    1700:	7a a7       	std	Y+42, r23	; 0x2a
    1702:	8b a7       	std	Y+43, r24	; 0x2b
    1704:	9c a7       	std	Y+44, r25	; 0x2c
    1706:	89 a5       	ldd	r24, Y+41	; 0x29
    1708:	9a a5       	ldd	r25, Y+42	; 0x2a
    170a:	ab a5       	ldd	r26, Y+43	; 0x2b
    170c:	bc a5       	ldd	r27, Y+44	; 0x2c
    170e:	89 87       	std	Y+9, r24	; 0x09
    1710:	9a 87       	std	Y+10, r25	; 0x0a
    1712:	ab 87       	std	Y+11, r26	; 0x0b
    1714:	bc 87       	std	Y+12, r27	; 0x0c

00001716 <.Loc.267>:
	if (__tmp < 1.0)
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	40 e8       	ldi	r20, 0x80	; 128
    171c:	5f e3       	ldi	r21, 0x3F	; 63
    171e:	69 85       	ldd	r22, Y+9	; 0x09
    1720:	7a 85       	ldd	r23, Y+10	; 0x0a
    1722:	8b 85       	ldd	r24, Y+11	; 0x0b
    1724:	9c 85       	ldd	r25, Y+12	; 0x0c
    1726:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    172a:	88 23       	and	r24, r24
    172c:	2c f4       	brge	.+10     	; 0x1738 <.L83>

0000172e <.Loc.268>:
		__ticks = 1;
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	9e 87       	std	Y+14, r25	; 0x0e
    1734:	8d 87       	std	Y+13, r24	; 0x0d
    1736:	55 c0       	rjmp	.+170    	; 0x17e2 <.L62>

00001738 <.L83>:
	else if (__tmp > 65535)
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	3f ef       	ldi	r19, 0xFF	; 255
    173c:	4f e7       	ldi	r20, 0x7F	; 127
    173e:	57 e4       	ldi	r21, 0x47	; 71
    1740:	69 85       	ldd	r22, Y+9	; 0x09
    1742:	7a 85       	ldd	r23, Y+10	; 0x0a
    1744:	8b 85       	ldd	r24, Y+11	; 0x0b
    1746:	9c 85       	ldd	r25, Y+12	; 0x0c
    1748:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    174c:	88 23       	and	r24, r24
    174e:	d9 f1       	breq	.+118    	; 0x17c6 <.L84>
    1750:	d4 f1       	brlt	.+116    	; 0x17c6 <.L84>

00001752 <.Loc.270>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	30 e0       	ldi	r19, 0x00	; 0
    1756:	40 e2       	ldi	r20, 0x20	; 32
    1758:	51 e4       	ldi	r21, 0x41	; 65
    175a:	6d 81       	ldd	r22, Y+5	; 0x05
    175c:	7e 81       	ldd	r23, Y+6	; 0x06
    175e:	8f 81       	ldd	r24, Y+7	; 0x07
    1760:	98 85       	ldd	r25, Y+8	; 0x08
    1762:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    1766:	6d a7       	std	Y+45, r22	; 0x2d
    1768:	7e a7       	std	Y+46, r23	; 0x2e
    176a:	8f a7       	std	Y+47, r24	; 0x2f
    176c:	98 ab       	std	Y+48, r25	; 0x30
    176e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1770:	9e a5       	ldd	r25, Y+46	; 0x2e
    1772:	af a5       	ldd	r26, Y+47	; 0x2f
    1774:	b8 a9       	ldd	r27, Y+48	; 0x30
    1776:	89 a3       	std	Y+33, r24	; 0x21
    1778:	9a a3       	std	Y+34, r25	; 0x22
    177a:	ab a3       	std	Y+35, r26	; 0x23
    177c:	bc a3       	std	Y+36, r27	; 0x24

0000177e <.Loc.271>:
    177e:	69 a1       	ldd	r22, Y+33	; 0x21
    1780:	7a a1       	ldd	r23, Y+34	; 0x22
    1782:	8b a1       	ldd	r24, Y+35	; 0x23
    1784:	9c a1       	ldd	r25, Y+36	; 0x24
    1786:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    178a:	69 ab       	std	Y+49, r22	; 0x31
    178c:	7a ab       	std	Y+50, r23	; 0x32
    178e:	8b ab       	std	Y+51, r24	; 0x33
    1790:	9c ab       	std	Y+52, r25	; 0x34
    1792:	a9 a9       	ldd	r26, Y+49	; 0x31
    1794:	ba a9       	ldd	r27, Y+50	; 0x32
    1796:	be 87       	std	Y+14, r27	; 0x0e
    1798:	ad 87       	std	Y+13, r26	; 0x0d

0000179a <.Loc.272>:
		while(__ticks)
    179a:	10 c0       	rjmp	.+32     	; 0x17bc <.L65>

0000179c <.L66>:
    179c:	80 e9       	ldi	r24, 0x90	; 144
    179e:	91 e0       	ldi	r25, 0x01	; 1
    17a0:	98 8b       	std	Y+16, r25	; 0x10
    17a2:	8f 87       	std	Y+15, r24	; 0x0f

000017a4 <.LBB46>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
    17a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    17a6:	98 89       	ldd	r25, Y+16	; 0x10

000017a8 <.L1^B1>:
    17a8:	01 97       	sbiw	r24, 0x01	; 1
    17aa:	f1 f7       	brne	.-4      	; 0x17a8 <.L1^B1>
    17ac:	98 8b       	std	Y+16, r25	; 0x10
    17ae:	8f 87       	std	Y+15, r24	; 0x0f

000017b0 <.Loc.274>:
	...

000017b2 <.LBE46>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    17b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    17b6:	01 97       	sbiw	r24, 0x01	; 1
    17b8:	9e 87       	std	Y+14, r25	; 0x0e
    17ba:	8d 87       	std	Y+13, r24	; 0x0d

000017bc <.L65>:
		while(__ticks)
    17bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    17be:	9e 85       	ldd	r25, Y+14	; 0x0e
    17c0:	00 97       	sbiw	r24, 0x00	; 0
    17c2:	61 f7       	brne	.-40     	; 0x179c <.L66>

000017c4 <.Loc.277>:
		}
		return;
    17c4:	19 c0       	rjmp	.+50     	; 0x17f8 <.L67>

000017c6 <.L84>:
	}
	else
		__ticks = (uint16_t)__tmp;
    17c6:	69 85       	ldd	r22, Y+9	; 0x09
    17c8:	7a 85       	ldd	r23, Y+10	; 0x0a
    17ca:	8b 85       	ldd	r24, Y+11	; 0x0b
    17cc:	9c 85       	ldd	r25, Y+12	; 0x0c
    17ce:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    17d2:	6d ab       	std	Y+53, r22	; 0x35
    17d4:	7e ab       	std	Y+54, r23	; 0x36
    17d6:	8f ab       	std	Y+55, r24	; 0x37
    17d8:	98 af       	std	Y+56, r25	; 0x38
    17da:	8d a9       	ldd	r24, Y+53	; 0x35
    17dc:	9e a9       	ldd	r25, Y+54	; 0x36
    17de:	9e 87       	std	Y+14, r25	; 0x0e
    17e0:	8d 87       	std	Y+13, r24	; 0x0d

000017e2 <.L62>:
    17e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    17e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    17e6:	9a 8b       	std	Y+18, r25	; 0x12
    17e8:	89 8b       	std	Y+17, r24	; 0x11

000017ea <.LBB48>:
    17ea:	89 89       	ldd	r24, Y+17	; 0x11
    17ec:	9a 89       	ldd	r25, Y+18	; 0x12

000017ee <.L1^B2>:
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	f1 f7       	brne	.-4      	; 0x17ee <.L1^B2>
    17f2:	9a 8b       	std	Y+18, r25	; 0x12
    17f4:	89 8b       	std	Y+17, r24	; 0x11

000017f6 <.Loc.280>:
	...

000017f8 <.L67>:
            {
                _delay_ms(20);
                LinksDetectie = 0;
    17f8:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <LinksDetectie+0x1>
    17fc:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <LinksDetectie>

00001800 <.L59>:
            }
        }
    if (afstand_Rechts <= 80)
    1800:	8b 81       	ldd	r24, Y+3	; 0x03
    1802:	9c 81       	ldd	r25, Y+4	; 0x04
    1804:	80 35       	cpi	r24, 0x50	; 80
    1806:	91 05       	cpc	r25, r1
    1808:	09 f0       	breq	.+2      	; 0x180c <.Loc.283>

0000180a <L0^A>:
    180a:	9c f4       	brge	.+38     	; 0x1832 <.L68>

0000180c <.Loc.283>:
        {
            if (RechtsDetectie == 0) // knop is niet al eerder ingedrukt
    180c:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <RechtsDetectie>
    1810:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <RechtsDetectie+0x1>

00001814 <.Loc.284>:
    1814:	00 97       	sbiw	r24, 0x00	; 0
    1816:	69 f4       	brne	.+26     	; 0x1832 <.L68>

00001818 <.LBB50>:
            {
                wait_ms(20);
    1818:	84 e1       	ldi	r24, 0x14	; 20
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001820 <.Loc.286>:
                RechtsDetectie = 1;
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <RechtsDetectie+0x1>
    1828:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <RechtsDetectie>

0000182c <.Loc.287>:
				return 1;
    182c:	81 e0       	ldi	r24, 0x01	; 1
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	b2 c0       	rjmp	.+356    	; 0x1996 <.L56>

00001832 <.L68>:
            }
        }
    if (afstand_Rechts > 90)
    1832:	8b 81       	ldd	r24, Y+3	; 0x03
    1834:	9c 81       	ldd	r25, Y+4	; 0x04
    1836:	8a 35       	cpi	r24, 0x5A	; 90
    1838:	91 05       	cpc	r25, r1
    183a:	09 f0       	breq	.+2      	; 0x183e <L0^A>

0000183c <L0^A>:
    183c:	0c f4       	brge	.+2      	; 0x1840 <.Loc.289>

0000183e <L0^A>:
    183e:	a8 c0       	rjmp	.+336    	; 0x1990 <.L69>

00001840 <.Loc.289>:
        {
            if (RechtsDetectie != 0) // knop is zojuist losgelaten
    1840:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <RechtsDetectie>
    1844:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <RechtsDetectie+0x1>

00001848 <.Loc.290>:
    1848:	00 97       	sbiw	r24, 0x00	; 0
    184a:	09 f4       	brne	.+2      	; 0x184e <L0^A+0x2>

0000184c <L0^A>:
    184c:	a4 c0       	rjmp	.+328    	; 0x1996 <.L56>
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	90 e0       	ldi	r25, 0x00	; 0
    1852:	a0 ea       	ldi	r26, 0xA0	; 160
    1854:	b1 e4       	ldi	r27, 0x41	; 65
    1856:	8b 8b       	std	Y+19, r24	; 0x13
    1858:	9c 8b       	std	Y+20, r25	; 0x14
    185a:	ad 8b       	std	Y+21, r26	; 0x15
    185c:	be 8b       	std	Y+22, r27	; 0x16

0000185e <.LBB51>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    185e:	20 e0       	ldi	r18, 0x00	; 0
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	4a e7       	ldi	r20, 0x7A	; 122
    1864:	55 e4       	ldi	r21, 0x45	; 69
    1866:	6b 89       	ldd	r22, Y+19	; 0x13
    1868:	7c 89       	ldd	r23, Y+20	; 0x14
    186a:	8d 89       	ldd	r24, Y+21	; 0x15
    186c:	9e 89       	ldd	r25, Y+22	; 0x16
    186e:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    1872:	69 af       	std	Y+57, r22	; 0x39
    1874:	7a af       	std	Y+58, r23	; 0x3a
    1876:	8b af       	std	Y+59, r24	; 0x3b
    1878:	9c af       	std	Y+60, r25	; 0x3c
    187a:	89 ad       	ldd	r24, Y+57	; 0x39
    187c:	9a ad       	ldd	r25, Y+58	; 0x3a
    187e:	ab ad       	ldd	r26, Y+59	; 0x3b
    1880:	bc ad       	ldd	r27, Y+60	; 0x3c
    1882:	8f 8b       	std	Y+23, r24	; 0x17
    1884:	98 8f       	std	Y+24, r25	; 0x18
    1886:	a9 8f       	std	Y+25, r26	; 0x19
    1888:	ba 8f       	std	Y+26, r27	; 0x1a

0000188a <.Loc.292>:
	if (__tmp < 1.0)
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	40 e8       	ldi	r20, 0x80	; 128
    1890:	5f e3       	ldi	r21, 0x3F	; 63
    1892:	6f 89       	ldd	r22, Y+23	; 0x17
    1894:	78 8d       	ldd	r23, Y+24	; 0x18
    1896:	89 8d       	ldd	r24, Y+25	; 0x19
    1898:	9a 8d       	ldd	r25, Y+26	; 0x1a
    189a:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    189e:	88 23       	and	r24, r24
    18a0:	2c f4       	brge	.+10     	; 0x18ac <.L85>

000018a2 <.Loc.293>:
		__ticks = 1;
    18a2:	81 e0       	ldi	r24, 0x01	; 1
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	9c 8f       	std	Y+28, r25	; 0x1c
    18a8:	8b 8f       	std	Y+27, r24	; 0x1b
    18aa:	62 c0       	rjmp	.+196    	; 0x1970 <.L73>

000018ac <.L85>:
	else if (__tmp > 65535)
    18ac:	20 e0       	ldi	r18, 0x00	; 0
    18ae:	3f ef       	ldi	r19, 0xFF	; 255
    18b0:	4f e7       	ldi	r20, 0x7F	; 127
    18b2:	57 e4       	ldi	r21, 0x47	; 71
    18b4:	6f 89       	ldd	r22, Y+23	; 0x17
    18b6:	78 8d       	ldd	r23, Y+24	; 0x18
    18b8:	89 8d       	ldd	r24, Y+25	; 0x19
    18ba:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18bc:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    18c0:	88 23       	and	r24, r24
    18c2:	09 f0       	breq	.+2      	; 0x18c6 <L0^A>

000018c4 <L0^A>:
    18c4:	0c f4       	brge	.+2      	; 0x18c8 <.Loc.295>

000018c6 <L0^A>:
    18c6:	42 c0       	rjmp	.+132    	; 0x194c <.L86>

000018c8 <.Loc.295>:
		__ticks = (uint16_t) (__ms * 10.0);
    18c8:	20 e0       	ldi	r18, 0x00	; 0
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	40 e2       	ldi	r20, 0x20	; 32
    18ce:	51 e4       	ldi	r21, 0x41	; 65
    18d0:	6b 89       	ldd	r22, Y+19	; 0x13
    18d2:	7c 89       	ldd	r23, Y+20	; 0x14
    18d4:	8d 89       	ldd	r24, Y+21	; 0x15
    18d6:	9e 89       	ldd	r25, Y+22	; 0x16
    18d8:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    18dc:	21 96       	adiw	r28, 0x01	; 1
    18de:	6c af       	std	Y+60, r22	; 0x3c
    18e0:	7d af       	std	Y+61, r23	; 0x3d
    18e2:	8e af       	std	Y+62, r24	; 0x3e
    18e4:	9f af       	std	Y+63, r25	; 0x3f
    18e6:	21 97       	sbiw	r28, 0x01	; 1
    18e8:	21 96       	adiw	r28, 0x01	; 1
    18ea:	8c ad       	ldd	r24, Y+60	; 0x3c
    18ec:	9d ad       	ldd	r25, Y+61	; 0x3d
    18ee:	ae ad       	ldd	r26, Y+62	; 0x3e
    18f0:	bf ad       	ldd	r27, Y+63	; 0x3f
    18f2:	21 97       	sbiw	r28, 0x01	; 1
    18f4:	8d a3       	std	Y+37, r24	; 0x25
    18f6:	9e a3       	std	Y+38, r25	; 0x26
    18f8:	af a3       	std	Y+39, r26	; 0x27
    18fa:	b8 a7       	std	Y+40, r27	; 0x28

000018fc <.Loc.296>:
    18fc:	6d a1       	ldd	r22, Y+37	; 0x25
    18fe:	7e a1       	ldd	r23, Y+38	; 0x26
    1900:	8f a1       	ldd	r24, Y+39	; 0x27
    1902:	98 a5       	ldd	r25, Y+40	; 0x28
    1904:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    1908:	25 96       	adiw	r28, 0x05	; 5
    190a:	6c af       	std	Y+60, r22	; 0x3c
    190c:	7d af       	std	Y+61, r23	; 0x3d
    190e:	8e af       	std	Y+62, r24	; 0x3e
    1910:	9f af       	std	Y+63, r25	; 0x3f
    1912:	25 97       	sbiw	r28, 0x05	; 5
    1914:	23 96       	adiw	r28, 0x03	; 3
    1916:	ae ad       	ldd	r26, Y+62	; 0x3e
    1918:	bf ad       	ldd	r27, Y+63	; 0x3f
    191a:	23 97       	sbiw	r28, 0x03	; 3
    191c:	bc 8f       	std	Y+28, r27	; 0x1c
    191e:	ab 8f       	std	Y+27, r26	; 0x1b

00001920 <.Loc.297>:
		while(__ticks)
    1920:	10 c0       	rjmp	.+32     	; 0x1942 <.L76>

00001922 <.L77>:
    1922:	80 e9       	ldi	r24, 0x90	; 144
    1924:	91 e0       	ldi	r25, 0x01	; 1
    1926:	9e 8f       	std	Y+30, r25	; 0x1e
    1928:	8d 8f       	std	Y+29, r24	; 0x1d

0000192a <.LBB53>:
    192a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    192c:	9e 8d       	ldd	r25, Y+30	; 0x1e

0000192e <.L1^B3>:
    192e:	01 97       	sbiw	r24, 0x01	; 1
    1930:	f1 f7       	brne	.-4      	; 0x192e <.L1^B3>
    1932:	9e 8f       	std	Y+30, r25	; 0x1e
    1934:	8d 8f       	std	Y+29, r24	; 0x1d

00001936 <.Loc.299>:
	...

00001938 <.LBE53>:
			__ticks --;
    1938:	8b 8d       	ldd	r24, Y+27	; 0x1b
    193a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    193c:	01 97       	sbiw	r24, 0x01	; 1
    193e:	9c 8f       	std	Y+28, r25	; 0x1c
    1940:	8b 8f       	std	Y+27, r24	; 0x1b

00001942 <.L76>:
		while(__ticks)
    1942:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1944:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1946:	00 97       	sbiw	r24, 0x00	; 0
    1948:	61 f7       	brne	.-40     	; 0x1922 <.L77>

0000194a <.Loc.302>:
		return;
    194a:	1d c0       	rjmp	.+58     	; 0x1986 <.L78>

0000194c <.L86>:
		__ticks = (uint16_t)__tmp;
    194c:	6f 89       	ldd	r22, Y+23	; 0x17
    194e:	78 8d       	ldd	r23, Y+24	; 0x18
    1950:	89 8d       	ldd	r24, Y+25	; 0x19
    1952:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1954:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    1958:	29 96       	adiw	r28, 0x09	; 9
    195a:	6c af       	std	Y+60, r22	; 0x3c
    195c:	7d af       	std	Y+61, r23	; 0x3d
    195e:	8e af       	std	Y+62, r24	; 0x3e
    1960:	9f af       	std	Y+63, r25	; 0x3f
    1962:	29 97       	sbiw	r28, 0x09	; 9
    1964:	27 96       	adiw	r28, 0x07	; 7
    1966:	8e ad       	ldd	r24, Y+62	; 0x3e
    1968:	9f ad       	ldd	r25, Y+63	; 0x3f
    196a:	27 97       	sbiw	r28, 0x07	; 7
    196c:	9c 8f       	std	Y+28, r25	; 0x1c
    196e:	8b 8f       	std	Y+27, r24	; 0x1b

00001970 <.L73>:
    1970:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1972:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1974:	98 a3       	std	Y+32, r25	; 0x20
    1976:	8f 8f       	std	Y+31, r24	; 0x1f

00001978 <.LBB55>:
    1978:	8f 8d       	ldd	r24, Y+31	; 0x1f
    197a:	98 a1       	ldd	r25, Y+32	; 0x20

0000197c <.L1^B4>:
    197c:	01 97       	sbiw	r24, 0x01	; 1
    197e:	f1 f7       	brne	.-4      	; 0x197c <.L1^B4>
    1980:	98 a3       	std	Y+32, r25	; 0x20
    1982:	8f 8f       	std	Y+31, r24	; 0x1f

00001984 <.Loc.305>:
	...

00001986 <.L78>:
            {
                _delay_ms(20);
                RechtsDetectie = 0;
    1986:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <RechtsDetectie+0x1>
    198a:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <RechtsDetectie>
    198e:	03 c0       	rjmp	.+6      	; 0x1996 <.L56>

00001990 <.L69>:
            }
        }
    else{
        return 0;
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	00 c0       	rjmp	.+0      	; 0x1996 <.L56>

00001996 <.L56>:
    }

}
    1996:	c8 5b       	subi	r28, 0xB8	; 184
    1998:	df 4f       	sbci	r29, 0xFF	; 255
    199a:	0f b6       	in	r0, 0x3f	; 63
    199c:	f8 94       	cli
    199e:	de bf       	out	0x3e, r29	; 62
    19a0:	0f be       	out	0x3f, r0	; 63
    19a2:	cd bf       	out	0x3d, r28	; 61
    19a4:	df 91       	pop	r29
    19a6:	cf 91       	pop	r28
    19a8:	08 95       	ret

000019aa <LightSwap>:

void LightSwap(void){
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	cd b7       	in	r28, 0x3d	; 61
    19b0:	de b7       	in	r29, 0x3e	; 62

000019b2 <.Loc.310>:
    PORTB ^= (1<<PB7);
    19b2:	85 e2       	ldi	r24, 0x25	; 37
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	fc 01       	movw	r30, r24
    19b8:	30 81       	ld	r19, Z
    19ba:	85 e2       	ldi	r24, 0x25	; 37
    19bc:	90 e0       	ldi	r25, 0x00	; 0

000019be <.Loc.311>:
    19be:	20 e8       	ldi	r18, 0x80	; 128
    19c0:	23 27       	eor	r18, r19
    19c2:	fc 01       	movw	r30, r24
    19c4:	20 83       	st	Z, r18

000019c6 <.Loc.312>:
    PORTB ^= (1<<PB6);
    19c6:	85 e2       	ldi	r24, 0x25	; 37
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	fc 01       	movw	r30, r24
    19cc:	30 81       	ld	r19, Z
    19ce:	85 e2       	ldi	r24, 0x25	; 37
    19d0:	90 e0       	ldi	r25, 0x00	; 0

000019d2 <.Loc.313>:
    19d2:	20 e4       	ldi	r18, 0x40	; 64
    19d4:	23 27       	eor	r18, r19
    19d6:	fc 01       	movw	r30, r24
    19d8:	20 83       	st	Z, r18

000019da <.Loc.314>:
}
    19da:	00 00       	nop
    19dc:	df 91       	pop	r29
    19de:	cf 91       	pop	r28
    19e0:	08 95       	ret

000019e2 <GeluidSignaal>:
void GeluidSignaal(void){
    19e2:	cf 93       	push	r28
    19e4:	df 93       	push	r29
    19e6:	cd b7       	in	r28, 0x3d	; 61
    19e8:	de b7       	in	r29, 0x3e	; 62

000019ea <.Loc.316>:
    PORTE &= ~(1<<PE5);
    19ea:	8e e2       	ldi	r24, 0x2E	; 46
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	fc 01       	movw	r30, r24
    19f0:	20 81       	ld	r18, Z

000019f2 <.Loc.317>:
    19f2:	8e e2       	ldi	r24, 0x2E	; 46
    19f4:	90 e0       	ldi	r25, 0x00	; 0

000019f6 <.Loc.318>:
    19f6:	2f 7d       	andi	r18, 0xDF	; 223
    19f8:	fc 01       	movw	r30, r24
    19fa:	20 83       	st	Z, r18

000019fc <.Loc.319>:
    wait_ms(40);
    19fc:	88 e2       	ldi	r24, 0x28	; 40
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001a04 <.Loc.320>:
    PORTE |= (1<<PE5);
    1a04:	8e e2       	ldi	r24, 0x2E	; 46
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	fc 01       	movw	r30, r24
    1a0a:	20 81       	ld	r18, Z
    1a0c:	8e e2       	ldi	r24, 0x2E	; 46
    1a0e:	90 e0       	ldi	r25, 0x00	; 0

00001a10 <.Loc.321>:
    1a10:	20 62       	ori	r18, 0x20	; 32
    1a12:	fc 01       	movw	r30, r24
    1a14:	20 83       	st	Z, r18

00001a16 <.Loc.322>:
    wait_ms(80);
    1a16:	80 e5       	ldi	r24, 0x50	; 80
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001a1e <.Loc.323>:
    PORTE &= ~(1<<PE5);
    1a1e:	8e e2       	ldi	r24, 0x2E	; 46
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	fc 01       	movw	r30, r24
    1a24:	20 81       	ld	r18, Z

00001a26 <.Loc.324>:
    1a26:	8e e2       	ldi	r24, 0x2E	; 46
    1a28:	90 e0       	ldi	r25, 0x00	; 0

00001a2a <.Loc.325>:
    1a2a:	2f 7d       	andi	r18, 0xDF	; 223
    1a2c:	fc 01       	movw	r30, r24
    1a2e:	20 83       	st	Z, r18

00001a30 <.Loc.326>:
    wait_ms(40);
    1a30:	88 e2       	ldi	r24, 0x28	; 40
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001a38 <.Loc.327>:
    PORTE |= (1<<PE5);
    1a38:	8e e2       	ldi	r24, 0x2E	; 46
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	20 81       	ld	r18, Z
    1a40:	8e e2       	ldi	r24, 0x2E	; 46
    1a42:	90 e0       	ldi	r25, 0x00	; 0

00001a44 <.Loc.328>:
    1a44:	20 62       	ori	r18, 0x20	; 32
    1a46:	fc 01       	movw	r30, r24
    1a48:	20 83       	st	Z, r18

00001a4a <.Loc.329>:
    wait_ms(150);
    1a4a:	86 e9       	ldi	r24, 0x96	; 150
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001a52 <.Loc.330>:
    PORTE &= ~(1<<PE5);
    1a52:	8e e2       	ldi	r24, 0x2E	; 46
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	fc 01       	movw	r30, r24
    1a58:	20 81       	ld	r18, Z

00001a5a <.Loc.331>:
    1a5a:	8e e2       	ldi	r24, 0x2E	; 46
    1a5c:	90 e0       	ldi	r25, 0x00	; 0

00001a5e <.Loc.332>:
    1a5e:	2f 7d       	andi	r18, 0xDF	; 223
    1a60:	fc 01       	movw	r30, r24
    1a62:	20 83       	st	Z, r18

00001a64 <.Loc.333>:
    wait_ms(70);
    1a64:	86 e4       	ldi	r24, 0x46	; 70
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001a6c <.Loc.334>:
    PORTE |= (1<<PE5);
    1a6c:	8e e2       	ldi	r24, 0x2E	; 46
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	fc 01       	movw	r30, r24
    1a72:	20 81       	ld	r18, Z
    1a74:	8e e2       	ldi	r24, 0x2E	; 46
    1a76:	90 e0       	ldi	r25, 0x00	; 0

00001a78 <.Loc.335>:
    1a78:	20 62       	ori	r18, 0x20	; 32
    1a7a:	fc 01       	movw	r30, r24
    1a7c:	20 83       	st	Z, r18

00001a7e <.Loc.336>:
}
    1a7e:	00 00       	nop
    1a80:	df 91       	pop	r29
    1a82:	cf 91       	pop	r28
    1a84:	08 95       	ret

00001a86 <TurnTo>:


void TurnTo(int TargetHeading){
    1a86:	cf 93       	push	r28
    1a88:	df 93       	push	r29
    1a8a:	cd b7       	in	r28, 0x3d	; 61
    1a8c:	de b7       	in	r29, 0x3e	; 62
    1a8e:	c8 54       	subi	r28, 0x48	; 72
    1a90:	d1 09       	sbc	r29, r1
    1a92:	0f b6       	in	r0, 0x3f	; 63
    1a94:	f8 94       	cli
    1a96:	de bf       	out	0x3e, r29	; 62
    1a98:	0f be       	out	0x3f, r0	; 63
    1a9a:	cd bf       	out	0x3d, r28	; 61
    1a9c:	98 87       	std	Y+8, r25	; 0x08
    1a9e:	8f 83       	std	Y+7, r24	; 0x07

00001aa0 <.Loc.338>:
    CurrentHeading = UpdateHeading(CurrentHeading);
    1aa0:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1aa4:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1aa8:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1aac:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1ab0:	29 87       	std	Y+9, r18	; 0x09
    1ab2:	3a 87       	std	Y+10, r19	; 0x0a
    1ab4:	4b 87       	std	Y+11, r20	; 0x0b
    1ab6:	5c 87       	std	Y+12, r21	; 0x0c
    1ab8:	69 85       	ldd	r22, Y+9	; 0x09
    1aba:	7a 85       	ldd	r23, Y+10	; 0x0a
    1abc:	8b 85       	ldd	r24, Y+11	; 0x0b
    1abe:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ac0:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1ac4:	6d 87       	std	Y+13, r22	; 0x0d
    1ac6:	7e 87       	std	Y+14, r23	; 0x0e
    1ac8:	8f 87       	std	Y+15, r24	; 0x0f
    1aca:	98 8b       	std	Y+16, r25	; 0x10

00001acc <.Loc.339>:
    1acc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ace:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ad0:	af 85       	ldd	r26, Y+15	; 0x0f
    1ad2:	b8 89       	ldd	r27, Y+16	; 0x10
    1ad4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1ad8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1adc:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1ae0:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001ae4 <.Loc.340>:
    int Difference = TargetHeading - CurrentHeading;
    1ae4:	8f 81       	ldd	r24, Y+7	; 0x07
    1ae6:	98 85       	ldd	r25, Y+8	; 0x08
    1ae8:	9c 01       	movw	r18, r24
    1aea:	99 0f       	add	r25, r25
    1aec:	44 0b       	sbc	r20, r20
    1aee:	55 0b       	sbc	r21, r21
    1af0:	2d a7       	std	Y+45, r18	; 0x2d
    1af2:	3e a7       	std	Y+46, r19	; 0x2e
    1af4:	4f a7       	std	Y+47, r20	; 0x2f
    1af6:	58 ab       	std	Y+48, r21	; 0x30
    1af8:	6d a5       	ldd	r22, Y+45	; 0x2d
    1afa:	7e a5       	ldd	r23, Y+46	; 0x2e
    1afc:	8f a5       	ldd	r24, Y+47	; 0x2f
    1afe:	98 a9       	ldd	r25, Y+48	; 0x30
    1b00:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    1b04:	69 8b       	std	Y+17, r22	; 0x11
    1b06:	7a 8b       	std	Y+18, r23	; 0x12
    1b08:	8b 8b       	std	Y+19, r24	; 0x13
    1b0a:	9c 8b       	std	Y+20, r25	; 0x14
    1b0c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1b10:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1b14:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1b18:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1b1c:	9c 01       	movw	r18, r24
    1b1e:	ad 01       	movw	r20, r26
    1b20:	69 89       	ldd	r22, Y+17	; 0x11
    1b22:	7a 89       	ldd	r23, Y+18	; 0x12
    1b24:	8b 89       	ldd	r24, Y+19	; 0x13
    1b26:	9c 89       	ldd	r25, Y+20	; 0x14
    1b28:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <__subsf3>
    1b2c:	69 ab       	std	Y+49, r22	; 0x31
    1b2e:	7a ab       	std	Y+50, r23	; 0x32
    1b30:	8b ab       	std	Y+51, r24	; 0x33
    1b32:	9c ab       	std	Y+52, r25	; 0x34
    1b34:	89 a9       	ldd	r24, Y+49	; 0x31
    1b36:	9a a9       	ldd	r25, Y+50	; 0x32
    1b38:	ab a9       	ldd	r26, Y+51	; 0x33
    1b3a:	bc a9       	ldd	r27, Y+52	; 0x34
    1b3c:	8d 8b       	std	Y+21, r24	; 0x15
    1b3e:	9e 8b       	std	Y+22, r25	; 0x16
    1b40:	af 8b       	std	Y+23, r26	; 0x17
    1b42:	b8 8f       	std	Y+24, r27	; 0x18

00001b44 <.Loc.341>:
    1b44:	6d 89       	ldd	r22, Y+21	; 0x15
    1b46:	7e 89       	ldd	r23, Y+22	; 0x16
    1b48:	8f 89       	ldd	r24, Y+23	; 0x17
    1b4a:	98 8d       	ldd	r25, Y+24	; 0x18
    1b4c:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    1b50:	6d ab       	std	Y+53, r22	; 0x35
    1b52:	7e ab       	std	Y+54, r23	; 0x36
    1b54:	8f ab       	std	Y+55, r24	; 0x37
    1b56:	98 af       	std	Y+56, r25	; 0x38
    1b58:	ad a9       	ldd	r26, Y+53	; 0x35
    1b5a:	be a9       	ldd	r27, Y+54	; 0x36
    1b5c:	bc 83       	std	Y+4, r27	; 0x04
    1b5e:	ab 83       	std	Y+3, r26	; 0x03

00001b60 <.Loc.342>:
    int turning = 1;
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	9a 83       	std	Y+2, r25	; 0x02
    1b66:	89 83       	std	Y+1, r24	; 0x01

00001b68 <.Loc.343>:
    int printgetal;
    while (turning ==1){
    1b68:	e0 c0       	rjmp	.+448    	; 0x1d2a <.L90>

00001b6a <.L98>:
        CurrentHeading = UpdateHeading(CurrentHeading);
    1b6a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1b6e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1b72:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1b76:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1b7a:	29 8f       	std	Y+25, r18	; 0x19
    1b7c:	3a 8f       	std	Y+26, r19	; 0x1a
    1b7e:	4b 8f       	std	Y+27, r20	; 0x1b
    1b80:	5c 8f       	std	Y+28, r21	; 0x1c
    1b82:	69 8d       	ldd	r22, Y+25	; 0x19
    1b84:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b86:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b88:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b8a:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1b8e:	6d 8f       	std	Y+29, r22	; 0x1d
    1b90:	7e 8f       	std	Y+30, r23	; 0x1e
    1b92:	8f 8f       	std	Y+31, r24	; 0x1f
    1b94:	98 a3       	std	Y+32, r25	; 0x20

00001b96 <.Loc.345>:
    1b96:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b98:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1b9a:	af 8d       	ldd	r26, Y+31	; 0x1f
    1b9c:	b8 a1       	ldd	r27, Y+32	; 0x20
    1b9e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1ba2:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1ba6:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1baa:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001bae <.Loc.346>:
        Difference = TargetHeading - CurrentHeading;
    1bae:	8f 81       	ldd	r24, Y+7	; 0x07
    1bb0:	98 85       	ldd	r25, Y+8	; 0x08
    1bb2:	9c 01       	movw	r18, r24
    1bb4:	99 0f       	add	r25, r25
    1bb6:	44 0b       	sbc	r20, r20
    1bb8:	55 0b       	sbc	r21, r21
    1bba:	29 af       	std	Y+57, r18	; 0x39
    1bbc:	3a af       	std	Y+58, r19	; 0x3a
    1bbe:	4b af       	std	Y+59, r20	; 0x3b
    1bc0:	5c af       	std	Y+60, r21	; 0x3c
    1bc2:	69 ad       	ldd	r22, Y+57	; 0x39
    1bc4:	7a ad       	ldd	r23, Y+58	; 0x3a
    1bc6:	8b ad       	ldd	r24, Y+59	; 0x3b
    1bc8:	9c ad       	ldd	r25, Y+60	; 0x3c
    1bca:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    1bce:	69 a3       	std	Y+33, r22	; 0x21
    1bd0:	7a a3       	std	Y+34, r23	; 0x22
    1bd2:	8b a3       	std	Y+35, r24	; 0x23
    1bd4:	9c a3       	std	Y+36, r25	; 0x24
    1bd6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1bda:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1bde:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1be2:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1be6:	9c 01       	movw	r18, r24
    1be8:	ad 01       	movw	r20, r26
    1bea:	69 a1       	ldd	r22, Y+33	; 0x21
    1bec:	7a a1       	ldd	r23, Y+34	; 0x22
    1bee:	8b a1       	ldd	r24, Y+35	; 0x23
    1bf0:	9c a1       	ldd	r25, Y+36	; 0x24
    1bf2:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <__subsf3>
    1bf6:	21 96       	adiw	r28, 0x01	; 1
    1bf8:	6c af       	std	Y+60, r22	; 0x3c
    1bfa:	7d af       	std	Y+61, r23	; 0x3d
    1bfc:	8e af       	std	Y+62, r24	; 0x3e
    1bfe:	9f af       	std	Y+63, r25	; 0x3f
    1c00:	21 97       	sbiw	r28, 0x01	; 1
    1c02:	21 96       	adiw	r28, 0x01	; 1
    1c04:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c06:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c08:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c0a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c0c:	21 97       	sbiw	r28, 0x01	; 1
    1c0e:	8d a3       	std	Y+37, r24	; 0x25
    1c10:	9e a3       	std	Y+38, r25	; 0x26
    1c12:	af a3       	std	Y+39, r26	; 0x27
    1c14:	b8 a7       	std	Y+40, r27	; 0x28

00001c16 <.Loc.347>:
    1c16:	6d a1       	ldd	r22, Y+37	; 0x25
    1c18:	7e a1       	ldd	r23, Y+38	; 0x26
    1c1a:	8f a1       	ldd	r24, Y+39	; 0x27
    1c1c:	98 a5       	ldd	r25, Y+40	; 0x28
    1c1e:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    1c22:	25 96       	adiw	r28, 0x05	; 5
    1c24:	6c af       	std	Y+60, r22	; 0x3c
    1c26:	7d af       	std	Y+61, r23	; 0x3d
    1c28:	8e af       	std	Y+62, r24	; 0x3e
    1c2a:	9f af       	std	Y+63, r25	; 0x3f
    1c2c:	25 97       	sbiw	r28, 0x05	; 5
    1c2e:	23 96       	adiw	r28, 0x03	; 3
    1c30:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c32:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c34:	23 97       	sbiw	r28, 0x03	; 3
    1c36:	bc 83       	std	Y+4, r27	; 0x04
    1c38:	ab 83       	std	Y+3, r26	; 0x03

00001c3a <.Loc.348>:
        printgetal = (int)CurrentHeading;
    1c3a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1c3e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1c42:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1c46:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1c4a:	29 a7       	std	Y+41, r18	; 0x29
    1c4c:	3a a7       	std	Y+42, r19	; 0x2a
    1c4e:	4b a7       	std	Y+43, r20	; 0x2b
    1c50:	5c a7       	std	Y+44, r21	; 0x2c

00001c52 <.Loc.349>:
    1c52:	69 a5       	ldd	r22, Y+41	; 0x29
    1c54:	7a a5       	ldd	r23, Y+42	; 0x2a
    1c56:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c58:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c5a:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    1c5e:	29 96       	adiw	r28, 0x09	; 9
    1c60:	6c af       	std	Y+60, r22	; 0x3c
    1c62:	7d af       	std	Y+61, r23	; 0x3d
    1c64:	8e af       	std	Y+62, r24	; 0x3e
    1c66:	9f af       	std	Y+63, r25	; 0x3f
    1c68:	29 97       	sbiw	r28, 0x09	; 9
    1c6a:	27 96       	adiw	r28, 0x07	; 7
    1c6c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1c6e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1c70:	27 97       	sbiw	r28, 0x07	; 7
    1c72:	5e 83       	std	Y+6, r21	; 0x06
    1c74:	4d 83       	std	Y+5, r20	; 0x05

00001c76 <.Loc.350>:
        display_getal(printgetal);
    1c76:	8d 81       	ldd	r24, Y+5	; 0x05
    1c78:	9e 81       	ldd	r25, Y+6	; 0x06
    1c7a:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

00001c7e <.Loc.351>:
        if(Difference > 0){
    1c7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1c80:	9c 81       	ldd	r25, Y+4	; 0x04
    1c82:	00 97       	sbiw	r24, 0x00	; 0
    1c84:	39 f0       	breq	.+14     	; 0x1c94 <.L91>
    1c86:	34 f0       	brlt	.+12     	; 0x1c94 <.L91>

00001c88 <.Loc.352>:
            Motor_1_set_power(32);
    1c88:	80 e2       	ldi	r24, 0x20	; 32
    1c8a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001c8e <.Loc.353>:
            Motor_2_set_power(-32);
    1c8e:	80 ee       	ldi	r24, 0xE0	; 224
    1c90:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001c94 <.L91>:
        }
        if(Difference > 10){
    1c94:	8b 81       	ldd	r24, Y+3	; 0x03
    1c96:	9c 81       	ldd	r25, Y+4	; 0x04
    1c98:	8a 30       	cpi	r24, 0x0A	; 10
    1c9a:	91 05       	cpc	r25, r1
    1c9c:	39 f0       	breq	.+14     	; 0x1cac <.L92>
    1c9e:	34 f0       	brlt	.+12     	; 0x1cac <.L92>

00001ca0 <.Loc.355>:
            Motor_1_set_power(38);
    1ca0:	86 e2       	ldi	r24, 0x26	; 38
    1ca2:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001ca6 <.Loc.356>:
            Motor_2_set_power(-38);
    1ca6:	8a ed       	ldi	r24, 0xDA	; 218
    1ca8:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001cac <.L92>:
        }
        if(Difference > 20){
    1cac:	8b 81       	ldd	r24, Y+3	; 0x03
    1cae:	9c 81       	ldd	r25, Y+4	; 0x04
    1cb0:	84 31       	cpi	r24, 0x14	; 20
    1cb2:	91 05       	cpc	r25, r1
    1cb4:	39 f0       	breq	.+14     	; 0x1cc4 <.L93>
    1cb6:	34 f0       	brlt	.+12     	; 0x1cc4 <.L93>

00001cb8 <.Loc.358>:
            Motor_1_set_power(45);
    1cb8:	8d e2       	ldi	r24, 0x2D	; 45
    1cba:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001cbe <.Loc.359>:
            Motor_2_set_power(-45);
    1cbe:	83 ed       	ldi	r24, 0xD3	; 211
    1cc0:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001cc4 <.L93>:
        }
        if(Difference < 0){
    1cc4:	8b 81       	ldd	r24, Y+3	; 0x03
    1cc6:	9c 81       	ldd	r25, Y+4	; 0x04
    1cc8:	99 23       	and	r25, r25
    1cca:	34 f4       	brge	.+12     	; 0x1cd8 <.L94>

00001ccc <.Loc.361>:
            Motor_1_set_power(-32);
    1ccc:	80 ee       	ldi	r24, 0xE0	; 224
    1cce:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001cd2 <.Loc.362>:
            Motor_2_set_power(32);
    1cd2:	80 e2       	ldi	r24, 0x20	; 32
    1cd4:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001cd8 <.L94>:
        }
        if(Difference < -10){
    1cd8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cda:	9c 81       	ldd	r25, Y+4	; 0x04
    1cdc:	86 3f       	cpi	r24, 0xF6	; 246
    1cde:	5f ef       	ldi	r21, 0xFF	; 255
    1ce0:	95 07       	cpc	r25, r21
    1ce2:	34 f4       	brge	.+12     	; 0x1cf0 <.L95>

00001ce4 <.Loc.364>:
            Motor_1_set_power(-38);
    1ce4:	8a ed       	ldi	r24, 0xDA	; 218
    1ce6:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001cea <.Loc.365>:
            Motor_2_set_power(38);
    1cea:	86 e2       	ldi	r24, 0x26	; 38
    1cec:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001cf0 <.L95>:
        }
        if(Difference < -20){
    1cf0:	8b 81       	ldd	r24, Y+3	; 0x03
    1cf2:	9c 81       	ldd	r25, Y+4	; 0x04
    1cf4:	8c 3e       	cpi	r24, 0xEC	; 236
    1cf6:	af ef       	ldi	r26, 0xFF	; 255
    1cf8:	9a 07       	cpc	r25, r26
    1cfa:	34 f4       	brge	.+12     	; 0x1d08 <.L96>

00001cfc <.Loc.367>:
            Motor_1_set_power(-45);
    1cfc:	83 ed       	ldi	r24, 0xD3	; 211
    1cfe:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d02 <.Loc.368>:
            Motor_2_set_power(45);
    1d02:	8d e2       	ldi	r24, 0x2D	; 45
    1d04:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001d08 <.L96>:
        }
        if ( -1 < Difference && Difference < 1){
    1d08:	8b 81       	ldd	r24, Y+3	; 0x03
    1d0a:	9c 81       	ldd	r25, Y+4	; 0x04
    1d0c:	99 23       	and	r25, r25
    1d0e:	6c f0       	brlt	.+26     	; 0x1d2a <.L90>

00001d10 <.Loc.370>:
    1d10:	8b 81       	ldd	r24, Y+3	; 0x03
    1d12:	9c 81       	ldd	r25, Y+4	; 0x04
    1d14:	00 97       	sbiw	r24, 0x00	; 0
    1d16:	09 f0       	breq	.+2      	; 0x1d1a <.Loc.371>

00001d18 <L0^A>:
    1d18:	44 f4       	brge	.+16     	; 0x1d2a <.L90>

00001d1a <.Loc.371>:
            Motor_1_set_power(0);
    1d1a:	80 e0       	ldi	r24, 0x00	; 0
    1d1c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d20 <.Loc.372>:
            Motor_2_set_power(0);
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001d26 <.Loc.373>:
            turning = 0;
    1d26:	1a 82       	std	Y+2, r1	; 0x02
    1d28:	19 82       	std	Y+1, r1	; 0x01

00001d2a <.L90>:
    while (turning ==1){
    1d2a:	89 81       	ldd	r24, Y+1	; 0x01
    1d2c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d2e:	81 30       	cpi	r24, 0x01	; 1
    1d30:	91 05       	cpc	r25, r1
    1d32:	09 f4       	brne	.+2      	; 0x1d36 <.Loc.375>

00001d34 <L0^A>:
    1d34:	1a cf       	rjmp	.-460    	; 0x1b6a <.L98>

00001d36 <.Loc.375>:
        }
    }

}
    1d36:	00 00       	nop
    1d38:	00 00       	nop
    1d3a:	c8 5b       	subi	r28, 0xB8	; 184
    1d3c:	df 4f       	sbci	r29, 0xFF	; 255
    1d3e:	0f b6       	in	r0, 0x3f	; 63
    1d40:	f8 94       	cli
    1d42:	de bf       	out	0x3e, r29	; 62
    1d44:	0f be       	out	0x3f, r0	; 63
    1d46:	cd bf       	out	0x3d, r28	; 61
    1d48:	df 91       	pop	r29
    1d4a:	cf 91       	pop	r28
    1d4c:	08 95       	ret

00001d4e <Drive>:
void Drive(int RijAfstand,int TargetHeading){
    1d4e:	cf 93       	push	r28
    1d50:	df 93       	push	r29
    1d52:	cd b7       	in	r28, 0x3d	; 61
    1d54:	de b7       	in	r29, 0x3e	; 62
    1d56:	a4 97       	sbiw	r28, 0x24	; 36
    1d58:	0f b6       	in	r0, 0x3f	; 63
    1d5a:	f8 94       	cli
    1d5c:	de bf       	out	0x3e, r29	; 62
    1d5e:	0f be       	out	0x3f, r0	; 63
    1d60:	cd bf       	out	0x3d, r28	; 61
    1d62:	9e 83       	std	Y+6, r25	; 0x06
    1d64:	8d 83       	std	Y+5, r24	; 0x05
    1d66:	78 87       	std	Y+8, r23	; 0x08
    1d68:	6f 83       	std	Y+7, r22	; 0x07

00001d6a <.LBB58>:
    int Difference;
    for(int i = 0; i<RijAfstand; i++){
    1d6a:	1a 82       	std	Y+2, r1	; 0x02
    1d6c:	19 82       	std	Y+1, r1	; 0x01

00001d6e <.Loc.378>:
    1d6e:	c0 c0       	rjmp	.+384    	; 0x1ef0 <.L100>

00001d70 <.L108>:
        CurrentHeading = UpdateHeading(CurrentHeading);
    1d70:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1d74:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1d78:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1d7c:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1d80:	29 87       	std	Y+9, r18	; 0x09
    1d82:	3a 87       	std	Y+10, r19	; 0x0a
    1d84:	4b 87       	std	Y+11, r20	; 0x0b
    1d86:	5c 87       	std	Y+12, r21	; 0x0c
    1d88:	69 85       	ldd	r22, Y+9	; 0x09
    1d8a:	7a 85       	ldd	r23, Y+10	; 0x0a
    1d8c:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d8e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1d90:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1d94:	6d 87       	std	Y+13, r22	; 0x0d
    1d96:	7e 87       	std	Y+14, r23	; 0x0e
    1d98:	8f 87       	std	Y+15, r24	; 0x0f
    1d9a:	98 8b       	std	Y+16, r25	; 0x10

00001d9c <.Loc.380>:
    1d9c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d9e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1da0:	af 85       	ldd	r26, Y+15	; 0x0f
    1da2:	b8 89       	ldd	r27, Y+16	; 0x10
    1da4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1da8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1dac:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1db0:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001db4 <.Loc.381>:
        Difference = TargetHeading - CurrentHeading;
    1db4:	8f 81       	ldd	r24, Y+7	; 0x07
    1db6:	98 85       	ldd	r25, Y+8	; 0x08
    1db8:	9c 01       	movw	r18, r24
    1dba:	99 0f       	add	r25, r25
    1dbc:	44 0b       	sbc	r20, r20
    1dbe:	55 0b       	sbc	r21, r21
    1dc0:	29 8f       	std	Y+25, r18	; 0x19
    1dc2:	3a 8f       	std	Y+26, r19	; 0x1a
    1dc4:	4b 8f       	std	Y+27, r20	; 0x1b
    1dc6:	5c 8f       	std	Y+28, r21	; 0x1c
    1dc8:	69 8d       	ldd	r22, Y+25	; 0x19
    1dca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1dcc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dd0:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    1dd4:	69 8b       	std	Y+17, r22	; 0x11
    1dd6:	7a 8b       	std	Y+18, r23	; 0x12
    1dd8:	8b 8b       	std	Y+19, r24	; 0x13
    1dda:	9c 8b       	std	Y+20, r25	; 0x14
    1ddc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1de0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1de4:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1de8:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1dec:	9c 01       	movw	r18, r24
    1dee:	ad 01       	movw	r20, r26
    1df0:	69 89       	ldd	r22, Y+17	; 0x11
    1df2:	7a 89       	ldd	r23, Y+18	; 0x12
    1df4:	8b 89       	ldd	r24, Y+19	; 0x13
    1df6:	9c 89       	ldd	r25, Y+20	; 0x14
    1df8:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <__subsf3>
    1dfc:	6d 8f       	std	Y+29, r22	; 0x1d
    1dfe:	7e 8f       	std	Y+30, r23	; 0x1e
    1e00:	8f 8f       	std	Y+31, r24	; 0x1f
    1e02:	98 a3       	std	Y+32, r25	; 0x20
    1e04:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e06:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e08:	af 8d       	ldd	r26, Y+31	; 0x1f
    1e0a:	b8 a1       	ldd	r27, Y+32	; 0x20
    1e0c:	8d 8b       	std	Y+21, r24	; 0x15
    1e0e:	9e 8b       	std	Y+22, r25	; 0x16
    1e10:	af 8b       	std	Y+23, r26	; 0x17
    1e12:	b8 8f       	std	Y+24, r27	; 0x18

00001e14 <.Loc.382>:
    1e14:	6d 89       	ldd	r22, Y+21	; 0x15
    1e16:	7e 89       	ldd	r23, Y+22	; 0x16
    1e18:	8f 89       	ldd	r24, Y+23	; 0x17
    1e1a:	98 8d       	ldd	r25, Y+24	; 0x18
    1e1c:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    1e20:	69 a3       	std	Y+33, r22	; 0x21
    1e22:	7a a3       	std	Y+34, r23	; 0x22
    1e24:	8b a3       	std	Y+35, r24	; 0x23
    1e26:	9c a3       	std	Y+36, r25	; 0x24
    1e28:	a9 a1       	ldd	r26, Y+33	; 0x21
    1e2a:	ba a1       	ldd	r27, Y+34	; 0x22
    1e2c:	bc 83       	std	Y+4, r27	; 0x04
    1e2e:	ab 83       	std	Y+3, r26	; 0x03

00001e30 <.Loc.383>:
        display_getal(i);
    1e30:	89 81       	ldd	r24, Y+1	; 0x01
    1e32:	9a 81       	ldd	r25, Y+2	; 0x02
    1e34:	0e 94 ca 10 	call	0x2194	; 0x2194 <display_getal>

00001e38 <.Loc.384>:
        if(Difference > 1){
    1e38:	8b 81       	ldd	r24, Y+3	; 0x03
    1e3a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e3c:	81 30       	cpi	r24, 0x01	; 1
    1e3e:	91 05       	cpc	r25, r1
    1e40:	39 f0       	breq	.+14     	; 0x1e50 <.L101>
    1e42:	34 f0       	brlt	.+12     	; 0x1e50 <.L101>

00001e44 <.Loc.385>:
            //stuur naar links
            Motor_1_set_power(50);
    1e44:	82 e3       	ldi	r24, 0x32	; 50
    1e46:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001e4a <.Loc.386>:
            Motor_2_set_power(45);
    1e4a:	8d e2       	ldi	r24, 0x2D	; 45
    1e4c:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001e50 <.L101>:
        }
        if(Difference > 3){
    1e50:	8b 81       	ldd	r24, Y+3	; 0x03
    1e52:	9c 81       	ldd	r25, Y+4	; 0x04
    1e54:	83 30       	cpi	r24, 0x03	; 3
    1e56:	91 05       	cpc	r25, r1
    1e58:	39 f0       	breq	.+14     	; 0x1e68 <.L102>
    1e5a:	34 f0       	brlt	.+12     	; 0x1e68 <.L102>

00001e5c <.Loc.388>:
            //stuur naar links
            Motor_1_set_power(50);
    1e5c:	82 e3       	ldi	r24, 0x32	; 50
    1e5e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001e62 <.Loc.389>:
            Motor_2_set_power(40);
    1e62:	88 e2       	ldi	r24, 0x28	; 40
    1e64:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001e68 <.L102>:
        }
        if(Difference > 8){
    1e68:	8b 81       	ldd	r24, Y+3	; 0x03
    1e6a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e6c:	88 30       	cpi	r24, 0x08	; 8
    1e6e:	91 05       	cpc	r25, r1
    1e70:	39 f0       	breq	.+14     	; 0x1e80 <.L103>
    1e72:	34 f0       	brlt	.+12     	; 0x1e80 <.L103>

00001e74 <.Loc.391>:
            //stuur naar links
            Motor_1_set_power(50);
    1e74:	82 e3       	ldi	r24, 0x32	; 50
    1e76:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001e7a <.Loc.392>:
            Motor_2_set_power(20);
    1e7a:	84 e1       	ldi	r24, 0x14	; 20
    1e7c:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001e80 <.L103>:
        }
        if(Difference < -1){
    1e80:	8b 81       	ldd	r24, Y+3	; 0x03
    1e82:	9c 81       	ldd	r25, Y+4	; 0x04
    1e84:	8f 3f       	cpi	r24, 0xFF	; 255
    1e86:	bf ef       	ldi	r27, 0xFF	; 255
    1e88:	9b 07       	cpc	r25, r27
    1e8a:	34 f4       	brge	.+12     	; 0x1e98 <.L104>

00001e8c <.Loc.394>:
            //stuur naar rechts
            Motor_1_set_power(45);
    1e8c:	8d e2       	ldi	r24, 0x2D	; 45
    1e8e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001e92 <.Loc.395>:
            Motor_2_set_power(50);
    1e92:	82 e3       	ldi	r24, 0x32	; 50
    1e94:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001e98 <.L104>:
        }
        if(Difference < -3){
    1e98:	8b 81       	ldd	r24, Y+3	; 0x03
    1e9a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e9c:	8d 3f       	cpi	r24, 0xFD	; 253
    1e9e:	2f ef       	ldi	r18, 0xFF	; 255
    1ea0:	92 07       	cpc	r25, r18
    1ea2:	34 f4       	brge	.+12     	; 0x1eb0 <.L105>

00001ea4 <.Loc.397>:
            //stuur naar rechts
            Motor_1_set_power(40);
    1ea4:	88 e2       	ldi	r24, 0x28	; 40
    1ea6:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001eaa <.Loc.398>:
            Motor_2_set_power(50);
    1eaa:	82 e3       	ldi	r24, 0x32	; 50
    1eac:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001eb0 <.L105>:
        }
        if(Difference < -8){
    1eb0:	8b 81       	ldd	r24, Y+3	; 0x03
    1eb2:	9c 81       	ldd	r25, Y+4	; 0x04
    1eb4:	88 3f       	cpi	r24, 0xF8	; 248
    1eb6:	3f ef       	ldi	r19, 0xFF	; 255
    1eb8:	93 07       	cpc	r25, r19
    1eba:	34 f4       	brge	.+12     	; 0x1ec8 <.L106>

00001ebc <.Loc.400>:
            //stuur naar rechts
            Motor_1_set_power(20);
    1ebc:	84 e1       	ldi	r24, 0x14	; 20
    1ebe:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001ec2 <.Loc.401>:
            Motor_2_set_power(50);
    1ec2:	82 e3       	ldi	r24, 0x32	; 50
    1ec4:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001ec8 <.L106>:
        }
        if ( -1 < Difference && Difference < 1){
    1ec8:	8b 81       	ldd	r24, Y+3	; 0x03
    1eca:	9c 81       	ldd	r25, Y+4	; 0x04
    1ecc:	99 23       	and	r25, r25
    1ece:	5c f0       	brlt	.+22     	; 0x1ee6 <.L107>

00001ed0 <.Loc.403>:
    1ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ed2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ed4:	00 97       	sbiw	r24, 0x00	; 0
    1ed6:	09 f0       	breq	.+2      	; 0x1eda <.Loc.404>

00001ed8 <L0^A>:
    1ed8:	34 f4       	brge	.+12     	; 0x1ee6 <.L107>

00001eda <.Loc.404>:
            Motor_1_set_power(50);
    1eda:	82 e3       	ldi	r24, 0x32	; 50
    1edc:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001ee0 <.Loc.405>:
            Motor_2_set_power(50);
    1ee0:	82 e3       	ldi	r24, 0x32	; 50
    1ee2:	0e 94 3f 06 	call	0xc7e	; 0xc7e <Motor_2_set_power>

00001ee6 <.L107>:
    for(int i = 0; i<RijAfstand; i++){
    1ee6:	89 81       	ldd	r24, Y+1	; 0x01
    1ee8:	9a 81       	ldd	r25, Y+2	; 0x02
    1eea:	01 96       	adiw	r24, 0x01	; 1
    1eec:	9a 83       	std	Y+2, r25	; 0x02
    1eee:	89 83       	std	Y+1, r24	; 0x01

00001ef0 <.L100>:
    1ef0:	29 81       	ldd	r18, Y+1	; 0x01
    1ef2:	3a 81       	ldd	r19, Y+2	; 0x02
    1ef4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ef6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ef8:	28 17       	cp	r18, r24
    1efa:	39 07       	cpc	r19, r25
    1efc:	0c f4       	brge	.+2      	; 0x1f00 <.LBE58>

00001efe <L0^A>:
    1efe:	38 cf       	rjmp	.-400    	; 0x1d70 <.L108>

00001f00 <.LBE58>:
        }
    }


}
    1f00:	00 00       	nop
    1f02:	00 00       	nop
    1f04:	a4 96       	adiw	r28, 0x24	; 36
    1f06:	0f b6       	in	r0, 0x3f	; 63
    1f08:	f8 94       	cli
    1f0a:	de bf       	out	0x3e, r29	; 62
    1f0c:	0f be       	out	0x3f, r0	; 63
    1f0e:	cd bf       	out	0x3d, r28	; 61
    1f10:	df 91       	pop	r29
    1f12:	cf 91       	pop	r28
    1f14:	08 95       	ret

00001f16 <BochtMaken>:
void BochtMaken(void){
    1f16:	cf 93       	push	r28
    1f18:	df 93       	push	r29
    1f1a:	cd b7       	in	r28, 0x3d	; 61
    1f1c:	de b7       	in	r29, 0x3e	; 62

00001f1e <.Loc.410>:
    wait_ms(500);
    1f1e:	84 ef       	ldi	r24, 0xF4	; 244
    1f20:	91 e0       	ldi	r25, 0x01	; 1
    1f22:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <wait_ms>

00001f26 <.Loc.411>:
    Drive(130, 360);
    1f26:	68 e6       	ldi	r22, 0x68	; 104
    1f28:	71 e0       	ldi	r23, 0x01	; 1
    1f2a:	82 e8       	ldi	r24, 0x82	; 130
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <Drive>

00001f32 <.Loc.412>:
    TurnTo(450);
    1f32:	82 ec       	ldi	r24, 0xC2	; 194
    1f34:	91 e0       	ldi	r25, 0x01	; 1
    1f36:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <TurnTo>

00001f3a <.Loc.413>:
    Drive(265, 450);
    1f3a:	62 ec       	ldi	r22, 0xC2	; 194
    1f3c:	71 e0       	ldi	r23, 0x01	; 1
    1f3e:	89 e0       	ldi	r24, 0x09	; 9
    1f40:	91 e0       	ldi	r25, 0x01	; 1
    1f42:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <Drive>

00001f46 <.Loc.414>:
    TurnTo(538);
    1f46:	8a e1       	ldi	r24, 0x1A	; 26
    1f48:	92 e0       	ldi	r25, 0x02	; 2
    1f4a:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <TurnTo>

00001f4e <.Loc.415>:
    Drive(100, 538);
    1f4e:	6a e1       	ldi	r22, 0x1A	; 26
    1f50:	72 e0       	ldi	r23, 0x02	; 2
    1f52:	84 e6       	ldi	r24, 0x64	; 100
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <Drive>

00001f5a <.Loc.416>:
}
    1f5a:	00 00       	nop
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	08 95       	ret

00001f62 <initTimer>:

void initTimer(void)
{
    1f62:	cf 93       	push	r28
    1f64:	df 93       	push	r29
    1f66:	cd b7       	in	r28, 0x3d	; 61
    1f68:	de b7       	in	r29, 0x3e	; 62

00001f6a <.Loc.418>:
    TCCR4A = 0;
    1f6a:	80 ea       	ldi	r24, 0xA0	; 160
    1f6c:	90 e0       	ldi	r25, 0x00	; 0

00001f6e <.Loc.419>:
    1f6e:	fc 01       	movw	r30, r24
    1f70:	10 82       	st	Z, r1

00001f72 <.Loc.420>:
    TCCR4B |=  (1<<CS41);
    1f72:	81 ea       	ldi	r24, 0xA1	; 161
    1f74:	90 e0       	ldi	r25, 0x00	; 0
    1f76:	fc 01       	movw	r30, r24
    1f78:	20 81       	ld	r18, Z
    1f7a:	81 ea       	ldi	r24, 0xA1	; 161
    1f7c:	90 e0       	ldi	r25, 0x00	; 0

00001f7e <.Loc.421>:
    1f7e:	22 60       	ori	r18, 0x02	; 2
    1f80:	fc 01       	movw	r30, r24
    1f82:	20 83       	st	Z, r18

00001f84 <.Loc.422>:
}
    1f84:	00 00       	nop
    1f86:	df 91       	pop	r29
    1f88:	cf 91       	pop	r28
    1f8a:	08 95       	ret

00001f8c <wait_ms>:

void wait_ms(int ms){
    1f8c:	cf 93       	push	r28
    1f8e:	df 93       	push	r29
    1f90:	00 d0       	rcall	.+0      	; 0x1f92 <L0^A>

00001f92 <L0^A>:
    1f92:	00 d0       	rcall	.+0      	; 0x1f94 <L0^A>

00001f94 <L0^A>:
    1f94:	cd b7       	in	r28, 0x3d	; 61
    1f96:	de b7       	in	r29, 0x3e	; 62
    1f98:	9e 83       	std	Y+6, r25	; 0x06
    1f9a:	8d 83       	std	Y+5, r24	; 0x05

00001f9c <.Loc.424>:
    int WachtTijd = ms/33;
    1f9c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f9e:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa0:	21 e2       	ldi	r18, 0x21	; 33
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	b9 01       	movw	r22, r18
    1fa6:	0e 94 f8 17 	call	0x2ff0	; 0x2ff0 <__divmodhi4>
    1faa:	cb 01       	movw	r24, r22
    1fac:	9c 83       	std	Y+4, r25	; 0x04
    1fae:	8b 83       	std	Y+3, r24	; 0x03

00001fb0 <.Loc.425>:
    int teller =0;
    1fb0:	1a 82       	std	Y+2, r1	; 0x02
    1fb2:	19 82       	std	Y+1, r1	; 0x01

00001fb4 <.Loc.426>:
    while(teller < WachtTijd)
    1fb4:	14 c0       	rjmp	.+40     	; 0x1fde <.L113>

00001fb6 <.L114>:
    {
        if (TIFR4 & (1<<TOV4))
    1fb6:	89 e3       	ldi	r24, 0x39	; 57
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	fc 01       	movw	r30, r24
    1fbc:	80 81       	ld	r24, Z

00001fbe <.Loc.428>:
    1fbe:	88 2f       	mov	r24, r24
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	81 70       	andi	r24, 0x01	; 1
    1fc4:	99 27       	eor	r25, r25

00001fc6 <.Loc.429>:
    1fc6:	00 97       	sbiw	r24, 0x00	; 0
    1fc8:	51 f0       	breq	.+20     	; 0x1fde <.L113>

00001fca <.Loc.430>:
        {
            TIFR4 = (1<<TOV4);
    1fca:	89 e3       	ldi	r24, 0x39	; 57
    1fcc:	90 e0       	ldi	r25, 0x00	; 0

00001fce <.Loc.431>:
    1fce:	21 e0       	ldi	r18, 0x01	; 1
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	20 83       	st	Z, r18

00001fd4 <.Loc.432>:
            teller++;
    1fd4:	89 81       	ldd	r24, Y+1	; 0x01
    1fd6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fd8:	01 96       	adiw	r24, 0x01	; 1
    1fda:	9a 83       	std	Y+2, r25	; 0x02
    1fdc:	89 83       	std	Y+1, r24	; 0x01

00001fde <.L113>:
    while(teller < WachtTijd)
    1fde:	29 81       	ldd	r18, Y+1	; 0x01
    1fe0:	3a 81       	ldd	r19, Y+2	; 0x02
    1fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    1fe4:	9c 81       	ldd	r25, Y+4	; 0x04
    1fe6:	28 17       	cp	r18, r24
    1fe8:	39 07       	cpc	r19, r25
    1fea:	2c f3       	brlt	.-54     	; 0x1fb6 <.L114>

00001fec <.Loc.434>:
        }
    }
}
    1fec:	00 00       	nop
    1fee:	00 00       	nop
    1ff0:	0f 90       	pop	r0
    1ff2:	0f 90       	pop	r0
    1ff4:	0f 90       	pop	r0
    1ff6:	0f 90       	pop	r0
    1ff8:	0f 90       	pop	r0
    1ffa:	0f 90       	pop	r0
    1ffc:	df 91       	pop	r29
    1ffe:	cf 91       	pop	r28
    2000:	08 95       	ret

00002002 <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    2002:	cf 93       	push	r28
    2004:	df 93       	push	r29
    2006:	cd b7       	in	r28, 0x3d	; 61
    2008:	de b7       	in	r29, 0x3e	; 62

0000200a <.Loc.436>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    200a:	81 e0       	ldi	r24, 0x01	; 1
    200c:	91 e0       	ldi	r25, 0x01	; 1
    200e:	fc 01       	movw	r30, r24
    2010:	20 81       	ld	r18, Z
    2012:	81 e0       	ldi	r24, 0x01	; 1
    2014:	91 e0       	ldi	r25, 0x01	; 1

00002016 <.Loc.437>:
    2016:	20 62       	ori	r18, 0x20	; 32
    2018:	fc 01       	movw	r30, r24
    201a:	20 83       	st	Z, r18

0000201c <.Loc.438>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    201c:	81 e0       	ldi	r24, 0x01	; 1
    201e:	91 e0       	ldi	r25, 0x01	; 1
    2020:	fc 01       	movw	r30, r24
    2022:	20 81       	ld	r18, Z
    2024:	81 e0       	ldi	r24, 0x01	; 1
    2026:	91 e0       	ldi	r25, 0x01	; 1

00002028 <.Loc.439>:
    2028:	20 61       	ori	r18, 0x10	; 16
    202a:	fc 01       	movw	r30, r24
    202c:	20 83       	st	Z, r18

0000202e <.Loc.440>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    202e:	83 e3       	ldi	r24, 0x33	; 51
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	fc 01       	movw	r30, r24
    2034:	20 81       	ld	r18, Z
    2036:	83 e3       	ldi	r24, 0x33	; 51
    2038:	90 e0       	ldi	r25, 0x00	; 0

0000203a <.Loc.441>:
    203a:	20 62       	ori	r18, 0x20	; 32
    203c:	fc 01       	movw	r30, r24
    203e:	20 83       	st	Z, r18

00002040 <.Loc.442>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    2040:	82 e0       	ldi	r24, 0x02	; 2
    2042:	91 e0       	ldi	r25, 0x01	; 1
    2044:	fc 01       	movw	r30, r24
    2046:	20 81       	ld	r18, Z

00002048 <.Loc.443>:
    2048:	82 e0       	ldi	r24, 0x02	; 2
    204a:	91 e0       	ldi	r25, 0x01	; 1

0000204c <.Loc.444>:
    204c:	2f 7e       	andi	r18, 0xEF	; 239
    204e:	fc 01       	movw	r30, r24
    2050:	20 83       	st	Z, r18

00002052 <.Loc.445>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    2052:	84 e3       	ldi	r24, 0x34	; 52
    2054:	90 e0       	ldi	r25, 0x00	; 0
    2056:	fc 01       	movw	r30, r24
    2058:	20 81       	ld	r18, Z

0000205a <.Loc.446>:
    205a:	84 e3       	ldi	r24, 0x34	; 52
    205c:	90 e0       	ldi	r25, 0x00	; 0

0000205e <.Loc.447>:
    205e:	2f 7d       	andi	r18, 0xDF	; 223
    2060:	fc 01       	movw	r30, r24
    2062:	20 83       	st	Z, r18

00002064 <.Loc.448>:
}
    2064:	00 00       	nop
    2066:	df 91       	pop	r29
    2068:	cf 91       	pop	r28
    206a:	08 95       	ret

0000206c <send_data>:

void send_data(char data)
{
    206c:	cf 93       	push	r28
    206e:	df 93       	push	r29
    2070:	00 d0       	rcall	.+0      	; 0x2072 <L0^A>

00002072 <L0^A>:
    2072:	0f 92       	push	r0
    2074:	0f 92       	push	r0
    2076:	cd b7       	in	r28, 0x3d	; 61
    2078:	de b7       	in	r29, 0x3e	; 62
    207a:	8d 83       	std	Y+5, r24	; 0x05

0000207c <.LBB60>:
	for (unsigned i = 0; i < 8; i++)
    207c:	1a 82       	std	Y+2, r1	; 0x02
    207e:	19 82       	std	Y+1, r1	; 0x01

00002080 <.Loc.451>:
    2080:	39 c0       	rjmp	.+114    	; 0x20f4 <.L117>

00002082 <.L120>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    2082:	8d 81       	ldd	r24, Y+5	; 0x05
    2084:	08 2e       	mov	r0, r24
    2086:	00 0c       	add	r0, r0
    2088:	99 0b       	sbc	r25, r25

0000208a <.Loc.453>:
    208a:	81 70       	andi	r24, 0x01	; 1
    208c:	99 27       	eor	r25, r25
    208e:	9c 83       	std	Y+4, r25	; 0x04
    2090:	8b 83       	std	Y+3, r24	; 0x03

00002092 <.Loc.454>:
		data >>= 1;
    2092:	8d 81       	ldd	r24, Y+5	; 0x05
    2094:	85 95       	asr	r24
    2096:	8d 83       	std	Y+5, r24	; 0x05

00002098 <.Loc.455>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    2098:	8b 81       	ldd	r24, Y+3	; 0x03
    209a:	9c 81       	ldd	r25, Y+4	; 0x04
    209c:	00 97       	sbiw	r24, 0x00	; 0
    209e:	51 f0       	breq	.+20     	; 0x20b4 <.L118>

000020a0 <.Loc.456>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    20a0:	82 e0       	ldi	r24, 0x02	; 2
    20a2:	91 e0       	ldi	r25, 0x01	; 1
    20a4:	fc 01       	movw	r30, r24
    20a6:	20 81       	ld	r18, Z
    20a8:	82 e0       	ldi	r24, 0x02	; 2
    20aa:	91 e0       	ldi	r25, 0x01	; 1

000020ac <.Loc.457>:
    20ac:	20 62       	ori	r18, 0x20	; 32
    20ae:	fc 01       	movw	r30, r24
    20b0:	20 83       	st	Z, r18
    20b2:	09 c0       	rjmp	.+18     	; 0x20c6 <.L119>

000020b4 <.L118>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    20b4:	82 e0       	ldi	r24, 0x02	; 2
    20b6:	91 e0       	ldi	r25, 0x01	; 1
    20b8:	fc 01       	movw	r30, r24
    20ba:	20 81       	ld	r18, Z

000020bc <.Loc.459>:
    20bc:	82 e0       	ldi	r24, 0x02	; 2
    20be:	91 e0       	ldi	r25, 0x01	; 1

000020c0 <.Loc.460>:
    20c0:	2f 7d       	andi	r18, 0xDF	; 223
    20c2:	fc 01       	movw	r30, r24
    20c4:	20 83       	st	Z, r18

000020c6 <.L119>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    20c6:	82 e0       	ldi	r24, 0x02	; 2
    20c8:	91 e0       	ldi	r25, 0x01	; 1
    20ca:	fc 01       	movw	r30, r24
    20cc:	20 81       	ld	r18, Z
    20ce:	82 e0       	ldi	r24, 0x02	; 2
    20d0:	91 e0       	ldi	r25, 0x01	; 1

000020d2 <.Loc.462>:
    20d2:	20 61       	ori	r18, 0x10	; 16
    20d4:	fc 01       	movw	r30, r24
    20d6:	20 83       	st	Z, r18

000020d8 <.Loc.463>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    20d8:	82 e0       	ldi	r24, 0x02	; 2
    20da:	91 e0       	ldi	r25, 0x01	; 1
    20dc:	fc 01       	movw	r30, r24
    20de:	20 81       	ld	r18, Z

000020e0 <.Loc.464>:
    20e0:	82 e0       	ldi	r24, 0x02	; 2
    20e2:	91 e0       	ldi	r25, 0x01	; 1

000020e4 <.Loc.465>:
    20e4:	2f 7e       	andi	r18, 0xEF	; 239
    20e6:	fc 01       	movw	r30, r24
    20e8:	20 83       	st	Z, r18

000020ea <.LBE61>:
	for (unsigned i = 0; i < 8; i++)
    20ea:	89 81       	ldd	r24, Y+1	; 0x01
    20ec:	9a 81       	ldd	r25, Y+2	; 0x02
    20ee:	01 96       	adiw	r24, 0x01	; 1
    20f0:	9a 83       	std	Y+2, r25	; 0x02
    20f2:	89 83       	std	Y+1, r24	; 0x01

000020f4 <.L117>:
    20f4:	89 81       	ldd	r24, Y+1	; 0x01
    20f6:	9a 81       	ldd	r25, Y+2	; 0x02
    20f8:	87 30       	cpi	r24, 0x07	; 7
    20fa:	91 05       	cpc	r25, r1
    20fc:	11 f2       	breq	.-124    	; 0x2082 <.L120>
    20fe:	08 f2       	brcs	.-126    	; 0x2082 <.L120>

00002100 <.LBE60>:
	}
}
    2100:	00 00       	nop
    2102:	00 00       	nop
    2104:	0f 90       	pop	r0
    2106:	0f 90       	pop	r0
    2108:	0f 90       	pop	r0
    210a:	0f 90       	pop	r0
    210c:	0f 90       	pop	r0
    210e:	df 91       	pop	r29
    2110:	cf 91       	pop	r28
    2112:	08 95       	ret

00002114 <send_enable>:

void send_enable(int display_nummer)
{
    2114:	cf 93       	push	r28
    2116:	df 93       	push	r29
    2118:	0f 92       	push	r0
    211a:	0f 92       	push	r0
    211c:	cd b7       	in	r28, 0x3d	; 61
    211e:	de b7       	in	r29, 0x3e	; 62
    2120:	9a 83       	std	Y+2, r25	; 0x02
    2122:	89 83       	std	Y+1, r24	; 0x01

00002124 <.Loc.470>:
	send_data(0x10 << display_nummer);
    2124:	80 e1       	ldi	r24, 0x10	; 16
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	09 80       	ldd	r0, Y+1	; 0x01
    212a:	02 c0       	rjmp	.+4      	; 0x2130 <.L2^B1>

0000212c <.L1^B5>:
    212c:	88 0f       	add	r24, r24
    212e:	99 1f       	adc	r25, r25

00002130 <.L2^B1>:
    2130:	0a 94       	dec	r0
    2132:	e2 f7       	brpl	.-8      	; 0x212c <.L1^B5>

00002134 <.Loc.471>:
    2134:	0e 94 36 10 	call	0x206c	; 0x206c <send_data>

00002138 <.Loc.472>:
}
    2138:	00 00       	nop
    213a:	0f 90       	pop	r0
    213c:	0f 90       	pop	r0
    213e:	df 91       	pop	r29
    2140:	cf 91       	pop	r28
    2142:	08 95       	ret

00002144 <display>:

void display(char data, int display_nummer)
{
    2144:	cf 93       	push	r28
    2146:	df 93       	push	r29
    2148:	00 d0       	rcall	.+0      	; 0x214a <L0^A>

0000214a <L0^A>:
    214a:	cd b7       	in	r28, 0x3d	; 61
    214c:	de b7       	in	r29, 0x3e	; 62
    214e:	89 83       	std	Y+1, r24	; 0x01
    2150:	7b 83       	std	Y+3, r23	; 0x03
    2152:	6a 83       	std	Y+2, r22	; 0x02

00002154 <.Loc.474>:
	send_data(data);
    2154:	89 81       	ldd	r24, Y+1	; 0x01
    2156:	0e 94 36 10 	call	0x206c	; 0x206c <send_data>

0000215a <.Loc.475>:
	send_enable(display_nummer);
    215a:	8a 81       	ldd	r24, Y+2	; 0x02
    215c:	9b 81       	ldd	r25, Y+3	; 0x03
    215e:	0e 94 8a 10 	call	0x2114	; 0x2114 <send_enable>

00002162 <.Loc.476>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    2162:	84 e3       	ldi	r24, 0x34	; 52
    2164:	90 e0       	ldi	r25, 0x00	; 0
    2166:	fc 01       	movw	r30, r24
    2168:	20 81       	ld	r18, Z
    216a:	84 e3       	ldi	r24, 0x34	; 52
    216c:	90 e0       	ldi	r25, 0x00	; 0

0000216e <.Loc.477>:
    216e:	20 62       	ori	r18, 0x20	; 32
    2170:	fc 01       	movw	r30, r24
    2172:	20 83       	st	Z, r18

00002174 <.Loc.478>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    2174:	84 e3       	ldi	r24, 0x34	; 52
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	fc 01       	movw	r30, r24
    217a:	20 81       	ld	r18, Z

0000217c <.Loc.479>:
    217c:	84 e3       	ldi	r24, 0x34	; 52
    217e:	90 e0       	ldi	r25, 0x00	; 0

00002180 <.Loc.480>:
    2180:	2f 7d       	andi	r18, 0xDF	; 223
    2182:	fc 01       	movw	r30, r24
    2184:	20 83       	st	Z, r18

00002186 <.Loc.481>:
}
    2186:	00 00       	nop
    2188:	0f 90       	pop	r0
    218a:	0f 90       	pop	r0
    218c:	0f 90       	pop	r0
    218e:	df 91       	pop	r29
    2190:	cf 91       	pop	r28
    2192:	08 95       	ret

00002194 <display_getal>:

void display_getal(unsigned int getal)
{
    2194:	cf 93       	push	r28
    2196:	df 93       	push	r29
    2198:	cd b7       	in	r28, 0x3d	; 61
    219a:	de b7       	in	r29, 0x3e	; 62
    219c:	a6 97       	sbiw	r28, 0x26	; 38
    219e:	0f b6       	in	r0, 0x3f	; 63
    21a0:	f8 94       	cli
    21a2:	de bf       	out	0x3e, r29	; 62
    21a4:	0f be       	out	0x3f, r0	; 63
    21a6:	cd bf       	out	0x3d, r28	; 61
    21a8:	9a 8b       	std	Y+18, r25	; 0x12
    21aa:	89 8b       	std	Y+17, r24	; 0x11

000021ac <.LBB62>:
	for (int i = 0; i < 4; i++)
    21ac:	1a 82       	std	Y+2, r1	; 0x02
    21ae:	19 82       	std	Y+1, r1	; 0x01

000021b0 <.Loc.484>:
    21b0:	cc c0       	rjmp	.+408    	; 0x234a <.L124>

000021b2 <.L133>:
	{
		display(segmentcodes[getal%10], i);
    21b2:	49 89       	ldd	r20, Y+17	; 0x11
    21b4:	5a 89       	ldd	r21, Y+18	; 0x12
    21b6:	9a 01       	movw	r18, r20
    21b8:	ad ec       	ldi	r26, 0xCD	; 205
    21ba:	bc ec       	ldi	r27, 0xCC	; 204
    21bc:	0e 94 2b 18 	call	0x3056	; 0x3056 <__umulhisi3>
    21c0:	9c 01       	movw	r18, r24
    21c2:	36 95       	lsr	r19
    21c4:	27 95       	ror	r18
    21c6:	36 95       	lsr	r19
    21c8:	27 95       	ror	r18
    21ca:	36 95       	lsr	r19
    21cc:	27 95       	ror	r18
    21ce:	c9 01       	movw	r24, r18
    21d0:	88 0f       	add	r24, r24
    21d2:	99 1f       	adc	r25, r25
    21d4:	88 0f       	add	r24, r24
    21d6:	99 1f       	adc	r25, r25
    21d8:	82 0f       	add	r24, r18
    21da:	93 1f       	adc	r25, r19
    21dc:	88 0f       	add	r24, r24
    21de:	99 1f       	adc	r25, r25
    21e0:	9a 01       	movw	r18, r20
    21e2:	28 1b       	sub	r18, r24
    21e4:	39 0b       	sbc	r19, r25

000021e6 <.Loc.486>:
    21e6:	c9 01       	movw	r24, r18
    21e8:	88 0f       	add	r24, r24
    21ea:	99 1f       	adc	r25, r25
    21ec:	8c 5f       	subi	r24, 0xFC	; 252
    21ee:	9d 4f       	sbci	r25, 0xFD	; 253
    21f0:	dc 01       	movw	r26, r24
    21f2:	8d 91       	ld	r24, X+
    21f4:	9c 91       	ld	r25, X

000021f6 <.Loc.487>:
    21f6:	28 2f       	mov	r18, r24
    21f8:	89 81       	ldd	r24, Y+1	; 0x01
    21fa:	9a 81       	ldd	r25, Y+2	; 0x02
    21fc:	bc 01       	movw	r22, r24
    21fe:	82 2f       	mov	r24, r18
    2200:	0e 94 a2 10 	call	0x2144	; 0x2144 <display>

00002204 <.Loc.488>:
		getal /= 10;
    2204:	89 89       	ldd	r24, Y+17	; 0x11
    2206:	9a 89       	ldd	r25, Y+18	; 0x12
    2208:	9c 01       	movw	r18, r24
    220a:	ad ec       	ldi	r26, 0xCD	; 205
    220c:	bc ec       	ldi	r27, 0xCC	; 204
    220e:	0e 94 2b 18 	call	0x3056	; 0x3056 <__umulhisi3>
    2212:	96 95       	lsr	r25
    2214:	87 95       	ror	r24
    2216:	96 95       	lsr	r25
    2218:	87 95       	ror	r24
    221a:	96 95       	lsr	r25
    221c:	87 95       	ror	r24
    221e:	9a 8b       	std	Y+18, r25	; 0x12
    2220:	89 8b       	std	Y+17, r24	; 0x11
    2222:	80 e0       	ldi	r24, 0x00	; 0
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	a0 e8       	ldi	r26, 0x80	; 128
    2228:	bf e3       	ldi	r27, 0x3F	; 63
    222a:	8b 83       	std	Y+3, r24	; 0x03
    222c:	9c 83       	std	Y+4, r25	; 0x04
    222e:	ad 83       	std	Y+5, r26	; 0x05
    2230:	be 83       	std	Y+6, r27	; 0x06

00002232 <.LBB63>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2232:	20 e0       	ldi	r18, 0x00	; 0
    2234:	30 e0       	ldi	r19, 0x00	; 0
    2236:	4a e7       	ldi	r20, 0x7A	; 122
    2238:	55 e4       	ldi	r21, 0x45	; 69
    223a:	6b 81       	ldd	r22, Y+3	; 0x03
    223c:	7c 81       	ldd	r23, Y+4	; 0x04
    223e:	8d 81       	ldd	r24, Y+5	; 0x05
    2240:	9e 81       	ldd	r25, Y+6	; 0x06
    2242:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2246:	6f 8b       	std	Y+23, r22	; 0x17
    2248:	78 8f       	std	Y+24, r23	; 0x18
    224a:	89 8f       	std	Y+25, r24	; 0x19
    224c:	9a 8f       	std	Y+26, r25	; 0x1a
    224e:	8f 89       	ldd	r24, Y+23	; 0x17
    2250:	98 8d       	ldd	r25, Y+24	; 0x18
    2252:	a9 8d       	ldd	r26, Y+25	; 0x19
    2254:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2256:	8f 83       	std	Y+7, r24	; 0x07
    2258:	98 87       	std	Y+8, r25	; 0x08
    225a:	a9 87       	std	Y+9, r26	; 0x09
    225c:	ba 87       	std	Y+10, r27	; 0x0a

0000225e <.Loc.490>:
	if (__tmp < 1.0)
    225e:	20 e0       	ldi	r18, 0x00	; 0
    2260:	30 e0       	ldi	r19, 0x00	; 0
    2262:	40 e8       	ldi	r20, 0x80	; 128
    2264:	5f e3       	ldi	r21, 0x3F	; 63
    2266:	6f 81       	ldd	r22, Y+7	; 0x07
    2268:	78 85       	ldd	r23, Y+8	; 0x08
    226a:	89 85       	ldd	r24, Y+9	; 0x09
    226c:	9a 85       	ldd	r25, Y+10	; 0x0a
    226e:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    2272:	88 23       	and	r24, r24
    2274:	2c f4       	brge	.+10     	; 0x2280 <.L136>

00002276 <.Loc.491>:
		__ticks = 1;
    2276:	81 e0       	ldi	r24, 0x01	; 1
    2278:	90 e0       	ldi	r25, 0x00	; 0
    227a:	9c 87       	std	Y+12, r25	; 0x0c
    227c:	8b 87       	std	Y+11, r24	; 0x0b
    227e:	55 c0       	rjmp	.+170    	; 0x232a <.L127>

00002280 <.L136>:
	else if (__tmp > 65535)
    2280:	20 e0       	ldi	r18, 0x00	; 0
    2282:	3f ef       	ldi	r19, 0xFF	; 255
    2284:	4f e7       	ldi	r20, 0x7F	; 127
    2286:	57 e4       	ldi	r21, 0x47	; 71
    2288:	6f 81       	ldd	r22, Y+7	; 0x07
    228a:	78 85       	ldd	r23, Y+8	; 0x08
    228c:	89 85       	ldd	r24, Y+9	; 0x09
    228e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2290:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2294:	88 23       	and	r24, r24
    2296:	d9 f1       	breq	.+118    	; 0x230e <.L137>
    2298:	d4 f1       	brlt	.+116    	; 0x230e <.L137>

0000229a <.Loc.493>:
		__ticks = (uint16_t) (__ms * 10.0);
    229a:	20 e0       	ldi	r18, 0x00	; 0
    229c:	30 e0       	ldi	r19, 0x00	; 0
    229e:	40 e2       	ldi	r20, 0x20	; 32
    22a0:	51 e4       	ldi	r21, 0x41	; 65
    22a2:	6b 81       	ldd	r22, Y+3	; 0x03
    22a4:	7c 81       	ldd	r23, Y+4	; 0x04
    22a6:	8d 81       	ldd	r24, Y+5	; 0x05
    22a8:	9e 81       	ldd	r25, Y+6	; 0x06
    22aa:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    22ae:	6b 8f       	std	Y+27, r22	; 0x1b
    22b0:	7c 8f       	std	Y+28, r23	; 0x1c
    22b2:	8d 8f       	std	Y+29, r24	; 0x1d
    22b4:	9e 8f       	std	Y+30, r25	; 0x1e
    22b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    22b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    22ba:	ad 8d       	ldd	r26, Y+29	; 0x1d
    22bc:	be 8d       	ldd	r27, Y+30	; 0x1e
    22be:	8b 8b       	std	Y+19, r24	; 0x13
    22c0:	9c 8b       	std	Y+20, r25	; 0x14
    22c2:	ad 8b       	std	Y+21, r26	; 0x15
    22c4:	be 8b       	std	Y+22, r27	; 0x16

000022c6 <.Loc.494>:
    22c6:	6b 89       	ldd	r22, Y+19	; 0x13
    22c8:	7c 89       	ldd	r23, Y+20	; 0x14
    22ca:	8d 89       	ldd	r24, Y+21	; 0x15
    22cc:	9e 89       	ldd	r25, Y+22	; 0x16
    22ce:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    22d2:	6f 8f       	std	Y+31, r22	; 0x1f
    22d4:	78 a3       	std	Y+32, r23	; 0x20
    22d6:	89 a3       	std	Y+33, r24	; 0x21
    22d8:	9a a3       	std	Y+34, r25	; 0x22
    22da:	af 8d       	ldd	r26, Y+31	; 0x1f
    22dc:	b8 a1       	ldd	r27, Y+32	; 0x20
    22de:	bc 87       	std	Y+12, r27	; 0x0c
    22e0:	ab 87       	std	Y+11, r26	; 0x0b

000022e2 <.Loc.495>:
		while(__ticks)
    22e2:	10 c0       	rjmp	.+32     	; 0x2304 <.L130>

000022e4 <.L131>:
    22e4:	80 e9       	ldi	r24, 0x90	; 144
    22e6:	91 e0       	ldi	r25, 0x01	; 1
    22e8:	9e 87       	std	Y+14, r25	; 0x0e
    22ea:	8d 87       	std	Y+13, r24	; 0x0d

000022ec <.LBB65>:
    22ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    22ee:	9e 85       	ldd	r25, Y+14	; 0x0e

000022f0 <.L1^B6>:
    22f0:	01 97       	sbiw	r24, 0x01	; 1
    22f2:	f1 f7       	brne	.-4      	; 0x22f0 <.L1^B6>
    22f4:	9e 87       	std	Y+14, r25	; 0x0e
    22f6:	8d 87       	std	Y+13, r24	; 0x0d

000022f8 <.Loc.497>:
	...

000022fa <.LBE65>:
			__ticks --;
    22fa:	8b 85       	ldd	r24, Y+11	; 0x0b
    22fc:	9c 85       	ldd	r25, Y+12	; 0x0c
    22fe:	01 97       	sbiw	r24, 0x01	; 1
    2300:	9c 87       	std	Y+12, r25	; 0x0c
    2302:	8b 87       	std	Y+11, r24	; 0x0b

00002304 <.L130>:
		while(__ticks)
    2304:	8b 85       	ldd	r24, Y+11	; 0x0b
    2306:	9c 85       	ldd	r25, Y+12	; 0x0c
    2308:	00 97       	sbiw	r24, 0x00	; 0
    230a:	61 f7       	brne	.-40     	; 0x22e4 <.L131>

0000230c <.Loc.500>:
		return;
    230c:	19 c0       	rjmp	.+50     	; 0x2340 <.L132>

0000230e <.L137>:
		__ticks = (uint16_t)__tmp;
    230e:	6f 81       	ldd	r22, Y+7	; 0x07
    2310:	78 85       	ldd	r23, Y+8	; 0x08
    2312:	89 85       	ldd	r24, Y+9	; 0x09
    2314:	9a 85       	ldd	r25, Y+10	; 0x0a
    2316:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    231a:	6b a3       	std	Y+35, r22	; 0x23
    231c:	7c a3       	std	Y+36, r23	; 0x24
    231e:	8d a3       	std	Y+37, r24	; 0x25
    2320:	9e a3       	std	Y+38, r25	; 0x26
    2322:	eb a1       	ldd	r30, Y+35	; 0x23
    2324:	fc a1       	ldd	r31, Y+36	; 0x24
    2326:	fc 87       	std	Y+12, r31	; 0x0c
    2328:	eb 87       	std	Y+11, r30	; 0x0b

0000232a <.L127>:
    232a:	8b 85       	ldd	r24, Y+11	; 0x0b
    232c:	9c 85       	ldd	r25, Y+12	; 0x0c
    232e:	98 8b       	std	Y+16, r25	; 0x10
    2330:	8f 87       	std	Y+15, r24	; 0x0f

00002332 <.LBB67>:
    2332:	8f 85       	ldd	r24, Y+15	; 0x0f
    2334:	98 89       	ldd	r25, Y+16	; 0x10

00002336 <.L1^B7>:
    2336:	01 97       	sbiw	r24, 0x01	; 1
    2338:	f1 f7       	brne	.-4      	; 0x2336 <.L1^B7>
    233a:	98 8b       	std	Y+16, r25	; 0x10
    233c:	8f 87       	std	Y+15, r24	; 0x0f

0000233e <.Loc.503>:
	...

00002340 <.L132>:
	for (int i = 0; i < 4; i++)
    2340:	89 81       	ldd	r24, Y+1	; 0x01
    2342:	9a 81       	ldd	r25, Y+2	; 0x02
    2344:	01 96       	adiw	r24, 0x01	; 1
    2346:	9a 83       	std	Y+2, r25	; 0x02
    2348:	89 83       	std	Y+1, r24	; 0x01

0000234a <.L124>:
    234a:	89 81       	ldd	r24, Y+1	; 0x01
    234c:	9a 81       	ldd	r25, Y+2	; 0x02
    234e:	83 30       	cpi	r24, 0x03	; 3
    2350:	91 05       	cpc	r25, r1
    2352:	09 f0       	breq	.+2      	; 0x2356 <L0^A>

00002354 <L0^A>:
    2354:	0c f4       	brge	.+2      	; 0x2358 <.LBE62>

00002356 <L0^A>:
    2356:	2d cf       	rjmp	.-422    	; 0x21b2 <.L133>

00002358 <.LBE62>:
		_delay_ms(1);   // 1 kHz
	}
}
    2358:	00 00       	nop
    235a:	00 00       	nop
    235c:	a6 96       	adiw	r28, 0x26	; 38
    235e:	0f b6       	in	r0, 0x3f	; 63
    2360:	f8 94       	cli
    2362:	de bf       	out	0x3e, r29	; 62
    2364:	0f be       	out	0x3f, r0	; 63
    2366:	cd bf       	out	0x3d, r28	; 61
    2368:	df 91       	pop	r29
    236a:	cf 91       	pop	r28
    236c:	08 95       	ret

0000236e <init_SonicSensors>:
#include "Ultra_Sonic_Front.h"
#include <avr/io.h>
#include <avr/interrupt.h>
volatile int count = 0;

void init_SonicSensors(void){
    236e:	cf 93       	push	r28
    2370:	df 93       	push	r29
    2372:	cd b7       	in	r28, 0x3d	; 61
    2374:	de b7       	in	r29, 0x3e	; 62

00002376 <.Loc.1>:
	ddr_ech_F &= ~(1<<pin_ech_F);
    2376:	87 e0       	ldi	r24, 0x07	; 7
    2378:	91 e0       	ldi	r25, 0x01	; 1
    237a:	fc 01       	movw	r30, r24
    237c:	20 81       	ld	r18, Z

0000237e <.Loc.2>:
    237e:	87 e0       	ldi	r24, 0x07	; 7
    2380:	91 e0       	ldi	r25, 0x01	; 1

00002382 <.Loc.3>:
    2382:	27 7f       	andi	r18, 0xF7	; 247
    2384:	fc 01       	movw	r30, r24
    2386:	20 83       	st	Z, r18

00002388 <.Loc.4>:
	ddr_tri_F |= (1<<pin_tri_F);
    2388:	81 e2       	ldi	r24, 0x21	; 33
    238a:	90 e0       	ldi	r25, 0x00	; 0
    238c:	fc 01       	movw	r30, r24
    238e:	20 81       	ld	r18, Z
    2390:	81 e2       	ldi	r24, 0x21	; 33
    2392:	90 e0       	ldi	r25, 0x00	; 0

00002394 <.Loc.5>:
    2394:	21 60       	ori	r18, 0x01	; 1
    2396:	fc 01       	movw	r30, r24
    2398:	20 83       	st	Z, r18

0000239a <.Loc.6>:
    port_tri_F &= ~(1<<pin_tri_F);
    239a:	82 e2       	ldi	r24, 0x22	; 34
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	fc 01       	movw	r30, r24
    23a0:	20 81       	ld	r18, Z

000023a2 <.Loc.7>:
    23a2:	82 e2       	ldi	r24, 0x22	; 34
    23a4:	90 e0       	ldi	r25, 0x00	; 0

000023a6 <.Loc.8>:
    23a6:	2e 7f       	andi	r18, 0xFE	; 254
    23a8:	fc 01       	movw	r30, r24
    23aa:	20 83       	st	Z, r18

000023ac <.Loc.9>:

	ddr_ech_R &= ~(1<<pin_ech_R);
    23ac:	87 e0       	ldi	r24, 0x07	; 7
    23ae:	91 e0       	ldi	r25, 0x01	; 1
    23b0:	fc 01       	movw	r30, r24
    23b2:	20 81       	ld	r18, Z

000023b4 <.Loc.10>:
    23b4:	87 e0       	ldi	r24, 0x07	; 7
    23b6:	91 e0       	ldi	r25, 0x01	; 1

000023b8 <.Loc.11>:
    23b8:	2d 7f       	andi	r18, 0xFD	; 253
    23ba:	fc 01       	movw	r30, r24
    23bc:	20 83       	st	Z, r18

000023be <.Loc.12>:
	ddr_tri_R |= (1<<pin_tri_R);
    23be:	81 e2       	ldi	r24, 0x21	; 33
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	fc 01       	movw	r30, r24
    23c4:	20 81       	ld	r18, Z
    23c6:	81 e2       	ldi	r24, 0x21	; 33
    23c8:	90 e0       	ldi	r25, 0x00	; 0

000023ca <.Loc.13>:
    23ca:	20 61       	ori	r18, 0x10	; 16
    23cc:	fc 01       	movw	r30, r24
    23ce:	20 83       	st	Z, r18

000023d0 <.Loc.14>:
    port_tri_R &= ~(1<<pin_tri_R);
    23d0:	82 e2       	ldi	r24, 0x22	; 34
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	fc 01       	movw	r30, r24
    23d6:	20 81       	ld	r18, Z

000023d8 <.Loc.15>:
    23d8:	82 e2       	ldi	r24, 0x22	; 34
    23da:	90 e0       	ldi	r25, 0x00	; 0

000023dc <.Loc.16>:
    23dc:	2f 7e       	andi	r18, 0xEF	; 239
    23de:	fc 01       	movw	r30, r24
    23e0:	20 83       	st	Z, r18

000023e2 <.Loc.17>:

	ddr_ech_L &= ~(1<<pin_ech_L);
    23e2:	87 e0       	ldi	r24, 0x07	; 7
    23e4:	91 e0       	ldi	r25, 0x01	; 1
    23e6:	fc 01       	movw	r30, r24
    23e8:	20 81       	ld	r18, Z

000023ea <.Loc.18>:
    23ea:	87 e0       	ldi	r24, 0x07	; 7
    23ec:	91 e0       	ldi	r25, 0x01	; 1

000023ee <.Loc.19>:
    23ee:	2b 7f       	andi	r18, 0xFB	; 251
    23f0:	fc 01       	movw	r30, r24
    23f2:	20 83       	st	Z, r18

000023f4 <.Loc.20>:
	ddr_tri_L |= (1<<pin_tri_L);
    23f4:	81 e2       	ldi	r24, 0x21	; 33
    23f6:	90 e0       	ldi	r25, 0x00	; 0
    23f8:	fc 01       	movw	r30, r24
    23fa:	20 81       	ld	r18, Z
    23fc:	81 e2       	ldi	r24, 0x21	; 33
    23fe:	90 e0       	ldi	r25, 0x00	; 0

00002400 <.Loc.21>:
    2400:	24 60       	ori	r18, 0x04	; 4
    2402:	fc 01       	movw	r30, r24
    2404:	20 83       	st	Z, r18

00002406 <.Loc.22>:
    port_tri_L &= ~(1<<pin_tri_L);
    2406:	82 e2       	ldi	r24, 0x22	; 34
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	fc 01       	movw	r30, r24
    240c:	20 81       	ld	r18, Z

0000240e <.Loc.23>:
    240e:	82 e2       	ldi	r24, 0x22	; 34
    2410:	90 e0       	ldi	r25, 0x00	; 0

00002412 <.Loc.24>:
    2412:	2b 7f       	andi	r18, 0xFB	; 251
    2414:	fc 01       	movw	r30, r24
    2416:	20 83       	st	Z, r18

00002418 <.Loc.25>:

    TCCR2A = 0;
    2418:	80 eb       	ldi	r24, 0xB0	; 176
    241a:	90 e0       	ldi	r25, 0x00	; 0

0000241c <.Loc.26>:
    241c:	fc 01       	movw	r30, r24
    241e:	10 82       	st	Z, r1

00002420 <.Loc.27>:
    TCCR2B |= (1<<CS20) ;
    2420:	81 eb       	ldi	r24, 0xB1	; 177
    2422:	90 e0       	ldi	r25, 0x00	; 0
    2424:	fc 01       	movw	r30, r24
    2426:	20 81       	ld	r18, Z
    2428:	81 eb       	ldi	r24, 0xB1	; 177
    242a:	90 e0       	ldi	r25, 0x00	; 0

0000242c <.Loc.28>:
    242c:	21 60       	ori	r18, 0x01	; 1
    242e:	fc 01       	movw	r30, r24
    2430:	20 83       	st	Z, r18

00002432 <.Loc.29>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    2432:	80 e7       	ldi	r24, 0x70	; 112
    2434:	90 e0       	ldi	r25, 0x00	; 0

00002436 <.Loc.30>:
    2436:	21 e0       	ldi	r18, 0x01	; 1
    2438:	fc 01       	movw	r30, r24
    243a:	20 83       	st	Z, r18

0000243c <.Loc.31>:
}
    243c:	00 00       	nop
    243e:	df 91       	pop	r29
    2440:	cf 91       	pop	r28
    2442:	08 95       	ret

00002444 <GetDistanceFront>:

int GetDistanceFront(void){
    2444:	cf 93       	push	r28
    2446:	df 93       	push	r29
    2448:	cd b7       	in	r28, 0x3d	; 61
    244a:	de b7       	in	r29, 0x3e	; 62
    244c:	6e 97       	sbiw	r28, 0x1e	; 30
    244e:	0f b6       	in	r0, 0x3f	; 63
    2450:	f8 94       	cli
    2452:	de bf       	out	0x3e, r29	; 62
    2454:	0f be       	out	0x3f, r0	; 63
    2456:	cd bf       	out	0x3d, r28	; 61

00002458 <.Loc.33>:
    int Distance;
    TriggerPulseFront();
    2458:	0e 94 b0 12 	call	0x2560	; 0x2560 <TriggerPulseFront>

0000245c <.Loc.34>:
	...

0000245e <.L3>:
    while ((port_ech_F & (1<<pin_ech_F)) == 0){
    245e:	86 e0       	ldi	r24, 0x06	; 6
    2460:	91 e0       	ldi	r25, 0x01	; 1
    2462:	dc 01       	movw	r26, r24
    2464:	8c 91       	ld	r24, X

00002466 <.Loc.36>:
    2466:	88 2f       	mov	r24, r24
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	88 70       	andi	r24, 0x08	; 8
    246c:	99 27       	eor	r25, r25

0000246e <.Loc.37>:
    246e:	00 97       	sbiw	r24, 0x00	; 0
    2470:	b1 f3       	breq	.-20     	; 0x245e <.L3>

00002472 <.Loc.38>:
    }
    TCNT2 = 0;
    2472:	82 eb       	ldi	r24, 0xB2	; 178
    2474:	90 e0       	ldi	r25, 0x00	; 0

00002476 <.Loc.39>:
    2476:	fc 01       	movw	r30, r24
    2478:	10 82       	st	Z, r1

0000247a <.Loc.40>:
    TIFR2 = 1<<TOV2;
    247a:	87 e3       	ldi	r24, 0x37	; 55
    247c:	90 e0       	ldi	r25, 0x00	; 0

0000247e <.Loc.41>:
    247e:	21 e0       	ldi	r18, 0x01	; 1
    2480:	dc 01       	movw	r26, r24
    2482:	2c 93       	st	X, r18

00002484 <.Loc.42>:
    count = 0;
    2484:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2488:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

0000248c <.Loc.43>:
	...

0000248e <.L4>:
    while ((port_ech_F & (1<<pin_ech_F)) != 0){
    248e:	86 e0       	ldi	r24, 0x06	; 6
    2490:	91 e0       	ldi	r25, 0x01	; 1
    2492:	fc 01       	movw	r30, r24
    2494:	80 81       	ld	r24, Z

00002496 <.Loc.45>:
    2496:	88 2f       	mov	r24, r24
    2498:	90 e0       	ldi	r25, 0x00	; 0
    249a:	88 70       	andi	r24, 0x08	; 8
    249c:	99 27       	eor	r25, r25

0000249e <.Loc.46>:
    249e:	00 97       	sbiw	r24, 0x00	; 0
    24a0:	b1 f7       	brne	.-20     	; 0x248e <.L4>

000024a2 <.Loc.47>:

    }
    Distance = count;
    24a2:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    24a6:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    24aa:	9a 83       	std	Y+2, r25	; 0x02
    24ac:	89 83       	std	Y+1, r24	; 0x01

000024ae <.Loc.48>:
    Distance = Distance * 0.008 * 343;
    24ae:	89 81       	ldd	r24, Y+1	; 0x01
    24b0:	9a 81       	ldd	r25, Y+2	; 0x02
    24b2:	9c 01       	movw	r18, r24
    24b4:	99 0f       	add	r25, r25
    24b6:	44 0b       	sbc	r20, r20
    24b8:	55 0b       	sbc	r21, r21
    24ba:	2f 87       	std	Y+15, r18	; 0x0f
    24bc:	38 8b       	std	Y+16, r19	; 0x10
    24be:	49 8b       	std	Y+17, r20	; 0x11
    24c0:	5a 8b       	std	Y+18, r21	; 0x12
    24c2:	6f 85       	ldd	r22, Y+15	; 0x0f
    24c4:	78 89       	ldd	r23, Y+16	; 0x10
    24c6:	89 89       	ldd	r24, Y+17	; 0x11
    24c8:	9a 89       	ldd	r25, Y+18	; 0x12
    24ca:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    24ce:	6b 83       	std	Y+3, r22	; 0x03
    24d0:	7c 83       	std	Y+4, r23	; 0x04
    24d2:	8d 83       	std	Y+5, r24	; 0x05
    24d4:	9e 83       	std	Y+6, r25	; 0x06
    24d6:	2f e6       	ldi	r18, 0x6F	; 111
    24d8:	32 e1       	ldi	r19, 0x12	; 18
    24da:	43 e0       	ldi	r20, 0x03	; 3
    24dc:	5c e3       	ldi	r21, 0x3C	; 60
    24de:	6b 81       	ldd	r22, Y+3	; 0x03
    24e0:	7c 81       	ldd	r23, Y+4	; 0x04
    24e2:	8d 81       	ldd	r24, Y+5	; 0x05
    24e4:	9e 81       	ldd	r25, Y+6	; 0x06
    24e6:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    24ea:	6b 8b       	std	Y+19, r22	; 0x13
    24ec:	7c 8b       	std	Y+20, r23	; 0x14
    24ee:	8d 8b       	std	Y+21, r24	; 0x15
    24f0:	9e 8b       	std	Y+22, r25	; 0x16
    24f2:	8b 89       	ldd	r24, Y+19	; 0x13
    24f4:	9c 89       	ldd	r25, Y+20	; 0x14
    24f6:	ad 89       	ldd	r26, Y+21	; 0x15
    24f8:	be 89       	ldd	r27, Y+22	; 0x16
    24fa:	8f 83       	std	Y+7, r24	; 0x07
    24fc:	98 87       	std	Y+8, r25	; 0x08
    24fe:	a9 87       	std	Y+9, r26	; 0x09
    2500:	ba 87       	std	Y+10, r27	; 0x0a

00002502 <.Loc.49>:
    2502:	20 e0       	ldi	r18, 0x00	; 0
    2504:	30 e8       	ldi	r19, 0x80	; 128
    2506:	4b ea       	ldi	r20, 0xAB	; 171
    2508:	53 e4       	ldi	r21, 0x43	; 67
    250a:	6f 81       	ldd	r22, Y+7	; 0x07
    250c:	78 85       	ldd	r23, Y+8	; 0x08
    250e:	89 85       	ldd	r24, Y+9	; 0x09
    2510:	9a 85       	ldd	r25, Y+10	; 0x0a
    2512:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2516:	6f 8b       	std	Y+23, r22	; 0x17
    2518:	78 8f       	std	Y+24, r23	; 0x18
    251a:	89 8f       	std	Y+25, r24	; 0x19
    251c:	9a 8f       	std	Y+26, r25	; 0x1a
    251e:	2f 89       	ldd	r18, Y+23	; 0x17
    2520:	38 8d       	ldd	r19, Y+24	; 0x18
    2522:	49 8d       	ldd	r20, Y+25	; 0x19
    2524:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2526:	2b 87       	std	Y+11, r18	; 0x0b
    2528:	3c 87       	std	Y+12, r19	; 0x0c
    252a:	4d 87       	std	Y+13, r20	; 0x0d
    252c:	5e 87       	std	Y+14, r21	; 0x0e

0000252e <.Loc.50>:
    252e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2530:	7c 85       	ldd	r23, Y+12	; 0x0c
    2532:	8d 85       	ldd	r24, Y+13	; 0x0d
    2534:	9e 85       	ldd	r25, Y+14	; 0x0e
    2536:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    253a:	6b 8f       	std	Y+27, r22	; 0x1b
    253c:	7c 8f       	std	Y+28, r23	; 0x1c
    253e:	8d 8f       	std	Y+29, r24	; 0x1d
    2540:	9e 8f       	std	Y+30, r25	; 0x1e
    2542:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2544:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2546:	5a 83       	std	Y+2, r21	; 0x02
    2548:	49 83       	std	Y+1, r20	; 0x01

0000254a <.Loc.51>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    254a:	89 81       	ldd	r24, Y+1	; 0x01
    254c:	9a 81       	ldd	r25, Y+2	; 0x02

0000254e <.Loc.52>:
}
    254e:	6e 96       	adiw	r28, 0x1e	; 30
    2550:	0f b6       	in	r0, 0x3f	; 63
    2552:	f8 94       	cli
    2554:	de bf       	out	0x3e, r29	; 62
    2556:	0f be       	out	0x3f, r0	; 63
    2558:	cd bf       	out	0x3d, r28	; 61
    255a:	df 91       	pop	r29
    255c:	cf 91       	pop	r28
    255e:	08 95       	ret

00002560 <TriggerPulseFront>:
void TriggerPulseFront (void){
    2560:	cf 93       	push	r28
    2562:	df 93       	push	r29
    2564:	cd b7       	in	r28, 0x3d	; 61
    2566:	de b7       	in	r29, 0x3e	; 62
    2568:	c8 54       	subi	r28, 0x48	; 72
    256a:	d1 09       	sbc	r29, r1
    256c:	0f b6       	in	r0, 0x3f	; 63
    256e:	f8 94       	cli
    2570:	de bf       	out	0x3e, r29	; 62
    2572:	0f be       	out	0x3f, r0	; 63
    2574:	cd bf       	out	0x3d, r28	; 61

00002576 <.Loc.54>:
    port_tri_F |= (1<<pin_tri_F);
    2576:	82 e2       	ldi	r24, 0x22	; 34
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	dc 01       	movw	r26, r24
    257c:	2c 91       	ld	r18, X
    257e:	82 e2       	ldi	r24, 0x22	; 34
    2580:	90 e0       	ldi	r25, 0x00	; 0

00002582 <.Loc.55>:
    2582:	21 60       	ori	r18, 0x01	; 1
    2584:	fc 01       	movw	r30, r24
    2586:	20 83       	st	Z, r18
    2588:	80 e0       	ldi	r24, 0x00	; 0
    258a:	90 e0       	ldi	r25, 0x00	; 0
    258c:	a0 e2       	ldi	r26, 0x20	; 32
    258e:	b1 e4       	ldi	r27, 0x41	; 65
    2590:	89 83       	std	Y+1, r24	; 0x01
    2592:	9a 83       	std	Y+2, r25	; 0x02
    2594:	ab 83       	std	Y+3, r26	; 0x03
    2596:	bc 83       	std	Y+4, r27	; 0x04

00002598 <.LBB56>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    2598:	2b ea       	ldi	r18, 0xAB	; 171
    259a:	3a ea       	ldi	r19, 0xAA	; 170
    259c:	4a ea       	ldi	r20, 0xAA	; 170
    259e:	50 e4       	ldi	r21, 0x40	; 64
    25a0:	69 81       	ldd	r22, Y+1	; 0x01
    25a2:	7a 81       	ldd	r23, Y+2	; 0x02
    25a4:	8b 81       	ldd	r24, Y+3	; 0x03
    25a6:	9c 81       	ldd	r25, Y+4	; 0x04
    25a8:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    25ac:	6d a3       	std	Y+37, r22	; 0x25
    25ae:	7e a3       	std	Y+38, r23	; 0x26
    25b0:	8f a3       	std	Y+39, r24	; 0x27
    25b2:	98 a7       	std	Y+40, r25	; 0x28
    25b4:	8d a1       	ldd	r24, Y+37	; 0x25
    25b6:	9e a1       	ldd	r25, Y+38	; 0x26
    25b8:	af a1       	ldd	r26, Y+39	; 0x27
    25ba:	b8 a5       	ldd	r27, Y+40	; 0x28
    25bc:	8d 83       	std	Y+5, r24	; 0x05
    25be:	9e 83       	std	Y+6, r25	; 0x06
    25c0:	af 83       	std	Y+7, r26	; 0x07
    25c2:	b8 87       	std	Y+8, r27	; 0x08

000025c4 <.Loc.57>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    25c4:	20 e0       	ldi	r18, 0x00	; 0
    25c6:	30 e0       	ldi	r19, 0x00	; 0
    25c8:	40 e8       	ldi	r20, 0x80	; 128
    25ca:	50 e4       	ldi	r21, 0x40	; 64
    25cc:	69 81       	ldd	r22, Y+1	; 0x01
    25ce:	7a 81       	ldd	r23, Y+2	; 0x02
    25d0:	8b 81       	ldd	r24, Y+3	; 0x03
    25d2:	9c 81       	ldd	r25, Y+4	; 0x04
    25d4:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    25d8:	69 a7       	std	Y+41, r22	; 0x29
    25da:	7a a7       	std	Y+42, r23	; 0x2a
    25dc:	8b a7       	std	Y+43, r24	; 0x2b
    25de:	9c a7       	std	Y+44, r25	; 0x2c
    25e0:	89 a5       	ldd	r24, Y+41	; 0x29
    25e2:	9a a5       	ldd	r25, Y+42	; 0x2a
    25e4:	ab a5       	ldd	r26, Y+43	; 0x2b
    25e6:	bc a5       	ldd	r27, Y+44	; 0x2c
    25e8:	89 87       	std	Y+9, r24	; 0x09
    25ea:	9a 87       	std	Y+10, r25	; 0x0a
    25ec:	ab 87       	std	Y+11, r26	; 0x0b
    25ee:	bc 87       	std	Y+12, r27	; 0x0c

000025f0 <.Loc.58>:
	if (__tmp < 1.0)
    25f0:	20 e0       	ldi	r18, 0x00	; 0
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	40 e8       	ldi	r20, 0x80	; 128
    25f6:	5f e3       	ldi	r21, 0x3F	; 63
    25f8:	6d 81       	ldd	r22, Y+5	; 0x05
    25fa:	7e 81       	ldd	r23, Y+6	; 0x06
    25fc:	8f 81       	ldd	r24, Y+7	; 0x07
    25fe:	98 85       	ldd	r25, Y+8	; 0x08
    2600:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    2604:	88 23       	and	r24, r24
    2606:	1c f4       	brge	.+6      	; 0x260e <.L28>

00002608 <.Loc.59>:
		__ticks = 1;
    2608:	81 e0       	ldi	r24, 0x01	; 1
    260a:	8d 87       	std	Y+13, r24	; 0x0d
    260c:	e8 c0       	rjmp	.+464    	; 0x27de <.L9>

0000260e <.L28>:
	else if (__tmp2 > 65535)
    260e:	20 e0       	ldi	r18, 0x00	; 0
    2610:	3f ef       	ldi	r19, 0xFF	; 255
    2612:	4f e7       	ldi	r20, 0x7F	; 127
    2614:	57 e4       	ldi	r21, 0x47	; 71
    2616:	69 85       	ldd	r22, Y+9	; 0x09
    2618:	7a 85       	ldd	r23, Y+10	; 0x0a
    261a:	8b 85       	ldd	r24, Y+11	; 0x0b
    261c:	9c 85       	ldd	r25, Y+12	; 0x0c
    261e:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2622:	88 23       	and	r24, r24
    2624:	09 f0       	breq	.+2      	; 0x2628 <L0^A>

00002626 <L0^A>:
    2626:	0c f4       	brge	.+2      	; 0x262a <.Loc.61>

00002628 <L0^A>:
    2628:	9f c0       	rjmp	.+318    	; 0x2768 <.L29>

0000262a <.Loc.61>:
	{
		_delay_ms(__us / 1000.0);
    262a:	20 e0       	ldi	r18, 0x00	; 0
    262c:	30 e0       	ldi	r19, 0x00	; 0
    262e:	4a e7       	ldi	r20, 0x7A	; 122
    2630:	54 e4       	ldi	r21, 0x44	; 68
    2632:	69 81       	ldd	r22, Y+1	; 0x01
    2634:	7a 81       	ldd	r23, Y+2	; 0x02
    2636:	8b 81       	ldd	r24, Y+3	; 0x03
    2638:	9c 81       	ldd	r25, Y+4	; 0x04
    263a:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
    263e:	6d a7       	std	Y+45, r22	; 0x2d
    2640:	7e a7       	std	Y+46, r23	; 0x2e
    2642:	8f a7       	std	Y+47, r24	; 0x2f
    2644:	98 ab       	std	Y+48, r25	; 0x30
    2646:	8d a5       	ldd	r24, Y+45	; 0x2d
    2648:	9e a5       	ldd	r25, Y+46	; 0x2e
    264a:	af a5       	ldd	r26, Y+47	; 0x2f
    264c:	b8 a9       	ldd	r27, Y+48	; 0x30
    264e:	8e 87       	std	Y+14, r24	; 0x0e
    2650:	9f 87       	std	Y+15, r25	; 0x0f
    2652:	a8 8b       	std	Y+16, r26	; 0x10
    2654:	b9 8b       	std	Y+17, r27	; 0x11

00002656 <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2656:	20 e0       	ldi	r18, 0x00	; 0
    2658:	30 e0       	ldi	r19, 0x00	; 0
    265a:	4a e7       	ldi	r20, 0x7A	; 122
    265c:	55 e4       	ldi	r21, 0x45	; 69
    265e:	6e 85       	ldd	r22, Y+14	; 0x0e
    2660:	7f 85       	ldd	r23, Y+15	; 0x0f
    2662:	88 89       	ldd	r24, Y+16	; 0x10
    2664:	99 89       	ldd	r25, Y+17	; 0x11
    2666:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    266a:	69 ab       	std	Y+49, r22	; 0x31
    266c:	7a ab       	std	Y+50, r23	; 0x32
    266e:	8b ab       	std	Y+51, r24	; 0x33
    2670:	9c ab       	std	Y+52, r25	; 0x34
    2672:	89 a9       	ldd	r24, Y+49	; 0x31
    2674:	9a a9       	ldd	r25, Y+50	; 0x32
    2676:	ab a9       	ldd	r26, Y+51	; 0x33
    2678:	bc a9       	ldd	r27, Y+52	; 0x34
    267a:	8a 8b       	std	Y+18, r24	; 0x12
    267c:	9b 8b       	std	Y+19, r25	; 0x13
    267e:	ac 8b       	std	Y+20, r26	; 0x14
    2680:	bd 8b       	std	Y+21, r27	; 0x15

00002682 <.Loc.63>:
	if (__tmp < 1.0)
    2682:	20 e0       	ldi	r18, 0x00	; 0
    2684:	30 e0       	ldi	r19, 0x00	; 0
    2686:	40 e8       	ldi	r20, 0x80	; 128
    2688:	5f e3       	ldi	r21, 0x3F	; 63
    268a:	6a 89       	ldd	r22, Y+18	; 0x12
    268c:	7b 89       	ldd	r23, Y+19	; 0x13
    268e:	8c 89       	ldd	r24, Y+20	; 0x14
    2690:	9d 89       	ldd	r25, Y+21	; 0x15
    2692:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    2696:	88 23       	and	r24, r24
    2698:	2c f4       	brge	.+10     	; 0x26a4 <.L30>

0000269a <.Loc.64>:
		__ticks = 1;
    269a:	81 e0       	ldi	r24, 0x01	; 1
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	9f 8b       	std	Y+23, r25	; 0x17
    26a0:	8e 8b       	std	Y+22, r24	; 0x16
    26a2:	57 c0       	rjmp	.+174    	; 0x2752 <.L14>

000026a4 <.L30>:
	else if (__tmp > 65535)
    26a4:	20 e0       	ldi	r18, 0x00	; 0
    26a6:	3f ef       	ldi	r19, 0xFF	; 255
    26a8:	4f e7       	ldi	r20, 0x7F	; 127
    26aa:	57 e4       	ldi	r21, 0x47	; 71
    26ac:	6a 89       	ldd	r22, Y+18	; 0x12
    26ae:	7b 89       	ldd	r23, Y+19	; 0x13
    26b0:	8c 89       	ldd	r24, Y+20	; 0x14
    26b2:	9d 89       	ldd	r25, Y+21	; 0x15
    26b4:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    26b8:	88 23       	and	r24, r24
    26ba:	d9 f1       	breq	.+118    	; 0x2732 <.L31>
    26bc:	d4 f1       	brlt	.+116    	; 0x2732 <.L31>

000026be <.Loc.66>:
		__ticks = (uint16_t) (__ms * 10.0);
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	30 e0       	ldi	r19, 0x00	; 0
    26c2:	40 e2       	ldi	r20, 0x20	; 32
    26c4:	51 e4       	ldi	r21, 0x41	; 65
    26c6:	6e 85       	ldd	r22, Y+14	; 0x0e
    26c8:	7f 85       	ldd	r23, Y+15	; 0x0f
    26ca:	88 89       	ldd	r24, Y+16	; 0x10
    26cc:	99 89       	ldd	r25, Y+17	; 0x11
    26ce:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    26d2:	6d ab       	std	Y+53, r22	; 0x35
    26d4:	7e ab       	std	Y+54, r23	; 0x36
    26d6:	8f ab       	std	Y+55, r24	; 0x37
    26d8:	98 af       	std	Y+56, r25	; 0x38
    26da:	8d a9       	ldd	r24, Y+53	; 0x35
    26dc:	9e a9       	ldd	r25, Y+54	; 0x36
    26de:	af a9       	ldd	r26, Y+55	; 0x37
    26e0:	b8 ad       	ldd	r27, Y+56	; 0x38
    26e2:	89 a3       	std	Y+33, r24	; 0x21
    26e4:	9a a3       	std	Y+34, r25	; 0x22
    26e6:	ab a3       	std	Y+35, r26	; 0x23
    26e8:	bc a3       	std	Y+36, r27	; 0x24

000026ea <.Loc.67>:
    26ea:	69 a1       	ldd	r22, Y+33	; 0x21
    26ec:	7a a1       	ldd	r23, Y+34	; 0x22
    26ee:	8b a1       	ldd	r24, Y+35	; 0x23
    26f0:	9c a1       	ldd	r25, Y+36	; 0x24
    26f2:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    26f6:	69 af       	std	Y+57, r22	; 0x39
    26f8:	7a af       	std	Y+58, r23	; 0x3a
    26fa:	8b af       	std	Y+59, r24	; 0x3b
    26fc:	9c af       	std	Y+60, r25	; 0x3c
    26fe:	a9 ad       	ldd	r26, Y+57	; 0x39
    2700:	ba ad       	ldd	r27, Y+58	; 0x3a
    2702:	bf 8b       	std	Y+23, r27	; 0x17
    2704:	ae 8b       	std	Y+22, r26	; 0x16

00002706 <.Loc.68>:
		while(__ticks)
    2706:	10 c0       	rjmp	.+32     	; 0x2728 <.L17>

00002708 <.L18>:
    2708:	80 e9       	ldi	r24, 0x90	; 144
    270a:	91 e0       	ldi	r25, 0x01	; 1
    270c:	99 8f       	std	Y+25, r25	; 0x19
    270e:	88 8f       	std	Y+24, r24	; 0x18

00002710 <.LBB60>:
    2710:	88 8d       	ldd	r24, Y+24	; 0x18
    2712:	99 8d       	ldd	r25, Y+25	; 0x19

00002714 <.L1^B1>:
    2714:	01 97       	sbiw	r24, 0x01	; 1
    2716:	f1 f7       	brne	.-4      	; 0x2714 <.L1^B1>
    2718:	99 8f       	std	Y+25, r25	; 0x19
    271a:	88 8f       	std	Y+24, r24	; 0x18

0000271c <.Loc.70>:
	...

0000271e <.LBE60>:
			__ticks --;
    271e:	8e 89       	ldd	r24, Y+22	; 0x16
    2720:	9f 89       	ldd	r25, Y+23	; 0x17
    2722:	01 97       	sbiw	r24, 0x01	; 1
    2724:	9f 8b       	std	Y+23, r25	; 0x17
    2726:	8e 8b       	std	Y+22, r24	; 0x16

00002728 <.L17>:
		while(__ticks)
    2728:	8e 89       	ldd	r24, Y+22	; 0x16
    272a:	9f 89       	ldd	r25, Y+23	; 0x17
    272c:	00 97       	sbiw	r24, 0x00	; 0
    272e:	61 f7       	brne	.-40     	; 0x2708 <.L18>

00002730 <.Loc.73>:
		return;
    2730:	56 c0       	rjmp	.+172    	; 0x27de <.L9>

00002732 <.L31>:
		__ticks = (uint16_t)__tmp;
    2732:	6a 89       	ldd	r22, Y+18	; 0x12
    2734:	7b 89       	ldd	r23, Y+19	; 0x13
    2736:	8c 89       	ldd	r24, Y+20	; 0x14
    2738:	9d 89       	ldd	r25, Y+21	; 0x15
    273a:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    273e:	21 96       	adiw	r28, 0x01	; 1
    2740:	6c af       	std	Y+60, r22	; 0x3c
    2742:	7d af       	std	Y+61, r23	; 0x3d
    2744:	8e af       	std	Y+62, r24	; 0x3e
    2746:	9f af       	std	Y+63, r25	; 0x3f
    2748:	21 97       	sbiw	r28, 0x01	; 1
    274a:	ed ad       	ldd	r30, Y+61	; 0x3d
    274c:	fe ad       	ldd	r31, Y+62	; 0x3e
    274e:	ff 8b       	std	Y+23, r31	; 0x17
    2750:	ee 8b       	std	Y+22, r30	; 0x16

00002752 <.L14>:
    2752:	8e 89       	ldd	r24, Y+22	; 0x16
    2754:	9f 89       	ldd	r25, Y+23	; 0x17
    2756:	9b 8f       	std	Y+27, r25	; 0x1b
    2758:	8a 8f       	std	Y+26, r24	; 0x1a

0000275a <.LBB62>:
    275a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    275c:	9b 8d       	ldd	r25, Y+27	; 0x1b

0000275e <.L1^B2>:
    275e:	01 97       	sbiw	r24, 0x01	; 1
    2760:	f1 f7       	brne	.-4      	; 0x275e <.L1^B2>
    2762:	9b 8f       	std	Y+27, r25	; 0x1b
    2764:	8a 8f       	std	Y+26, r24	; 0x1a

00002766 <.Loc.76>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    2766:	3b c0       	rjmp	.+118    	; 0x27de <.L9>

00002768 <.L29>:
	}
	else if (__tmp > 255)
    2768:	20 e0       	ldi	r18, 0x00	; 0
    276a:	30 e0       	ldi	r19, 0x00	; 0
    276c:	4f e7       	ldi	r20, 0x7F	; 127
    276e:	53 e4       	ldi	r21, 0x43	; 67
    2770:	6d 81       	ldd	r22, Y+5	; 0x05
    2772:	7e 81       	ldd	r23, Y+6	; 0x06
    2774:	8f 81       	ldd	r24, Y+7	; 0x07
    2776:	98 85       	ldd	r25, Y+8	; 0x08
    2778:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    277c:	88 23       	and	r24, r24
    277e:	f9 f0       	breq	.+62     	; 0x27be <.L32>
    2780:	f4 f0       	brlt	.+60     	; 0x27be <.L32>

00002782 <.LBB64>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    2782:	69 85       	ldd	r22, Y+9	; 0x09
    2784:	7a 85       	ldd	r23, Y+10	; 0x0a
    2786:	8b 85       	ldd	r24, Y+11	; 0x0b
    2788:	9c 85       	ldd	r25, Y+12	; 0x0c
    278a:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    278e:	25 96       	adiw	r28, 0x05	; 5
    2790:	6c af       	std	Y+60, r22	; 0x3c
    2792:	7d af       	std	Y+61, r23	; 0x3d
    2794:	8e af       	std	Y+62, r24	; 0x3e
    2796:	9f af       	std	Y+63, r25	; 0x3f
    2798:	25 97       	sbiw	r28, 0x05	; 5
    279a:	23 96       	adiw	r28, 0x03	; 3
    279c:	8e ad       	ldd	r24, Y+62	; 0x3e
    279e:	9f ad       	ldd	r25, Y+63	; 0x3f
    27a0:	23 97       	sbiw	r28, 0x03	; 3
    27a2:	9d 8f       	std	Y+29, r25	; 0x1d
    27a4:	8c 8f       	std	Y+28, r24	; 0x1c
    27a6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    27a8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    27aa:	9f 8f       	std	Y+31, r25	; 0x1f
    27ac:	8e 8f       	std	Y+30, r24	; 0x1e

000027ae <.LBB65>:
	__asm__ volatile (
    27ae:	8e 8d       	ldd	r24, Y+30	; 0x1e
    27b0:	9f 8d       	ldd	r25, Y+31	; 0x1f

000027b2 <.L1^B3>:
    27b2:	01 97       	sbiw	r24, 0x01	; 1
    27b4:	f1 f7       	brne	.-4      	; 0x27b2 <.L1^B3>
    27b6:	9f 8f       	std	Y+31, r25	; 0x1f
    27b8:	8e 8f       	std	Y+30, r24	; 0x1e

000027ba <.Loc.80>:
	...

000027bc <.LBE65>:
		_delay_loop_2(__ticks);
		return;
    27bc:	17 c0       	rjmp	.+46     	; 0x27ec <.L22>

000027be <.L32>:
	}
	else
		__ticks = (uint8_t)__tmp;
    27be:	6d 81       	ldd	r22, Y+5	; 0x05
    27c0:	7e 81       	ldd	r23, Y+6	; 0x06
    27c2:	8f 81       	ldd	r24, Y+7	; 0x07
    27c4:	98 85       	ldd	r25, Y+8	; 0x08
    27c6:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    27ca:	29 96       	adiw	r28, 0x09	; 9
    27cc:	6c af       	std	Y+60, r22	; 0x3c
    27ce:	7d af       	std	Y+61, r23	; 0x3d
    27d0:	8e af       	std	Y+62, r24	; 0x3e
    27d2:	9f af       	std	Y+63, r25	; 0x3f
    27d4:	29 97       	sbiw	r28, 0x09	; 9
    27d6:	26 96       	adiw	r28, 0x06	; 6
    27d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    27da:	26 97       	sbiw	r28, 0x06	; 6
    27dc:	9d 87       	std	Y+13, r25	; 0x0d

000027de <.L9>:
    27de:	8d 85       	ldd	r24, Y+13	; 0x0d
    27e0:	88 a3       	std	Y+32, r24	; 0x20

000027e2 <.LBB67>:
	__asm__ volatile (
    27e2:	88 a1       	ldd	r24, Y+32	; 0x20

000027e4 <.L1^B4>:
    27e4:	8a 95       	dec	r24
    27e6:	f1 f7       	brne	.-4      	; 0x27e4 <.L1^B4>
    27e8:	88 a3       	std	Y+32, r24	; 0x20

000027ea <.Loc.84>:
	...

000027ec <.L22>:
    _delay_us(10);
    port_tri_F &= (~(1<<pin_tri_F));
    27ec:	82 e2       	ldi	r24, 0x22	; 34
    27ee:	90 e0       	ldi	r25, 0x00	; 0
    27f0:	dc 01       	movw	r26, r24
    27f2:	2c 91       	ld	r18, X

000027f4 <.Loc.86>:
    27f4:	82 e2       	ldi	r24, 0x22	; 34
    27f6:	90 e0       	ldi	r25, 0x00	; 0

000027f8 <.Loc.87>:
    27f8:	2e 7f       	andi	r18, 0xFE	; 254
    27fa:	fc 01       	movw	r30, r24
    27fc:	20 83       	st	Z, r18

000027fe <.Loc.88>:
}
    27fe:	00 00       	nop
    2800:	c8 5b       	subi	r28, 0xB8	; 184
    2802:	df 4f       	sbci	r29, 0xFF	; 255
    2804:	0f b6       	in	r0, 0x3f	; 63
    2806:	f8 94       	cli
    2808:	de bf       	out	0x3e, r29	; 62
    280a:	0f be       	out	0x3f, r0	; 63
    280c:	cd bf       	out	0x3d, r28	; 61
    280e:	df 91       	pop	r29
    2810:	cf 91       	pop	r28
    2812:	08 95       	ret

00002814 <GetDistanceLeft>:

int GetDistanceLeft(void){
    2814:	cf 93       	push	r28
    2816:	df 93       	push	r29
    2818:	cd b7       	in	r28, 0x3d	; 61
    281a:	de b7       	in	r29, 0x3e	; 62
    281c:	6e 97       	sbiw	r28, 0x1e	; 30
    281e:	0f b6       	in	r0, 0x3f	; 63
    2820:	f8 94       	cli
    2822:	de bf       	out	0x3e, r29	; 62
    2824:	0f be       	out	0x3f, r0	; 63
    2826:	cd bf       	out	0x3d, r28	; 61

00002828 <.Loc.90>:
    int Distance;
    TriggerPulseLeft();
    2828:	0e 94 98 14 	call	0x2930	; 0x2930 <TriggerPulseLeft>

0000282c <.Loc.91>:
	...

0000282e <.L34>:
    while ((port_ech_L & (1<<pin_ech_L)) == 0){
    282e:	86 e0       	ldi	r24, 0x06	; 6
    2830:	91 e0       	ldi	r25, 0x01	; 1
    2832:	dc 01       	movw	r26, r24
    2834:	8c 91       	ld	r24, X

00002836 <.Loc.93>:
    2836:	88 2f       	mov	r24, r24
    2838:	90 e0       	ldi	r25, 0x00	; 0
    283a:	84 70       	andi	r24, 0x04	; 4
    283c:	99 27       	eor	r25, r25

0000283e <.Loc.94>:
    283e:	00 97       	sbiw	r24, 0x00	; 0
    2840:	b1 f3       	breq	.-20     	; 0x282e <.L34>

00002842 <.Loc.95>:
    }
    TCNT2 = 0;
    2842:	82 eb       	ldi	r24, 0xB2	; 178
    2844:	90 e0       	ldi	r25, 0x00	; 0

00002846 <.Loc.96>:
    2846:	fc 01       	movw	r30, r24
    2848:	10 82       	st	Z, r1

0000284a <.Loc.97>:
    TIFR2 = 1<<TOV2;
    284a:	87 e3       	ldi	r24, 0x37	; 55
    284c:	90 e0       	ldi	r25, 0x00	; 0

0000284e <.Loc.98>:
    284e:	21 e0       	ldi	r18, 0x01	; 1
    2850:	dc 01       	movw	r26, r24
    2852:	2c 93       	st	X, r18

00002854 <.Loc.99>:
    count = 0;
    2854:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2858:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

0000285c <.Loc.100>:
	...

0000285e <.L35>:
    while ((port_ech_L & (1<<pin_ech_L)) != 0){
    285e:	86 e0       	ldi	r24, 0x06	; 6
    2860:	91 e0       	ldi	r25, 0x01	; 1
    2862:	fc 01       	movw	r30, r24
    2864:	80 81       	ld	r24, Z

00002866 <.Loc.102>:
    2866:	88 2f       	mov	r24, r24
    2868:	90 e0       	ldi	r25, 0x00	; 0
    286a:	84 70       	andi	r24, 0x04	; 4
    286c:	99 27       	eor	r25, r25

0000286e <.Loc.103>:
    286e:	00 97       	sbiw	r24, 0x00	; 0
    2870:	b1 f7       	brne	.-20     	; 0x285e <.L35>

00002872 <.Loc.104>:

    }
    Distance = count;
    2872:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2876:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    287a:	9a 83       	std	Y+2, r25	; 0x02
    287c:	89 83       	std	Y+1, r24	; 0x01

0000287e <.Loc.105>:
    Distance = Distance * 0.008 * 343;
    287e:	89 81       	ldd	r24, Y+1	; 0x01
    2880:	9a 81       	ldd	r25, Y+2	; 0x02
    2882:	9c 01       	movw	r18, r24
    2884:	99 0f       	add	r25, r25
    2886:	44 0b       	sbc	r20, r20
    2888:	55 0b       	sbc	r21, r21
    288a:	2f 87       	std	Y+15, r18	; 0x0f
    288c:	38 8b       	std	Y+16, r19	; 0x10
    288e:	49 8b       	std	Y+17, r20	; 0x11
    2890:	5a 8b       	std	Y+18, r21	; 0x12
    2892:	6f 85       	ldd	r22, Y+15	; 0x0f
    2894:	78 89       	ldd	r23, Y+16	; 0x10
    2896:	89 89       	ldd	r24, Y+17	; 0x11
    2898:	9a 89       	ldd	r25, Y+18	; 0x12
    289a:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    289e:	6b 83       	std	Y+3, r22	; 0x03
    28a0:	7c 83       	std	Y+4, r23	; 0x04
    28a2:	8d 83       	std	Y+5, r24	; 0x05
    28a4:	9e 83       	std	Y+6, r25	; 0x06
    28a6:	2f e6       	ldi	r18, 0x6F	; 111
    28a8:	32 e1       	ldi	r19, 0x12	; 18
    28aa:	43 e0       	ldi	r20, 0x03	; 3
    28ac:	5c e3       	ldi	r21, 0x3C	; 60
    28ae:	6b 81       	ldd	r22, Y+3	; 0x03
    28b0:	7c 81       	ldd	r23, Y+4	; 0x04
    28b2:	8d 81       	ldd	r24, Y+5	; 0x05
    28b4:	9e 81       	ldd	r25, Y+6	; 0x06
    28b6:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    28ba:	6b 8b       	std	Y+19, r22	; 0x13
    28bc:	7c 8b       	std	Y+20, r23	; 0x14
    28be:	8d 8b       	std	Y+21, r24	; 0x15
    28c0:	9e 8b       	std	Y+22, r25	; 0x16
    28c2:	8b 89       	ldd	r24, Y+19	; 0x13
    28c4:	9c 89       	ldd	r25, Y+20	; 0x14
    28c6:	ad 89       	ldd	r26, Y+21	; 0x15
    28c8:	be 89       	ldd	r27, Y+22	; 0x16
    28ca:	8f 83       	std	Y+7, r24	; 0x07
    28cc:	98 87       	std	Y+8, r25	; 0x08
    28ce:	a9 87       	std	Y+9, r26	; 0x09
    28d0:	ba 87       	std	Y+10, r27	; 0x0a

000028d2 <.Loc.106>:
    28d2:	20 e0       	ldi	r18, 0x00	; 0
    28d4:	30 e8       	ldi	r19, 0x80	; 128
    28d6:	4b ea       	ldi	r20, 0xAB	; 171
    28d8:	53 e4       	ldi	r21, 0x43	; 67
    28da:	6f 81       	ldd	r22, Y+7	; 0x07
    28dc:	78 85       	ldd	r23, Y+8	; 0x08
    28de:	89 85       	ldd	r24, Y+9	; 0x09
    28e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    28e2:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    28e6:	6f 8b       	std	Y+23, r22	; 0x17
    28e8:	78 8f       	std	Y+24, r23	; 0x18
    28ea:	89 8f       	std	Y+25, r24	; 0x19
    28ec:	9a 8f       	std	Y+26, r25	; 0x1a
    28ee:	2f 89       	ldd	r18, Y+23	; 0x17
    28f0:	38 8d       	ldd	r19, Y+24	; 0x18
    28f2:	49 8d       	ldd	r20, Y+25	; 0x19
    28f4:	5a 8d       	ldd	r21, Y+26	; 0x1a
    28f6:	2b 87       	std	Y+11, r18	; 0x0b
    28f8:	3c 87       	std	Y+12, r19	; 0x0c
    28fa:	4d 87       	std	Y+13, r20	; 0x0d
    28fc:	5e 87       	std	Y+14, r21	; 0x0e

000028fe <.Loc.107>:
    28fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    2900:	7c 85       	ldd	r23, Y+12	; 0x0c
    2902:	8d 85       	ldd	r24, Y+13	; 0x0d
    2904:	9e 85       	ldd	r25, Y+14	; 0x0e
    2906:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    290a:	6b 8f       	std	Y+27, r22	; 0x1b
    290c:	7c 8f       	std	Y+28, r23	; 0x1c
    290e:	8d 8f       	std	Y+29, r24	; 0x1d
    2910:	9e 8f       	std	Y+30, r25	; 0x1e
    2912:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2914:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2916:	5a 83       	std	Y+2, r21	; 0x02
    2918:	49 83       	std	Y+1, r20	; 0x01

0000291a <.Loc.108>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    291a:	89 81       	ldd	r24, Y+1	; 0x01
    291c:	9a 81       	ldd	r25, Y+2	; 0x02

0000291e <.Loc.109>:
}
    291e:	6e 96       	adiw	r28, 0x1e	; 30
    2920:	0f b6       	in	r0, 0x3f	; 63
    2922:	f8 94       	cli
    2924:	de bf       	out	0x3e, r29	; 62
    2926:	0f be       	out	0x3f, r0	; 63
    2928:	cd bf       	out	0x3d, r28	; 61
    292a:	df 91       	pop	r29
    292c:	cf 91       	pop	r28
    292e:	08 95       	ret

00002930 <TriggerPulseLeft>:
void TriggerPulseLeft (void){
    2930:	cf 93       	push	r28
    2932:	df 93       	push	r29
    2934:	cd b7       	in	r28, 0x3d	; 61
    2936:	de b7       	in	r29, 0x3e	; 62
    2938:	c8 54       	subi	r28, 0x48	; 72
    293a:	d1 09       	sbc	r29, r1
    293c:	0f b6       	in	r0, 0x3f	; 63
    293e:	f8 94       	cli
    2940:	de bf       	out	0x3e, r29	; 62
    2942:	0f be       	out	0x3f, r0	; 63
    2944:	cd bf       	out	0x3d, r28	; 61

00002946 <.Loc.111>:
    port_tri_L |= (1<<pin_tri_L);
    2946:	82 e2       	ldi	r24, 0x22	; 34
    2948:	90 e0       	ldi	r25, 0x00	; 0
    294a:	dc 01       	movw	r26, r24
    294c:	2c 91       	ld	r18, X
    294e:	82 e2       	ldi	r24, 0x22	; 34
    2950:	90 e0       	ldi	r25, 0x00	; 0

00002952 <.Loc.112>:
    2952:	24 60       	ori	r18, 0x04	; 4
    2954:	fc 01       	movw	r30, r24
    2956:	20 83       	st	Z, r18
    2958:	80 e0       	ldi	r24, 0x00	; 0
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	a0 e2       	ldi	r26, 0x20	; 32
    295e:	b1 e4       	ldi	r27, 0x41	; 65
    2960:	89 83       	std	Y+1, r24	; 0x01
    2962:	9a 83       	std	Y+2, r25	; 0x02
    2964:	ab 83       	std	Y+3, r26	; 0x03
    2966:	bc 83       	std	Y+4, r27	; 0x04

00002968 <.LBB69>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2968:	2b ea       	ldi	r18, 0xAB	; 171
    296a:	3a ea       	ldi	r19, 0xAA	; 170
    296c:	4a ea       	ldi	r20, 0xAA	; 170
    296e:	50 e4       	ldi	r21, 0x40	; 64
    2970:	69 81       	ldd	r22, Y+1	; 0x01
    2972:	7a 81       	ldd	r23, Y+2	; 0x02
    2974:	8b 81       	ldd	r24, Y+3	; 0x03
    2976:	9c 81       	ldd	r25, Y+4	; 0x04
    2978:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    297c:	6d a3       	std	Y+37, r22	; 0x25
    297e:	7e a3       	std	Y+38, r23	; 0x26
    2980:	8f a3       	std	Y+39, r24	; 0x27
    2982:	98 a7       	std	Y+40, r25	; 0x28
    2984:	8d a1       	ldd	r24, Y+37	; 0x25
    2986:	9e a1       	ldd	r25, Y+38	; 0x26
    2988:	af a1       	ldd	r26, Y+39	; 0x27
    298a:	b8 a5       	ldd	r27, Y+40	; 0x28
    298c:	8d 83       	std	Y+5, r24	; 0x05
    298e:	9e 83       	std	Y+6, r25	; 0x06
    2990:	af 83       	std	Y+7, r26	; 0x07
    2992:	b8 87       	std	Y+8, r27	; 0x08

00002994 <.Loc.114>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2994:	20 e0       	ldi	r18, 0x00	; 0
    2996:	30 e0       	ldi	r19, 0x00	; 0
    2998:	40 e8       	ldi	r20, 0x80	; 128
    299a:	50 e4       	ldi	r21, 0x40	; 64
    299c:	69 81       	ldd	r22, Y+1	; 0x01
    299e:	7a 81       	ldd	r23, Y+2	; 0x02
    29a0:	8b 81       	ldd	r24, Y+3	; 0x03
    29a2:	9c 81       	ldd	r25, Y+4	; 0x04
    29a4:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    29a8:	69 a7       	std	Y+41, r22	; 0x29
    29aa:	7a a7       	std	Y+42, r23	; 0x2a
    29ac:	8b a7       	std	Y+43, r24	; 0x2b
    29ae:	9c a7       	std	Y+44, r25	; 0x2c
    29b0:	89 a5       	ldd	r24, Y+41	; 0x29
    29b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    29b4:	ab a5       	ldd	r26, Y+43	; 0x2b
    29b6:	bc a5       	ldd	r27, Y+44	; 0x2c
    29b8:	89 87       	std	Y+9, r24	; 0x09
    29ba:	9a 87       	std	Y+10, r25	; 0x0a
    29bc:	ab 87       	std	Y+11, r26	; 0x0b
    29be:	bc 87       	std	Y+12, r27	; 0x0c

000029c0 <.Loc.115>:
	if (__tmp < 1.0)
    29c0:	20 e0       	ldi	r18, 0x00	; 0
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	40 e8       	ldi	r20, 0x80	; 128
    29c6:	5f e3       	ldi	r21, 0x3F	; 63
    29c8:	6d 81       	ldd	r22, Y+5	; 0x05
    29ca:	7e 81       	ldd	r23, Y+6	; 0x06
    29cc:	8f 81       	ldd	r24, Y+7	; 0x07
    29ce:	98 85       	ldd	r25, Y+8	; 0x08
    29d0:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    29d4:	88 23       	and	r24, r24
    29d6:	1c f4       	brge	.+6      	; 0x29de <.L59>

000029d8 <.Loc.116>:
		__ticks = 1;
    29d8:	81 e0       	ldi	r24, 0x01	; 1
    29da:	8d 87       	std	Y+13, r24	; 0x0d
    29dc:	e8 c0       	rjmp	.+464    	; 0x2bae <.L40>

000029de <.L59>:
	else if (__tmp2 > 65535)
    29de:	20 e0       	ldi	r18, 0x00	; 0
    29e0:	3f ef       	ldi	r19, 0xFF	; 255
    29e2:	4f e7       	ldi	r20, 0x7F	; 127
    29e4:	57 e4       	ldi	r21, 0x47	; 71
    29e6:	69 85       	ldd	r22, Y+9	; 0x09
    29e8:	7a 85       	ldd	r23, Y+10	; 0x0a
    29ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    29ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    29ee:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    29f2:	88 23       	and	r24, r24
    29f4:	09 f0       	breq	.+2      	; 0x29f8 <L0^A>

000029f6 <L0^A>:
    29f6:	0c f4       	brge	.+2      	; 0x29fa <.Loc.118>

000029f8 <L0^A>:
    29f8:	9f c0       	rjmp	.+318    	; 0x2b38 <.L60>

000029fa <.Loc.118>:
		_delay_ms(__us / 1000.0);
    29fa:	20 e0       	ldi	r18, 0x00	; 0
    29fc:	30 e0       	ldi	r19, 0x00	; 0
    29fe:	4a e7       	ldi	r20, 0x7A	; 122
    2a00:	54 e4       	ldi	r21, 0x44	; 68
    2a02:	69 81       	ldd	r22, Y+1	; 0x01
    2a04:	7a 81       	ldd	r23, Y+2	; 0x02
    2a06:	8b 81       	ldd	r24, Y+3	; 0x03
    2a08:	9c 81       	ldd	r25, Y+4	; 0x04
    2a0a:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
    2a0e:	6d a7       	std	Y+45, r22	; 0x2d
    2a10:	7e a7       	std	Y+46, r23	; 0x2e
    2a12:	8f a7       	std	Y+47, r24	; 0x2f
    2a14:	98 ab       	std	Y+48, r25	; 0x30
    2a16:	8d a5       	ldd	r24, Y+45	; 0x2d
    2a18:	9e a5       	ldd	r25, Y+46	; 0x2e
    2a1a:	af a5       	ldd	r26, Y+47	; 0x2f
    2a1c:	b8 a9       	ldd	r27, Y+48	; 0x30
    2a1e:	8e 87       	std	Y+14, r24	; 0x0e
    2a20:	9f 87       	std	Y+15, r25	; 0x0f
    2a22:	a8 8b       	std	Y+16, r26	; 0x10
    2a24:	b9 8b       	std	Y+17, r27	; 0x11

00002a26 <.LBB71>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2a26:	20 e0       	ldi	r18, 0x00	; 0
    2a28:	30 e0       	ldi	r19, 0x00	; 0
    2a2a:	4a e7       	ldi	r20, 0x7A	; 122
    2a2c:	55 e4       	ldi	r21, 0x45	; 69
    2a2e:	6e 85       	ldd	r22, Y+14	; 0x0e
    2a30:	7f 85       	ldd	r23, Y+15	; 0x0f
    2a32:	88 89       	ldd	r24, Y+16	; 0x10
    2a34:	99 89       	ldd	r25, Y+17	; 0x11
    2a36:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2a3a:	69 ab       	std	Y+49, r22	; 0x31
    2a3c:	7a ab       	std	Y+50, r23	; 0x32
    2a3e:	8b ab       	std	Y+51, r24	; 0x33
    2a40:	9c ab       	std	Y+52, r25	; 0x34
    2a42:	89 a9       	ldd	r24, Y+49	; 0x31
    2a44:	9a a9       	ldd	r25, Y+50	; 0x32
    2a46:	ab a9       	ldd	r26, Y+51	; 0x33
    2a48:	bc a9       	ldd	r27, Y+52	; 0x34
    2a4a:	8a 8b       	std	Y+18, r24	; 0x12
    2a4c:	9b 8b       	std	Y+19, r25	; 0x13
    2a4e:	ac 8b       	std	Y+20, r26	; 0x14
    2a50:	bd 8b       	std	Y+21, r27	; 0x15

00002a52 <.Loc.120>:
	if (__tmp < 1.0)
    2a52:	20 e0       	ldi	r18, 0x00	; 0
    2a54:	30 e0       	ldi	r19, 0x00	; 0
    2a56:	40 e8       	ldi	r20, 0x80	; 128
    2a58:	5f e3       	ldi	r21, 0x3F	; 63
    2a5a:	6a 89       	ldd	r22, Y+18	; 0x12
    2a5c:	7b 89       	ldd	r23, Y+19	; 0x13
    2a5e:	8c 89       	ldd	r24, Y+20	; 0x14
    2a60:	9d 89       	ldd	r25, Y+21	; 0x15
    2a62:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    2a66:	88 23       	and	r24, r24
    2a68:	2c f4       	brge	.+10     	; 0x2a74 <.L61>

00002a6a <.Loc.121>:
		__ticks = 1;
    2a6a:	81 e0       	ldi	r24, 0x01	; 1
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	9f 8b       	std	Y+23, r25	; 0x17
    2a70:	8e 8b       	std	Y+22, r24	; 0x16
    2a72:	57 c0       	rjmp	.+174    	; 0x2b22 <.L45>

00002a74 <.L61>:
	else if (__tmp > 65535)
    2a74:	20 e0       	ldi	r18, 0x00	; 0
    2a76:	3f ef       	ldi	r19, 0xFF	; 255
    2a78:	4f e7       	ldi	r20, 0x7F	; 127
    2a7a:	57 e4       	ldi	r21, 0x47	; 71
    2a7c:	6a 89       	ldd	r22, Y+18	; 0x12
    2a7e:	7b 89       	ldd	r23, Y+19	; 0x13
    2a80:	8c 89       	ldd	r24, Y+20	; 0x14
    2a82:	9d 89       	ldd	r25, Y+21	; 0x15
    2a84:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2a88:	88 23       	and	r24, r24
    2a8a:	d9 f1       	breq	.+118    	; 0x2b02 <.L62>
    2a8c:	d4 f1       	brlt	.+116    	; 0x2b02 <.L62>

00002a8e <.Loc.123>:
		__ticks = (uint16_t) (__ms * 10.0);
    2a8e:	20 e0       	ldi	r18, 0x00	; 0
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	40 e2       	ldi	r20, 0x20	; 32
    2a94:	51 e4       	ldi	r21, 0x41	; 65
    2a96:	6e 85       	ldd	r22, Y+14	; 0x0e
    2a98:	7f 85       	ldd	r23, Y+15	; 0x0f
    2a9a:	88 89       	ldd	r24, Y+16	; 0x10
    2a9c:	99 89       	ldd	r25, Y+17	; 0x11
    2a9e:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2aa2:	6d ab       	std	Y+53, r22	; 0x35
    2aa4:	7e ab       	std	Y+54, r23	; 0x36
    2aa6:	8f ab       	std	Y+55, r24	; 0x37
    2aa8:	98 af       	std	Y+56, r25	; 0x38
    2aaa:	8d a9       	ldd	r24, Y+53	; 0x35
    2aac:	9e a9       	ldd	r25, Y+54	; 0x36
    2aae:	af a9       	ldd	r26, Y+55	; 0x37
    2ab0:	b8 ad       	ldd	r27, Y+56	; 0x38
    2ab2:	89 a3       	std	Y+33, r24	; 0x21
    2ab4:	9a a3       	std	Y+34, r25	; 0x22
    2ab6:	ab a3       	std	Y+35, r26	; 0x23
    2ab8:	bc a3       	std	Y+36, r27	; 0x24

00002aba <.Loc.124>:
    2aba:	69 a1       	ldd	r22, Y+33	; 0x21
    2abc:	7a a1       	ldd	r23, Y+34	; 0x22
    2abe:	8b a1       	ldd	r24, Y+35	; 0x23
    2ac0:	9c a1       	ldd	r25, Y+36	; 0x24
    2ac2:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2ac6:	69 af       	std	Y+57, r22	; 0x39
    2ac8:	7a af       	std	Y+58, r23	; 0x3a
    2aca:	8b af       	std	Y+59, r24	; 0x3b
    2acc:	9c af       	std	Y+60, r25	; 0x3c
    2ace:	a9 ad       	ldd	r26, Y+57	; 0x39
    2ad0:	ba ad       	ldd	r27, Y+58	; 0x3a
    2ad2:	bf 8b       	std	Y+23, r27	; 0x17
    2ad4:	ae 8b       	std	Y+22, r26	; 0x16

00002ad6 <.Loc.125>:
		while(__ticks)
    2ad6:	10 c0       	rjmp	.+32     	; 0x2af8 <.L48>

00002ad8 <.L49>:
    2ad8:	80 e9       	ldi	r24, 0x90	; 144
    2ada:	91 e0       	ldi	r25, 0x01	; 1
    2adc:	99 8f       	std	Y+25, r25	; 0x19
    2ade:	88 8f       	std	Y+24, r24	; 0x18

00002ae0 <.LBB73>:
	__asm__ volatile (
    2ae0:	88 8d       	ldd	r24, Y+24	; 0x18
    2ae2:	99 8d       	ldd	r25, Y+25	; 0x19

00002ae4 <.L1^B5>:
    2ae4:	01 97       	sbiw	r24, 0x01	; 1
    2ae6:	f1 f7       	brne	.-4      	; 0x2ae4 <.L1^B5>
    2ae8:	99 8f       	std	Y+25, r25	; 0x19
    2aea:	88 8f       	std	Y+24, r24	; 0x18

00002aec <.Loc.127>:
	...

00002aee <.LBE73>:
			__ticks --;
    2aee:	8e 89       	ldd	r24, Y+22	; 0x16
    2af0:	9f 89       	ldd	r25, Y+23	; 0x17
    2af2:	01 97       	sbiw	r24, 0x01	; 1
    2af4:	9f 8b       	std	Y+23, r25	; 0x17
    2af6:	8e 8b       	std	Y+22, r24	; 0x16

00002af8 <.L48>:
		while(__ticks)
    2af8:	8e 89       	ldd	r24, Y+22	; 0x16
    2afa:	9f 89       	ldd	r25, Y+23	; 0x17
    2afc:	00 97       	sbiw	r24, 0x00	; 0
    2afe:	61 f7       	brne	.-40     	; 0x2ad8 <.L49>

00002b00 <.Loc.130>:
		return;
    2b00:	56 c0       	rjmp	.+172    	; 0x2bae <.L40>

00002b02 <.L62>:
		__ticks = (uint16_t)__tmp;
    2b02:	6a 89       	ldd	r22, Y+18	; 0x12
    2b04:	7b 89       	ldd	r23, Y+19	; 0x13
    2b06:	8c 89       	ldd	r24, Y+20	; 0x14
    2b08:	9d 89       	ldd	r25, Y+21	; 0x15
    2b0a:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2b0e:	21 96       	adiw	r28, 0x01	; 1
    2b10:	6c af       	std	Y+60, r22	; 0x3c
    2b12:	7d af       	std	Y+61, r23	; 0x3d
    2b14:	8e af       	std	Y+62, r24	; 0x3e
    2b16:	9f af       	std	Y+63, r25	; 0x3f
    2b18:	21 97       	sbiw	r28, 0x01	; 1
    2b1a:	ed ad       	ldd	r30, Y+61	; 0x3d
    2b1c:	fe ad       	ldd	r31, Y+62	; 0x3e
    2b1e:	ff 8b       	std	Y+23, r31	; 0x17
    2b20:	ee 8b       	std	Y+22, r30	; 0x16

00002b22 <.L45>:
    2b22:	8e 89       	ldd	r24, Y+22	; 0x16
    2b24:	9f 89       	ldd	r25, Y+23	; 0x17
    2b26:	9b 8f       	std	Y+27, r25	; 0x1b
    2b28:	8a 8f       	std	Y+26, r24	; 0x1a

00002b2a <.LBB75>:
    2b2a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b2c:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002b2e <.L1^B6>:
    2b2e:	01 97       	sbiw	r24, 0x01	; 1
    2b30:	f1 f7       	brne	.-4      	; 0x2b2e <.L1^B6>
    2b32:	9b 8f       	std	Y+27, r25	; 0x1b
    2b34:	8a 8f       	std	Y+26, r24	; 0x1a

00002b36 <.Loc.133>:
}
    2b36:	3b c0       	rjmp	.+118    	; 0x2bae <.L40>

00002b38 <.L60>:
	else if (__tmp > 255)
    2b38:	20 e0       	ldi	r18, 0x00	; 0
    2b3a:	30 e0       	ldi	r19, 0x00	; 0
    2b3c:	4f e7       	ldi	r20, 0x7F	; 127
    2b3e:	53 e4       	ldi	r21, 0x43	; 67
    2b40:	6d 81       	ldd	r22, Y+5	; 0x05
    2b42:	7e 81       	ldd	r23, Y+6	; 0x06
    2b44:	8f 81       	ldd	r24, Y+7	; 0x07
    2b46:	98 85       	ldd	r25, Y+8	; 0x08
    2b48:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2b4c:	88 23       	and	r24, r24
    2b4e:	f9 f0       	breq	.+62     	; 0x2b8e <.L63>
    2b50:	f4 f0       	brlt	.+60     	; 0x2b8e <.L63>

00002b52 <.LBB77>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2b52:	69 85       	ldd	r22, Y+9	; 0x09
    2b54:	7a 85       	ldd	r23, Y+10	; 0x0a
    2b56:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b58:	9c 85       	ldd	r25, Y+12	; 0x0c
    2b5a:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2b5e:	25 96       	adiw	r28, 0x05	; 5
    2b60:	6c af       	std	Y+60, r22	; 0x3c
    2b62:	7d af       	std	Y+61, r23	; 0x3d
    2b64:	8e af       	std	Y+62, r24	; 0x3e
    2b66:	9f af       	std	Y+63, r25	; 0x3f
    2b68:	25 97       	sbiw	r28, 0x05	; 5
    2b6a:	23 96       	adiw	r28, 0x03	; 3
    2b6c:	8e ad       	ldd	r24, Y+62	; 0x3e
    2b6e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2b70:	23 97       	sbiw	r28, 0x03	; 3
    2b72:	9d 8f       	std	Y+29, r25	; 0x1d
    2b74:	8c 8f       	std	Y+28, r24	; 0x1c
    2b76:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2b78:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2b7a:	9f 8f       	std	Y+31, r25	; 0x1f
    2b7c:	8e 8f       	std	Y+30, r24	; 0x1e

00002b7e <.LBB78>:
	__asm__ volatile (
    2b7e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2b80:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002b82 <.L1^B7>:
    2b82:	01 97       	sbiw	r24, 0x01	; 1
    2b84:	f1 f7       	brne	.-4      	; 0x2b82 <.L1^B7>
    2b86:	9f 8f       	std	Y+31, r25	; 0x1f
    2b88:	8e 8f       	std	Y+30, r24	; 0x1e

00002b8a <.Loc.137>:
	...

00002b8c <.LBE78>:
		return;
    2b8c:	17 c0       	rjmp	.+46     	; 0x2bbc <.L53>

00002b8e <.L63>:
		__ticks = (uint8_t)__tmp;
    2b8e:	6d 81       	ldd	r22, Y+5	; 0x05
    2b90:	7e 81       	ldd	r23, Y+6	; 0x06
    2b92:	8f 81       	ldd	r24, Y+7	; 0x07
    2b94:	98 85       	ldd	r25, Y+8	; 0x08
    2b96:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2b9a:	29 96       	adiw	r28, 0x09	; 9
    2b9c:	6c af       	std	Y+60, r22	; 0x3c
    2b9e:	7d af       	std	Y+61, r23	; 0x3d
    2ba0:	8e af       	std	Y+62, r24	; 0x3e
    2ba2:	9f af       	std	Y+63, r25	; 0x3f
    2ba4:	29 97       	sbiw	r28, 0x09	; 9
    2ba6:	26 96       	adiw	r28, 0x06	; 6
    2ba8:	9f ad       	ldd	r25, Y+63	; 0x3f
    2baa:	26 97       	sbiw	r28, 0x06	; 6
    2bac:	9d 87       	std	Y+13, r25	; 0x0d

00002bae <.L40>:
    2bae:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bb0:	88 a3       	std	Y+32, r24	; 0x20

00002bb2 <.LBB80>:
	__asm__ volatile (
    2bb2:	88 a1       	ldd	r24, Y+32	; 0x20

00002bb4 <.L1^B8>:
    2bb4:	8a 95       	dec	r24
    2bb6:	f1 f7       	brne	.-4      	; 0x2bb4 <.L1^B8>
    2bb8:	88 a3       	std	Y+32, r24	; 0x20

00002bba <.Loc.141>:
	...

00002bbc <.L53>:
    _delay_us(10);
    port_tri_L &= (~(1<<pin_tri_L));
    2bbc:	82 e2       	ldi	r24, 0x22	; 34
    2bbe:	90 e0       	ldi	r25, 0x00	; 0
    2bc0:	dc 01       	movw	r26, r24
    2bc2:	2c 91       	ld	r18, X

00002bc4 <.Loc.143>:
    2bc4:	82 e2       	ldi	r24, 0x22	; 34
    2bc6:	90 e0       	ldi	r25, 0x00	; 0

00002bc8 <.Loc.144>:
    2bc8:	2b 7f       	andi	r18, 0xFB	; 251
    2bca:	fc 01       	movw	r30, r24
    2bcc:	20 83       	st	Z, r18

00002bce <.Loc.145>:
}
    2bce:	00 00       	nop
    2bd0:	c8 5b       	subi	r28, 0xB8	; 184
    2bd2:	df 4f       	sbci	r29, 0xFF	; 255
    2bd4:	0f b6       	in	r0, 0x3f	; 63
    2bd6:	f8 94       	cli
    2bd8:	de bf       	out	0x3e, r29	; 62
    2bda:	0f be       	out	0x3f, r0	; 63
    2bdc:	cd bf       	out	0x3d, r28	; 61
    2bde:	df 91       	pop	r29
    2be0:	cf 91       	pop	r28
    2be2:	08 95       	ret

00002be4 <GetDistanceRight>:

int GetDistanceRight(void){
    2be4:	cf 93       	push	r28
    2be6:	df 93       	push	r29
    2be8:	cd b7       	in	r28, 0x3d	; 61
    2bea:	de b7       	in	r29, 0x3e	; 62
    2bec:	6e 97       	sbiw	r28, 0x1e	; 30
    2bee:	0f b6       	in	r0, 0x3f	; 63
    2bf0:	f8 94       	cli
    2bf2:	de bf       	out	0x3e, r29	; 62
    2bf4:	0f be       	out	0x3f, r0	; 63
    2bf6:	cd bf       	out	0x3d, r28	; 61

00002bf8 <.Loc.147>:
    int Distance;
    TriggerPulseRight();
    2bf8:	0e 94 80 16 	call	0x2d00	; 0x2d00 <TriggerPulseRight>

00002bfc <.Loc.148>:
	...

00002bfe <.L65>:
    while ((port_ech_R & (1<<pin_ech_R)) == 0){
    2bfe:	86 e0       	ldi	r24, 0x06	; 6
    2c00:	91 e0       	ldi	r25, 0x01	; 1
    2c02:	dc 01       	movw	r26, r24
    2c04:	8c 91       	ld	r24, X

00002c06 <.Loc.150>:
    2c06:	88 2f       	mov	r24, r24
    2c08:	90 e0       	ldi	r25, 0x00	; 0
    2c0a:	82 70       	andi	r24, 0x02	; 2
    2c0c:	99 27       	eor	r25, r25

00002c0e <.Loc.151>:
    2c0e:	00 97       	sbiw	r24, 0x00	; 0
    2c10:	b1 f3       	breq	.-20     	; 0x2bfe <.L65>

00002c12 <.Loc.152>:
    }
    TCNT2 = 0;
    2c12:	82 eb       	ldi	r24, 0xB2	; 178
    2c14:	90 e0       	ldi	r25, 0x00	; 0

00002c16 <.Loc.153>:
    2c16:	fc 01       	movw	r30, r24
    2c18:	10 82       	st	Z, r1

00002c1a <.Loc.154>:
    TIFR2 = 1<<TOV2;
    2c1a:	87 e3       	ldi	r24, 0x37	; 55
    2c1c:	90 e0       	ldi	r25, 0x00	; 0

00002c1e <.Loc.155>:
    2c1e:	21 e0       	ldi	r18, 0x01	; 1
    2c20:	dc 01       	movw	r26, r24
    2c22:	2c 93       	st	X, r18

00002c24 <.Loc.156>:
    count = 0;
    2c24:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2c28:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002c2c <.Loc.157>:
	...

00002c2e <.L66>:
    while ((port_ech_R & (1<<pin_ech_R)) != 0){
    2c2e:	86 e0       	ldi	r24, 0x06	; 6
    2c30:	91 e0       	ldi	r25, 0x01	; 1
    2c32:	fc 01       	movw	r30, r24
    2c34:	80 81       	ld	r24, Z

00002c36 <.Loc.159>:
    2c36:	88 2f       	mov	r24, r24
    2c38:	90 e0       	ldi	r25, 0x00	; 0
    2c3a:	82 70       	andi	r24, 0x02	; 2
    2c3c:	99 27       	eor	r25, r25

00002c3e <.Loc.160>:
    2c3e:	00 97       	sbiw	r24, 0x00	; 0
    2c40:	b1 f7       	brne	.-20     	; 0x2c2e <.L66>

00002c42 <.Loc.161>:

    }
    Distance = count;
    2c42:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2c46:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2c4a:	9a 83       	std	Y+2, r25	; 0x02
    2c4c:	89 83       	std	Y+1, r24	; 0x01

00002c4e <.Loc.162>:
    Distance = Distance * 0.008 * 343;
    2c4e:	89 81       	ldd	r24, Y+1	; 0x01
    2c50:	9a 81       	ldd	r25, Y+2	; 0x02
    2c52:	9c 01       	movw	r18, r24
    2c54:	99 0f       	add	r25, r25
    2c56:	44 0b       	sbc	r20, r20
    2c58:	55 0b       	sbc	r21, r21
    2c5a:	2f 87       	std	Y+15, r18	; 0x0f
    2c5c:	38 8b       	std	Y+16, r19	; 0x10
    2c5e:	49 8b       	std	Y+17, r20	; 0x11
    2c60:	5a 8b       	std	Y+18, r21	; 0x12
    2c62:	6f 85       	ldd	r22, Y+15	; 0x0f
    2c64:	78 89       	ldd	r23, Y+16	; 0x10
    2c66:	89 89       	ldd	r24, Y+17	; 0x11
    2c68:	9a 89       	ldd	r25, Y+18	; 0x12
    2c6a:	0e 94 97 19 	call	0x332e	; 0x332e <__floatsisf>
    2c6e:	6b 83       	std	Y+3, r22	; 0x03
    2c70:	7c 83       	std	Y+4, r23	; 0x04
    2c72:	8d 83       	std	Y+5, r24	; 0x05
    2c74:	9e 83       	std	Y+6, r25	; 0x06
    2c76:	2f e6       	ldi	r18, 0x6F	; 111
    2c78:	32 e1       	ldi	r19, 0x12	; 18
    2c7a:	43 e0       	ldi	r20, 0x03	; 3
    2c7c:	5c e3       	ldi	r21, 0x3C	; 60
    2c7e:	6b 81       	ldd	r22, Y+3	; 0x03
    2c80:	7c 81       	ldd	r23, Y+4	; 0x04
    2c82:	8d 81       	ldd	r24, Y+5	; 0x05
    2c84:	9e 81       	ldd	r25, Y+6	; 0x06
    2c86:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2c8a:	6b 8b       	std	Y+19, r22	; 0x13
    2c8c:	7c 8b       	std	Y+20, r23	; 0x14
    2c8e:	8d 8b       	std	Y+21, r24	; 0x15
    2c90:	9e 8b       	std	Y+22, r25	; 0x16
    2c92:	8b 89       	ldd	r24, Y+19	; 0x13
    2c94:	9c 89       	ldd	r25, Y+20	; 0x14
    2c96:	ad 89       	ldd	r26, Y+21	; 0x15
    2c98:	be 89       	ldd	r27, Y+22	; 0x16
    2c9a:	8f 83       	std	Y+7, r24	; 0x07
    2c9c:	98 87       	std	Y+8, r25	; 0x08
    2c9e:	a9 87       	std	Y+9, r26	; 0x09
    2ca0:	ba 87       	std	Y+10, r27	; 0x0a

00002ca2 <.Loc.163>:
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e8       	ldi	r19, 0x80	; 128
    2ca6:	4b ea       	ldi	r20, 0xAB	; 171
    2ca8:	53 e4       	ldi	r21, 0x43	; 67
    2caa:	6f 81       	ldd	r22, Y+7	; 0x07
    2cac:	78 85       	ldd	r23, Y+8	; 0x08
    2cae:	89 85       	ldd	r24, Y+9	; 0x09
    2cb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cb2:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2cb6:	6f 8b       	std	Y+23, r22	; 0x17
    2cb8:	78 8f       	std	Y+24, r23	; 0x18
    2cba:	89 8f       	std	Y+25, r24	; 0x19
    2cbc:	9a 8f       	std	Y+26, r25	; 0x1a
    2cbe:	2f 89       	ldd	r18, Y+23	; 0x17
    2cc0:	38 8d       	ldd	r19, Y+24	; 0x18
    2cc2:	49 8d       	ldd	r20, Y+25	; 0x19
    2cc4:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2cc6:	2b 87       	std	Y+11, r18	; 0x0b
    2cc8:	3c 87       	std	Y+12, r19	; 0x0c
    2cca:	4d 87       	std	Y+13, r20	; 0x0d
    2ccc:	5e 87       	std	Y+14, r21	; 0x0e

00002cce <.Loc.164>:
    2cce:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cd0:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cd2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cd4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cd6:	0e 94 5f 19 	call	0x32be	; 0x32be <__fixsfsi>
    2cda:	6b 8f       	std	Y+27, r22	; 0x1b
    2cdc:	7c 8f       	std	Y+28, r23	; 0x1c
    2cde:	8d 8f       	std	Y+29, r24	; 0x1d
    2ce0:	9e 8f       	std	Y+30, r25	; 0x1e
    2ce2:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2ce4:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2ce6:	5a 83       	std	Y+2, r21	; 0x02
    2ce8:	49 83       	std	Y+1, r20	; 0x01

00002cea <.Loc.165>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    2cea:	89 81       	ldd	r24, Y+1	; 0x01
    2cec:	9a 81       	ldd	r25, Y+2	; 0x02

00002cee <.Loc.166>:
}
    2cee:	6e 96       	adiw	r28, 0x1e	; 30
    2cf0:	0f b6       	in	r0, 0x3f	; 63
    2cf2:	f8 94       	cli
    2cf4:	de bf       	out	0x3e, r29	; 62
    2cf6:	0f be       	out	0x3f, r0	; 63
    2cf8:	cd bf       	out	0x3d, r28	; 61
    2cfa:	df 91       	pop	r29
    2cfc:	cf 91       	pop	r28
    2cfe:	08 95       	ret

00002d00 <TriggerPulseRight>:
void TriggerPulseRight (void){
    2d00:	cf 93       	push	r28
    2d02:	df 93       	push	r29
    2d04:	cd b7       	in	r28, 0x3d	; 61
    2d06:	de b7       	in	r29, 0x3e	; 62
    2d08:	c8 54       	subi	r28, 0x48	; 72
    2d0a:	d1 09       	sbc	r29, r1
    2d0c:	0f b6       	in	r0, 0x3f	; 63
    2d0e:	f8 94       	cli
    2d10:	de bf       	out	0x3e, r29	; 62
    2d12:	0f be       	out	0x3f, r0	; 63
    2d14:	cd bf       	out	0x3d, r28	; 61

00002d16 <.Loc.168>:
    port_tri_R |= (1<<pin_tri_R);
    2d16:	82 e2       	ldi	r24, 0x22	; 34
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	dc 01       	movw	r26, r24
    2d1c:	2c 91       	ld	r18, X
    2d1e:	82 e2       	ldi	r24, 0x22	; 34
    2d20:	90 e0       	ldi	r25, 0x00	; 0

00002d22 <.Loc.169>:
    2d22:	20 61       	ori	r18, 0x10	; 16
    2d24:	fc 01       	movw	r30, r24
    2d26:	20 83       	st	Z, r18
    2d28:	80 e0       	ldi	r24, 0x00	; 0
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
    2d2c:	a0 e2       	ldi	r26, 0x20	; 32
    2d2e:	b1 e4       	ldi	r27, 0x41	; 65
    2d30:	89 83       	std	Y+1, r24	; 0x01
    2d32:	9a 83       	std	Y+2, r25	; 0x02
    2d34:	ab 83       	std	Y+3, r26	; 0x03
    2d36:	bc 83       	std	Y+4, r27	; 0x04

00002d38 <.LBB82>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2d38:	2b ea       	ldi	r18, 0xAB	; 171
    2d3a:	3a ea       	ldi	r19, 0xAA	; 170
    2d3c:	4a ea       	ldi	r20, 0xAA	; 170
    2d3e:	50 e4       	ldi	r21, 0x40	; 64
    2d40:	69 81       	ldd	r22, Y+1	; 0x01
    2d42:	7a 81       	ldd	r23, Y+2	; 0x02
    2d44:	8b 81       	ldd	r24, Y+3	; 0x03
    2d46:	9c 81       	ldd	r25, Y+4	; 0x04
    2d48:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2d4c:	6d a3       	std	Y+37, r22	; 0x25
    2d4e:	7e a3       	std	Y+38, r23	; 0x26
    2d50:	8f a3       	std	Y+39, r24	; 0x27
    2d52:	98 a7       	std	Y+40, r25	; 0x28
    2d54:	8d a1       	ldd	r24, Y+37	; 0x25
    2d56:	9e a1       	ldd	r25, Y+38	; 0x26
    2d58:	af a1       	ldd	r26, Y+39	; 0x27
    2d5a:	b8 a5       	ldd	r27, Y+40	; 0x28
    2d5c:	8d 83       	std	Y+5, r24	; 0x05
    2d5e:	9e 83       	std	Y+6, r25	; 0x06
    2d60:	af 83       	std	Y+7, r26	; 0x07
    2d62:	b8 87       	std	Y+8, r27	; 0x08

00002d64 <.Loc.171>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2d64:	20 e0       	ldi	r18, 0x00	; 0
    2d66:	30 e0       	ldi	r19, 0x00	; 0
    2d68:	40 e8       	ldi	r20, 0x80	; 128
    2d6a:	50 e4       	ldi	r21, 0x40	; 64
    2d6c:	69 81       	ldd	r22, Y+1	; 0x01
    2d6e:	7a 81       	ldd	r23, Y+2	; 0x02
    2d70:	8b 81       	ldd	r24, Y+3	; 0x03
    2d72:	9c 81       	ldd	r25, Y+4	; 0x04
    2d74:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2d78:	69 a7       	std	Y+41, r22	; 0x29
    2d7a:	7a a7       	std	Y+42, r23	; 0x2a
    2d7c:	8b a7       	std	Y+43, r24	; 0x2b
    2d7e:	9c a7       	std	Y+44, r25	; 0x2c
    2d80:	89 a5       	ldd	r24, Y+41	; 0x29
    2d82:	9a a5       	ldd	r25, Y+42	; 0x2a
    2d84:	ab a5       	ldd	r26, Y+43	; 0x2b
    2d86:	bc a5       	ldd	r27, Y+44	; 0x2c
    2d88:	89 87       	std	Y+9, r24	; 0x09
    2d8a:	9a 87       	std	Y+10, r25	; 0x0a
    2d8c:	ab 87       	std	Y+11, r26	; 0x0b
    2d8e:	bc 87       	std	Y+12, r27	; 0x0c

00002d90 <.Loc.172>:
	if (__tmp < 1.0)
    2d90:	20 e0       	ldi	r18, 0x00	; 0
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	40 e8       	ldi	r20, 0x80	; 128
    2d96:	5f e3       	ldi	r21, 0x3F	; 63
    2d98:	6d 81       	ldd	r22, Y+5	; 0x05
    2d9a:	7e 81       	ldd	r23, Y+6	; 0x06
    2d9c:	8f 81       	ldd	r24, Y+7	; 0x07
    2d9e:	98 85       	ldd	r25, Y+8	; 0x08
    2da0:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    2da4:	88 23       	and	r24, r24
    2da6:	1c f4       	brge	.+6      	; 0x2dae <.L90>

00002da8 <.Loc.173>:
		__ticks = 1;
    2da8:	81 e0       	ldi	r24, 0x01	; 1
    2daa:	8d 87       	std	Y+13, r24	; 0x0d
    2dac:	e8 c0       	rjmp	.+464    	; 0x2f7e <.L71>

00002dae <.L90>:
	else if (__tmp2 > 65535)
    2dae:	20 e0       	ldi	r18, 0x00	; 0
    2db0:	3f ef       	ldi	r19, 0xFF	; 255
    2db2:	4f e7       	ldi	r20, 0x7F	; 127
    2db4:	57 e4       	ldi	r21, 0x47	; 71
    2db6:	69 85       	ldd	r22, Y+9	; 0x09
    2db8:	7a 85       	ldd	r23, Y+10	; 0x0a
    2dba:	8b 85       	ldd	r24, Y+11	; 0x0b
    2dbc:	9c 85       	ldd	r25, Y+12	; 0x0c
    2dbe:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2dc2:	88 23       	and	r24, r24
    2dc4:	09 f0       	breq	.+2      	; 0x2dc8 <L0^A>

00002dc6 <L0^A>:
    2dc6:	0c f4       	brge	.+2      	; 0x2dca <.Loc.175>

00002dc8 <L0^A>:
    2dc8:	9f c0       	rjmp	.+318    	; 0x2f08 <.L91>

00002dca <.Loc.175>:
		_delay_ms(__us / 1000.0);
    2dca:	20 e0       	ldi	r18, 0x00	; 0
    2dcc:	30 e0       	ldi	r19, 0x00	; 0
    2dce:	4a e7       	ldi	r20, 0x7A	; 122
    2dd0:	54 e4       	ldi	r21, 0x44	; 68
    2dd2:	69 81       	ldd	r22, Y+1	; 0x01
    2dd4:	7a 81       	ldd	r23, Y+2	; 0x02
    2dd6:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd8:	9c 81       	ldd	r25, Y+4	; 0x04
    2dda:	0e 94 ed 18 	call	0x31da	; 0x31da <__divsf3>
    2dde:	6d a7       	std	Y+45, r22	; 0x2d
    2de0:	7e a7       	std	Y+46, r23	; 0x2e
    2de2:	8f a7       	std	Y+47, r24	; 0x2f
    2de4:	98 ab       	std	Y+48, r25	; 0x30
    2de6:	8d a5       	ldd	r24, Y+45	; 0x2d
    2de8:	9e a5       	ldd	r25, Y+46	; 0x2e
    2dea:	af a5       	ldd	r26, Y+47	; 0x2f
    2dec:	b8 a9       	ldd	r27, Y+48	; 0x30
    2dee:	8e 87       	std	Y+14, r24	; 0x0e
    2df0:	9f 87       	std	Y+15, r25	; 0x0f
    2df2:	a8 8b       	std	Y+16, r26	; 0x10
    2df4:	b9 8b       	std	Y+17, r27	; 0x11

00002df6 <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2df6:	20 e0       	ldi	r18, 0x00	; 0
    2df8:	30 e0       	ldi	r19, 0x00	; 0
    2dfa:	4a e7       	ldi	r20, 0x7A	; 122
    2dfc:	55 e4       	ldi	r21, 0x45	; 69
    2dfe:	6e 85       	ldd	r22, Y+14	; 0x0e
    2e00:	7f 85       	ldd	r23, Y+15	; 0x0f
    2e02:	88 89       	ldd	r24, Y+16	; 0x10
    2e04:	99 89       	ldd	r25, Y+17	; 0x11
    2e06:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2e0a:	69 ab       	std	Y+49, r22	; 0x31
    2e0c:	7a ab       	std	Y+50, r23	; 0x32
    2e0e:	8b ab       	std	Y+51, r24	; 0x33
    2e10:	9c ab       	std	Y+52, r25	; 0x34
    2e12:	89 a9       	ldd	r24, Y+49	; 0x31
    2e14:	9a a9       	ldd	r25, Y+50	; 0x32
    2e16:	ab a9       	ldd	r26, Y+51	; 0x33
    2e18:	bc a9       	ldd	r27, Y+52	; 0x34
    2e1a:	8a 8b       	std	Y+18, r24	; 0x12
    2e1c:	9b 8b       	std	Y+19, r25	; 0x13
    2e1e:	ac 8b       	std	Y+20, r26	; 0x14
    2e20:	bd 8b       	std	Y+21, r27	; 0x15

00002e22 <.Loc.177>:
	if (__tmp < 1.0)
    2e22:	20 e0       	ldi	r18, 0x00	; 0
    2e24:	30 e0       	ldi	r19, 0x00	; 0
    2e26:	40 e8       	ldi	r20, 0x80	; 128
    2e28:	5f e3       	ldi	r21, 0x3F	; 63
    2e2a:	6a 89       	ldd	r22, Y+18	; 0x12
    2e2c:	7b 89       	ldd	r23, Y+19	; 0x13
    2e2e:	8c 89       	ldd	r24, Y+20	; 0x14
    2e30:	9d 89       	ldd	r25, Y+21	; 0x15
    2e32:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__cmpsf2>
    2e36:	88 23       	and	r24, r24
    2e38:	2c f4       	brge	.+10     	; 0x2e44 <.L92>

00002e3a <.Loc.178>:
		__ticks = 1;
    2e3a:	81 e0       	ldi	r24, 0x01	; 1
    2e3c:	90 e0       	ldi	r25, 0x00	; 0
    2e3e:	9f 8b       	std	Y+23, r25	; 0x17
    2e40:	8e 8b       	std	Y+22, r24	; 0x16
    2e42:	57 c0       	rjmp	.+174    	; 0x2ef2 <.L76>

00002e44 <.L92>:
	else if (__tmp > 65535)
    2e44:	20 e0       	ldi	r18, 0x00	; 0
    2e46:	3f ef       	ldi	r19, 0xFF	; 255
    2e48:	4f e7       	ldi	r20, 0x7F	; 127
    2e4a:	57 e4       	ldi	r21, 0x47	; 71
    2e4c:	6a 89       	ldd	r22, Y+18	; 0x12
    2e4e:	7b 89       	ldd	r23, Y+19	; 0x13
    2e50:	8c 89       	ldd	r24, Y+20	; 0x14
    2e52:	9d 89       	ldd	r25, Y+21	; 0x15
    2e54:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2e58:	88 23       	and	r24, r24
    2e5a:	d9 f1       	breq	.+118    	; 0x2ed2 <.L93>
    2e5c:	d4 f1       	brlt	.+116    	; 0x2ed2 <.L93>

00002e5e <.Loc.180>:
		__ticks = (uint16_t) (__ms * 10.0);
    2e5e:	20 e0       	ldi	r18, 0x00	; 0
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	40 e2       	ldi	r20, 0x20	; 32
    2e64:	51 e4       	ldi	r21, 0x41	; 65
    2e66:	6e 85       	ldd	r22, Y+14	; 0x0e
    2e68:	7f 85       	ldd	r23, Y+15	; 0x0f
    2e6a:	88 89       	ldd	r24, Y+16	; 0x10
    2e6c:	99 89       	ldd	r25, Y+17	; 0x11
    2e6e:	0e 94 4c 1a 	call	0x3498	; 0x3498 <__mulsf3>
    2e72:	6d ab       	std	Y+53, r22	; 0x35
    2e74:	7e ab       	std	Y+54, r23	; 0x36
    2e76:	8f ab       	std	Y+55, r24	; 0x37
    2e78:	98 af       	std	Y+56, r25	; 0x38
    2e7a:	8d a9       	ldd	r24, Y+53	; 0x35
    2e7c:	9e a9       	ldd	r25, Y+54	; 0x36
    2e7e:	af a9       	ldd	r26, Y+55	; 0x37
    2e80:	b8 ad       	ldd	r27, Y+56	; 0x38
    2e82:	89 a3       	std	Y+33, r24	; 0x21
    2e84:	9a a3       	std	Y+34, r25	; 0x22
    2e86:	ab a3       	std	Y+35, r26	; 0x23
    2e88:	bc a3       	std	Y+36, r27	; 0x24

00002e8a <.Loc.181>:
    2e8a:	69 a1       	ldd	r22, Y+33	; 0x21
    2e8c:	7a a1       	ldd	r23, Y+34	; 0x22
    2e8e:	8b a1       	ldd	r24, Y+35	; 0x23
    2e90:	9c a1       	ldd	r25, Y+36	; 0x24
    2e92:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2e96:	69 af       	std	Y+57, r22	; 0x39
    2e98:	7a af       	std	Y+58, r23	; 0x3a
    2e9a:	8b af       	std	Y+59, r24	; 0x3b
    2e9c:	9c af       	std	Y+60, r25	; 0x3c
    2e9e:	a9 ad       	ldd	r26, Y+57	; 0x39
    2ea0:	ba ad       	ldd	r27, Y+58	; 0x3a
    2ea2:	bf 8b       	std	Y+23, r27	; 0x17
    2ea4:	ae 8b       	std	Y+22, r26	; 0x16

00002ea6 <.Loc.182>:
		while(__ticks)
    2ea6:	10 c0       	rjmp	.+32     	; 0x2ec8 <.L79>

00002ea8 <.L80>:
    2ea8:	80 e9       	ldi	r24, 0x90	; 144
    2eaa:	91 e0       	ldi	r25, 0x01	; 1
    2eac:	99 8f       	std	Y+25, r25	; 0x19
    2eae:	88 8f       	std	Y+24, r24	; 0x18

00002eb0 <.LBB86>:
	__asm__ volatile (
    2eb0:	88 8d       	ldd	r24, Y+24	; 0x18
    2eb2:	99 8d       	ldd	r25, Y+25	; 0x19

00002eb4 <.L1^B9>:
    2eb4:	01 97       	sbiw	r24, 0x01	; 1
    2eb6:	f1 f7       	brne	.-4      	; 0x2eb4 <.L1^B9>
    2eb8:	99 8f       	std	Y+25, r25	; 0x19
    2eba:	88 8f       	std	Y+24, r24	; 0x18

00002ebc <.Loc.184>:
	...

00002ebe <.LBE86>:
			__ticks --;
    2ebe:	8e 89       	ldd	r24, Y+22	; 0x16
    2ec0:	9f 89       	ldd	r25, Y+23	; 0x17
    2ec2:	01 97       	sbiw	r24, 0x01	; 1
    2ec4:	9f 8b       	std	Y+23, r25	; 0x17
    2ec6:	8e 8b       	std	Y+22, r24	; 0x16

00002ec8 <.L79>:
		while(__ticks)
    2ec8:	8e 89       	ldd	r24, Y+22	; 0x16
    2eca:	9f 89       	ldd	r25, Y+23	; 0x17
    2ecc:	00 97       	sbiw	r24, 0x00	; 0
    2ece:	61 f7       	brne	.-40     	; 0x2ea8 <.L80>

00002ed0 <.Loc.187>:
		return;
    2ed0:	56 c0       	rjmp	.+172    	; 0x2f7e <.L71>

00002ed2 <.L93>:
		__ticks = (uint16_t)__tmp;
    2ed2:	6a 89       	ldd	r22, Y+18	; 0x12
    2ed4:	7b 89       	ldd	r23, Y+19	; 0x13
    2ed6:	8c 89       	ldd	r24, Y+20	; 0x14
    2ed8:	9d 89       	ldd	r25, Y+21	; 0x15
    2eda:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2ede:	21 96       	adiw	r28, 0x01	; 1
    2ee0:	6c af       	std	Y+60, r22	; 0x3c
    2ee2:	7d af       	std	Y+61, r23	; 0x3d
    2ee4:	8e af       	std	Y+62, r24	; 0x3e
    2ee6:	9f af       	std	Y+63, r25	; 0x3f
    2ee8:	21 97       	sbiw	r28, 0x01	; 1
    2eea:	ed ad       	ldd	r30, Y+61	; 0x3d
    2eec:	fe ad       	ldd	r31, Y+62	; 0x3e
    2eee:	ff 8b       	std	Y+23, r31	; 0x17
    2ef0:	ee 8b       	std	Y+22, r30	; 0x16

00002ef2 <.L76>:
    2ef2:	8e 89       	ldd	r24, Y+22	; 0x16
    2ef4:	9f 89       	ldd	r25, Y+23	; 0x17
    2ef6:	9b 8f       	std	Y+27, r25	; 0x1b
    2ef8:	8a 8f       	std	Y+26, r24	; 0x1a

00002efa <.LBB88>:
    2efa:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2efc:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002efe <.L1^B10>:
    2efe:	01 97       	sbiw	r24, 0x01	; 1
    2f00:	f1 f7       	brne	.-4      	; 0x2efe <.L1^B10>
    2f02:	9b 8f       	std	Y+27, r25	; 0x1b
    2f04:	8a 8f       	std	Y+26, r24	; 0x1a

00002f06 <.Loc.190>:
}
    2f06:	3b c0       	rjmp	.+118    	; 0x2f7e <.L71>

00002f08 <.L91>:
	else if (__tmp > 255)
    2f08:	20 e0       	ldi	r18, 0x00	; 0
    2f0a:	30 e0       	ldi	r19, 0x00	; 0
    2f0c:	4f e7       	ldi	r20, 0x7F	; 127
    2f0e:	53 e4       	ldi	r21, 0x43	; 67
    2f10:	6d 81       	ldd	r22, Y+5	; 0x05
    2f12:	7e 81       	ldd	r23, Y+6	; 0x06
    2f14:	8f 81       	ldd	r24, Y+7	; 0x07
    2f16:	98 85       	ldd	r25, Y+8	; 0x08
    2f18:	0e 94 47 1a 	call	0x348e	; 0x348e <__gesf2>
    2f1c:	88 23       	and	r24, r24
    2f1e:	f9 f0       	breq	.+62     	; 0x2f5e <.L94>
    2f20:	f4 f0       	brlt	.+60     	; 0x2f5e <.L94>

00002f22 <.LBB90>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2f22:	69 85       	ldd	r22, Y+9	; 0x09
    2f24:	7a 85       	ldd	r23, Y+10	; 0x0a
    2f26:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f28:	9c 85       	ldd	r25, Y+12	; 0x0c
    2f2a:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2f2e:	25 96       	adiw	r28, 0x05	; 5
    2f30:	6c af       	std	Y+60, r22	; 0x3c
    2f32:	7d af       	std	Y+61, r23	; 0x3d
    2f34:	8e af       	std	Y+62, r24	; 0x3e
    2f36:	9f af       	std	Y+63, r25	; 0x3f
    2f38:	25 97       	sbiw	r28, 0x05	; 5
    2f3a:	23 96       	adiw	r28, 0x03	; 3
    2f3c:	8e ad       	ldd	r24, Y+62	; 0x3e
    2f3e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2f40:	23 97       	sbiw	r28, 0x03	; 3
    2f42:	9d 8f       	std	Y+29, r25	; 0x1d
    2f44:	8c 8f       	std	Y+28, r24	; 0x1c
    2f46:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2f48:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2f4a:	9f 8f       	std	Y+31, r25	; 0x1f
    2f4c:	8e 8f       	std	Y+30, r24	; 0x1e

00002f4e <.LBB91>:
	__asm__ volatile (
    2f4e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f50:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002f52 <.L1^B11>:
    2f52:	01 97       	sbiw	r24, 0x01	; 1
    2f54:	f1 f7       	brne	.-4      	; 0x2f52 <.L1^B11>
    2f56:	9f 8f       	std	Y+31, r25	; 0x1f
    2f58:	8e 8f       	std	Y+30, r24	; 0x1e

00002f5a <.Loc.194>:
	...

00002f5c <.LBE91>:
		return;
    2f5c:	17 c0       	rjmp	.+46     	; 0x2f8c <.L84>

00002f5e <.L94>:
		__ticks = (uint8_t)__tmp;
    2f5e:	6d 81       	ldd	r22, Y+5	; 0x05
    2f60:	7e 81       	ldd	r23, Y+6	; 0x06
    2f62:	8f 81       	ldd	r24, Y+7	; 0x07
    2f64:	98 85       	ldd	r25, Y+8	; 0x08
    2f66:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    2f6a:	29 96       	adiw	r28, 0x09	; 9
    2f6c:	6c af       	std	Y+60, r22	; 0x3c
    2f6e:	7d af       	std	Y+61, r23	; 0x3d
    2f70:	8e af       	std	Y+62, r24	; 0x3e
    2f72:	9f af       	std	Y+63, r25	; 0x3f
    2f74:	29 97       	sbiw	r28, 0x09	; 9
    2f76:	26 96       	adiw	r28, 0x06	; 6
    2f78:	9f ad       	ldd	r25, Y+63	; 0x3f
    2f7a:	26 97       	sbiw	r28, 0x06	; 6
    2f7c:	9d 87       	std	Y+13, r25	; 0x0d

00002f7e <.L71>:
    2f7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f80:	88 a3       	std	Y+32, r24	; 0x20

00002f82 <.LBB93>:
	__asm__ volatile (
    2f82:	88 a1       	ldd	r24, Y+32	; 0x20

00002f84 <.L1^B12>:
    2f84:	8a 95       	dec	r24
    2f86:	f1 f7       	brne	.-4      	; 0x2f84 <.L1^B12>
    2f88:	88 a3       	std	Y+32, r24	; 0x20

00002f8a <.Loc.198>:
	...

00002f8c <.L84>:
    _delay_us(10);
    port_tri_R &= (~(1<<pin_tri_R));
    2f8c:	82 e2       	ldi	r24, 0x22	; 34
    2f8e:	90 e0       	ldi	r25, 0x00	; 0
    2f90:	dc 01       	movw	r26, r24
    2f92:	2c 91       	ld	r18, X

00002f94 <.Loc.200>:
    2f94:	82 e2       	ldi	r24, 0x22	; 34
    2f96:	90 e0       	ldi	r25, 0x00	; 0

00002f98 <.Loc.201>:
    2f98:	2f 7e       	andi	r18, 0xEF	; 239
    2f9a:	fc 01       	movw	r30, r24
    2f9c:	20 83       	st	Z, r18

00002f9e <.Loc.202>:
}
    2f9e:	00 00       	nop
    2fa0:	c8 5b       	subi	r28, 0xB8	; 184
    2fa2:	df 4f       	sbci	r29, 0xFF	; 255
    2fa4:	0f b6       	in	r0, 0x3f	; 63
    2fa6:	f8 94       	cli
    2fa8:	de bf       	out	0x3e, r29	; 62
    2faa:	0f be       	out	0x3f, r0	; 63
    2fac:	cd bf       	out	0x3d, r28	; 61
    2fae:	df 91       	pop	r29
    2fb0:	cf 91       	pop	r28
    2fb2:	08 95       	ret

00002fb4 <__vector_15>:

ISR(TIMER2_OVF_vect){
    2fb4:	1f 92       	push	r1
    2fb6:	0f 92       	push	r0
    2fb8:	0f b6       	in	r0, 0x3f	; 63
    2fba:	0f 92       	push	r0
    2fbc:	11 24       	eor	r1, r1
    2fbe:	8f 93       	push	r24
    2fc0:	9f 93       	push	r25
    2fc2:	cf 93       	push	r28
    2fc4:	df 93       	push	r29
    2fc6:	cd b7       	in	r28, 0x3d	; 61
    2fc8:	de b7       	in	r29, 0x3e	; 62

00002fca <.Loc.204>:
    count++;
    2fca:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2fce:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2fd2:	01 96       	adiw	r24, 0x01	; 1
    2fd4:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <count+0x1>
    2fd8:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <count>

00002fdc <.Loc.205>:
}
    2fdc:	00 00       	nop
    2fde:	df 91       	pop	r29
    2fe0:	cf 91       	pop	r28
    2fe2:	9f 91       	pop	r25
    2fe4:	8f 91       	pop	r24
    2fe6:	0f 90       	pop	r0
    2fe8:	0f be       	out	0x3f, r0	; 63
    2fea:	0f 90       	pop	r0
    2fec:	1f 90       	pop	r1
    2fee:	18 95       	reti

00002ff0 <__divmodhi4>:
    2ff0:	97 fb       	bst	r25, 7

00002ff2 <.Loc.1>:
    2ff2:	07 2e       	mov	r0, r23

00002ff4 <.Loc.2>:
    2ff4:	16 f4       	brtc	.+4      	; 0x2ffa <.L^B1>

00002ff6 <.Loc.3>:
    2ff6:	00 94       	com	r0

00002ff8 <.Loc.4>:
    2ff8:	07 d0       	rcall	.+14     	; 0x3008 <__divmodhi4_neg1>

00002ffa <.L^B1>:
    2ffa:	77 fd       	sbrc	r23, 7

00002ffc <.Loc.6>:
    2ffc:	09 d0       	rcall	.+18     	; 0x3010 <__divmodhi4_neg2>

00002ffe <.Loc.7>:
    2ffe:	0e 94 45 18 	call	0x308a	; 0x308a <__udivmodhi4>

00003002 <.Loc.8>:
    3002:	07 fc       	sbrc	r0, 7

00003004 <.Loc.9>:
    3004:	05 d0       	rcall	.+10     	; 0x3010 <__divmodhi4_neg2>

00003006 <.Loc.10>:
    3006:	3e f4       	brtc	.+14     	; 0x3016 <__divmodhi4_exit>

00003008 <__divmodhi4_neg1>:
    3008:	90 95       	com	r25

0000300a <.Loc.12>:
    300a:	81 95       	neg	r24

0000300c <.Loc.13>:
    300c:	9f 4f       	sbci	r25, 0xFF	; 255

0000300e <.Loc.14>:
    300e:	08 95       	ret

00003010 <__divmodhi4_neg2>:
    3010:	70 95       	com	r23

00003012 <.Loc.16>:
    3012:	61 95       	neg	r22

00003014 <.Loc.17>:
    3014:	7f 4f       	sbci	r23, 0xFF	; 255

00003016 <__divmodhi4_exit>:
    3016:	08 95       	ret

00003018 <__divmodsi4>:
    3018:	05 2e       	mov	r0, r21

0000301a <.Loc.1>:
    301a:	97 fb       	bst	r25, 7

0000301c <.Loc.2>:
    301c:	1e f4       	brtc	.+6      	; 0x3024 <.L^B1>

0000301e <.Loc.3>:
    301e:	00 94       	com	r0

00003020 <.Loc.4>:
    3020:	0e 94 23 18 	call	0x3046	; 0x3046 <__negsi2>

00003024 <.L^B1>:
    3024:	57 fd       	sbrc	r21, 7

00003026 <.Loc.6>:
    3026:	07 d0       	rcall	.+14     	; 0x3036 <__divmodsi4_neg2>

00003028 <.Loc.7>:
    3028:	0e 94 59 18 	call	0x30b2	; 0x30b2 <__udivmodsi4>

0000302c <.Loc.8>:
    302c:	07 fc       	sbrc	r0, 7

0000302e <.Loc.9>:
    302e:	03 d0       	rcall	.+6      	; 0x3036 <__divmodsi4_neg2>

00003030 <.Loc.10>:
    3030:	4e f4       	brtc	.+18     	; 0x3044 <__divmodsi4_exit>

00003032 <.Loc.11>:
    3032:	0c 94 23 18 	jmp	0x3046	; 0x3046 <__negsi2>

00003036 <__divmodsi4_neg2>:
    3036:	50 95       	com	r21

00003038 <.Loc.13>:
    3038:	40 95       	com	r20

0000303a <.Loc.14>:
    303a:	30 95       	com	r19

0000303c <.Loc.15>:
    303c:	21 95       	neg	r18

0000303e <.Loc.16>:
    303e:	3f 4f       	sbci	r19, 0xFF	; 255

00003040 <.Loc.17>:
    3040:	4f 4f       	sbci	r20, 0xFF	; 255

00003042 <.Loc.18>:
    3042:	5f 4f       	sbci	r21, 0xFF	; 255

00003044 <__divmodsi4_exit>:
    3044:	08 95       	ret

00003046 <__negsi2>:
    3046:	90 95       	com	r25
    3048:	80 95       	com	r24
    304a:	70 95       	com	r23
    304c:	61 95       	neg	r22
    304e:	7f 4f       	sbci	r23, 0xFF	; 255
    3050:	8f 4f       	sbci	r24, 0xFF	; 255
    3052:	9f 4f       	sbci	r25, 0xFF	; 255

00003054 <.Loc.1>:
    3054:	08 95       	ret

00003056 <__umulhisi3>:
    3056:	a2 9f       	mul	r26, r18

00003058 <.Loc.1>:
    3058:	b0 01       	movw	r22, r0

0000305a <.Loc.2>:
    305a:	b3 9f       	mul	r27, r19

0000305c <.Loc.3>:
    305c:	c0 01       	movw	r24, r0

0000305e <.Loc.4>:
    305e:	a3 9f       	mul	r26, r19

00003060 <.Loc.5>:
    3060:	70 0d       	add	r23, r0

00003062 <.Loc.6>:
    3062:	81 1d       	adc	r24, r1

00003064 <.Loc.7>:
    3064:	11 24       	eor	r1, r1

00003066 <.Loc.8>:
    3066:	91 1d       	adc	r25, r1

00003068 <.Loc.9>:
    3068:	b2 9f       	mul	r27, r18

0000306a <.Loc.10>:
    306a:	70 0d       	add	r23, r0

0000306c <.Loc.11>:
    306c:	81 1d       	adc	r24, r1

0000306e <.Loc.12>:
    306e:	11 24       	eor	r1, r1

00003070 <.Loc.13>:
    3070:	91 1d       	adc	r25, r1

00003072 <.Loc.14>:
    3072:	08 95       	ret

00003074 <__muluhisi3>:
    3074:	0e 94 2b 18 	call	0x3056	; 0x3056 <__umulhisi3>

00003078 <.Loc.1>:
    3078:	a5 9f       	mul	r26, r21

0000307a <.Loc.2>:
    307a:	90 0d       	add	r25, r0

0000307c <.Loc.3>:
    307c:	b4 9f       	mul	r27, r20

0000307e <.Loc.4>:
    307e:	90 0d       	add	r25, r0

00003080 <.Loc.5>:
    3080:	a4 9f       	mul	r26, r20

00003082 <.Loc.6>:
    3082:	80 0d       	add	r24, r0

00003084 <.Loc.7>:
    3084:	91 1d       	adc	r25, r1

00003086 <.Loc.8>:
    3086:	11 24       	eor	r1, r1

00003088 <.Loc.9>:
    3088:	08 95       	ret

0000308a <__udivmodhi4>:
    308a:	aa 1b       	sub	r26, r26

0000308c <.Loc.1>:
    308c:	bb 1b       	sub	r27, r27

0000308e <.Loc.2>:
    308e:	51 e1       	ldi	r21, 0x11	; 17

00003090 <.Loc.3>:
    3090:	07 c0       	rjmp	.+14     	; 0x30a0 <__udivmodhi4_ep>

00003092 <__udivmodhi4_loop>:
    3092:	aa 1f       	adc	r26, r26

00003094 <.Loc.5>:
    3094:	bb 1f       	adc	r27, r27

00003096 <.Loc.6>:
    3096:	a6 17       	cp	r26, r22

00003098 <.Loc.7>:
    3098:	b7 07       	cpc	r27, r23

0000309a <.Loc.8>:
    309a:	10 f0       	brcs	.+4      	; 0x30a0 <__udivmodhi4_ep>

0000309c <.Loc.9>:
    309c:	a6 1b       	sub	r26, r22

0000309e <.Loc.10>:
    309e:	b7 0b       	sbc	r27, r23

000030a0 <__udivmodhi4_ep>:
    30a0:	88 1f       	adc	r24, r24

000030a2 <.Loc.12>:
    30a2:	99 1f       	adc	r25, r25

000030a4 <.Loc.13>:
    30a4:	5a 95       	dec	r21

000030a6 <.Loc.14>:
    30a6:	a9 f7       	brne	.-22     	; 0x3092 <__udivmodhi4_loop>

000030a8 <.Loc.15>:
    30a8:	80 95       	com	r24

000030aa <.Loc.16>:
    30aa:	90 95       	com	r25

000030ac <.Loc.17>:
    30ac:	bc 01       	movw	r22, r24

000030ae <.Loc.18>:
    30ae:	cd 01       	movw	r24, r26

000030b0 <.Loc.19>:
    30b0:	08 95       	ret

000030b2 <__udivmodsi4>:
    30b2:	a1 e2       	ldi	r26, 0x21	; 33

000030b4 <.Loc.1>:
    30b4:	1a 2e       	mov	r1, r26

000030b6 <.Loc.2>:
    30b6:	aa 1b       	sub	r26, r26

000030b8 <.Loc.3>:
    30b8:	bb 1b       	sub	r27, r27

000030ba <.Loc.4>:
    30ba:	fd 01       	movw	r30, r26

000030bc <.Loc.5>:
    30bc:	0d c0       	rjmp	.+26     	; 0x30d8 <__udivmodsi4_ep>

000030be <__udivmodsi4_loop>:
    30be:	aa 1f       	adc	r26, r26

000030c0 <.Loc.7>:
    30c0:	bb 1f       	adc	r27, r27

000030c2 <.Loc.8>:
    30c2:	ee 1f       	adc	r30, r30

000030c4 <.Loc.9>:
    30c4:	ff 1f       	adc	r31, r31

000030c6 <.Loc.10>:
    30c6:	a2 17       	cp	r26, r18

000030c8 <.Loc.11>:
    30c8:	b3 07       	cpc	r27, r19

000030ca <.Loc.12>:
    30ca:	e4 07       	cpc	r30, r20

000030cc <.Loc.13>:
    30cc:	f5 07       	cpc	r31, r21

000030ce <.Loc.14>:
    30ce:	20 f0       	brcs	.+8      	; 0x30d8 <__udivmodsi4_ep>

000030d0 <.Loc.15>:
    30d0:	a2 1b       	sub	r26, r18

000030d2 <.Loc.16>:
    30d2:	b3 0b       	sbc	r27, r19

000030d4 <.Loc.17>:
    30d4:	e4 0b       	sbc	r30, r20

000030d6 <.Loc.18>:
    30d6:	f5 0b       	sbc	r31, r21

000030d8 <__udivmodsi4_ep>:
    30d8:	66 1f       	adc	r22, r22

000030da <.Loc.20>:
    30da:	77 1f       	adc	r23, r23

000030dc <.Loc.21>:
    30dc:	88 1f       	adc	r24, r24

000030de <.Loc.22>:
    30de:	99 1f       	adc	r25, r25

000030e0 <.Loc.23>:
    30e0:	1a 94       	dec	r1

000030e2 <.Loc.24>:
    30e2:	69 f7       	brne	.-38     	; 0x30be <__udivmodsi4_loop>

000030e4 <.Loc.25>:
    30e4:	60 95       	com	r22

000030e6 <.Loc.26>:
    30e6:	70 95       	com	r23

000030e8 <.Loc.27>:
    30e8:	80 95       	com	r24

000030ea <.Loc.28>:
    30ea:	90 95       	com	r25

000030ec <.Loc.29>:
    30ec:	9b 01       	movw	r18, r22

000030ee <.Loc.30>:
    30ee:	ac 01       	movw	r20, r24

000030f0 <.Loc.31>:
    30f0:	bd 01       	movw	r22, r26

000030f2 <.Loc.32>:
    30f2:	cf 01       	movw	r24, r30

000030f4 <.Loc.33>:
    30f4:	08 95       	ret

000030f6 <__subsf3>:
    30f6:	50 58       	subi	r21, 0x80	; 128

000030f8 <__addsf3>:
    30f8:	bb 27       	eor	r27, r27
    30fa:	aa 27       	eor	r26, r26
    30fc:	0e 94 93 18 	call	0x3126	; 0x3126 <__addsf3x>
    3100:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_round>

00003104 <.L^B1>:
    3104:	0e 94 ff 19 	call	0x33fe	; 0x33fe <__fp_pscA>
    3108:	38 f0       	brcs	.+14     	; 0x3118 <.L_nan>
    310a:	0e 94 06 1a 	call	0x340c	; 0x340c <__fp_pscB>
    310e:	20 f0       	brcs	.+8      	; 0x3118 <.L_nan>
    3110:	39 f4       	brne	.+14     	; 0x3120 <.L_inf>
    3112:	9f 3f       	cpi	r25, 0xFF	; 255
    3114:	19 f4       	brne	.+6      	; 0x311c <.L_infB>
    3116:	26 f4       	brtc	.+8      	; 0x3120 <.L_inf>

00003118 <.L_nan>:
    3118:	0c 94 fc 19 	jmp	0x33f8	; 0x33f8 <__fp_nan>

0000311c <.L_infB>:
    311c:	0e f4       	brtc	.+2      	; 0x3120 <.L_inf>
    311e:	e0 95       	com	r30

00003120 <.L_inf>:
    3120:	e7 fb       	bst	r30, 7
    3122:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__fp_inf>

00003126 <__addsf3x>:
    3126:	e9 2f       	mov	r30, r25
    3128:	0e 94 1e 1a 	call	0x343c	; 0x343c <__fp_split3>
    312c:	58 f3       	brcs	.-42     	; 0x3104 <.L^B1>
    312e:	ba 17       	cp	r27, r26
    3130:	62 07       	cpc	r22, r18
    3132:	73 07       	cpc	r23, r19
    3134:	84 07       	cpc	r24, r20
    3136:	95 07       	cpc	r25, r21
    3138:	20 f0       	brcs	.+8      	; 0x3142 <.L2^B1>
    313a:	79 f4       	brne	.+30     	; 0x315a <.L4^B1>
    313c:	a6 f5       	brtc	.+104    	; 0x31a6 <.L_add>
    313e:	0c 94 40 1a 	jmp	0x3480	; 0x3480 <__fp_zero>

00003142 <.L2^B1>:
    3142:	0e f4       	brtc	.+2      	; 0x3146 <.L3^B1>
    3144:	e0 95       	com	r30

00003146 <.L3^B1>:
    3146:	0b 2e       	mov	r0, r27
    3148:	ba 2f       	mov	r27, r26
    314a:	a0 2d       	mov	r26, r0
    314c:	0b 01       	movw	r0, r22
    314e:	b9 01       	movw	r22, r18
    3150:	90 01       	movw	r18, r0
    3152:	0c 01       	movw	r0, r24
    3154:	ca 01       	movw	r24, r20
    3156:	a0 01       	movw	r20, r0
    3158:	11 24       	eor	r1, r1

0000315a <.L4^B1>:
    315a:	ff 27       	eor	r31, r31
    315c:	59 1b       	sub	r21, r25

0000315e <.L5^B1>:
    315e:	99 f0       	breq	.+38     	; 0x3186 <.L7^B1>
    3160:	59 3f       	cpi	r21, 0xF9	; 249
    3162:	50 f4       	brcc	.+20     	; 0x3178 <.L6^B1>
    3164:	50 3e       	cpi	r21, 0xE0	; 224
    3166:	68 f1       	brcs	.+90     	; 0x31c2 <.L_ret>
    3168:	1a 16       	cp	r1, r26
    316a:	f0 40       	sbci	r31, 0x00	; 0
    316c:	a2 2f       	mov	r26, r18
    316e:	23 2f       	mov	r18, r19
    3170:	34 2f       	mov	r19, r20
    3172:	44 27       	eor	r20, r20
    3174:	58 5f       	subi	r21, 0xF8	; 248
    3176:	f3 cf       	rjmp	.-26     	; 0x315e <.L5^B1>

00003178 <.L6^B1>:
    3178:	46 95       	lsr	r20
    317a:	37 95       	ror	r19
    317c:	27 95       	ror	r18
    317e:	a7 95       	ror	r26
    3180:	f0 40       	sbci	r31, 0x00	; 0
    3182:	53 95       	inc	r21
    3184:	c9 f7       	brne	.-14     	; 0x3178 <.L6^B1>

00003186 <.L7^B1>:
    3186:	7e f4       	brtc	.+30     	; 0x31a6 <.L_add>
    3188:	1f 16       	cp	r1, r31
    318a:	ba 0b       	sbc	r27, r26
    318c:	62 0b       	sbc	r22, r18
    318e:	73 0b       	sbc	r23, r19
    3190:	84 0b       	sbc	r24, r20
    3192:	ba f0       	brmi	.+46     	; 0x31c2 <.L_ret>

00003194 <.L8^B1>:
    3194:	91 50       	subi	r25, 0x01	; 1
    3196:	a1 f0       	breq	.+40     	; 0x31c0 <.L9^B1>
    3198:	ff 0f       	add	r31, r31
    319a:	bb 1f       	adc	r27, r27
    319c:	66 1f       	adc	r22, r22
    319e:	77 1f       	adc	r23, r23
    31a0:	88 1f       	adc	r24, r24
    31a2:	c2 f7       	brpl	.-16     	; 0x3194 <.L8^B1>
    31a4:	0e c0       	rjmp	.+28     	; 0x31c2 <.L_ret>

000031a6 <.L_add>:
    31a6:	ba 0f       	add	r27, r26
    31a8:	62 1f       	adc	r22, r18
    31aa:	73 1f       	adc	r23, r19
    31ac:	84 1f       	adc	r24, r20
    31ae:	48 f4       	brcc	.+18     	; 0x31c2 <.L_ret>
    31b0:	87 95       	ror	r24
    31b2:	77 95       	ror	r23
    31b4:	67 95       	ror	r22
    31b6:	b7 95       	ror	r27
    31b8:	f7 95       	ror	r31
    31ba:	9e 3f       	cpi	r25, 0xFE	; 254
    31bc:	08 f0       	brcs	.+2      	; 0x31c0 <.L9^B1>
    31be:	b0 cf       	rjmp	.-160    	; 0x3120 <.L_inf>

000031c0 <.L9^B1>:
    31c0:	93 95       	inc	r25

000031c2 <.L_ret>:
    31c2:	88 0f       	add	r24, r24
    31c4:	08 f0       	brcs	.+2      	; 0x31c8 <.L1^B1>
    31c6:	99 27       	eor	r25, r25

000031c8 <.L1^B1>:
    31c8:	ee 0f       	add	r30, r30
    31ca:	97 95       	ror	r25
    31cc:	87 95       	ror	r24
    31ce:	08 95       	ret

000031d0 <__cmpsf2>:
    31d0:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <__fp_cmp>
    31d4:	08 f4       	brcc	.+2      	; 0x31d8 <.L1^B1>
    31d6:	81 e0       	ldi	r24, 0x01	; 1

000031d8 <.L1^B1>:
    31d8:	08 95       	ret

000031da <__divsf3>:
    31da:	0e 94 01 19 	call	0x3202	; 0x3202 <__divsf3x>
    31de:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_round>

000031e2 <.L^B1>:
    31e2:	0e 94 06 1a 	call	0x340c	; 0x340c <__fp_pscB>
    31e6:	58 f0       	brcs	.+22     	; 0x31fe <.L_nan>
    31e8:	0e 94 ff 19 	call	0x33fe	; 0x33fe <__fp_pscA>
    31ec:	40 f0       	brcs	.+16     	; 0x31fe <.L_nan>
    31ee:	29 f4       	brne	.+10     	; 0x31fa <.L_zr>
    31f0:	5f 3f       	cpi	r21, 0xFF	; 255
    31f2:	29 f0       	breq	.+10     	; 0x31fe <.L_nan>

000031f4 <.L_inf>:
    31f4:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__fp_inf>

000031f8 <.L1^B1>:
    31f8:	51 11       	cpse	r21, r1

000031fa <.L_zr>:
    31fa:	0c 94 41 1a 	jmp	0x3482	; 0x3482 <__fp_szero>

000031fe <.L_nan>:
    31fe:	0c 94 fc 19 	jmp	0x33f8	; 0x33f8 <__fp_nan>

00003202 <__divsf3x>:
    3202:	0e 94 1e 1a 	call	0x343c	; 0x343c <__fp_split3>
    3206:	68 f3       	brcs	.-38     	; 0x31e2 <.L^B1>

00003208 <__divsf3_pse>:
    3208:	99 23       	and	r25, r25
    320a:	b1 f3       	breq	.-20     	; 0x31f8 <.L1^B1>
    320c:	55 23       	and	r21, r21
    320e:	91 f3       	breq	.-28     	; 0x31f4 <.L_inf>
    3210:	95 1b       	sub	r25, r21
    3212:	55 0b       	sbc	r21, r21
    3214:	bb 27       	eor	r27, r27
    3216:	aa 27       	eor	r26, r26

00003218 <.L2^B1>:
    3218:	62 17       	cp	r22, r18
    321a:	73 07       	cpc	r23, r19
    321c:	84 07       	cpc	r24, r20
    321e:	38 f0       	brcs	.+14     	; 0x322e <.L3^B1>
    3220:	9f 5f       	subi	r25, 0xFF	; 255
    3222:	5f 4f       	sbci	r21, 0xFF	; 255
    3224:	22 0f       	add	r18, r18
    3226:	33 1f       	adc	r19, r19
    3228:	44 1f       	adc	r20, r20
    322a:	aa 1f       	adc	r26, r26
    322c:	a9 f3       	breq	.-22     	; 0x3218 <.L2^B1>

0000322e <.L3^B1>:
    322e:	35 d0       	rcall	.+106    	; 0x329a <.L_div>
    3230:	0e 2e       	mov	r0, r30
    3232:	3a f0       	brmi	.+14     	; 0x3242 <.L5^B1>

00003234 <.L4^B1>:
    3234:	e0 e8       	ldi	r30, 0x80	; 128
    3236:	32 d0       	rcall	.+100    	; 0x329c <.L_div1>
    3238:	91 50       	subi	r25, 0x01	; 1
    323a:	50 40       	sbci	r21, 0x00	; 0
    323c:	e6 95       	lsr	r30
    323e:	00 1c       	adc	r0, r0
    3240:	ca f7       	brpl	.-14     	; 0x3234 <.L4^B1>

00003242 <.L5^B1>:
    3242:	2b d0       	rcall	.+86     	; 0x329a <.L_div>
    3244:	fe 2f       	mov	r31, r30
    3246:	29 d0       	rcall	.+82     	; 0x329a <.L_div>
    3248:	66 0f       	add	r22, r22
    324a:	77 1f       	adc	r23, r23
    324c:	88 1f       	adc	r24, r24
    324e:	bb 1f       	adc	r27, r27
    3250:	26 17       	cp	r18, r22
    3252:	37 07       	cpc	r19, r23
    3254:	48 07       	cpc	r20, r24
    3256:	ab 07       	cpc	r26, r27
    3258:	b0 e8       	ldi	r27, 0x80	; 128
    325a:	09 f0       	breq	.+2      	; 0x325e <.L4^B2>
    325c:	bb 0b       	sbc	r27, r27

0000325e <.L4^B2>:
    325e:	80 2d       	mov	r24, r0
    3260:	bf 01       	movw	r22, r30
    3262:	ff 27       	eor	r31, r31
    3264:	93 58       	subi	r25, 0x83	; 131
    3266:	5f 4f       	sbci	r21, 0xFF	; 255
    3268:	3a f0       	brmi	.+14     	; 0x3278 <.L13^B1>
    326a:	9e 3f       	cpi	r25, 0xFE	; 254
    326c:	51 05       	cpc	r21, r1
    326e:	78 f0       	brcs	.+30     	; 0x328e <.L15^B1>
    3270:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__fp_inf>

00003274 <.L12^B1>:
    3274:	0c 94 41 1a 	jmp	0x3482	; 0x3482 <__fp_szero>

00003278 <.L13^B1>:
    3278:	5f 3f       	cpi	r21, 0xFF	; 255
    327a:	e4 f3       	brlt	.-8      	; 0x3274 <.L12^B1>
    327c:	98 3e       	cpi	r25, 0xE8	; 232
    327e:	d4 f3       	brlt	.-12     	; 0x3274 <.L12^B1>

00003280 <.L14^B1>:
    3280:	86 95       	lsr	r24
    3282:	77 95       	ror	r23
    3284:	67 95       	ror	r22
    3286:	b7 95       	ror	r27
    3288:	f7 95       	ror	r31
    328a:	9f 5f       	subi	r25, 0xFF	; 255
    328c:	c9 f7       	brne	.-14     	; 0x3280 <.L14^B1>

0000328e <.L15^B1>:
    328e:	88 0f       	add	r24, r24
    3290:	91 1d       	adc	r25, r1
    3292:	96 95       	lsr	r25
    3294:	87 95       	ror	r24
    3296:	97 f9       	bld	r25, 7
    3298:	08 95       	ret

0000329a <.L_div>:
    329a:	e1 e0       	ldi	r30, 0x01	; 1

0000329c <.L_div1>:
    329c:	66 0f       	add	r22, r22
    329e:	77 1f       	adc	r23, r23
    32a0:	88 1f       	adc	r24, r24
    32a2:	bb 1f       	adc	r27, r27
    32a4:	62 17       	cp	r22, r18
    32a6:	73 07       	cpc	r23, r19
    32a8:	84 07       	cpc	r24, r20
    32aa:	ba 07       	cpc	r27, r26
    32ac:	20 f0       	brcs	.+8      	; 0x32b6 <.L2^B2>
    32ae:	62 1b       	sub	r22, r18
    32b0:	73 0b       	sbc	r23, r19
    32b2:	84 0b       	sbc	r24, r20
    32b4:	ba 0b       	sbc	r27, r26

000032b6 <.L2^B2>:
    32b6:	ee 1f       	adc	r30, r30
    32b8:	88 f7       	brcc	.-30     	; 0x329c <.L_div1>
    32ba:	e0 95       	com	r30
    32bc:	08 95       	ret

000032be <__fixsfsi>:
    32be:	0e 94 66 19 	call	0x32cc	; 0x32cc <__fixunssfsi>
    32c2:	68 94       	set
    32c4:	b1 11       	cpse	r27, r1
    32c6:	0c 94 41 1a 	jmp	0x3482	; 0x3482 <__fp_szero>
    32ca:	08 95       	ret

000032cc <__fixunssfsi>:
    32cc:	0e 94 26 1a 	call	0x344c	; 0x344c <__fp_splitA>
    32d0:	88 f0       	brcs	.+34     	; 0x32f4 <.L_err>
    32d2:	9f 57       	subi	r25, 0x7F	; 127
    32d4:	98 f0       	brcs	.+38     	; 0x32fc <.L_zr>
    32d6:	b9 2f       	mov	r27, r25
    32d8:	99 27       	eor	r25, r25
    32da:	b7 51       	subi	r27, 0x17	; 23
    32dc:	b0 f0       	brcs	.+44     	; 0x330a <.L4^B1>
    32de:	e1 f0       	breq	.+56     	; 0x3318 <.L_sign>

000032e0 <.L1^B1>:
    32e0:	66 0f       	add	r22, r22
    32e2:	77 1f       	adc	r23, r23
    32e4:	88 1f       	adc	r24, r24
    32e6:	99 1f       	adc	r25, r25
    32e8:	1a f0       	brmi	.+6      	; 0x32f0 <.L2^B1>
    32ea:	ba 95       	dec	r27
    32ec:	c9 f7       	brne	.-14     	; 0x32e0 <.L1^B1>
    32ee:	14 c0       	rjmp	.+40     	; 0x3318 <.L_sign>

000032f0 <.L2^B1>:
    32f0:	b1 30       	cpi	r27, 0x01	; 1
    32f2:	91 f0       	breq	.+36     	; 0x3318 <.L_sign>

000032f4 <.L_err>:
    32f4:	0e 94 40 1a 	call	0x3480	; 0x3480 <__fp_zero>
    32f8:	b1 e0       	ldi	r27, 0x01	; 1
    32fa:	08 95       	ret

000032fc <.L_zr>:
    32fc:	0c 94 40 1a 	jmp	0x3480	; 0x3480 <__fp_zero>

00003300 <.L3^B1>:
    3300:	67 2f       	mov	r22, r23
    3302:	78 2f       	mov	r23, r24
    3304:	88 27       	eor	r24, r24
    3306:	b8 5f       	subi	r27, 0xF8	; 248
    3308:	39 f0       	breq	.+14     	; 0x3318 <.L_sign>

0000330a <.L4^B1>:
    330a:	b9 3f       	cpi	r27, 0xF9	; 249
    330c:	cc f3       	brlt	.-14     	; 0x3300 <.L3^B1>

0000330e <.L5^B1>:
    330e:	86 95       	lsr	r24
    3310:	77 95       	ror	r23
    3312:	67 95       	ror	r22
    3314:	b3 95       	inc	r27
    3316:	d9 f7       	brne	.-10     	; 0x330e <.L5^B1>

00003318 <.L_sign>:
    3318:	3e f4       	brtc	.+14     	; 0x3328 <.L6^B1>
    331a:	90 95       	com	r25
    331c:	80 95       	com	r24
    331e:	70 95       	com	r23
    3320:	61 95       	neg	r22
    3322:	7f 4f       	sbci	r23, 0xFF	; 255
    3324:	8f 4f       	sbci	r24, 0xFF	; 255
    3326:	9f 4f       	sbci	r25, 0xFF	; 255

00003328 <.L6^B1>:
    3328:	08 95       	ret

0000332a <__floatunsisf>:
    332a:	e8 94       	clt
    332c:	09 c0       	rjmp	.+18     	; 0x3340 <.L1^B1>

0000332e <__floatsisf>:
    332e:	97 fb       	bst	r25, 7
    3330:	3e f4       	brtc	.+14     	; 0x3340 <.L1^B1>
    3332:	90 95       	com	r25
    3334:	80 95       	com	r24
    3336:	70 95       	com	r23
    3338:	61 95       	neg	r22
    333a:	7f 4f       	sbci	r23, 0xFF	; 255
    333c:	8f 4f       	sbci	r24, 0xFF	; 255
    333e:	9f 4f       	sbci	r25, 0xFF	; 255

00003340 <.L1^B1>:
    3340:	99 23       	and	r25, r25
    3342:	a9 f0       	breq	.+42     	; 0x336e <.L4^B1>
    3344:	f9 2f       	mov	r31, r25
    3346:	96 e9       	ldi	r25, 0x96	; 150
    3348:	bb 27       	eor	r27, r27

0000334a <.L2^B1>:
    334a:	93 95       	inc	r25
    334c:	f6 95       	lsr	r31
    334e:	87 95       	ror	r24
    3350:	77 95       	ror	r23
    3352:	67 95       	ror	r22
    3354:	b7 95       	ror	r27
    3356:	f1 11       	cpse	r31, r1
    3358:	f8 cf       	rjmp	.-16     	; 0x334a <.L2^B1>
    335a:	fa f4       	brpl	.+62     	; 0x339a <.L_pack>
    335c:	bb 0f       	add	r27, r27
    335e:	11 f4       	brne	.+4      	; 0x3364 <.L3^B1>
    3360:	60 ff       	sbrs	r22, 0
    3362:	1b c0       	rjmp	.+54     	; 0x339a <.L_pack>

00003364 <.L3^B1>:
    3364:	6f 5f       	subi	r22, 0xFF	; 255
    3366:	7f 4f       	sbci	r23, 0xFF	; 255
    3368:	8f 4f       	sbci	r24, 0xFF	; 255
    336a:	9f 4f       	sbci	r25, 0xFF	; 255
    336c:	16 c0       	rjmp	.+44     	; 0x339a <.L_pack>

0000336e <.L4^B1>:
    336e:	88 23       	and	r24, r24
    3370:	11 f0       	breq	.+4      	; 0x3376 <.L5^B1>
    3372:	96 e9       	ldi	r25, 0x96	; 150
    3374:	11 c0       	rjmp	.+34     	; 0x3398 <.L8^B1>

00003376 <.L5^B1>:
    3376:	77 23       	and	r23, r23
    3378:	21 f0       	breq	.+8      	; 0x3382 <.L6^B1>
    337a:	9e e8       	ldi	r25, 0x8E	; 142
    337c:	87 2f       	mov	r24, r23
    337e:	76 2f       	mov	r23, r22
    3380:	05 c0       	rjmp	.+10     	; 0x338c <.L7^B1>

00003382 <.L6^B1>:
    3382:	66 23       	and	r22, r22
    3384:	71 f0       	breq	.+28     	; 0x33a2 <.L9^B1>
    3386:	96 e8       	ldi	r25, 0x86	; 134
    3388:	86 2f       	mov	r24, r22
    338a:	70 e0       	ldi	r23, 0x00	; 0

0000338c <.L7^B1>:
    338c:	60 e0       	ldi	r22, 0x00	; 0
    338e:	2a f0       	brmi	.+10     	; 0x339a <.L_pack>

00003390 <.L10^B1>:
    3390:	9a 95       	dec	r25
    3392:	66 0f       	add	r22, r22
    3394:	77 1f       	adc	r23, r23
    3396:	88 1f       	adc	r24, r24

00003398 <.L8^B1>:
    3398:	da f7       	brpl	.-10     	; 0x3390 <.L10^B1>

0000339a <.L_pack>:
    339a:	88 0f       	add	r24, r24
    339c:	96 95       	lsr	r25
    339e:	87 95       	ror	r24
    33a0:	97 f9       	bld	r25, 7

000033a2 <.L9^B1>:
    33a2:	08 95       	ret

000033a4 <__fp_cmp>:
    33a4:	99 0f       	add	r25, r25
    33a6:	00 08       	sbc	r0, r0
    33a8:	55 0f       	add	r21, r21
    33aa:	aa 0b       	sbc	r26, r26
    33ac:	e0 e8       	ldi	r30, 0x80	; 128
    33ae:	fe ef       	ldi	r31, 0xFE	; 254
    33b0:	16 16       	cp	r1, r22
    33b2:	17 06       	cpc	r1, r23
    33b4:	e8 07       	cpc	r30, r24
    33b6:	f9 07       	cpc	r31, r25
    33b8:	c0 f0       	brcs	.+48     	; 0x33ea <.L9^B1>
    33ba:	12 16       	cp	r1, r18
    33bc:	13 06       	cpc	r1, r19
    33be:	e4 07       	cpc	r30, r20
    33c0:	f5 07       	cpc	r31, r21
    33c2:	98 f0       	brcs	.+38     	; 0x33ea <.L9^B1>
    33c4:	62 1b       	sub	r22, r18
    33c6:	73 0b       	sbc	r23, r19
    33c8:	84 0b       	sbc	r24, r20
    33ca:	95 0b       	sbc	r25, r21
    33cc:	39 f4       	brne	.+14     	; 0x33dc <.L1^B1>
    33ce:	0a 26       	eor	r0, r26
    33d0:	61 f0       	breq	.+24     	; 0x33ea <.L9^B1>
    33d2:	23 2b       	or	r18, r19
    33d4:	24 2b       	or	r18, r20
    33d6:	25 2b       	or	r18, r21
    33d8:	21 f4       	brne	.+8      	; 0x33e2 <.L2^B1>
    33da:	08 95       	ret

000033dc <.L1^B1>:
    33dc:	0a 26       	eor	r0, r26
    33de:	09 f4       	brne	.+2      	; 0x33e2 <.L2^B1>
    33e0:	a1 40       	sbci	r26, 0x01	; 1

000033e2 <.L2^B1>:
    33e2:	a6 95       	lsr	r26
    33e4:	8f ef       	ldi	r24, 0xFF	; 255
    33e6:	81 1d       	adc	r24, r1
    33e8:	81 1d       	adc	r24, r1

000033ea <.L9^B1>:
    33ea:	08 95       	ret

000033ec <__fp_inf>:
    33ec:	97 f9       	bld	r25, 7
    33ee:	9f 67       	ori	r25, 0x7F	; 127
    33f0:	80 e8       	ldi	r24, 0x80	; 128
    33f2:	70 e0       	ldi	r23, 0x00	; 0
    33f4:	60 e0       	ldi	r22, 0x00	; 0
    33f6:	08 95       	ret

000033f8 <__fp_nan>:
    33f8:	9f ef       	ldi	r25, 0xFF	; 255
    33fa:	80 ec       	ldi	r24, 0xC0	; 192
    33fc:	08 95       	ret

000033fe <__fp_pscA>:
    33fe:	00 24       	eor	r0, r0
    3400:	0a 94       	dec	r0
    3402:	16 16       	cp	r1, r22
    3404:	17 06       	cpc	r1, r23
    3406:	18 06       	cpc	r1, r24
    3408:	09 06       	cpc	r0, r25
    340a:	08 95       	ret

0000340c <__fp_pscB>:
    340c:	00 24       	eor	r0, r0
    340e:	0a 94       	dec	r0
    3410:	12 16       	cp	r1, r18
    3412:	13 06       	cpc	r1, r19
    3414:	14 06       	cpc	r1, r20
    3416:	05 06       	cpc	r0, r21
    3418:	08 95       	ret

0000341a <__fp_round>:
    341a:	09 2e       	mov	r0, r25
    341c:	03 94       	inc	r0
    341e:	00 0c       	add	r0, r0
    3420:	11 f4       	brne	.+4      	; 0x3426 <.L1^B1>
    3422:	88 23       	and	r24, r24
    3424:	52 f0       	brmi	.+20     	; 0x343a <.L3^B1>

00003426 <.L1^B1>:
    3426:	bb 0f       	add	r27, r27
    3428:	40 f4       	brcc	.+16     	; 0x343a <.L3^B1>
    342a:	bf 2b       	or	r27, r31
    342c:	11 f4       	brne	.+4      	; 0x3432 <.L2^B1>
    342e:	60 ff       	sbrs	r22, 0
    3430:	04 c0       	rjmp	.+8      	; 0x343a <.L3^B1>

00003432 <.L2^B1>:
    3432:	6f 5f       	subi	r22, 0xFF	; 255
    3434:	7f 4f       	sbci	r23, 0xFF	; 255
    3436:	8f 4f       	sbci	r24, 0xFF	; 255
    3438:	9f 4f       	sbci	r25, 0xFF	; 255

0000343a <.L3^B1>:
    343a:	08 95       	ret

0000343c <__fp_split3>:
    343c:	57 fd       	sbrc	r21, 7
    343e:	90 58       	subi	r25, 0x80	; 128
    3440:	44 0f       	add	r20, r20
    3442:	55 1f       	adc	r21, r21
    3444:	59 f0       	breq	.+22     	; 0x345c <.L4^B1>
    3446:	5f 3f       	cpi	r21, 0xFF	; 255
    3448:	71 f0       	breq	.+28     	; 0x3466 <.L5^B1>

0000344a <.L1^B1>:
    344a:	47 95       	ror	r20

0000344c <__fp_splitA>:
    344c:	88 0f       	add	r24, r24
    344e:	97 fb       	bst	r25, 7
    3450:	99 1f       	adc	r25, r25
    3452:	61 f0       	breq	.+24     	; 0x346c <.L6^B1>
    3454:	9f 3f       	cpi	r25, 0xFF	; 255
    3456:	79 f0       	breq	.+30     	; 0x3476 <.L7^B1>

00003458 <.L3^B1>:
    3458:	87 95       	ror	r24
    345a:	08 95       	ret

0000345c <.L4^B1>:
    345c:	12 16       	cp	r1, r18
    345e:	13 06       	cpc	r1, r19
    3460:	14 06       	cpc	r1, r20
    3462:	55 1f       	adc	r21, r21
    3464:	f2 cf       	rjmp	.-28     	; 0x344a <.L1^B1>

00003466 <.L5^B1>:
    3466:	46 95       	lsr	r20
    3468:	f1 df       	rcall	.-30     	; 0x344c <__fp_splitA>
    346a:	08 c0       	rjmp	.+16     	; 0x347c <.L8^B1>

0000346c <.L6^B1>:
    346c:	16 16       	cp	r1, r22
    346e:	17 06       	cpc	r1, r23
    3470:	18 06       	cpc	r1, r24
    3472:	99 1f       	adc	r25, r25
    3474:	f1 cf       	rjmp	.-30     	; 0x3458 <.L3^B1>

00003476 <.L7^B1>:
    3476:	86 95       	lsr	r24
    3478:	71 05       	cpc	r23, r1
    347a:	61 05       	cpc	r22, r1

0000347c <.L8^B1>:
    347c:	08 94       	sec
    347e:	08 95       	ret

00003480 <__fp_zero>:
    3480:	e8 94       	clt

00003482 <__fp_szero>:
    3482:	bb 27       	eor	r27, r27
    3484:	66 27       	eor	r22, r22
    3486:	77 27       	eor	r23, r23
    3488:	cb 01       	movw	r24, r22
    348a:	97 f9       	bld	r25, 7
    348c:	08 95       	ret

0000348e <__gesf2>:
    348e:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <__fp_cmp>
    3492:	08 f4       	brcc	.+2      	; 0x3496 <.L1^B1>
    3494:	8f ef       	ldi	r24, 0xFF	; 255

00003496 <.L1^B1>:
    3496:	08 95       	ret

00003498 <__mulsf3>:
    3498:	0e 94 5f 1a 	call	0x34be	; 0x34be <__mulsf3x>
    349c:	0c 94 0d 1a 	jmp	0x341a	; 0x341a <__fp_round>

000034a0 <.L^B1>:
    34a0:	0e 94 ff 19 	call	0x33fe	; 0x33fe <__fp_pscA>
    34a4:	38 f0       	brcs	.+14     	; 0x34b4 <.L1^B1>
    34a6:	0e 94 06 1a 	call	0x340c	; 0x340c <__fp_pscB>
    34aa:	20 f0       	brcs	.+8      	; 0x34b4 <.L1^B1>
    34ac:	95 23       	and	r25, r21
    34ae:	11 f0       	breq	.+4      	; 0x34b4 <.L1^B1>
    34b0:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__fp_inf>

000034b4 <.L1^B1>:
    34b4:	0c 94 fc 19 	jmp	0x33f8	; 0x33f8 <__fp_nan>

000034b8 <.L2^B1>:
    34b8:	11 24       	eor	r1, r1
    34ba:	0c 94 41 1a 	jmp	0x3482	; 0x3482 <__fp_szero>

000034be <__mulsf3x>:
    34be:	0e 94 1e 1a 	call	0x343c	; 0x343c <__fp_split3>
    34c2:	70 f3       	brcs	.-36     	; 0x34a0 <.L^B1>

000034c4 <__mulsf3_pse>:
    34c4:	95 9f       	mul	r25, r21
    34c6:	c1 f3       	breq	.-16     	; 0x34b8 <.L2^B1>
    34c8:	95 0f       	add	r25, r21
    34ca:	50 e0       	ldi	r21, 0x00	; 0
    34cc:	55 1f       	adc	r21, r21
    34ce:	62 9f       	mul	r22, r18
    34d0:	f0 01       	movw	r30, r0
    34d2:	72 9f       	mul	r23, r18
    34d4:	bb 27       	eor	r27, r27
    34d6:	f0 0d       	add	r31, r0
    34d8:	b1 1d       	adc	r27, r1
    34da:	63 9f       	mul	r22, r19
    34dc:	aa 27       	eor	r26, r26
    34de:	f0 0d       	add	r31, r0
    34e0:	b1 1d       	adc	r27, r1
    34e2:	aa 1f       	adc	r26, r26
    34e4:	64 9f       	mul	r22, r20
    34e6:	66 27       	eor	r22, r22
    34e8:	b0 0d       	add	r27, r0
    34ea:	a1 1d       	adc	r26, r1
    34ec:	66 1f       	adc	r22, r22
    34ee:	82 9f       	mul	r24, r18
    34f0:	22 27       	eor	r18, r18
    34f2:	b0 0d       	add	r27, r0
    34f4:	a1 1d       	adc	r26, r1
    34f6:	62 1f       	adc	r22, r18
    34f8:	73 9f       	mul	r23, r19
    34fa:	b0 0d       	add	r27, r0
    34fc:	a1 1d       	adc	r26, r1
    34fe:	62 1f       	adc	r22, r18
    3500:	83 9f       	mul	r24, r19
    3502:	a0 0d       	add	r26, r0
    3504:	61 1d       	adc	r22, r1
    3506:	22 1f       	adc	r18, r18
    3508:	74 9f       	mul	r23, r20
    350a:	33 27       	eor	r19, r19
    350c:	a0 0d       	add	r26, r0
    350e:	61 1d       	adc	r22, r1
    3510:	23 1f       	adc	r18, r19
    3512:	84 9f       	mul	r24, r20
    3514:	60 0d       	add	r22, r0
    3516:	21 1d       	adc	r18, r1
    3518:	82 2f       	mov	r24, r18
    351a:	76 2f       	mov	r23, r22
    351c:	6a 2f       	mov	r22, r26
    351e:	11 24       	eor	r1, r1
    3520:	9f 57       	subi	r25, 0x7F	; 127
    3522:	50 40       	sbci	r21, 0x00	; 0
    3524:	9a f0       	brmi	.+38     	; 0x354c <.L13^B1>
    3526:	f1 f0       	breq	.+60     	; 0x3564 <.L15^B1>

00003528 <.L10^B1>:
    3528:	88 23       	and	r24, r24
    352a:	4a f0       	brmi	.+18     	; 0x353e <.L11^B1>
    352c:	ee 0f       	add	r30, r30
    352e:	ff 1f       	adc	r31, r31
    3530:	bb 1f       	adc	r27, r27
    3532:	66 1f       	adc	r22, r22
    3534:	77 1f       	adc	r23, r23
    3536:	88 1f       	adc	r24, r24
    3538:	91 50       	subi	r25, 0x01	; 1
    353a:	50 40       	sbci	r21, 0x00	; 0
    353c:	a9 f7       	brne	.-22     	; 0x3528 <.L10^B1>

0000353e <.L11^B1>:
    353e:	9e 3f       	cpi	r25, 0xFE	; 254
    3540:	51 05       	cpc	r21, r1
    3542:	80 f0       	brcs	.+32     	; 0x3564 <.L15^B1>
    3544:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__fp_inf>

00003548 <.L12^B1>:
    3548:	0c 94 41 1a 	jmp	0x3482	; 0x3482 <__fp_szero>

0000354c <.L13^B1>:
    354c:	5f 3f       	cpi	r21, 0xFF	; 255
    354e:	e4 f3       	brlt	.-8      	; 0x3548 <.L12^B1>
    3550:	98 3e       	cpi	r25, 0xE8	; 232
    3552:	d4 f3       	brlt	.-12     	; 0x3548 <.L12^B1>

00003554 <.L14^B1>:
    3554:	86 95       	lsr	r24
    3556:	77 95       	ror	r23
    3558:	67 95       	ror	r22
    355a:	b7 95       	ror	r27
    355c:	f7 95       	ror	r31
    355e:	e7 95       	ror	r30
    3560:	9f 5f       	subi	r25, 0xFF	; 255
    3562:	c1 f7       	brne	.-16     	; 0x3554 <.L14^B1>

00003564 <.L15^B1>:
    3564:	fe 2b       	or	r31, r30
    3566:	88 0f       	add	r24, r24
    3568:	91 1d       	adc	r25, r1
    356a:	96 95       	lsr	r25
    356c:	87 95       	ror	r24
    356e:	97 f9       	bld	r25, 7
    3570:	08 95       	ret

00003572 <_exit>:
    3572:	f8 94       	cli

00003574 <__stop_program>:
    3574:	ff cf       	rjmp	.-2      	; 0x3574 <__stop_program>
