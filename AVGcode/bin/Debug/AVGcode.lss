
bin\Debug\AVGcode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  0000342a  000034de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000342a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800224  00800224  00003502  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00003502  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00003505  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003518  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000001f8  00000000  00000000  00003558  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001f2f  00000000  00000000  00003750  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 0000134c  00000000  00000000  0000567f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000025f5  00000000  00000000  000069cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000804  00000000  00000000  00008fc0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000099d  00000000  00000000  000097c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001c3  00000000  00000000  0000a161  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 34 17 	jmp	0x2e68	; 0x2e68 <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 03 04 	jmp	0x806	; 0x806 <__vector_17>
      48:	0c 94 33 04 	jmp	0x866	; 0x866 <__vector_18>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 90 03 	jmp	0x720	; 0x720 <__vector_20>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 61 05 	jmp	0xac2	; 0xac2 <__vector_32>
      84:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__vector_33>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 ee 04 	jmp	0x9dc	; 0x9dc <__vector_35>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	ea e2       	ldi	r30, 0x2A	; 42

000000fc <.Loc.4>:
      fc:	f4 e3       	ldi	r31, 0x34	; 52

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a4 32       	cpi	r26, 0x24	; 36

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a4 e2       	ldi	r26, 0x24	; 36

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a4 33       	cpi	r26, 0x34	; 52

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 83 06 	call	0xd06	; 0xd06 <main>
     122:	0c 94 13 1a 	jmp	0x3426	; 0x3426 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <I2C_Init>:

volatile int Gyro_count = 0;
volatile float DS_1 = 0;
volatile float DS_2 = 0;

void I2C_Init() {
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    // Set SCL frequency to 100kHz
    TWBR = 72;
     132:	88 eb       	ldi	r24, 0xB8	; 184
     134:	90 e0       	ldi	r25, 0x00	; 0

00000136 <.Loc.2>:
     136:	28 e4       	ldi	r18, 0x48	; 72
     138:	fc 01       	movw	r30, r24
     13a:	20 83       	st	Z, r18

0000013c <.Loc.3>:
}
     13c:	00 00       	nop
     13e:	df 91       	pop	r29
     140:	cf 91       	pop	r28
     142:	08 95       	ret

00000144 <I2C_Start>:

void I2C_Start() {
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62

0000014c <.Loc.5>:
    TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
     14c:	8c eb       	ldi	r24, 0xBC	; 188
     14e:	90 e0       	ldi	r25, 0x00	; 0

00000150 <.Loc.6>:
     150:	24 ea       	ldi	r18, 0xA4	; 164
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18

00000156 <.Loc.7>:
	...

00000158 <.L3>:
    while (!(TWCR & (1 << TWINT)));
     158:	8c eb       	ldi	r24, 0xBC	; 188
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	fc 01       	movw	r30, r24
     15e:	80 81       	ld	r24, Z

00000160 <.Loc.9>:
     160:	88 23       	and	r24, r24
     162:	d4 f7       	brge	.-12     	; 0x158 <.L3>

00000164 <.Loc.10>:
}
     164:	00 00       	nop
     166:	00 00       	nop
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	08 95       	ret

0000016e <I2C_Stop>:

void I2C_Stop() {
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62

00000176 <.Loc.12>:
    TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
     176:	8c eb       	ldi	r24, 0xBC	; 188
     178:	90 e0       	ldi	r25, 0x00	; 0

0000017a <.Loc.13>:
     17a:	24 e9       	ldi	r18, 0x94	; 148
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18

00000180 <.Loc.14>:
}
     180:	00 00       	nop
     182:	df 91       	pop	r29
     184:	cf 91       	pop	r28
     186:	08 95       	ret

00000188 <I2C_Write>:

void I2C_Write(uint8_t data) {
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	0f 92       	push	r0
     18e:	cd b7       	in	r28, 0x3d	; 61
     190:	de b7       	in	r29, 0x3e	; 62
     192:	89 83       	std	Y+1, r24	; 0x01

00000194 <.Loc.16>:
    TWDR = data;
     194:	8b eb       	ldi	r24, 0xBB	; 187
     196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.17>:
     198:	29 81       	ldd	r18, Y+1	; 0x01
     19a:	fc 01       	movw	r30, r24
     19c:	20 83       	st	Z, r18

0000019e <.Loc.18>:
    TWCR = (1 << TWINT) | (1 << TWEN);
     19e:	8c eb       	ldi	r24, 0xBC	; 188
     1a0:	90 e0       	ldi	r25, 0x00	; 0

000001a2 <.Loc.19>:
     1a2:	24 e8       	ldi	r18, 0x84	; 132
     1a4:	fc 01       	movw	r30, r24
     1a6:	20 83       	st	Z, r18

000001a8 <.Loc.20>:
	...

000001aa <.L6>:
    while (!(TWCR & (1 << TWINT)));
     1aa:	8c eb       	ldi	r24, 0xBC	; 188
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	fc 01       	movw	r30, r24
     1b0:	80 81       	ld	r24, Z

000001b2 <.Loc.22>:
     1b2:	88 23       	and	r24, r24
     1b4:	d4 f7       	brge	.-12     	; 0x1aa <.L6>

000001b6 <.Loc.23>:
}
     1b6:	00 00       	nop
     1b8:	00 00       	nop
     1ba:	0f 90       	pop	r0
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <I2C_ReadACK>:

uint8_t I2C_ReadACK() {
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62

000001ca <.Loc.25>:
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
     1ca:	8c eb       	ldi	r24, 0xBC	; 188
     1cc:	90 e0       	ldi	r25, 0x00	; 0

000001ce <.Loc.26>:
     1ce:	24 ec       	ldi	r18, 0xC4	; 196
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18

000001d4 <.Loc.27>:
	...

000001d6 <.L8>:
    while (!(TWCR & (1 << TWINT)));
     1d6:	8c eb       	ldi	r24, 0xBC	; 188
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	fc 01       	movw	r30, r24
     1dc:	80 81       	ld	r24, Z

000001de <.Loc.29>:
     1de:	88 23       	and	r24, r24
     1e0:	d4 f7       	brge	.-12     	; 0x1d6 <.L8>

000001e2 <.Loc.30>:
    return TWDR;
     1e2:	8b eb       	ldi	r24, 0xBB	; 187
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	fc 01       	movw	r30, r24
     1e8:	80 81       	ld	r24, Z

000001ea <.Loc.31>:
}
     1ea:	df 91       	pop	r29
     1ec:	cf 91       	pop	r28
     1ee:	08 95       	ret

000001f0 <I2C_ReadNACK>:

uint8_t I2C_ReadNACK() {
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	cd b7       	in	r28, 0x3d	; 61
     1f6:	de b7       	in	r29, 0x3e	; 62

000001f8 <.Loc.33>:
    TWCR = (1 << TWINT) | (1 << TWEN);
     1f8:	8c eb       	ldi	r24, 0xBC	; 188
     1fa:	90 e0       	ldi	r25, 0x00	; 0

000001fc <.Loc.34>:
     1fc:	24 e8       	ldi	r18, 0x84	; 132
     1fe:	fc 01       	movw	r30, r24
     200:	20 83       	st	Z, r18

00000202 <.Loc.35>:
	...

00000204 <.L11>:
    while (!(TWCR & (1 << TWINT)));
     204:	8c eb       	ldi	r24, 0xBC	; 188
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	fc 01       	movw	r30, r24
     20a:	80 81       	ld	r24, Z

0000020c <.Loc.37>:
     20c:	88 23       	and	r24, r24
     20e:	d4 f7       	brge	.-12     	; 0x204 <.L11>

00000210 <.Loc.38>:
    return TWDR;
     210:	8b eb       	ldi	r24, 0xBB	; 187
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	fc 01       	movw	r30, r24
     216:	80 81       	ld	r24, Z

00000218 <.Loc.39>:
}
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <MPU6050_WriteReg>:

void MPU6050_WriteReg(uint8_t reg, uint8_t data) {
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	0f 92       	push	r0
     224:	0f 92       	push	r0
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	89 83       	std	Y+1, r24	; 0x01
     22c:	6a 83       	std	Y+2, r22	; 0x02

0000022e <.Loc.41>:
    I2C_Start();
     22e:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000232 <.Loc.42>:
    I2C_Write(MPU6050_ADDR << 1);
     232:	80 ed       	ldi	r24, 0xD0	; 208
     234:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000238 <.Loc.43>:
    I2C_Write(reg);
     238:	89 81       	ldd	r24, Y+1	; 0x01
     23a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000023e <.Loc.44>:
    I2C_Write(data);
     23e:	8a 81       	ldd	r24, Y+2	; 0x02
     240:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000244 <.Loc.45>:
    I2C_Stop();
     244:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C_Stop>

00000248 <.Loc.46>:
}
     248:	00 00       	nop
     24a:	0f 90       	pop	r0
     24c:	0f 90       	pop	r0
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <MPU6050_ReadGyro>:

int16_t MPU6050_ReadGyro(uint8_t reg) {
     254:	0f 93       	push	r16
     256:	1f 93       	push	r17
     258:	cf 93       	push	r28
     25a:	df 93       	push	r29
     25c:	00 d0       	rcall	.+0      	; 0x25e <L0^A>

0000025e <L0^A>:
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	8b 83       	std	Y+3, r24	; 0x03

00000264 <.Loc.48>:
    int16_t value;
    I2C_Start();
     264:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000268 <.Loc.49>:
    I2C_Write(MPU6050_ADDR << 1);
     268:	80 ed       	ldi	r24, 0xD0	; 208
     26a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000026e <.Loc.50>:
    I2C_Write(reg);
     26e:	8b 81       	ldd	r24, Y+3	; 0x03
     270:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

00000274 <.Loc.51>:
    I2C_Start();
     274:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Start>

00000278 <.Loc.52>:
    I2C_Write((MPU6050_ADDR << 1) | 0x01);
     278:	81 ed       	ldi	r24, 0xD1	; 209
     27a:	0e 94 c4 00 	call	0x188	; 0x188 <I2C_Write>

0000027e <.Loc.53>:
    value = (I2C_ReadACK() << 8) | I2C_ReadNACK();
     27e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <I2C_ReadACK>
     282:	88 2f       	mov	r24, r24
     284:	90 e0       	ldi	r25, 0x00	; 0

00000286 <.Loc.54>:
     286:	18 2f       	mov	r17, r24
     288:	00 27       	eor	r16, r16

0000028a <.Loc.55>:
     28a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <I2C_ReadNACK>
     28e:	88 2f       	mov	r24, r24
     290:	90 e0       	ldi	r25, 0x00	; 0

00000292 <.Loc.56>:
     292:	80 2b       	or	r24, r16
     294:	91 2b       	or	r25, r17
     296:	9a 83       	std	Y+2, r25	; 0x02
     298:	89 83       	std	Y+1, r24	; 0x01

0000029a <.Loc.57>:
    I2C_Stop();
     29a:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C_Stop>

0000029e <.Loc.58>:
    return value;
     29e:	89 81       	ldd	r24, Y+1	; 0x01
     2a0:	9a 81       	ldd	r25, Y+2	; 0x02

000002a2 <.Loc.59>:
}
     2a2:	0f 90       	pop	r0
     2a4:	0f 90       	pop	r0
     2a6:	0f 90       	pop	r0
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	1f 91       	pop	r17
     2ae:	0f 91       	pop	r16
     2b0:	08 95       	ret

000002b2 <Read_Gyro_X>:

float Read_Gyro_X(void){
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	cd b7       	in	r28, 0x3d	; 61
     2b8:	de b7       	in	r29, 0x3e	; 62
     2ba:	66 97       	sbiw	r28, 0x16	; 22
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	f8 94       	cli
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	cd bf       	out	0x3d, r28	; 61

000002c6 <.Loc.61>:
    int16_t GyroX = MPU6050_ReadGyro(0x43);
     2c6:	83 e4       	ldi	r24, 0x43	; 67
     2c8:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     2cc:	9a 83       	std	Y+2, r25	; 0x02
     2ce:	89 83       	std	Y+1, r24	; 0x01

000002d0 <.Loc.62>:
    GyroX += 248;
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	9a 81       	ldd	r25, Y+2	; 0x02
     2d4:	88 50       	subi	r24, 0x08	; 8
     2d6:	9f 4f       	sbci	r25, 0xFF	; 255
     2d8:	9a 83       	std	Y+2, r25	; 0x02
     2da:	89 83       	std	Y+1, r24	; 0x01

000002dc <.Loc.63>:
    float GyroX_degPerSec = (float)GyroX / 131.0;
     2dc:	89 81       	ldd	r24, Y+1	; 0x01
     2de:	9a 81       	ldd	r25, Y+2	; 0x02
     2e0:	9c 01       	movw	r18, r24
     2e2:	99 0f       	add	r25, r25
     2e4:	44 0b       	sbc	r20, r20
     2e6:	55 0b       	sbc	r21, r21
     2e8:	2f 87       	std	Y+15, r18	; 0x0f
     2ea:	38 8b       	std	Y+16, r19	; 0x10
     2ec:	49 8b       	std	Y+17, r20	; 0x11
     2ee:	5a 8b       	std	Y+18, r21	; 0x12
     2f0:	6f 85       	ldd	r22, Y+15	; 0x0f
     2f2:	78 89       	ldd	r23, Y+16	; 0x10
     2f4:	89 89       	ldd	r24, Y+17	; 0x11
     2f6:	9a 89       	ldd	r25, Y+18	; 0x12
     2f8:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
     2fc:	6f 83       	std	Y+7, r22	; 0x07
     2fe:	78 87       	std	Y+8, r23	; 0x08
     300:	89 87       	std	Y+9, r24	; 0x09
     302:	9a 87       	std	Y+10, r25	; 0x0a

00000304 <.Loc.64>:
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	43 e0       	ldi	r20, 0x03	; 3
     30a:	53 e4       	ldi	r21, 0x43	; 67
     30c:	6f 81       	ldd	r22, Y+7	; 0x07
     30e:	78 85       	ldd	r23, Y+8	; 0x08
     310:	89 85       	ldd	r24, Y+9	; 0x09
     312:	9a 85       	ldd	r25, Y+10	; 0x0a
     314:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
     318:	6b 8b       	std	Y+19, r22	; 0x13
     31a:	7c 8b       	std	Y+20, r23	; 0x14
     31c:	8d 8b       	std	Y+21, r24	; 0x15
     31e:	9e 8b       	std	Y+22, r25	; 0x16
     320:	8b 89       	ldd	r24, Y+19	; 0x13
     322:	9c 89       	ldd	r25, Y+20	; 0x14
     324:	ad 89       	ldd	r26, Y+21	; 0x15
     326:	be 89       	ldd	r27, Y+22	; 0x16
     328:	8b 83       	std	Y+3, r24	; 0x03
     32a:	9c 83       	std	Y+4, r25	; 0x04
     32c:	ad 83       	std	Y+5, r26	; 0x05
     32e:	be 83       	std	Y+6, r27	; 0x06

00000330 <.Loc.65>:
    return GyroX_degPerSec;
     330:	8b 81       	ldd	r24, Y+3	; 0x03
     332:	9c 81       	ldd	r25, Y+4	; 0x04
     334:	ad 81       	ldd	r26, Y+5	; 0x05
     336:	be 81       	ldd	r27, Y+6	; 0x06
     338:	8b 87       	std	Y+11, r24	; 0x0b
     33a:	9c 87       	std	Y+12, r25	; 0x0c
     33c:	ad 87       	std	Y+13, r26	; 0x0d
     33e:	be 87       	std	Y+14, r27	; 0x0e

00000340 <.Loc.66>:
}
     340:	6b 85       	ldd	r22, Y+11	; 0x0b
     342:	7c 85       	ldd	r23, Y+12	; 0x0c
     344:	8d 85       	ldd	r24, Y+13	; 0x0d
     346:	9e 85       	ldd	r25, Y+14	; 0x0e
     348:	66 96       	adiw	r28, 0x16	; 22
     34a:	0f b6       	in	r0, 0x3f	; 63
     34c:	f8 94       	cli
     34e:	de bf       	out	0x3e, r29	; 62
     350:	0f be       	out	0x3f, r0	; 63
     352:	cd bf       	out	0x3d, r28	; 61
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <Read_Gyro_Y>:
float Read_Gyro_Y(void){
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
     362:	66 97       	sbiw	r28, 0x16	; 22
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	f8 94       	cli
     368:	de bf       	out	0x3e, r29	; 62
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	cd bf       	out	0x3d, r28	; 61

0000036e <.Loc.68>:
    int16_t GyroY = MPU6050_ReadGyro(0x45);
     36e:	85 e4       	ldi	r24, 0x45	; 69
     370:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     374:	9a 83       	std	Y+2, r25	; 0x02
     376:	89 83       	std	Y+1, r24	; 0x01

00000378 <.Loc.69>:
    float GyroY_degPerSec = (float)GyroY / 131.0;
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
     37c:	9c 01       	movw	r18, r24
     37e:	99 0f       	add	r25, r25
     380:	44 0b       	sbc	r20, r20
     382:	55 0b       	sbc	r21, r21
     384:	2f 87       	std	Y+15, r18	; 0x0f
     386:	38 8b       	std	Y+16, r19	; 0x10
     388:	49 8b       	std	Y+17, r20	; 0x11
     38a:	5a 8b       	std	Y+18, r21	; 0x12
     38c:	6f 85       	ldd	r22, Y+15	; 0x0f
     38e:	78 89       	ldd	r23, Y+16	; 0x10
     390:	89 89       	ldd	r24, Y+17	; 0x11
     392:	9a 89       	ldd	r25, Y+18	; 0x12
     394:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
     398:	6f 83       	std	Y+7, r22	; 0x07
     39a:	78 87       	std	Y+8, r23	; 0x08
     39c:	89 87       	std	Y+9, r24	; 0x09
     39e:	9a 87       	std	Y+10, r25	; 0x0a

000003a0 <.Loc.70>:
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	43 e0       	ldi	r20, 0x03	; 3
     3a6:	53 e4       	ldi	r21, 0x43	; 67
     3a8:	6f 81       	ldd	r22, Y+7	; 0x07
     3aa:	78 85       	ldd	r23, Y+8	; 0x08
     3ac:	89 85       	ldd	r24, Y+9	; 0x09
     3ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b0:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
     3b4:	6b 8b       	std	Y+19, r22	; 0x13
     3b6:	7c 8b       	std	Y+20, r23	; 0x14
     3b8:	8d 8b       	std	Y+21, r24	; 0x15
     3ba:	9e 8b       	std	Y+22, r25	; 0x16
     3bc:	8b 89       	ldd	r24, Y+19	; 0x13
     3be:	9c 89       	ldd	r25, Y+20	; 0x14
     3c0:	ad 89       	ldd	r26, Y+21	; 0x15
     3c2:	be 89       	ldd	r27, Y+22	; 0x16
     3c4:	8b 83       	std	Y+3, r24	; 0x03
     3c6:	9c 83       	std	Y+4, r25	; 0x04
     3c8:	ad 83       	std	Y+5, r26	; 0x05
     3ca:	be 83       	std	Y+6, r27	; 0x06

000003cc <.Loc.71>:
    return GyroY_degPerSec;
     3cc:	8b 81       	ldd	r24, Y+3	; 0x03
     3ce:	9c 81       	ldd	r25, Y+4	; 0x04
     3d0:	ad 81       	ldd	r26, Y+5	; 0x05
     3d2:	be 81       	ldd	r27, Y+6	; 0x06
     3d4:	8b 87       	std	Y+11, r24	; 0x0b
     3d6:	9c 87       	std	Y+12, r25	; 0x0c
     3d8:	ad 87       	std	Y+13, r26	; 0x0d
     3da:	be 87       	std	Y+14, r27	; 0x0e

000003dc <.Loc.72>:
}
     3dc:	6b 85       	ldd	r22, Y+11	; 0x0b
     3de:	7c 85       	ldd	r23, Y+12	; 0x0c
     3e0:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e2:	9e 85       	ldd	r25, Y+14	; 0x0e
     3e4:	66 96       	adiw	r28, 0x16	; 22
     3e6:	0f b6       	in	r0, 0x3f	; 63
     3e8:	f8 94       	cli
     3ea:	de bf       	out	0x3e, r29	; 62
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	cd bf       	out	0x3d, r28	; 61
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <Read_Gyro_Z>:
float Read_Gyro_Z(void){
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	cd b7       	in	r28, 0x3d	; 61
     3fc:	de b7       	in	r29, 0x3e	; 62
     3fe:	66 97       	sbiw	r28, 0x16	; 22
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61

0000040a <.Loc.74>:
    int16_t GyroZ = MPU6050_ReadGyro(0x47);
     40a:	87 e4       	ldi	r24, 0x47	; 71
     40c:	0e 94 2a 01 	call	0x254	; 0x254 <MPU6050_ReadGyro>
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	89 83       	std	Y+1, r24	; 0x01

00000414 <.Loc.75>:
    float GyroZ_degPerSec = (float)GyroZ / 131.0;
     414:	89 81       	ldd	r24, Y+1	; 0x01
     416:	9a 81       	ldd	r25, Y+2	; 0x02
     418:	9c 01       	movw	r18, r24
     41a:	99 0f       	add	r25, r25
     41c:	44 0b       	sbc	r20, r20
     41e:	55 0b       	sbc	r21, r21
     420:	2f 87       	std	Y+15, r18	; 0x0f
     422:	38 8b       	std	Y+16, r19	; 0x10
     424:	49 8b       	std	Y+17, r20	; 0x11
     426:	5a 8b       	std	Y+18, r21	; 0x12
     428:	6f 85       	ldd	r22, Y+15	; 0x0f
     42a:	78 89       	ldd	r23, Y+16	; 0x10
     42c:	89 89       	ldd	r24, Y+17	; 0x11
     42e:	9a 89       	ldd	r25, Y+18	; 0x12
     430:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
     434:	6f 83       	std	Y+7, r22	; 0x07
     436:	78 87       	std	Y+8, r23	; 0x08
     438:	89 87       	std	Y+9, r24	; 0x09
     43a:	9a 87       	std	Y+10, r25	; 0x0a

0000043c <.Loc.76>:
     43c:	20 e0       	ldi	r18, 0x00	; 0
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	43 e0       	ldi	r20, 0x03	; 3
     442:	53 e4       	ldi	r21, 0x43	; 67
     444:	6f 81       	ldd	r22, Y+7	; 0x07
     446:	78 85       	ldd	r23, Y+8	; 0x08
     448:	89 85       	ldd	r24, Y+9	; 0x09
     44a:	9a 85       	ldd	r25, Y+10	; 0x0a
     44c:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
     450:	6b 8b       	std	Y+19, r22	; 0x13
     452:	7c 8b       	std	Y+20, r23	; 0x14
     454:	8d 8b       	std	Y+21, r24	; 0x15
     456:	9e 8b       	std	Y+22, r25	; 0x16
     458:	8b 89       	ldd	r24, Y+19	; 0x13
     45a:	9c 89       	ldd	r25, Y+20	; 0x14
     45c:	ad 89       	ldd	r26, Y+21	; 0x15
     45e:	be 89       	ldd	r27, Y+22	; 0x16
     460:	8b 83       	std	Y+3, r24	; 0x03
     462:	9c 83       	std	Y+4, r25	; 0x04
     464:	ad 83       	std	Y+5, r26	; 0x05
     466:	be 83       	std	Y+6, r27	; 0x06

00000468 <.Loc.77>:
    return GyroZ_degPerSec;
     468:	8b 81       	ldd	r24, Y+3	; 0x03
     46a:	9c 81       	ldd	r25, Y+4	; 0x04
     46c:	ad 81       	ldd	r26, Y+5	; 0x05
     46e:	be 81       	ldd	r27, Y+6	; 0x06
     470:	8b 87       	std	Y+11, r24	; 0x0b
     472:	9c 87       	std	Y+12, r25	; 0x0c
     474:	ad 87       	std	Y+13, r26	; 0x0d
     476:	be 87       	std	Y+14, r27	; 0x0e

00000478 <.Loc.78>:
}
     478:	6b 85       	ldd	r22, Y+11	; 0x0b
     47a:	7c 85       	ldd	r23, Y+12	; 0x0c
     47c:	8d 85       	ldd	r24, Y+13	; 0x0d
     47e:	9e 85       	ldd	r25, Y+14	; 0x0e
     480:	66 96       	adiw	r28, 0x16	; 22
     482:	0f b6       	in	r0, 0x3f	; 63
     484:	f8 94       	cli
     486:	de bf       	out	0x3e, r29	; 62
     488:	0f be       	out	0x3f, r0	; 63
     48a:	cd bf       	out	0x3d, r28	; 61
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <MPU6050_Init>:


void MPU6050_Init() {
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62

0000049a <.Loc.80>:
    MPU6050_WriteReg(0x6B, 0x00); // Power on the MPU6050
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	8b e6       	ldi	r24, 0x6B	; 107
     49e:	0e 94 0f 01 	call	0x21e	; 0x21e <MPU6050_WriteReg>

000004a2 <.Loc.81>:
}
     4a2:	00 00       	nop
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <initTimerGyro>:

void initTimerGyro(void){
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62

000004b2 <.Loc.83>:
    TCCR0A = 0;
     4b2:	84 e4       	ldi	r24, 0x44	; 68
     4b4:	90 e0       	ldi	r25, 0x00	; 0

000004b6 <.Loc.84>:
     4b6:	fc 01       	movw	r30, r24
     4b8:	10 82       	st	Z, r1

000004ba <.Loc.85>:
    TCCR0B |= (1<<CS00);
     4ba:	85 e4       	ldi	r24, 0x45	; 69
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	fc 01       	movw	r30, r24
     4c0:	20 81       	ld	r18, Z
     4c2:	85 e4       	ldi	r24, 0x45	; 69
     4c4:	90 e0       	ldi	r25, 0x00	; 0

000004c6 <.Loc.86>:
     4c6:	21 60       	ori	r18, 0x01	; 1
     4c8:	fc 01       	movw	r30, r24
     4ca:	20 83       	st	Z, r18

000004cc <.Loc.87>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s = 0.016ms = 16us
    //62500x/sec
    TIMSK0 = (1<<TOIE0);
     4cc:	8e e6       	ldi	r24, 0x6E	; 110
     4ce:	90 e0       	ldi	r25, 0x00	; 0

000004d0 <.Loc.88>:
     4d0:	21 e0       	ldi	r18, 0x01	; 1
     4d2:	fc 01       	movw	r30, r24
     4d4:	20 83       	st	Z, r18

000004d6 <.Loc.89>:
    sei();
     4d6:	78 94       	sei

000004d8 <.Loc.90>:
}
     4d8:	00 00       	nop
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	08 95       	ret

000004e0 <__vector_23>:
ISR(TIMER0_OVF_vect){
     4e0:	1f 92       	push	r1
     4e2:	0f 92       	push	r0
     4e4:	0f b6       	in	r0, 0x3f	; 63
     4e6:	0f 92       	push	r0
     4e8:	11 24       	eor	r1, r1
     4ea:	8f 93       	push	r24
     4ec:	9f 93       	push	r25
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62

000004f6 <.Loc.92>:
    Gyro_count++;
     4f6:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Gyro_count>
     4fa:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <Gyro_count+0x1>
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <Gyro_count+0x1>
     504:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <Gyro_count>

00000508 <.Loc.93>:
}
     508:	00 00       	nop
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	9f 91       	pop	r25
     510:	8f 91       	pop	r24
     512:	0f 90       	pop	r0
     514:	0f be       	out	0x3f, r0	; 63
     516:	0f 90       	pop	r0
     518:	1f 90       	pop	r1
     51a:	18 95       	reti

0000051c <UpdateHeading>:

float UpdateHeading(float CurrentHeading){
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
     524:	ec 97       	sbiw	r28, 0x3c	; 60
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
     530:	69 87       	std	Y+9, r22	; 0x09
     532:	7a 87       	std	Y+10, r23	; 0x0a
     534:	8b 87       	std	Y+11, r24	; 0x0b
     536:	9c 87       	std	Y+12, r25	; 0x0c

00000538 <.Loc.95>:

    float DeltaTijd = 0;
     538:	19 82       	std	Y+1, r1	; 0x01
     53a:	1a 82       	std	Y+2, r1	; 0x02
     53c:	1b 82       	std	Y+3, r1	; 0x03
     53e:	1c 82       	std	Y+4, r1	; 0x04

00000540 <.Loc.96>:
    float DeltaHeading;

    // Read gyroscopic rotation data
    DS_2 = Read_Gyro_X();
     540:	0e 94 59 01 	call	0x2b2	; 0x2b2 <Read_Gyro_X>
     544:	6d 87       	std	Y+13, r22	; 0x0d
     546:	7e 87       	std	Y+14, r23	; 0x0e
     548:	8f 87       	std	Y+15, r24	; 0x0f
     54a:	98 8b       	std	Y+16, r25	; 0x10

0000054c <.Loc.97>:
     54c:	2d 85       	ldd	r18, Y+13	; 0x0d
     54e:	3e 85       	ldd	r19, Y+14	; 0x0e
     550:	4f 85       	ldd	r20, Y+15	; 0x0f
     552:	58 89       	ldd	r21, Y+16	; 0x10
     554:	20 93 2a 02 	sts	0x022A, r18	; 0x80022a <DS_2>
     558:	30 93 2b 02 	sts	0x022B, r19	; 0x80022b <DS_2+0x1>
     55c:	40 93 2c 02 	sts	0x022C, r20	; 0x80022c <DS_2+0x2>
     560:	50 93 2d 02 	sts	0x022D, r21	; 0x80022d <DS_2+0x3>

00000564 <.Loc.98>:
    //Timer uitlezen
    //16us * count is aantal s
    DeltaTijd = Gyro_count;
     564:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Gyro_count>
     568:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <Gyro_count+0x1>
     56c:	9c 01       	movw	r18, r24
     56e:	99 0f       	add	r25, r25
     570:	44 0b       	sbc	r20, r20
     572:	55 0b       	sbc	r21, r21
     574:	29 a3       	std	Y+33, r18	; 0x21
     576:	3a a3       	std	Y+34, r19	; 0x22
     578:	4b a3       	std	Y+35, r20	; 0x23
     57a:	5c a3       	std	Y+36, r21	; 0x24
     57c:	69 a1       	ldd	r22, Y+33	; 0x21
     57e:	7a a1       	ldd	r23, Y+34	; 0x22
     580:	8b a1       	ldd	r24, Y+35	; 0x23
     582:	9c a1       	ldd	r25, Y+36	; 0x24
     584:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
     588:	6d a3       	std	Y+37, r22	; 0x25
     58a:	7e a3       	std	Y+38, r23	; 0x26
     58c:	8f a3       	std	Y+39, r24	; 0x27
     58e:	98 a7       	std	Y+40, r25	; 0x28
     590:	8d a1       	ldd	r24, Y+37	; 0x25
     592:	9e a1       	ldd	r25, Y+38	; 0x26
     594:	af a1       	ldd	r26, Y+39	; 0x27
     596:	b8 a5       	ldd	r27, Y+40	; 0x28
     598:	89 83       	std	Y+1, r24	; 0x01
     59a:	9a 83       	std	Y+2, r25	; 0x02
     59c:	ab 83       	std	Y+3, r26	; 0x03
     59e:	bc 83       	std	Y+4, r27	; 0x04

000005a0 <.Loc.99>:

    //reset timer
    TCNT0 = 0;
     5a0:	86 e4       	ldi	r24, 0x46	; 70
     5a2:	90 e0       	ldi	r25, 0x00	; 0

000005a4 <.Loc.100>:
     5a4:	dc 01       	movw	r26, r24
     5a6:	1c 92       	st	X, r1

000005a8 <.Loc.101>:
    TIFR0 = 1<<TOV0;
     5a8:	85 e3       	ldi	r24, 0x35	; 53
     5aa:	90 e0       	ldi	r25, 0x00	; 0

000005ac <.Loc.102>:
     5ac:	21 e0       	ldi	r18, 0x01	; 1
     5ae:	fc 01       	movw	r30, r24
     5b0:	20 83       	st	Z, r18

000005b2 <.Loc.103>:
    Gyro_count = 0;
     5b2:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <Gyro_count+0x1>
     5b6:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <Gyro_count>

000005ba <.Loc.104>:
    DeltaTijd = DeltaTijd * 0.000016; //DT nu in s
     5ba:	2d eb       	ldi	r18, 0xBD	; 189
     5bc:	37 e3       	ldi	r19, 0x37	; 55
     5be:	46 e8       	ldi	r20, 0x86	; 134
     5c0:	57 e3       	ldi	r21, 0x37	; 55
     5c2:	69 81       	ldd	r22, Y+1	; 0x01
     5c4:	7a 81       	ldd	r23, Y+2	; 0x02
     5c6:	8b 81       	ldd	r24, Y+3	; 0x03
     5c8:	9c 81       	ldd	r25, Y+4	; 0x04
     5ca:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
     5ce:	69 a7       	std	Y+41, r22	; 0x29
     5d0:	7a a7       	std	Y+42, r23	; 0x2a
     5d2:	8b a7       	std	Y+43, r24	; 0x2b
     5d4:	9c a7       	std	Y+44, r25	; 0x2c
     5d6:	29 a5       	ldd	r18, Y+41	; 0x29
     5d8:	3a a5       	ldd	r19, Y+42	; 0x2a
     5da:	4b a5       	ldd	r20, Y+43	; 0x2b
     5dc:	5c a5       	ldd	r21, Y+44	; 0x2c
     5de:	29 83       	std	Y+1, r18	; 0x01
     5e0:	3a 83       	std	Y+2, r19	; 0x02
     5e2:	4b 83       	std	Y+3, r20	; 0x03
     5e4:	5c 83       	std	Y+4, r21	; 0x04

000005e6 <.Loc.105>:
    DeltaHeading = ((DS_1 + DS_2)*(DeltaTijd))/2.0;
     5e6:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <DS_1>
     5ea:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <DS_1+0x1>
     5ee:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <DS_1+0x2>
     5f2:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <DS_1+0x3>
     5f6:	89 8b       	std	Y+17, r24	; 0x11
     5f8:	9a 8b       	std	Y+18, r25	; 0x12
     5fa:	ab 8b       	std	Y+19, r26	; 0x13
     5fc:	bc 8b       	std	Y+20, r27	; 0x14
     5fe:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <DS_2>
     602:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <DS_2+0x1>
     606:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <DS_2+0x2>
     60a:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <DS_2+0x3>
     60e:	9c 01       	movw	r18, r24
     610:	ad 01       	movw	r20, r26
     612:	69 89       	ldd	r22, Y+17	; 0x11
     614:	7a 89       	ldd	r23, Y+18	; 0x12
     616:	8b 89       	ldd	r24, Y+19	; 0x13
     618:	9c 89       	ldd	r25, Y+20	; 0x14
     61a:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__addsf3>
     61e:	6d a7       	std	Y+45, r22	; 0x2d
     620:	7e a7       	std	Y+46, r23	; 0x2e
     622:	8f a7       	std	Y+47, r24	; 0x2f
     624:	98 ab       	std	Y+48, r25	; 0x30
     626:	2d a5       	ldd	r18, Y+45	; 0x2d
     628:	3e a5       	ldd	r19, Y+46	; 0x2e
     62a:	4f a5       	ldd	r20, Y+47	; 0x2f
     62c:	58 a9       	ldd	r21, Y+48	; 0x30
     62e:	2d 8b       	std	Y+21, r18	; 0x15
     630:	3e 8b       	std	Y+22, r19	; 0x16
     632:	4f 8b       	std	Y+23, r20	; 0x17
     634:	58 8f       	std	Y+24, r21	; 0x18

00000636 <.Loc.106>:
     636:	29 81       	ldd	r18, Y+1	; 0x01
     638:	3a 81       	ldd	r19, Y+2	; 0x02
     63a:	4b 81       	ldd	r20, Y+3	; 0x03
     63c:	5c 81       	ldd	r21, Y+4	; 0x04
     63e:	6d 89       	ldd	r22, Y+21	; 0x15
     640:	7e 89       	ldd	r23, Y+22	; 0x16
     642:	8f 89       	ldd	r24, Y+23	; 0x17
     644:	98 8d       	ldd	r25, Y+24	; 0x18
     646:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
     64a:	69 ab       	std	Y+49, r22	; 0x31
     64c:	7a ab       	std	Y+50, r23	; 0x32
     64e:	8b ab       	std	Y+51, r24	; 0x33
     650:	9c ab       	std	Y+52, r25	; 0x34
     652:	89 a9       	ldd	r24, Y+49	; 0x31
     654:	9a a9       	ldd	r25, Y+50	; 0x32
     656:	ab a9       	ldd	r26, Y+51	; 0x33
     658:	bc a9       	ldd	r27, Y+52	; 0x34
     65a:	89 8f       	std	Y+25, r24	; 0x19
     65c:	9a 8f       	std	Y+26, r25	; 0x1a
     65e:	ab 8f       	std	Y+27, r26	; 0x1b
     660:	bc 8f       	std	Y+28, r27	; 0x1c

00000662 <.Loc.107>:
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	40 e0       	ldi	r20, 0x00	; 0
     668:	50 e4       	ldi	r21, 0x40	; 64
     66a:	69 8d       	ldd	r22, Y+25	; 0x19
     66c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     66e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     670:	9c 8d       	ldd	r25, Y+28	; 0x1c
     672:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
     676:	6d ab       	std	Y+53, r22	; 0x35
     678:	7e ab       	std	Y+54, r23	; 0x36
     67a:	8f ab       	std	Y+55, r24	; 0x37
     67c:	98 af       	std	Y+56, r25	; 0x38
     67e:	2d a9       	ldd	r18, Y+53	; 0x35
     680:	3e a9       	ldd	r19, Y+54	; 0x36
     682:	4f a9       	ldd	r20, Y+55	; 0x37
     684:	58 ad       	ldd	r21, Y+56	; 0x38
     686:	2d 83       	std	Y+5, r18	; 0x05
     688:	3e 83       	std	Y+6, r19	; 0x06
     68a:	4f 83       	std	Y+7, r20	; 0x07
     68c:	58 87       	std	Y+8, r21	; 0x08

0000068e <.Loc.108>:
    CurrentHeading = CurrentHeading + DeltaHeading;
     68e:	2d 81       	ldd	r18, Y+5	; 0x05
     690:	3e 81       	ldd	r19, Y+6	; 0x06
     692:	4f 81       	ldd	r20, Y+7	; 0x07
     694:	58 85       	ldd	r21, Y+8	; 0x08
     696:	69 85       	ldd	r22, Y+9	; 0x09
     698:	7a 85       	ldd	r23, Y+10	; 0x0a
     69a:	8b 85       	ldd	r24, Y+11	; 0x0b
     69c:	9c 85       	ldd	r25, Y+12	; 0x0c
     69e:	0e 94 d6 17 	call	0x2fac	; 0x2fac <__addsf3>
     6a2:	69 af       	std	Y+57, r22	; 0x39
     6a4:	7a af       	std	Y+58, r23	; 0x3a
     6a6:	8b af       	std	Y+59, r24	; 0x3b
     6a8:	9c af       	std	Y+60, r25	; 0x3c
     6aa:	89 ad       	ldd	r24, Y+57	; 0x39
     6ac:	9a ad       	ldd	r25, Y+58	; 0x3a
     6ae:	ab ad       	ldd	r26, Y+59	; 0x3b
     6b0:	bc ad       	ldd	r27, Y+60	; 0x3c
     6b2:	89 87       	std	Y+9, r24	; 0x09
     6b4:	9a 87       	std	Y+10, r25	; 0x0a
     6b6:	ab 87       	std	Y+11, r26	; 0x0b
     6b8:	bc 87       	std	Y+12, r27	; 0x0c

000006ba <.Loc.109>:
    DS_1 = DS_2;
     6ba:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <DS_2>
     6be:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <DS_2+0x1>
     6c2:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <DS_2+0x2>
     6c6:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <DS_2+0x3>
     6ca:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <DS_1>
     6ce:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <DS_1+0x1>
     6d2:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <DS_1+0x2>
     6d6:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <DS_1+0x3>

000006da <.Loc.110>:

	return CurrentHeading;
     6da:	89 85       	ldd	r24, Y+9	; 0x09
     6dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     6de:	ab 85       	ldd	r26, Y+11	; 0x0b
     6e0:	bc 85       	ldd	r27, Y+12	; 0x0c
     6e2:	8d 8f       	std	Y+29, r24	; 0x1d
     6e4:	9e 8f       	std	Y+30, r25	; 0x1e
     6e6:	af 8f       	std	Y+31, r26	; 0x1f
     6e8:	b8 a3       	std	Y+32, r27	; 0x20

000006ea <.Loc.111>:
}
     6ea:	6d 8d       	ldd	r22, Y+29	; 0x1d
     6ec:	7e 8d       	ldd	r23, Y+30	; 0x1e
     6ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
     6f0:	98 a1       	ldd	r25, Y+32	; 0x20
     6f2:	ec 96       	adiw	r28, 0x3c	; 60
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	cd bf       	out	0x3d, r28	; 61
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	08 95       	ret

00000704 <init_Gyro>:

void init_Gyro(){
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	cd b7       	in	r28, 0x3d	; 61
     70a:	de b7       	in	r29, 0x3e	; 62

0000070c <.Loc.113>:
    I2C_Init();
     70c:	0e 94 95 00 	call	0x12a	; 0x12a <I2C_Init>

00000710 <.Loc.114>:
    MPU6050_Init();
     710:	0e 94 49 02 	call	0x492	; 0x492 <MPU6050_Init>

00000714 <.Loc.115>:
    initTimerGyro();
     714:	0e 94 55 02 	call	0x4aa	; 0x4aa <initTimerGyro>

00000718 <.Loc.116>:
}
     718:	00 00       	nop
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	08 95       	ret

00000720 <__vector_20>:
#include "h_bridge_1.h"
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER1_OVF_vect){
     720:	1f 92       	push	r1
     722:	0f 92       	push	r0
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	0f 92       	push	r0
     728:	11 24       	eor	r1, r1
     72a:	0b b6       	in	r0, 0x3b	; 59
     72c:	0f 92       	push	r0
     72e:	2f 93       	push	r18
     730:	8f 93       	push	r24
     732:	9f 93       	push	r25
     734:	ef 93       	push	r30
     736:	ff 93       	push	r31
     738:	cf 93       	push	r28
     73a:	df 93       	push	r29
     73c:	cd b7       	in	r28, 0x3d	; 61
     73e:	de b7       	in	r29, 0x3e	; 62

00000740 <.Loc.1>:
	if (OCR1A == 0 && OCR1B == 0){
     740:	88 e8       	ldi	r24, 0x88	; 136
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	fc 01       	movw	r30, r24
     746:	80 81       	ld	r24, Z
     748:	91 81       	ldd	r25, Z+1	; 0x01

0000074a <.Loc.2>:
     74a:	00 97       	sbiw	r24, 0x00	; 0
     74c:	d1 f4       	brne	.+52     	; 0x782 <.L2>

0000074e <.Loc.3>:
     74e:	8a e8       	ldi	r24, 0x8A	; 138
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	fc 01       	movw	r30, r24
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01

00000758 <.Loc.4>:
     758:	00 97       	sbiw	r24, 0x00	; 0
     75a:	99 f4       	brne	.+38     	; 0x782 <.L2>

0000075c <.Loc.5>:
		port_R1 &= ~(1<<pin_R1);
     75c:	88 e0       	ldi	r24, 0x08	; 8
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	fc 01       	movw	r30, r24
     762:	20 81       	ld	r18, Z

00000764 <.Loc.6>:
     764:	88 e0       	ldi	r24, 0x08	; 8
     766:	91 e0       	ldi	r25, 0x01	; 1

00000768 <.Loc.7>:
     768:	2f 7d       	andi	r18, 0xDF	; 223
     76a:	fc 01       	movw	r30, r24
     76c:	20 83       	st	Z, r18

0000076e <.Loc.8>:
		port_L1 &= ~(1<<pin_L1);
     76e:	88 e0       	ldi	r24, 0x08	; 8
     770:	91 e0       	ldi	r25, 0x01	; 1
     772:	fc 01       	movw	r30, r24
     774:	20 81       	ld	r18, Z

00000776 <.Loc.9>:
     776:	88 e0       	ldi	r24, 0x08	; 8
     778:	91 e0       	ldi	r25, 0x01	; 1

0000077a <.Loc.10>:
     77a:	2f 7e       	andi	r18, 0xEF	; 239
     77c:	fc 01       	movw	r30, r24
     77e:	20 83       	st	Z, r18

00000780 <.Loc.11>:
	}
	else if (OCR1B != 0){
		port_R1 &= ~(1<<pin_R1);
		port_L1 |= (1<<pin_L1);
	}
}
     780:	33 c0       	rjmp	.+102    	; 0x7e8 <.L5>

00000782 <.L2>:
	else if (OCR1A != 0){
     782:	88 e8       	ldi	r24, 0x88	; 136
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	fc 01       	movw	r30, r24
     788:	80 81       	ld	r24, Z
     78a:	91 81       	ldd	r25, Z+1	; 0x01

0000078c <.Loc.13>:
     78c:	00 97       	sbiw	r24, 0x00	; 0
     78e:	99 f0       	breq	.+38     	; 0x7b6 <.L4>

00000790 <.Loc.14>:
		port_R1 |= (1<<pin_R1);
     790:	88 e0       	ldi	r24, 0x08	; 8
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	fc 01       	movw	r30, r24
     796:	20 81       	ld	r18, Z
     798:	88 e0       	ldi	r24, 0x08	; 8
     79a:	91 e0       	ldi	r25, 0x01	; 1

0000079c <.Loc.15>:
     79c:	20 62       	ori	r18, 0x20	; 32
     79e:	fc 01       	movw	r30, r24
     7a0:	20 83       	st	Z, r18

000007a2 <.Loc.16>:
		port_L1 &= ~(1<<pin_L1);
     7a2:	88 e0       	ldi	r24, 0x08	; 8
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	fc 01       	movw	r30, r24
     7a8:	20 81       	ld	r18, Z

000007aa <.Loc.17>:
     7aa:	88 e0       	ldi	r24, 0x08	; 8
     7ac:	91 e0       	ldi	r25, 0x01	; 1

000007ae <.Loc.18>:
     7ae:	2f 7e       	andi	r18, 0xEF	; 239
     7b0:	fc 01       	movw	r30, r24
     7b2:	20 83       	st	Z, r18

000007b4 <.Loc.19>:
}
     7b4:	19 c0       	rjmp	.+50     	; 0x7e8 <.L5>

000007b6 <.L4>:
	else if (OCR1B != 0){
     7b6:	8a e8       	ldi	r24, 0x8A	; 138
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	fc 01       	movw	r30, r24
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01

000007c0 <.Loc.21>:
     7c0:	00 97       	sbiw	r24, 0x00	; 0
     7c2:	91 f0       	breq	.+36     	; 0x7e8 <.L5>

000007c4 <.Loc.22>:
		port_R1 &= ~(1<<pin_R1);
     7c4:	88 e0       	ldi	r24, 0x08	; 8
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	fc 01       	movw	r30, r24
     7ca:	20 81       	ld	r18, Z

000007cc <.Loc.23>:
     7cc:	88 e0       	ldi	r24, 0x08	; 8
     7ce:	91 e0       	ldi	r25, 0x01	; 1

000007d0 <.Loc.24>:
     7d0:	2f 7d       	andi	r18, 0xDF	; 223
     7d2:	fc 01       	movw	r30, r24
     7d4:	20 83       	st	Z, r18

000007d6 <.Loc.25>:
		port_L1 |= (1<<pin_L1);
     7d6:	88 e0       	ldi	r24, 0x08	; 8
     7d8:	91 e0       	ldi	r25, 0x01	; 1
     7da:	fc 01       	movw	r30, r24
     7dc:	20 81       	ld	r18, Z
     7de:	88 e0       	ldi	r24, 0x08	; 8
     7e0:	91 e0       	ldi	r25, 0x01	; 1

000007e2 <.Loc.26>:
     7e2:	20 61       	ori	r18, 0x10	; 16
     7e4:	fc 01       	movw	r30, r24
     7e6:	20 83       	st	Z, r18

000007e8 <.L5>:
}
     7e8:	00 00       	nop
     7ea:	df 91       	pop	r29
     7ec:	cf 91       	pop	r28
     7ee:	ff 91       	pop	r31
     7f0:	ef 91       	pop	r30
     7f2:	9f 91       	pop	r25
     7f4:	8f 91       	pop	r24
     7f6:	2f 91       	pop	r18
     7f8:	0f 90       	pop	r0
     7fa:	0b be       	out	0x3b, r0	; 59
     7fc:	0f 90       	pop	r0
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	0f 90       	pop	r0
     802:	1f 90       	pop	r1
     804:	18 95       	reti

00000806 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     806:	1f 92       	push	r1
     808:	0f 92       	push	r0
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	0f 92       	push	r0
     80e:	11 24       	eor	r1, r1
     810:	0b b6       	in	r0, 0x3b	; 59
     812:	0f 92       	push	r0
     814:	2f 93       	push	r18
     816:	8f 93       	push	r24
     818:	9f 93       	push	r25
     81a:	ef 93       	push	r30
     81c:	ff 93       	push	r31
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	cd b7       	in	r28, 0x3d	; 61
     824:	de b7       	in	r29, 0x3e	; 62

00000826 <.Loc.29>:
	if (OCR1A != 65535){
     826:	88 e8       	ldi	r24, 0x88	; 136
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	fc 01       	movw	r30, r24
     82c:	80 81       	ld	r24, Z
     82e:	91 81       	ldd	r25, Z+1	; 0x01

00000830 <.Loc.30>:
     830:	8f 3f       	cpi	r24, 0xFF	; 255
     832:	98 07       	cpc	r25, r24
     834:	49 f0       	breq	.+18     	; 0x848 <.L8>

00000836 <.Loc.31>:
		port_R1 &= ~(1<<pin_R1);
     836:	88 e0       	ldi	r24, 0x08	; 8
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	fc 01       	movw	r30, r24
     83c:	20 81       	ld	r18, Z

0000083e <.Loc.32>:
     83e:	88 e0       	ldi	r24, 0x08	; 8
     840:	91 e0       	ldi	r25, 0x01	; 1

00000842 <.Loc.33>:
     842:	2f 7d       	andi	r18, 0xDF	; 223
     844:	fc 01       	movw	r30, r24
     846:	20 83       	st	Z, r18

00000848 <.L8>:
	}
}
     848:	00 00       	nop
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	ff 91       	pop	r31
     850:	ef 91       	pop	r30
     852:	9f 91       	pop	r25
     854:	8f 91       	pop	r24
     856:	2f 91       	pop	r18
     858:	0f 90       	pop	r0
     85a:	0b be       	out	0x3b, r0	; 59
     85c:	0f 90       	pop	r0
     85e:	0f be       	out	0x3f, r0	; 63
     860:	0f 90       	pop	r0
     862:	1f 90       	pop	r1
     864:	18 95       	reti

00000866 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     866:	1f 92       	push	r1
     868:	0f 92       	push	r0
     86a:	0f b6       	in	r0, 0x3f	; 63
     86c:	0f 92       	push	r0
     86e:	11 24       	eor	r1, r1
     870:	0b b6       	in	r0, 0x3b	; 59
     872:	0f 92       	push	r0
     874:	2f 93       	push	r18
     876:	8f 93       	push	r24
     878:	9f 93       	push	r25
     87a:	ef 93       	push	r30
     87c:	ff 93       	push	r31
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62

00000886 <.Loc.36>:
	if (OCR1B != 65535){
     886:	8a e8       	ldi	r24, 0x8A	; 138
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	fc 01       	movw	r30, r24
     88c:	80 81       	ld	r24, Z
     88e:	91 81       	ldd	r25, Z+1	; 0x01

00000890 <.Loc.37>:
     890:	8f 3f       	cpi	r24, 0xFF	; 255
     892:	98 07       	cpc	r25, r24
     894:	49 f0       	breq	.+18     	; 0x8a8 <.L11>

00000896 <.Loc.38>:
		port_L1 &= ~(1<<pin_L1);
     896:	88 e0       	ldi	r24, 0x08	; 8
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	fc 01       	movw	r30, r24
     89c:	20 81       	ld	r18, Z

0000089e <.Loc.39>:
     89e:	88 e0       	ldi	r24, 0x08	; 8
     8a0:	91 e0       	ldi	r25, 0x01	; 1

000008a2 <.Loc.40>:
     8a2:	2f 7e       	andi	r18, 0xEF	; 239
     8a4:	fc 01       	movw	r30, r24
     8a6:	20 83       	st	Z, r18

000008a8 <.L11>:
	}
}
     8a8:	00 00       	nop
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	ff 91       	pop	r31
     8b0:	ef 91       	pop	r30
     8b2:	9f 91       	pop	r25
     8b4:	8f 91       	pop	r24
     8b6:	2f 91       	pop	r18
     8b8:	0f 90       	pop	r0
     8ba:	0b be       	out	0x3b, r0	; 59
     8bc:	0f 90       	pop	r0
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	0f 90       	pop	r0
     8c2:	1f 90       	pop	r1
     8c4:	18 95       	reti

000008c6 <init_motor_1>:

void init_motor_1(void)
{
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62

000008ce <.Loc.43>:
	// Pin outputs
	ddr_R1 |= (1<<pin_R1);
     8ce:	87 e0       	ldi	r24, 0x07	; 7
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	fc 01       	movw	r30, r24
     8d4:	20 81       	ld	r18, Z
     8d6:	87 e0       	ldi	r24, 0x07	; 7
     8d8:	91 e0       	ldi	r25, 0x01	; 1

000008da <.Loc.44>:
     8da:	20 62       	ori	r18, 0x20	; 32
     8dc:	fc 01       	movw	r30, r24
     8de:	20 83       	st	Z, r18

000008e0 <.Loc.45>:
	ddr_L1 |= (1<<pin_L1);
     8e0:	87 e0       	ldi	r24, 0x07	; 7
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	fc 01       	movw	r30, r24
     8e6:	20 81       	ld	r18, Z
     8e8:	87 e0       	ldi	r24, 0x07	; 7
     8ea:	91 e0       	ldi	r25, 0x01	; 1

000008ec <.Loc.46>:
     8ec:	20 61       	ori	r18, 0x10	; 16
     8ee:	fc 01       	movw	r30, r24
     8f0:	20 83       	st	Z, r18

000008f2 <.Loc.47>:

	// zekerheid laag
	port_R1 &= ~(1<<pin_R1);
     8f2:	88 e0       	ldi	r24, 0x08	; 8
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	fc 01       	movw	r30, r24
     8f8:	20 81       	ld	r18, Z

000008fa <.Loc.48>:
     8fa:	88 e0       	ldi	r24, 0x08	; 8
     8fc:	91 e0       	ldi	r25, 0x01	; 1

000008fe <.Loc.49>:
     8fe:	2f 7d       	andi	r18, 0xDF	; 223
     900:	fc 01       	movw	r30, r24
     902:	20 83       	st	Z, r18

00000904 <.Loc.50>:
	port_L1 &= ~(1<<pin_L1);
     904:	88 e0       	ldi	r24, 0x08	; 8
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	fc 01       	movw	r30, r24
     90a:	20 81       	ld	r18, Z

0000090c <.Loc.51>:
     90c:	88 e0       	ldi	r24, 0x08	; 8
     90e:	91 e0       	ldi	r25, 0x01	; 1

00000910 <.Loc.52>:
     910:	2f 7e       	andi	r18, 0xEF	; 239
     912:	fc 01       	movw	r30, r24
     914:	20 83       	st	Z, r18

00000916 <.Loc.53>:

	// prescale 64
	TCCR1A = 0;
     916:	80 e8       	ldi	r24, 0x80	; 128
     918:	90 e0       	ldi	r25, 0x00	; 0

0000091a <.Loc.54>:
     91a:	fc 01       	movw	r30, r24
     91c:	10 82       	st	Z, r1

0000091e <.Loc.55>:
	TCCR1B = (0<<CS12) | (0<<CS11) | (1<<CS10);
     91e:	81 e8       	ldi	r24, 0x81	; 129
     920:	90 e0       	ldi	r25, 0x00	; 0

00000922 <.Loc.56>:
     922:	21 e0       	ldi	r18, 0x01	; 1
     924:	fc 01       	movw	r30, r24
     926:	20 83       	st	Z, r18

00000928 <.Loc.57>:

	// standaard 0
	OCR1A = 0;
     928:	88 e8       	ldi	r24, 0x88	; 136
     92a:	90 e0       	ldi	r25, 0x00	; 0

0000092c <.Loc.58>:
     92c:	fc 01       	movw	r30, r24
     92e:	11 82       	std	Z+1, r1	; 0x01
     930:	10 82       	st	Z, r1

00000932 <.Loc.59>:
	OCR1B = 0;
     932:	8a e8       	ldi	r24, 0x8A	; 138
     934:	90 e0       	ldi	r25, 0x00	; 0

00000936 <.Loc.60>:
     936:	fc 01       	movw	r30, r24
     938:	11 82       	std	Z+1, r1	; 0x01
     93a:	10 82       	st	Z, r1

0000093c <.Loc.61>:
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     93c:	8f e6       	ldi	r24, 0x6F	; 111
     93e:	90 e0       	ldi	r25, 0x00	; 0

00000940 <.Loc.62>:
     940:	27 e0       	ldi	r18, 0x07	; 7
     942:	fc 01       	movw	r30, r24
     944:	20 83       	st	Z, r18

00000946 <.Loc.63>:
	Motor_1_set_power(0);
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000094c <.Loc.64>:
}
     94c:	00 00       	nop
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	08 95       	ret

00000954 <Motor_1_set_power>:

void Motor_1_set_power(signed char power)
{
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	0f 92       	push	r0
     95a:	cd b7       	in	r28, 0x3d	; 61
     95c:	de b7       	in	r29, 0x3e	; 62
     95e:	89 83       	std	Y+1, r24	; 0x01

00000960 <.Loc.66>:
	if (power >= -100 && power <= 100){
     960:	89 81       	ldd	r24, Y+1	; 0x01
     962:	8c 39       	cpi	r24, 0x9C	; 156
     964:	b4 f1       	brlt	.+108    	; 0x9d2 <.L16>

00000966 <.Loc.67>:
     966:	89 81       	ldd	r24, Y+1	; 0x01
     968:	84 36       	cpi	r24, 0x64	; 100
     96a:	09 f0       	breq	.+2      	; 0x96e <.Loc.68>

0000096c <L0^A>:
     96c:	94 f5       	brge	.+100    	; 0x9d2 <.L16>

0000096e <.Loc.68>:
		if (power >= 0){
     96e:	89 81       	ldd	r24, Y+1	; 0x01
     970:	88 23       	and	r24, r24
     972:	c4 f0       	brlt	.+48     	; 0x9a4 <.L15>

00000974 <.Loc.69>:
			OCR1B = 0;
     974:	8a e8       	ldi	r24, 0x8A	; 138
     976:	90 e0       	ldi	r25, 0x00	; 0

00000978 <.Loc.70>:
     978:	fc 01       	movw	r30, r24
     97a:	11 82       	std	Z+1, r1	; 0x01
     97c:	10 82       	st	Z, r1

0000097e <.Loc.71>:
			OCR1A = (65535*power)/85;
     97e:	89 81       	ldd	r24, Y+1	; 0x01
     980:	68 2f       	mov	r22, r24
     982:	88 0f       	add	r24, r24
     984:	77 0b       	sbc	r23, r23

00000986 <.Loc.72>:
     986:	88 e8       	ldi	r24, 0x88	; 136
     988:	90 e0       	ldi	r25, 0x00	; 0

0000098a <.Loc.73>:
     98a:	43 e0       	ldi	r20, 0x03	; 3
     98c:	53 e0       	ldi	r21, 0x03	; 3
     98e:	64 9f       	mul	r22, r20
     990:	90 01       	movw	r18, r0
     992:	65 9f       	mul	r22, r21
     994:	30 0d       	add	r19, r0
     996:	74 9f       	mul	r23, r20
     998:	30 0d       	add	r19, r0
     99a:	11 24       	eor	r1, r1

0000099c <.Loc.74>:
     99c:	fc 01       	movw	r30, r24
     99e:	31 83       	std	Z+1, r19	; 0x01
     9a0:	20 83       	st	Z, r18

000009a2 <.Loc.75>:
		else {
			OCR1A = 0;
			OCR1B = (65535*power)/-85;
		}
	}
}
     9a2:	17 c0       	rjmp	.+46     	; 0x9d2 <.L16>

000009a4 <.L15>:
			OCR1A = 0;
     9a4:	88 e8       	ldi	r24, 0x88	; 136
     9a6:	90 e0       	ldi	r25, 0x00	; 0

000009a8 <.Loc.77>:
     9a8:	fc 01       	movw	r30, r24
     9aa:	11 82       	std	Z+1, r1	; 0x01
     9ac:	10 82       	st	Z, r1

000009ae <.Loc.78>:
			OCR1B = (65535*power)/-85;
     9ae:	89 81       	ldd	r24, Y+1	; 0x01
     9b0:	68 2f       	mov	r22, r24
     9b2:	88 0f       	add	r24, r24
     9b4:	77 0b       	sbc	r23, r23

000009b6 <.Loc.79>:
     9b6:	8a e8       	ldi	r24, 0x8A	; 138
     9b8:	90 e0       	ldi	r25, 0x00	; 0

000009ba <.Loc.80>:
     9ba:	4d ef       	ldi	r20, 0xFD	; 253
     9bc:	5c ef       	ldi	r21, 0xFC	; 252
     9be:	64 9f       	mul	r22, r20
     9c0:	90 01       	movw	r18, r0
     9c2:	65 9f       	mul	r22, r21
     9c4:	30 0d       	add	r19, r0
     9c6:	74 9f       	mul	r23, r20
     9c8:	30 0d       	add	r19, r0
     9ca:	11 24       	eor	r1, r1

000009cc <.Loc.81>:
     9cc:	fc 01       	movw	r30, r24
     9ce:	31 83       	std	Z+1, r19	; 0x01
     9d0:	20 83       	st	Z, r18

000009d2 <.L16>:
}
     9d2:	00 00       	nop
     9d4:	0f 90       	pop	r0
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	08 95       	ret

000009dc <__vector_35>:
#include "h_bridge_2.h"
#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER3_OVF_vect){
     9dc:	1f 92       	push	r1
     9de:	0f 92       	push	r0
     9e0:	0f b6       	in	r0, 0x3f	; 63
     9e2:	0f 92       	push	r0
     9e4:	11 24       	eor	r1, r1
     9e6:	0b b6       	in	r0, 0x3b	; 59
     9e8:	0f 92       	push	r0
     9ea:	2f 93       	push	r18
     9ec:	8f 93       	push	r24
     9ee:	9f 93       	push	r25
     9f0:	ef 93       	push	r30
     9f2:	ff 93       	push	r31
     9f4:	cf 93       	push	r28
     9f6:	df 93       	push	r29
     9f8:	cd b7       	in	r28, 0x3d	; 61
     9fa:	de b7       	in	r29, 0x3e	; 62

000009fc <.Loc.1>:
	if (OCR3A == 0 && OCR3B == 0){
     9fc:	88 e9       	ldi	r24, 0x98	; 152
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	fc 01       	movw	r30, r24
     a02:	80 81       	ld	r24, Z
     a04:	91 81       	ldd	r25, Z+1	; 0x01

00000a06 <.Loc.2>:
     a06:	00 97       	sbiw	r24, 0x00	; 0
     a08:	d1 f4       	brne	.+52     	; 0xa3e <.L2>

00000a0a <.Loc.3>:
     a0a:	8a e9       	ldi	r24, 0x9A	; 154
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	fc 01       	movw	r30, r24
     a10:	80 81       	ld	r24, Z
     a12:	91 81       	ldd	r25, Z+1	; 0x01

00000a14 <.Loc.4>:
     a14:	00 97       	sbiw	r24, 0x00	; 0
     a16:	99 f4       	brne	.+38     	; 0xa3e <.L2>

00000a18 <.Loc.5>:
		port_R2 &= ~(1<<pin_R2);
     a18:	88 e0       	ldi	r24, 0x08	; 8
     a1a:	91 e0       	ldi	r25, 0x01	; 1
     a1c:	fc 01       	movw	r30, r24
     a1e:	20 81       	ld	r18, Z

00000a20 <.Loc.6>:
     a20:	88 e0       	ldi	r24, 0x08	; 8
     a22:	91 e0       	ldi	r25, 0x01	; 1

00000a24 <.Loc.7>:
     a24:	2f 77       	andi	r18, 0x7F	; 127
     a26:	fc 01       	movw	r30, r24
     a28:	20 83       	st	Z, r18

00000a2a <.Loc.8>:
		port_L2 &= ~(1<<pin_L2);
     a2a:	88 e0       	ldi	r24, 0x08	; 8
     a2c:	91 e0       	ldi	r25, 0x01	; 1
     a2e:	fc 01       	movw	r30, r24
     a30:	20 81       	ld	r18, Z

00000a32 <.Loc.9>:
     a32:	88 e0       	ldi	r24, 0x08	; 8
     a34:	91 e0       	ldi	r25, 0x01	; 1

00000a36 <.Loc.10>:
     a36:	2f 7b       	andi	r18, 0xBF	; 191
     a38:	fc 01       	movw	r30, r24
     a3a:	20 83       	st	Z, r18

00000a3c <.Loc.11>:
	}
	else if (OCR3B != 0){
		port_R2 &= ~(1<<pin_R2);
		port_L2 |= (1<<pin_L2);
	}
}
     a3c:	33 c0       	rjmp	.+102    	; 0xaa4 <.L5>

00000a3e <.L2>:
	else if (OCR3A != 0){
     a3e:	88 e9       	ldi	r24, 0x98	; 152
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	fc 01       	movw	r30, r24
     a44:	80 81       	ld	r24, Z
     a46:	91 81       	ldd	r25, Z+1	; 0x01

00000a48 <.Loc.13>:
     a48:	00 97       	sbiw	r24, 0x00	; 0
     a4a:	99 f0       	breq	.+38     	; 0xa72 <.L4>

00000a4c <.Loc.14>:
		port_R2 |= (1<<pin_R2);
     a4c:	88 e0       	ldi	r24, 0x08	; 8
     a4e:	91 e0       	ldi	r25, 0x01	; 1
     a50:	fc 01       	movw	r30, r24
     a52:	20 81       	ld	r18, Z
     a54:	88 e0       	ldi	r24, 0x08	; 8
     a56:	91 e0       	ldi	r25, 0x01	; 1

00000a58 <.Loc.15>:
     a58:	20 68       	ori	r18, 0x80	; 128
     a5a:	fc 01       	movw	r30, r24
     a5c:	20 83       	st	Z, r18

00000a5e <.Loc.16>:
		port_L2 &= ~(1<<pin_L2);
     a5e:	88 e0       	ldi	r24, 0x08	; 8
     a60:	91 e0       	ldi	r25, 0x01	; 1
     a62:	fc 01       	movw	r30, r24
     a64:	20 81       	ld	r18, Z

00000a66 <.Loc.17>:
     a66:	88 e0       	ldi	r24, 0x08	; 8
     a68:	91 e0       	ldi	r25, 0x01	; 1

00000a6a <.Loc.18>:
     a6a:	2f 7b       	andi	r18, 0xBF	; 191
     a6c:	fc 01       	movw	r30, r24
     a6e:	20 83       	st	Z, r18

00000a70 <.Loc.19>:
}
     a70:	19 c0       	rjmp	.+50     	; 0xaa4 <.L5>

00000a72 <.L4>:
	else if (OCR3B != 0){
     a72:	8a e9       	ldi	r24, 0x9A	; 154
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	fc 01       	movw	r30, r24
     a78:	80 81       	ld	r24, Z
     a7a:	91 81       	ldd	r25, Z+1	; 0x01

00000a7c <.Loc.21>:
     a7c:	00 97       	sbiw	r24, 0x00	; 0
     a7e:	91 f0       	breq	.+36     	; 0xaa4 <.L5>

00000a80 <.Loc.22>:
		port_R2 &= ~(1<<pin_R2);
     a80:	88 e0       	ldi	r24, 0x08	; 8
     a82:	91 e0       	ldi	r25, 0x01	; 1
     a84:	fc 01       	movw	r30, r24
     a86:	20 81       	ld	r18, Z

00000a88 <.Loc.23>:
     a88:	88 e0       	ldi	r24, 0x08	; 8
     a8a:	91 e0       	ldi	r25, 0x01	; 1

00000a8c <.Loc.24>:
     a8c:	2f 77       	andi	r18, 0x7F	; 127
     a8e:	fc 01       	movw	r30, r24
     a90:	20 83       	st	Z, r18

00000a92 <.Loc.25>:
		port_L2 |= (1<<pin_L2);
     a92:	88 e0       	ldi	r24, 0x08	; 8
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	fc 01       	movw	r30, r24
     a98:	20 81       	ld	r18, Z
     a9a:	88 e0       	ldi	r24, 0x08	; 8
     a9c:	91 e0       	ldi	r25, 0x01	; 1

00000a9e <.Loc.26>:
     a9e:	20 64       	ori	r18, 0x40	; 64
     aa0:	fc 01       	movw	r30, r24
     aa2:	20 83       	st	Z, r18

00000aa4 <.L5>:
}
     aa4:	00 00       	nop
     aa6:	df 91       	pop	r29
     aa8:	cf 91       	pop	r28
     aaa:	ff 91       	pop	r31
     aac:	ef 91       	pop	r30
     aae:	9f 91       	pop	r25
     ab0:	8f 91       	pop	r24
     ab2:	2f 91       	pop	r18
     ab4:	0f 90       	pop	r0
     ab6:	0b be       	out	0x3b, r0	; 59
     ab8:	0f 90       	pop	r0
     aba:	0f be       	out	0x3f, r0	; 63
     abc:	0f 90       	pop	r0
     abe:	1f 90       	pop	r1
     ac0:	18 95       	reti

00000ac2 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     ac2:	1f 92       	push	r1
     ac4:	0f 92       	push	r0
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	0f 92       	push	r0
     aca:	11 24       	eor	r1, r1
     acc:	0b b6       	in	r0, 0x3b	; 59
     ace:	0f 92       	push	r0
     ad0:	2f 93       	push	r18
     ad2:	8f 93       	push	r24
     ad4:	9f 93       	push	r25
     ad6:	ef 93       	push	r30
     ad8:	ff 93       	push	r31
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
     ade:	cd b7       	in	r28, 0x3d	; 61
     ae0:	de b7       	in	r29, 0x3e	; 62

00000ae2 <.Loc.29>:
	if (OCR3A != 65535){
     ae2:	88 e9       	ldi	r24, 0x98	; 152
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	fc 01       	movw	r30, r24
     ae8:	80 81       	ld	r24, Z
     aea:	91 81       	ldd	r25, Z+1	; 0x01

00000aec <.Loc.30>:
     aec:	8f 3f       	cpi	r24, 0xFF	; 255
     aee:	98 07       	cpc	r25, r24
     af0:	49 f0       	breq	.+18     	; 0xb04 <.L8>

00000af2 <.Loc.31>:
		port_R2 &= ~(1<<pin_R2);
     af2:	88 e0       	ldi	r24, 0x08	; 8
     af4:	91 e0       	ldi	r25, 0x01	; 1
     af6:	fc 01       	movw	r30, r24
     af8:	20 81       	ld	r18, Z

00000afa <.Loc.32>:
     afa:	88 e0       	ldi	r24, 0x08	; 8
     afc:	91 e0       	ldi	r25, 0x01	; 1

00000afe <.Loc.33>:
     afe:	2f 77       	andi	r18, 0x7F	; 127
     b00:	fc 01       	movw	r30, r24
     b02:	20 83       	st	Z, r18

00000b04 <.L8>:
	}
}
     b04:	00 00       	nop
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	ff 91       	pop	r31
     b0c:	ef 91       	pop	r30
     b0e:	9f 91       	pop	r25
     b10:	8f 91       	pop	r24
     b12:	2f 91       	pop	r18
     b14:	0f 90       	pop	r0
     b16:	0b be       	out	0x3b, r0	; 59
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	0f 90       	pop	r0
     b1e:	1f 90       	pop	r1
     b20:	18 95       	reti

00000b22 <__vector_33>:

ISR(TIMER3_COMPB_vect)
{
     b22:	1f 92       	push	r1
     b24:	0f 92       	push	r0
     b26:	0f b6       	in	r0, 0x3f	; 63
     b28:	0f 92       	push	r0
     b2a:	11 24       	eor	r1, r1
     b2c:	0b b6       	in	r0, 0x3b	; 59
     b2e:	0f 92       	push	r0
     b30:	2f 93       	push	r18
     b32:	8f 93       	push	r24
     b34:	9f 93       	push	r25
     b36:	ef 93       	push	r30
     b38:	ff 93       	push	r31
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62

00000b42 <.Loc.36>:
	if (OCR3B != 65535){
     b42:	8a e9       	ldi	r24, 0x9A	; 154
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	fc 01       	movw	r30, r24
     b48:	80 81       	ld	r24, Z
     b4a:	91 81       	ldd	r25, Z+1	; 0x01

00000b4c <.Loc.37>:
     b4c:	8f 3f       	cpi	r24, 0xFF	; 255
     b4e:	98 07       	cpc	r25, r24
     b50:	49 f0       	breq	.+18     	; 0xb64 <.L11>

00000b52 <.Loc.38>:
		port_L2 &= ~(1<<pin_L2);
     b52:	88 e0       	ldi	r24, 0x08	; 8
     b54:	91 e0       	ldi	r25, 0x01	; 1
     b56:	fc 01       	movw	r30, r24
     b58:	20 81       	ld	r18, Z

00000b5a <.Loc.39>:
     b5a:	88 e0       	ldi	r24, 0x08	; 8
     b5c:	91 e0       	ldi	r25, 0x01	; 1

00000b5e <.Loc.40>:
     b5e:	2f 7b       	andi	r18, 0xBF	; 191
     b60:	fc 01       	movw	r30, r24
     b62:	20 83       	st	Z, r18

00000b64 <.L11>:
	}
}
     b64:	00 00       	nop
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	ff 91       	pop	r31
     b6c:	ef 91       	pop	r30
     b6e:	9f 91       	pop	r25
     b70:	8f 91       	pop	r24
     b72:	2f 91       	pop	r18
     b74:	0f 90       	pop	r0
     b76:	0b be       	out	0x3b, r0	; 59
     b78:	0f 90       	pop	r0
     b7a:	0f be       	out	0x3f, r0	; 63
     b7c:	0f 90       	pop	r0
     b7e:	1f 90       	pop	r1
     b80:	18 95       	reti

00000b82 <init_motor_2>:

void init_motor_2(void)
{
     b82:	cf 93       	push	r28
     b84:	df 93       	push	r29
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62

00000b8a <.Loc.43>:
	// Pin outputs
	ddr_R2 |= (1<<pin_R2);
     b8a:	87 e0       	ldi	r24, 0x07	; 7
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	fc 01       	movw	r30, r24
     b90:	20 81       	ld	r18, Z
     b92:	87 e0       	ldi	r24, 0x07	; 7
     b94:	91 e0       	ldi	r25, 0x01	; 1

00000b96 <.Loc.44>:
     b96:	20 68       	ori	r18, 0x80	; 128
     b98:	fc 01       	movw	r30, r24
     b9a:	20 83       	st	Z, r18

00000b9c <.Loc.45>:
	ddr_L2 |= (1<<pin_L2);
     b9c:	87 e0       	ldi	r24, 0x07	; 7
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	fc 01       	movw	r30, r24
     ba2:	20 81       	ld	r18, Z
     ba4:	87 e0       	ldi	r24, 0x07	; 7
     ba6:	91 e0       	ldi	r25, 0x01	; 1

00000ba8 <.Loc.46>:
     ba8:	20 64       	ori	r18, 0x40	; 64
     baa:	fc 01       	movw	r30, r24
     bac:	20 83       	st	Z, r18

00000bae <.Loc.47>:

	// zekerheid laag
	port_R2 &= ~(1<<pin_R2);
     bae:	88 e0       	ldi	r24, 0x08	; 8
     bb0:	91 e0       	ldi	r25, 0x01	; 1
     bb2:	fc 01       	movw	r30, r24
     bb4:	20 81       	ld	r18, Z

00000bb6 <.Loc.48>:
     bb6:	88 e0       	ldi	r24, 0x08	; 8
     bb8:	91 e0       	ldi	r25, 0x01	; 1

00000bba <.Loc.49>:
     bba:	2f 77       	andi	r18, 0x7F	; 127
     bbc:	fc 01       	movw	r30, r24
     bbe:	20 83       	st	Z, r18

00000bc0 <.Loc.50>:
	port_L2 &= ~(1<<pin_L2);
     bc0:	88 e0       	ldi	r24, 0x08	; 8
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	fc 01       	movw	r30, r24
     bc6:	20 81       	ld	r18, Z

00000bc8 <.Loc.51>:
     bc8:	88 e0       	ldi	r24, 0x08	; 8
     bca:	91 e0       	ldi	r25, 0x01	; 1

00000bcc <.Loc.52>:
     bcc:	2f 7b       	andi	r18, 0xBF	; 191
     bce:	fc 01       	movw	r30, r24
     bd0:	20 83       	st	Z, r18

00000bd2 <.Loc.53>:

	// prescale 64
	TCCR3A = 0;
     bd2:	80 e9       	ldi	r24, 0x90	; 144
     bd4:	90 e0       	ldi	r25, 0x00	; 0

00000bd6 <.Loc.54>:
     bd6:	fc 01       	movw	r30, r24
     bd8:	10 82       	st	Z, r1

00000bda <.Loc.55>:
	TCCR3B = (0<<CS32) | (0<<CS31) | (1<<CS30);
     bda:	81 e9       	ldi	r24, 0x91	; 145
     bdc:	90 e0       	ldi	r25, 0x00	; 0

00000bde <.Loc.56>:
     bde:	21 e0       	ldi	r18, 0x01	; 1
     be0:	fc 01       	movw	r30, r24
     be2:	20 83       	st	Z, r18

00000be4 <.Loc.57>:

	// standaard 0
	OCR3A = 0;
     be4:	88 e9       	ldi	r24, 0x98	; 152
     be6:	90 e0       	ldi	r25, 0x00	; 0

00000be8 <.Loc.58>:
     be8:	fc 01       	movw	r30, r24
     bea:	11 82       	std	Z+1, r1	; 0x01
     bec:	10 82       	st	Z, r1

00000bee <.Loc.59>:
	OCR3B = 0;
     bee:	8a e9       	ldi	r24, 0x9A	; 154
     bf0:	90 e0       	ldi	r25, 0x00	; 0

00000bf2 <.Loc.60>:
     bf2:	fc 01       	movw	r30, r24
     bf4:	11 82       	std	Z+1, r1	; 0x01
     bf6:	10 82       	st	Z, r1

00000bf8 <.Loc.61>:
	TIMSK3 = (1<<OCIE3B) | (1<<OCIE3A) | (1<<TOIE3);
     bf8:	81 e7       	ldi	r24, 0x71	; 113
     bfa:	90 e0       	ldi	r25, 0x00	; 0

00000bfc <.Loc.62>:
     bfc:	27 e0       	ldi	r18, 0x07	; 7
     bfe:	fc 01       	movw	r30, r24
     c00:	20 83       	st	Z, r18

00000c02 <.Loc.63>:
	Motor_2_set_power(0);
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00000c08 <.Loc.64>:
}
     c08:	00 00       	nop
     c0a:	df 91       	pop	r29
     c0c:	cf 91       	pop	r28
     c0e:	08 95       	ret

00000c10 <Motor_2_set_power>:

void Motor_2_set_power(signed char power)
{
     c10:	0f 93       	push	r16
     c12:	1f 93       	push	r17
     c14:	cf 93       	push	r28
     c16:	df 93       	push	r29
     c18:	00 d0       	rcall	.+0      	; 0xc1a <L0^A>

00000c1a <L0^A>:
     c1a:	00 d0       	rcall	.+0      	; 0xc1c <L0^A>

00000c1c <L0^A>:
     c1c:	00 d0       	rcall	.+0      	; 0xc1e <L0^A>

00000c1e <L0^A>:
     c1e:	cd b7       	in	r28, 0x3d	; 61
     c20:	de b7       	in	r29, 0x3e	; 62
     c22:	89 83       	std	Y+1, r24	; 0x01

00000c24 <.Loc.66>:
	if (power >= -100 && power <= 100){
     c24:	89 81       	ldd	r24, Y+1	; 0x01
     c26:	8c 39       	cpi	r24, 0x9C	; 156
     c28:	0c f4       	brge	.+2      	; 0xc2c <.Loc.67>

00000c2a <L0^A>:
     c2a:	61 c0       	rjmp	.+194    	; 0xcee <.L16>

00000c2c <.Loc.67>:
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	84 36       	cpi	r24, 0x64	; 100
     c30:	11 f0       	breq	.+4      	; 0xc36 <.Loc.68>

00000c32 <L0^A>:
     c32:	0c f0       	brlt	.+2      	; 0xc36 <.Loc.68>

00000c34 <L0^A>:
     c34:	5c c0       	rjmp	.+184    	; 0xcee <.L16>

00000c36 <.Loc.68>:
		if (power >= 0){
     c36:	89 81       	ldd	r24, Y+1	; 0x01
     c38:	88 23       	and	r24, r24
     c3a:	6c f1       	brlt	.+90     	; 0xc96 <.L15>

00000c3c <.Loc.69>:
			OCR3B = 0;
     c3c:	8a e9       	ldi	r24, 0x9A	; 154
     c3e:	90 e0       	ldi	r25, 0x00	; 0

00000c40 <.Loc.70>:
     c40:	fc 01       	movw	r30, r24
     c42:	11 82       	std	Z+1, r1	; 0x01
     c44:	10 82       	st	Z, r1

00000c46 <.Loc.71>:
			OCR3A = (65535*power)/100;
     c46:	89 81       	ldd	r24, Y+1	; 0x01
     c48:	48 2f       	mov	r20, r24
     c4a:	88 0f       	add	r24, r24
     c4c:	55 0b       	sbc	r21, r21
     c4e:	66 0b       	sbc	r22, r22
     c50:	77 0b       	sbc	r23, r23
     c52:	8f ef       	ldi	r24, 0xFF	; 255
     c54:	9f ef       	ldi	r25, 0xFF	; 255
     c56:	dc 01       	movw	r26, r24
     c58:	9a 01       	movw	r18, r20
     c5a:	ab 01       	movw	r20, r22
     c5c:	0e 94 94 17 	call	0x2f28	; 0x2f28 <__muluhisi3>
     c60:	6a 83       	std	Y+2, r22	; 0x02
     c62:	7b 83       	std	Y+3, r23	; 0x03
     c64:	8c 83       	std	Y+4, r24	; 0x04
     c66:	9d 83       	std	Y+5, r25	; 0x05

00000c68 <.Loc.72>:
     c68:	04 e6       	ldi	r16, 0x64	; 100
     c6a:	10 e0       	ldi	r17, 0x00	; 0
     c6c:	20 e0       	ldi	r18, 0x00	; 0
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	6a 81       	ldd	r22, Y+2	; 0x02
     c72:	7b 81       	ldd	r23, Y+3	; 0x03
     c74:	8c 81       	ldd	r24, Y+4	; 0x04
     c76:	9d 81       	ldd	r25, Y+5	; 0x05
     c78:	a9 01       	movw	r20, r18
     c7a:	98 01       	movw	r18, r16
     c7c:	0e 94 66 17 	call	0x2ecc	; 0x2ecc <__divmodsi4>
     c80:	da 01       	movw	r26, r20
     c82:	c9 01       	movw	r24, r18
     c84:	ac 01       	movw	r20, r24
     c86:	bd 01       	movw	r22, r26

00000c88 <.Loc.73>:
     c88:	88 e9       	ldi	r24, 0x98	; 152
     c8a:	90 e0       	ldi	r25, 0x00	; 0

00000c8c <.Loc.74>:
     c8c:	9a 01       	movw	r18, r20
     c8e:	fc 01       	movw	r30, r24
     c90:	31 83       	std	Z+1, r19	; 0x01
     c92:	20 83       	st	Z, r18

00000c94 <.Loc.75>:
		else {
			OCR3A = 0;
			OCR3B = (65535*power)/-100;
		}
	}
}
     c94:	2c c0       	rjmp	.+88     	; 0xcee <.L16>

00000c96 <.L15>:
			OCR3A = 0;
     c96:	88 e9       	ldi	r24, 0x98	; 152
     c98:	90 e0       	ldi	r25, 0x00	; 0

00000c9a <.Loc.77>:
     c9a:	fc 01       	movw	r30, r24
     c9c:	11 82       	std	Z+1, r1	; 0x01
     c9e:	10 82       	st	Z, r1

00000ca0 <.Loc.78>:
			OCR3B = (65535*power)/-100;
     ca0:	89 81       	ldd	r24, Y+1	; 0x01
     ca2:	48 2f       	mov	r20, r24
     ca4:	88 0f       	add	r24, r24
     ca6:	55 0b       	sbc	r21, r21
     ca8:	66 0b       	sbc	r22, r22
     caa:	77 0b       	sbc	r23, r23
     cac:	8f ef       	ldi	r24, 0xFF	; 255
     cae:	9f ef       	ldi	r25, 0xFF	; 255
     cb0:	dc 01       	movw	r26, r24
     cb2:	9a 01       	movw	r18, r20
     cb4:	ab 01       	movw	r20, r22
     cb6:	0e 94 94 17 	call	0x2f28	; 0x2f28 <__muluhisi3>
     cba:	6e 83       	std	Y+6, r22	; 0x06
     cbc:	7f 83       	std	Y+7, r23	; 0x07
     cbe:	88 87       	std	Y+8, r24	; 0x08
     cc0:	99 87       	std	Y+9, r25	; 0x09

00000cc2 <.Loc.79>:
     cc2:	0c e9       	ldi	r16, 0x9C	; 156
     cc4:	1f ef       	ldi	r17, 0xFF	; 255
     cc6:	2f ef       	ldi	r18, 0xFF	; 255
     cc8:	3f ef       	ldi	r19, 0xFF	; 255
     cca:	6e 81       	ldd	r22, Y+6	; 0x06
     ccc:	7f 81       	ldd	r23, Y+7	; 0x07
     cce:	88 85       	ldd	r24, Y+8	; 0x08
     cd0:	99 85       	ldd	r25, Y+9	; 0x09
     cd2:	a9 01       	movw	r20, r18
     cd4:	98 01       	movw	r18, r16
     cd6:	0e 94 66 17 	call	0x2ecc	; 0x2ecc <__divmodsi4>
     cda:	da 01       	movw	r26, r20
     cdc:	c9 01       	movw	r24, r18
     cde:	ac 01       	movw	r20, r24
     ce0:	bd 01       	movw	r22, r26

00000ce2 <.Loc.80>:
     ce2:	8a e9       	ldi	r24, 0x9A	; 154
     ce4:	90 e0       	ldi	r25, 0x00	; 0

00000ce6 <.Loc.81>:
     ce6:	9a 01       	movw	r18, r20
     ce8:	fc 01       	movw	r30, r24
     cea:	31 83       	std	Z+1, r19	; 0x01
     cec:	20 83       	st	Z, r18

00000cee <.L16>:
}
     cee:	00 00       	nop
     cf0:	29 96       	adiw	r28, 0x09	; 9
     cf2:	0f b6       	in	r0, 0x3f	; 63
     cf4:	f8 94       	cli
     cf6:	de bf       	out	0x3e, r29	; 62
     cf8:	0f be       	out	0x3f, r0	; 63
     cfa:	cd bf       	out	0x3d, r28	; 61
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	1f 91       	pop	r17
     d02:	0f 91       	pop	r16
     d04:	08 95       	ret

00000d06 <main>:
*/

float CurrentHeading = 360.0;

int main(void)
{
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
     d0a:	cd b7       	in	r28, 0x3d	; 61
     d0c:	de b7       	in	r29, 0x3e	; 62
     d0e:	c4 57       	subi	r28, 0x74	; 116
     d10:	d1 09       	sbc	r29, r1
     d12:	0f b6       	in	r0, 0x3f	; 63
     d14:	f8 94       	cli
     d16:	de bf       	out	0x3e, r29	; 62
     d18:	0f be       	out	0x3f, r0	; 63
     d1a:	cd bf       	out	0x3d, r28	; 61

00000d1c <.Loc.1>:
    init();
     d1c:	0e 94 19 0a 	call	0x1432	; 0x1432 <init>

00000d20 <.Loc.2>:
    init_display_meneer();
     d20:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <init_display_meneer>

00000d24 <.Loc.3>:
    int VolgModus = 0;
     d24:	1a 86       	std	Y+10, r1	; 0x0a
     d26:	19 86       	std	Y+9, r1	; 0x09

00000d28 <.Loc.4>:
    int KolommenModus =1;
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	9c 87       	std	Y+12, r25	; 0x0c
     d2e:	8b 87       	std	Y+11, r24	; 0x0b

00000d30 <.Loc.5>:
    int TestModus =0;
     d30:	1e 86       	std	Y+14, r1	; 0x0e
     d32:	1d 86       	std	Y+13, r1	; 0x0d

00000d34 <.Loc.6>:

    int VolgTarget = 80;
     d34:	80 e5       	ldi	r24, 0x50	; 80
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	98 8b       	std	Y+16, r25	; 0x10
     d3a:	8f 87       	std	Y+15, r24	; 0x0f

00000d3c <.Loc.7>:

    int TargetHeading = 360;
     d3c:	88 e6       	ldi	r24, 0x68	; 104
     d3e:	91 e0       	ldi	r25, 0x01	; 1
     d40:	9a 83       	std	Y+2, r25	; 0x02
     d42:	89 83       	std	Y+1, r24	; 0x01

00000d44 <.Loc.8>:
    int Afstand = 0;
     d44:	1a 8a       	std	Y+18, r1	; 0x12
     d46:	19 8a       	std	Y+17, r1	; 0x11

00000d48 <.Loc.9>:
    int Difference =0;
     d48:	1c 8a       	std	Y+20, r1	; 0x14
     d4a:	1b 8a       	std	Y+19, r1	; 0x13

00000d4c <.Loc.10>:
    int HeadingDifference = 0;
     d4c:	1e 8a       	std	Y+22, r1	; 0x16
     d4e:	1d 8a       	std	Y+21, r1	; 0x15

00000d50 <.Loc.11>:
    int FrontDifference = 0;
     d50:	18 8e       	std	Y+24, r1	; 0x18
     d52:	1f 8a       	std	Y+23, r1	; 0x17

00000d54 <.Loc.12>:
    int Obstructie = 0;
     d54:	1c 82       	std	Y+4, r1	; 0x04
     d56:	1b 82       	std	Y+3, r1	; 0x03

00000d58 <.Loc.13>:

    int CurrentKolom = 1;
     d58:	81 e0       	ldi	r24, 0x01	; 1
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	9e 83       	std	Y+6, r25	; 0x06
     d5e:	8d 83       	std	Y+5, r24	; 0x05

00000d60 <.Loc.14>:
    int InKolom = 1;
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	98 87       	std	Y+8, r25	; 0x08
     d66:	8f 83       	std	Y+7, r24	; 0x07

00000d68 <.Loc.15>:

    int printgetal;
    DDRB |= ((1<<PB7) | (1<<PB6));
     d68:	84 e2       	ldi	r24, 0x24	; 36
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	dc 01       	movw	r26, r24
     d6e:	2c 91       	ld	r18, X
     d70:	84 e2       	ldi	r24, 0x24	; 36
     d72:	90 e0       	ldi	r25, 0x00	; 0

00000d74 <.Loc.16>:
     d74:	20 6c       	ori	r18, 0xC0	; 192
     d76:	fc 01       	movw	r30, r24
     d78:	20 83       	st	Z, r18

00000d7a <.Loc.17>:
    PORTB |= ((1<<PB7) | (1<<PB6));
     d7a:	85 e2       	ldi	r24, 0x25	; 37
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	dc 01       	movw	r26, r24
     d80:	2c 91       	ld	r18, X
     d82:	85 e2       	ldi	r24, 0x25	; 37
     d84:	90 e0       	ldi	r25, 0x00	; 0

00000d86 <.Loc.18>:
     d86:	20 6c       	ori	r18, 0xC0	; 192
     d88:	fc 01       	movw	r30, r24
     d8a:	20 83       	st	Z, r18

00000d8c <.Loc.19>:
    DDRE |= (1<<PE5);
     d8c:	8d e2       	ldi	r24, 0x2D	; 45
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	dc 01       	movw	r26, r24
     d92:	2c 91       	ld	r18, X
     d94:	8d e2       	ldi	r24, 0x2D	; 45
     d96:	90 e0       	ldi	r25, 0x00	; 0

00000d98 <.Loc.20>:
     d98:	20 62       	ori	r18, 0x20	; 32
     d9a:	fc 01       	movw	r30, r24
     d9c:	20 83       	st	Z, r18

00000d9e <.Loc.21>:
    PORTE |= (1<<PE5);
     d9e:	8e e2       	ldi	r24, 0x2E	; 46
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	dc 01       	movw	r26, r24
     da4:	2c 91       	ld	r18, X
     da6:	8e e2       	ldi	r24, 0x2E	; 46
     da8:	90 e0       	ldi	r25, 0x00	; 0

00000daa <.Loc.22>:
     daa:	20 62       	ori	r18, 0x20	; 32
     dac:	fc 01       	movw	r30, r24
     dae:	20 83       	st	Z, r18

00000db0 <.Loc.23>:
                LightSwap();
                VolgModus = 0;
                KolommenModus = 1;
            }
        }*/
        while(TestModus == 1){
     db0:	50 c0       	rjmp	.+160    	; 0xe52 <.L2>

00000db2 <.L3>:
            int AfstandLinks = GetDistanceLeft();
     db2:	0e 94 64 13 	call	0x26c8	; 0x26c8 <GetDistanceLeft>
     db6:	98 a3       	std	Y+32, r25	; 0x20
     db8:	8f 8f       	std	Y+31, r24	; 0x1f

00000dba <.Loc.25>:
            int AfstandRechts = GetDistanceRight();
     dba:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <GetDistanceRight>
     dbe:	9a a3       	std	Y+34, r25	; 0x22
     dc0:	89 a3       	std	Y+33, r24	; 0x21

00000dc2 <.Loc.26>:
            int Afstand = GetDistanceFront();
     dc2:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <GetDistanceFront>
     dc6:	9c a3       	std	Y+36, r25	; 0x24
     dc8:	8b a3       	std	Y+35, r24	; 0x23

00000dca <.Loc.27>:
            CurrentHeading = UpdateHeading(CurrentHeading);
     dca:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     dce:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     dd2:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     dd6:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     dda:	2d a3       	std	Y+37, r18	; 0x25
     ddc:	3e a3       	std	Y+38, r19	; 0x26
     dde:	4f a3       	std	Y+39, r20	; 0x27
     de0:	58 a7       	std	Y+40, r21	; 0x28
     de2:	6d a1       	ldd	r22, Y+37	; 0x25
     de4:	7e a1       	ldd	r23, Y+38	; 0x26
     de6:	8f a1       	ldd	r24, Y+39	; 0x27
     de8:	98 a5       	ldd	r25, Y+40	; 0x28
     dea:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
     dee:	69 a7       	std	Y+41, r22	; 0x29
     df0:	7a a7       	std	Y+42, r23	; 0x2a
     df2:	8b a7       	std	Y+43, r24	; 0x2b
     df4:	9c a7       	std	Y+44, r25	; 0x2c

00000df6 <.Loc.28>:
     df6:	89 a5       	ldd	r24, Y+41	; 0x29
     df8:	9a a5       	ldd	r25, Y+42	; 0x2a
     dfa:	ab a5       	ldd	r26, Y+43	; 0x2b
     dfc:	bc a5       	ldd	r27, Y+44	; 0x2c
     dfe:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
     e02:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
     e06:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
     e0a:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00000e0e <.Loc.29>:
            printgetal = (int)CurrentHeading;
     e0e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     e12:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     e16:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     e1a:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     e1e:	2d a7       	std	Y+45, r18	; 0x2d
     e20:	3e a7       	std	Y+46, r19	; 0x2e
     e22:	4f a7       	std	Y+47, r20	; 0x2f
     e24:	58 ab       	std	Y+48, r21	; 0x30

00000e26 <.Loc.30>:
     e26:	6d a5       	ldd	r22, Y+45	; 0x2d
     e28:	7e a5       	ldd	r23, Y+46	; 0x2e
     e2a:	8f a5       	ldd	r24, Y+47	; 0x2f
     e2c:	98 a9       	ldd	r25, Y+48	; 0x30
     e2e:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
     e32:	69 96       	adiw	r28, 0x19	; 25
     e34:	6c af       	std	Y+60, r22	; 0x3c
     e36:	7d af       	std	Y+61, r23	; 0x3d
     e38:	8e af       	std	Y+62, r24	; 0x3e
     e3a:	9f af       	std	Y+63, r25	; 0x3f
     e3c:	69 97       	sbiw	r28, 0x19	; 25
     e3e:	67 96       	adiw	r28, 0x17	; 23
     e40:	4e ad       	ldd	r20, Y+62	; 0x3e
     e42:	5f ad       	ldd	r21, Y+63	; 0x3f
     e44:	67 97       	sbiw	r28, 0x17	; 23
     e46:	5e 8f       	std	Y+30, r21	; 0x1e
     e48:	4d 8f       	std	Y+29, r20	; 0x1d

00000e4a <.Loc.31>:
            display_getal(printgetal);
     e4a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e4c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e4e:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

00000e52 <.L2>:
        while(TestModus == 1){
     e52:	8d 85       	ldd	r24, Y+13	; 0x0d
     e54:	9e 85       	ldd	r25, Y+14	; 0x0e
     e56:	81 30       	cpi	r24, 0x01	; 1
     e58:	91 05       	cpc	r25, r1
     e5a:	09 f4       	brne	.+2      	; 0xe5e <.Loc.33>

00000e5c <L0^A>:
     e5c:	aa cf       	rjmp	.-172    	; 0xdb2 <.L3>

00000e5e <.Loc.33>:
        }
        while(VolgModus == 1){
     e5e:	0b c1       	rjmp	.+534    	; 0x1076 <.L4>

00000e60 <.L14>:
            /*if(RedSwitch()){
                VolgModus = 0;
                KolommenModus = 0;
            }*/

            Afstand = GetDistanceFront();
     e60:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <GetDistanceFront>
     e64:	9a 8b       	std	Y+18, r25	; 0x12
     e66:	89 8b       	std	Y+17, r24	; 0x11

00000e68 <.Loc.35>:
            Difference = Afstand - VolgTarget;
     e68:	29 89       	ldd	r18, Y+17	; 0x11
     e6a:	3a 89       	ldd	r19, Y+18	; 0x12
     e6c:	8f 85       	ldd	r24, Y+15	; 0x0f
     e6e:	98 89       	ldd	r25, Y+16	; 0x10
     e70:	d9 01       	movw	r26, r18
     e72:	a8 1b       	sub	r26, r24
     e74:	b9 0b       	sbc	r27, r25
     e76:	cd 01       	movw	r24, r26
     e78:	9c 8b       	std	Y+20, r25	; 0x14
     e7a:	8b 8b       	std	Y+19, r24	; 0x13

00000e7c <.Loc.36>:
            display_getal(Afstand);
     e7c:	89 89       	ldd	r24, Y+17	; 0x11
     e7e:	9a 89       	ldd	r25, Y+18	; 0x12
     e80:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

00000e84 <.Loc.37>:

            CurrentHeading = UpdateHeading(CurrentHeading);
     e84:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
     e88:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
     e8c:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
     e90:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
     e94:	29 ab       	std	Y+49, r18	; 0x31
     e96:	3a ab       	std	Y+50, r19	; 0x32
     e98:	4b ab       	std	Y+51, r20	; 0x33
     e9a:	5c ab       	std	Y+52, r21	; 0x34
     e9c:	69 a9       	ldd	r22, Y+49	; 0x31
     e9e:	7a a9       	ldd	r23, Y+50	; 0x32
     ea0:	8b a9       	ldd	r24, Y+51	; 0x33
     ea2:	9c a9       	ldd	r25, Y+52	; 0x34
     ea4:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
     ea8:	6d ab       	std	Y+53, r22	; 0x35
     eaa:	7e ab       	std	Y+54, r23	; 0x36
     eac:	8f ab       	std	Y+55, r24	; 0x37
     eae:	98 af       	std	Y+56, r25	; 0x38

00000eb0 <.Loc.38>:
     eb0:	8d a9       	ldd	r24, Y+53	; 0x35
     eb2:	9e a9       	ldd	r25, Y+54	; 0x36
     eb4:	af a9       	ldd	r26, Y+55	; 0x37
     eb6:	b8 ad       	ldd	r27, Y+56	; 0x38
     eb8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
     ebc:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
     ec0:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
     ec4:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00000ec8 <.Loc.39>:
            HeadingDifference = TargetHeading - CurrentHeading;
     ec8:	89 81       	ldd	r24, Y+1	; 0x01
     eca:	9a 81       	ldd	r25, Y+2	; 0x02
     ecc:	9c 01       	movw	r18, r24
     ece:	99 0f       	add	r25, r25
     ed0:	44 0b       	sbc	r20, r20
     ed2:	55 0b       	sbc	r21, r21
     ed4:	6d 96       	adiw	r28, 0x1d	; 29
     ed6:	2c af       	std	Y+60, r18	; 0x3c
     ed8:	3d af       	std	Y+61, r19	; 0x3d
     eda:	4e af       	std	Y+62, r20	; 0x3e
     edc:	5f af       	std	Y+63, r21	; 0x3f
     ede:	6d 97       	sbiw	r28, 0x1d	; 29
     ee0:	6d 96       	adiw	r28, 0x1d	; 29
     ee2:	6c ad       	ldd	r22, Y+60	; 0x3c
     ee4:	7d ad       	ldd	r23, Y+61	; 0x3d
     ee6:	8e ad       	ldd	r24, Y+62	; 0x3e
     ee8:	9f ad       	ldd	r25, Y+63	; 0x3f
     eea:	6d 97       	sbiw	r28, 0x1d	; 29
     eec:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
     ef0:	69 af       	std	Y+57, r22	; 0x39
     ef2:	7a af       	std	Y+58, r23	; 0x3a
     ef4:	8b af       	std	Y+59, r24	; 0x3b
     ef6:	9c af       	std	Y+60, r25	; 0x3c
     ef8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
     efc:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
     f00:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
     f04:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
     f08:	9c 01       	movw	r18, r24
     f0a:	ad 01       	movw	r20, r26
     f0c:	69 ad       	ldd	r22, Y+57	; 0x39
     f0e:	7a ad       	ldd	r23, Y+58	; 0x3a
     f10:	8b ad       	ldd	r24, Y+59	; 0x3b
     f12:	9c ad       	ldd	r25, Y+60	; 0x3c
     f14:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__subsf3>
     f18:	a1 96       	adiw	r28, 0x21	; 33
     f1a:	6c af       	std	Y+60, r22	; 0x3c
     f1c:	7d af       	std	Y+61, r23	; 0x3d
     f1e:	8e af       	std	Y+62, r24	; 0x3e
     f20:	9f af       	std	Y+63, r25	; 0x3f
     f22:	a1 97       	sbiw	r28, 0x21	; 33
     f24:	a1 96       	adiw	r28, 0x21	; 33
     f26:	8c ad       	ldd	r24, Y+60	; 0x3c
     f28:	9d ad       	ldd	r25, Y+61	; 0x3d
     f2a:	ae ad       	ldd	r26, Y+62	; 0x3e
     f2c:	bf ad       	ldd	r27, Y+63	; 0x3f
     f2e:	a1 97       	sbiw	r28, 0x21	; 33
     f30:	21 96       	adiw	r28, 0x01	; 1
     f32:	8c af       	std	Y+60, r24	; 0x3c
     f34:	9d af       	std	Y+61, r25	; 0x3d
     f36:	ae af       	std	Y+62, r26	; 0x3e
     f38:	bf af       	std	Y+63, r27	; 0x3f
     f3a:	21 97       	sbiw	r28, 0x01	; 1

00000f3c <.Loc.40>:
     f3c:	21 96       	adiw	r28, 0x01	; 1
     f3e:	6c ad       	ldd	r22, Y+60	; 0x3c
     f40:	7d ad       	ldd	r23, Y+61	; 0x3d
     f42:	8e ad       	ldd	r24, Y+62	; 0x3e
     f44:	9f ad       	ldd	r25, Y+63	; 0x3f
     f46:	21 97       	sbiw	r28, 0x01	; 1
     f48:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
     f4c:	a5 96       	adiw	r28, 0x25	; 37
     f4e:	6c af       	std	Y+60, r22	; 0x3c
     f50:	7d af       	std	Y+61, r23	; 0x3d
     f52:	8e af       	std	Y+62, r24	; 0x3e
     f54:	9f af       	std	Y+63, r25	; 0x3f
     f56:	a5 97       	sbiw	r28, 0x25	; 37
     f58:	a3 96       	adiw	r28, 0x23	; 35
     f5a:	ae ad       	ldd	r26, Y+62	; 0x3e
     f5c:	bf ad       	ldd	r27, Y+63	; 0x3f
     f5e:	a3 97       	sbiw	r28, 0x23	; 35
     f60:	be 8b       	std	Y+22, r27	; 0x16
     f62:	ad 8b       	std	Y+21, r26	; 0x15

00000f64 <.Loc.41>:

            if (HeadingDifference > 3){
     f64:	8d 89       	ldd	r24, Y+21	; 0x15
     f66:	9e 89       	ldd	r25, Y+22	; 0x16
     f68:	83 30       	cpi	r24, 0x03	; 3
     f6a:	91 05       	cpc	r25, r1
     f6c:	39 f0       	breq	.+14     	; 0xf7c <.L5>
     f6e:	34 f0       	brlt	.+12     	; 0xf7c <.L5>

00000f70 <.Loc.42>:
                Motor_1_set_power(35);
     f70:	83 e2       	ldi	r24, 0x23	; 35
     f72:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000f76 <.Loc.43>:
                Motor_2_set_power(25);
     f76:	89 e1       	ldi	r24, 0x19	; 25
     f78:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00000f7c <.L5>:
            }
            if (HeadingDifference < -3){
     f7c:	8d 89       	ldd	r24, Y+21	; 0x15
     f7e:	9e 89       	ldd	r25, Y+22	; 0x16
     f80:	8d 3f       	cpi	r24, 0xFD	; 253
     f82:	bf ef       	ldi	r27, 0xFF	; 255
     f84:	9b 07       	cpc	r25, r27
     f86:	34 f4       	brge	.+12     	; 0xf94 <.L6>

00000f88 <.Loc.45>:
                Motor_1_set_power(25);
     f88:	89 e1       	ldi	r24, 0x19	; 25
     f8a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000f8e <.Loc.46>:
                Motor_2_set_power(35);
     f8e:	83 e2       	ldi	r24, 0x23	; 35
     f90:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00000f94 <.L6>:
            }
            if (Difference > 200){
     f94:	8b 89       	ldd	r24, Y+19	; 0x13
     f96:	9c 89       	ldd	r25, Y+20	; 0x14
     f98:	88 3c       	cpi	r24, 0xC8	; 200
     f9a:	91 05       	cpc	r25, r1
     f9c:	39 f0       	breq	.+14     	; 0xfac <.L7>
     f9e:	34 f0       	brlt	.+12     	; 0xfac <.L7>

00000fa0 <.Loc.48>:
                Motor_1_set_power(35);
     fa0:	83 e2       	ldi	r24, 0x23	; 35
     fa2:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000fa6 <.Loc.49>:
                Motor_2_set_power(35);
     fa6:	83 e2       	ldi	r24, 0x23	; 35
     fa8:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00000fac <.L7>:
            }
            if (Difference > 120 && Difference < 200){
     fac:	8b 89       	ldd	r24, Y+19	; 0x13
     fae:	9c 89       	ldd	r25, Y+20	; 0x14
     fb0:	88 37       	cpi	r24, 0x78	; 120
     fb2:	91 05       	cpc	r25, r1
     fb4:	69 f0       	breq	.+26     	; 0xfd0 <.L8>
     fb6:	64 f0       	brlt	.+24     	; 0xfd0 <.L8>

00000fb8 <.Loc.51>:
     fb8:	8b 89       	ldd	r24, Y+19	; 0x13
     fba:	9c 89       	ldd	r25, Y+20	; 0x14
     fbc:	87 3c       	cpi	r24, 0xC7	; 199
     fbe:	91 05       	cpc	r25, r1
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <.Loc.52>

00000fc2 <L0^A>:
     fc2:	34 f4       	brge	.+12     	; 0xfd0 <.L8>

00000fc4 <.Loc.52>:
                Motor_1_set_power(22);
     fc4:	86 e1       	ldi	r24, 0x16	; 22
     fc6:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000fca <.Loc.53>:
                Motor_2_set_power(22);
     fca:	86 e1       	ldi	r24, 0x16	; 22
     fcc:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00000fd0 <.L8>:
            }
            if (Difference > 60 && Difference < 120){
     fd0:	8b 89       	ldd	r24, Y+19	; 0x13
     fd2:	9c 89       	ldd	r25, Y+20	; 0x14
     fd4:	8c 33       	cpi	r24, 0x3C	; 60
     fd6:	91 05       	cpc	r25, r1
     fd8:	69 f0       	breq	.+26     	; 0xff4 <.L9>
     fda:	64 f0       	brlt	.+24     	; 0xff4 <.L9>

00000fdc <.Loc.55>:
     fdc:	8b 89       	ldd	r24, Y+19	; 0x13
     fde:	9c 89       	ldd	r25, Y+20	; 0x14
     fe0:	87 37       	cpi	r24, 0x77	; 119
     fe2:	91 05       	cpc	r25, r1
     fe4:	09 f0       	breq	.+2      	; 0xfe8 <.Loc.56>

00000fe6 <L0^A>:
     fe6:	34 f4       	brge	.+12     	; 0xff4 <.L9>

00000fe8 <.Loc.56>:
                Motor_1_set_power(18);
     fe8:	82 e1       	ldi	r24, 0x12	; 18
     fea:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00000fee <.Loc.57>:
                Motor_2_set_power(18);
     fee:	82 e1       	ldi	r24, 0x12	; 18
     ff0:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00000ff4 <.L9>:
            }
            if (Difference > 20 && Difference < 60){
     ff4:	8b 89       	ldd	r24, Y+19	; 0x13
     ff6:	9c 89       	ldd	r25, Y+20	; 0x14
     ff8:	84 31       	cpi	r24, 0x14	; 20
     ffa:	91 05       	cpc	r25, r1
     ffc:	69 f0       	breq	.+26     	; 0x1018 <.L10>
     ffe:	64 f0       	brlt	.+24     	; 0x1018 <.L10>

00001000 <.Loc.59>:
    1000:	8b 89       	ldd	r24, Y+19	; 0x13
    1002:	9c 89       	ldd	r25, Y+20	; 0x14
    1004:	8b 33       	cpi	r24, 0x3B	; 59
    1006:	91 05       	cpc	r25, r1
    1008:	09 f0       	breq	.+2      	; 0x100c <.Loc.60>

0000100a <L0^A>:
    100a:	34 f4       	brge	.+12     	; 0x1018 <.L10>

0000100c <.Loc.60>:
                Motor_1_set_power(15);
    100c:	8f e0       	ldi	r24, 0x0F	; 15
    100e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001012 <.Loc.61>:
                Motor_2_set_power(15);
    1012:	8f e0       	ldi	r24, 0x0F	; 15
    1014:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001018 <.L10>:
            }
            if (Difference > 0 && Difference < 20){
    1018:	8b 89       	ldd	r24, Y+19	; 0x13
    101a:	9c 89       	ldd	r25, Y+20	; 0x14
    101c:	00 97       	sbiw	r24, 0x00	; 0
    101e:	69 f0       	breq	.+26     	; 0x103a <.L11>
    1020:	64 f0       	brlt	.+24     	; 0x103a <.L11>

00001022 <.Loc.63>:
    1022:	8b 89       	ldd	r24, Y+19	; 0x13
    1024:	9c 89       	ldd	r25, Y+20	; 0x14
    1026:	83 31       	cpi	r24, 0x13	; 19
    1028:	91 05       	cpc	r25, r1
    102a:	09 f0       	breq	.+2      	; 0x102e <.Loc.64>

0000102c <L0^A>:
    102c:	34 f4       	brge	.+12     	; 0x103a <.L11>

0000102e <.Loc.64>:
                Motor_1_set_power(12);
    102e:	8c e0       	ldi	r24, 0x0C	; 12
    1030:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001034 <.Loc.65>:
                Motor_2_set_power(12);
    1034:	8c e0       	ldi	r24, 0x0C	; 12
    1036:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

0000103a <.L11>:
            }
            if (Difference < -5){
    103a:	8b 89       	ldd	r24, Y+19	; 0x13
    103c:	9c 89       	ldd	r25, Y+20	; 0x14
    103e:	8b 3f       	cpi	r24, 0xFB	; 251
    1040:	ef ef       	ldi	r30, 0xFF	; 255
    1042:	9e 07       	cpc	r25, r30
    1044:	34 f4       	brge	.+12     	; 0x1052 <.L12>

00001046 <.Loc.67>:
                Motor_1_set_power(-18);
    1046:	8e ee       	ldi	r24, 0xEE	; 238
    1048:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000104c <.Loc.68>:
                Motor_2_set_power(-18);
    104c:	8e ee       	ldi	r24, 0xEE	; 238
    104e:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001052 <.L12>:
            }
            if ( -5 < Difference && Difference < 5){
    1052:	8b 89       	ldd	r24, Y+19	; 0x13
    1054:	9c 89       	ldd	r25, Y+20	; 0x14
    1056:	8c 3f       	cpi	r24, 0xFC	; 252
    1058:	ff ef       	ldi	r31, 0xFF	; 255
    105a:	9f 07       	cpc	r25, r31
    105c:	64 f0       	brlt	.+24     	; 0x1076 <.L4>

0000105e <.Loc.70>:
    105e:	8b 89       	ldd	r24, Y+19	; 0x13
    1060:	9c 89       	ldd	r25, Y+20	; 0x14
    1062:	84 30       	cpi	r24, 0x04	; 4
    1064:	91 05       	cpc	r25, r1
    1066:	09 f0       	breq	.+2      	; 0x106a <.Loc.71>

00001068 <L0^A>:
    1068:	34 f4       	brge	.+12     	; 0x1076 <.L4>

0000106a <.Loc.71>:
                Motor_1_set_power(0);
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001070 <.Loc.72>:
                Motor_2_set_power(0);
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001076 <.L4>:
        while(VolgModus == 1){
    1076:	89 85       	ldd	r24, Y+9	; 0x09
    1078:	9a 85       	ldd	r25, Y+10	; 0x0a
    107a:	81 30       	cpi	r24, 0x01	; 1
    107c:	91 05       	cpc	r25, r1
    107e:	09 f4       	brne	.+2      	; 0x1082 <.Loc.74>

00001080 <L0^A>:
    1080:	ef ce       	rjmp	.-546    	; 0xe60 <.L14>

00001082 <.Loc.74>:
            }

        }
        while(KolommenModus == 1){
    1082:	d0 c1       	rjmp	.+928    	; 0x1424 <.L15>

00001084 <.L32>:
            /*if(RedSwitch()){
                VolgModus = 0;
                KolommenModus = 0;
            }*/

            Afstand = GetDistanceFront();
    1084:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <GetDistanceFront>
    1088:	9a 8b       	std	Y+18, r25	; 0x12
    108a:	89 8b       	std	Y+17, r24	; 0x11

0000108c <.Loc.76>:
            FrontDifference = Afstand - VolgTarget;
    108c:	29 89       	ldd	r18, Y+17	; 0x11
    108e:	3a 89       	ldd	r19, Y+18	; 0x12
    1090:	8f 85       	ldd	r24, Y+15	; 0x0f
    1092:	98 89       	ldd	r25, Y+16	; 0x10
    1094:	a9 01       	movw	r20, r18
    1096:	48 1b       	sub	r20, r24
    1098:	59 0b       	sbc	r21, r25
    109a:	ca 01       	movw	r24, r20
    109c:	98 8f       	std	Y+24, r25	; 0x18
    109e:	8f 8b       	std	Y+23, r24	; 0x17

000010a0 <.Loc.77>:

            int AfstandLinks = GetDistanceLeft();
    10a0:	0e 94 64 13 	call	0x26c8	; 0x26c8 <GetDistanceLeft>
    10a4:	9a 8f       	std	Y+26, r25	; 0x1a
    10a6:	89 8f       	std	Y+25, r24	; 0x19

000010a8 <.Loc.78>:
            int AfstandRechts = GetDistanceRight();
    10a8:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <GetDistanceRight>
    10ac:	9c 8f       	std	Y+28, r25	; 0x1c
    10ae:	8b 8f       	std	Y+27, r24	; 0x1b

000010b0 <.Loc.79>:
            CurrentHeading = UpdateHeading(CurrentHeading);
    10b0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    10b4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    10b8:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    10bc:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    10c0:	25 96       	adiw	r28, 0x05	; 5
    10c2:	8c af       	std	Y+60, r24	; 0x3c
    10c4:	9d af       	std	Y+61, r25	; 0x3d
    10c6:	ae af       	std	Y+62, r26	; 0x3e
    10c8:	bf af       	std	Y+63, r27	; 0x3f
    10ca:	25 97       	sbiw	r28, 0x05	; 5
    10cc:	25 96       	adiw	r28, 0x05	; 5
    10ce:	6c ad       	ldd	r22, Y+60	; 0x3c
    10d0:	7d ad       	ldd	r23, Y+61	; 0x3d
    10d2:	8e ad       	ldd	r24, Y+62	; 0x3e
    10d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    10d6:	25 97       	sbiw	r28, 0x05	; 5
    10d8:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    10dc:	29 96       	adiw	r28, 0x09	; 9
    10de:	6c af       	std	Y+60, r22	; 0x3c
    10e0:	7d af       	std	Y+61, r23	; 0x3d
    10e2:	8e af       	std	Y+62, r24	; 0x3e
    10e4:	9f af       	std	Y+63, r25	; 0x3f
    10e6:	29 97       	sbiw	r28, 0x09	; 9

000010e8 <.Loc.80>:
    10e8:	29 96       	adiw	r28, 0x09	; 9
    10ea:	2c ad       	ldd	r18, Y+60	; 0x3c
    10ec:	3d ad       	ldd	r19, Y+61	; 0x3d
    10ee:	4e ad       	ldd	r20, Y+62	; 0x3e
    10f0:	5f ad       	ldd	r21, Y+63	; 0x3f
    10f2:	29 97       	sbiw	r28, 0x09	; 9
    10f4:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <CurrentHeading>
    10f8:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <CurrentHeading+0x1>
    10fc:	40 93 02 02 	sts	0x0202, r20	; 0x800202 <CurrentHeading+0x2>
    1100:	50 93 03 02 	sts	0x0203, r21	; 0x800203 <CurrentHeading+0x3>

00001104 <.Loc.81>:
            printgetal = (int)CurrentHeading;
    1104:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1108:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    110c:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1110:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1114:	2d 96       	adiw	r28, 0x0d	; 13
    1116:	8c af       	std	Y+60, r24	; 0x3c
    1118:	9d af       	std	Y+61, r25	; 0x3d
    111a:	ae af       	std	Y+62, r26	; 0x3e
    111c:	bf af       	std	Y+63, r27	; 0x3f
    111e:	2d 97       	sbiw	r28, 0x0d	; 13

00001120 <.Loc.82>:
    1120:	2d 96       	adiw	r28, 0x0d	; 13
    1122:	6c ad       	ldd	r22, Y+60	; 0x3c
    1124:	7d ad       	ldd	r23, Y+61	; 0x3d
    1126:	8e ad       	ldd	r24, Y+62	; 0x3e
    1128:	9f ad       	ldd	r25, Y+63	; 0x3f
    112a:	2d 97       	sbiw	r28, 0x0d	; 13
    112c:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    1130:	a9 96       	adiw	r28, 0x29	; 41
    1132:	6c af       	std	Y+60, r22	; 0x3c
    1134:	7d af       	std	Y+61, r23	; 0x3d
    1136:	8e af       	std	Y+62, r24	; 0x3e
    1138:	9f af       	std	Y+63, r25	; 0x3f
    113a:	a9 97       	sbiw	r28, 0x29	; 41
    113c:	a7 96       	adiw	r28, 0x27	; 39
    113e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1140:	bf ad       	ldd	r27, Y+63	; 0x3f
    1142:	a7 97       	sbiw	r28, 0x27	; 39
    1144:	be 8f       	std	Y+30, r27	; 0x1e
    1146:	ad 8f       	std	Y+29, r26	; 0x1d

00001148 <.Loc.83>:
            display_getal(AfstandLinks);
    1148:	89 8d       	ldd	r24, Y+25	; 0x19
    114a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    114c:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

00001150 <.Loc.84>:
            Difference = TargetHeading - CurrentHeading;
    1150:	89 81       	ldd	r24, Y+1	; 0x01
    1152:	9a 81       	ldd	r25, Y+2	; 0x02
    1154:	9c 01       	movw	r18, r24
    1156:	99 0f       	add	r25, r25
    1158:	44 0b       	sbc	r20, r20
    115a:	55 0b       	sbc	r21, r21
    115c:	ad 96       	adiw	r28, 0x2d	; 45
    115e:	2c af       	std	Y+60, r18	; 0x3c
    1160:	3d af       	std	Y+61, r19	; 0x3d
    1162:	4e af       	std	Y+62, r20	; 0x3e
    1164:	5f af       	std	Y+63, r21	; 0x3f
    1166:	ad 97       	sbiw	r28, 0x2d	; 45
    1168:	ad 96       	adiw	r28, 0x2d	; 45
    116a:	6c ad       	ldd	r22, Y+60	; 0x3c
    116c:	7d ad       	ldd	r23, Y+61	; 0x3d
    116e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1170:	9f ad       	ldd	r25, Y+63	; 0x3f
    1172:	ad 97       	sbiw	r28, 0x2d	; 45
    1174:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    1178:	61 96       	adiw	r28, 0x11	; 17
    117a:	6c af       	std	Y+60, r22	; 0x3c
    117c:	7d af       	std	Y+61, r23	; 0x3d
    117e:	8e af       	std	Y+62, r24	; 0x3e
    1180:	9f af       	std	Y+63, r25	; 0x3f
    1182:	61 97       	sbiw	r28, 0x11	; 17
    1184:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1188:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    118c:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1190:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1194:	9c 01       	movw	r18, r24
    1196:	ad 01       	movw	r20, r26
    1198:	61 96       	adiw	r28, 0x11	; 17
    119a:	6c ad       	ldd	r22, Y+60	; 0x3c
    119c:	7d ad       	ldd	r23, Y+61	; 0x3d
    119e:	8e ad       	ldd	r24, Y+62	; 0x3e
    11a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    11a2:	61 97       	sbiw	r28, 0x11	; 17
    11a4:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__subsf3>
    11a8:	e1 96       	adiw	r28, 0x31	; 49
    11aa:	6c af       	std	Y+60, r22	; 0x3c
    11ac:	7d af       	std	Y+61, r23	; 0x3d
    11ae:	8e af       	std	Y+62, r24	; 0x3e
    11b0:	9f af       	std	Y+63, r25	; 0x3f
    11b2:	e1 97       	sbiw	r28, 0x31	; 49
    11b4:	e1 96       	adiw	r28, 0x31	; 49
    11b6:	8c ad       	ldd	r24, Y+60	; 0x3c
    11b8:	9d ad       	ldd	r25, Y+61	; 0x3d
    11ba:	ae ad       	ldd	r26, Y+62	; 0x3e
    11bc:	bf ad       	ldd	r27, Y+63	; 0x3f
    11be:	e1 97       	sbiw	r28, 0x31	; 49
    11c0:	65 96       	adiw	r28, 0x15	; 21
    11c2:	8c af       	std	Y+60, r24	; 0x3c
    11c4:	9d af       	std	Y+61, r25	; 0x3d
    11c6:	ae af       	std	Y+62, r26	; 0x3e
    11c8:	bf af       	std	Y+63, r27	; 0x3f
    11ca:	65 97       	sbiw	r28, 0x15	; 21

000011cc <.Loc.85>:
    11cc:	65 96       	adiw	r28, 0x15	; 21
    11ce:	6c ad       	ldd	r22, Y+60	; 0x3c
    11d0:	7d ad       	ldd	r23, Y+61	; 0x3d
    11d2:	8e ad       	ldd	r24, Y+62	; 0x3e
    11d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    11d6:	65 97       	sbiw	r28, 0x15	; 21
    11d8:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    11dc:	e5 96       	adiw	r28, 0x35	; 53
    11de:	6c af       	std	Y+60, r22	; 0x3c
    11e0:	7d af       	std	Y+61, r23	; 0x3d
    11e2:	8e af       	std	Y+62, r24	; 0x3e
    11e4:	9f af       	std	Y+63, r25	; 0x3f
    11e6:	e5 97       	sbiw	r28, 0x35	; 53
    11e8:	e3 96       	adiw	r28, 0x33	; 51
    11ea:	ae ad       	ldd	r26, Y+62	; 0x3e
    11ec:	bf ad       	ldd	r27, Y+63	; 0x3f
    11ee:	e3 97       	sbiw	r28, 0x33	; 51
    11f0:	bc 8b       	std	Y+20, r27	; 0x14
    11f2:	ab 8b       	std	Y+19, r26	; 0x13

000011f4 <.Loc.86>:

            if(FrontDifference < 60){
    11f4:	8f 89       	ldd	r24, Y+23	; 0x17
    11f6:	98 8d       	ldd	r25, Y+24	; 0x18
    11f8:	8b 33       	cpi	r24, 0x3B	; 59
    11fa:	91 05       	cpc	r25, r1
    11fc:	11 f0       	breq	.+4      	; 0x1202 <.Loc.87>

000011fe <L0^A>:
    11fe:	0c f0       	brlt	.+2      	; 0x1202 <.Loc.87>

00001200 <L0^A>:
    1200:	53 c0       	rjmp	.+166    	; 0x12a8 <.L16>

00001202 <.Loc.87>:
                Obstructie = 1;
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	9c 83       	std	Y+4, r25	; 0x04
    1208:	8b 83       	std	Y+3, r24	; 0x03

0000120a <.Loc.88>:
                if (FrontDifference > 20 && FrontDifference < 60){
    120a:	8f 89       	ldd	r24, Y+23	; 0x17
    120c:	98 8d       	ldd	r25, Y+24	; 0x18
    120e:	84 31       	cpi	r24, 0x14	; 20
    1210:	91 05       	cpc	r25, r1
    1212:	69 f0       	breq	.+26     	; 0x122e <.L17>
    1214:	64 f0       	brlt	.+24     	; 0x122e <.L17>

00001216 <.Loc.89>:
    1216:	8f 89       	ldd	r24, Y+23	; 0x17
    1218:	98 8d       	ldd	r25, Y+24	; 0x18
    121a:	8b 33       	cpi	r24, 0x3B	; 59
    121c:	91 05       	cpc	r25, r1
    121e:	09 f0       	breq	.+2      	; 0x1222 <.Loc.90>

00001220 <L0^A>:
    1220:	34 f4       	brge	.+12     	; 0x122e <.L17>

00001222 <.Loc.90>:
                Motor_1_set_power(15);
    1222:	8f e0       	ldi	r24, 0x0F	; 15
    1224:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001228 <.Loc.91>:
                Motor_2_set_power(15);
    1228:	8f e0       	ldi	r24, 0x0F	; 15
    122a:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

0000122e <.L17>:
                }
                if (FrontDifference > 0 && FrontDifference < 20){
    122e:	8f 89       	ldd	r24, Y+23	; 0x17
    1230:	98 8d       	ldd	r25, Y+24	; 0x18
    1232:	00 97       	sbiw	r24, 0x00	; 0
    1234:	69 f0       	breq	.+26     	; 0x1250 <.L18>
    1236:	64 f0       	brlt	.+24     	; 0x1250 <.L18>

00001238 <.Loc.93>:
    1238:	8f 89       	ldd	r24, Y+23	; 0x17
    123a:	98 8d       	ldd	r25, Y+24	; 0x18
    123c:	83 31       	cpi	r24, 0x13	; 19
    123e:	91 05       	cpc	r25, r1
    1240:	09 f0       	breq	.+2      	; 0x1244 <.Loc.94>

00001242 <L0^A>:
    1242:	34 f4       	brge	.+12     	; 0x1250 <.L18>

00001244 <.Loc.94>:
                    Motor_1_set_power(12);
    1244:	8c e0       	ldi	r24, 0x0C	; 12
    1246:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000124a <.Loc.95>:
                    Motor_2_set_power(12);
    124a:	8c e0       	ldi	r24, 0x0C	; 12
    124c:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001250 <.L18>:
                }
                if ( -5 < FrontDifference && FrontDifference < 5){
    1250:	8f 89       	ldd	r24, Y+23	; 0x17
    1252:	98 8d       	ldd	r25, Y+24	; 0x18
    1254:	8c 3f       	cpi	r24, 0xFC	; 252
    1256:	bf ef       	ldi	r27, 0xFF	; 255
    1258:	9b 07       	cpc	r25, r27
    125a:	34 f1       	brlt	.+76     	; 0x12a8 <.L16>

0000125c <.Loc.97>:
    125c:	8f 89       	ldd	r24, Y+23	; 0x17
    125e:	98 8d       	ldd	r25, Y+24	; 0x18
    1260:	84 30       	cpi	r24, 0x04	; 4
    1262:	91 05       	cpc	r25, r1
    1264:	09 f0       	breq	.+2      	; 0x1268 <.LBB30>

00001266 <L0^A>:
    1266:	04 f5       	brge	.+64     	; 0x12a8 <.L16>

00001268 <.LBB30>:
                    Motor_1_set_power(0);
    1268:	80 e0       	ldi	r24, 0x00	; 0
    126a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000126e <.Loc.99>:
                    Motor_2_set_power(0);
    126e:	80 e0       	ldi	r24, 0x00	; 0
    1270:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001274 <.Loc.100>:
                    PORTE &= ~(1<<PE5);
    1274:	8e e2       	ldi	r24, 0x2E	; 46
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	fc 01       	movw	r30, r24
    127a:	20 81       	ld	r18, Z

0000127c <.Loc.101>:
    127c:	8e e2       	ldi	r24, 0x2E	; 46
    127e:	90 e0       	ldi	r25, 0x00	; 0

00001280 <.Loc.102>:
    1280:	2f 7d       	andi	r18, 0xDF	; 223
    1282:	dc 01       	movw	r26, r24
    1284:	2c 93       	st	X, r18

00001286 <.Loc.103>:
                    wait_ms(20);
    1286:	84 e1       	ldi	r24, 0x14	; 20
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

0000128e <.Loc.104>:
                    PORTE |= (1<<PE5);
    128e:	8e e2       	ldi	r24, 0x2E	; 46
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	fc 01       	movw	r30, r24
    1294:	20 81       	ld	r18, Z
    1296:	8e e2       	ldi	r24, 0x2E	; 46
    1298:	90 e0       	ldi	r25, 0x00	; 0

0000129a <.Loc.105>:
    129a:	20 62       	ori	r18, 0x20	; 32
    129c:	dc 01       	movw	r26, r24
    129e:	2c 93       	st	X, r18

000012a0 <.Loc.106>:
                    wait_ms(20);
    12a0:	84 e1       	ldi	r24, 0x14	; 20
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

000012a8 <.L16>:
                }
            }
            if (FrontDifference > 90){
    12a8:	8f 89       	ldd	r24, Y+23	; 0x17
    12aa:	98 8d       	ldd	r25, Y+24	; 0x18
    12ac:	8a 35       	cpi	r24, 0x5A	; 90
    12ae:	91 05       	cpc	r25, r1
    12b0:	19 f0       	breq	.+6      	; 0x12b8 <.L19>
    12b2:	14 f0       	brlt	.+4      	; 0x12b8 <.L19>

000012b4 <.Loc.108>:
                Obstructie = 0;
    12b4:	1c 82       	std	Y+4, r1	; 0x04
    12b6:	1b 82       	std	Y+3, r1	; 0x03

000012b8 <.L19>:
            }

            if(Obstructie ==0 && InKolom != 0){
    12b8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ba:	9c 81       	ldd	r25, Y+4	; 0x04
    12bc:	00 97       	sbiw	r24, 0x00	; 0
    12be:	09 f0       	breq	.+2      	; 0x12c2 <.Loc.110>

000012c0 <L0^A>:
    12c0:	94 c0       	rjmp	.+296    	; 0x13ea <.L20>

000012c2 <.Loc.110>:
    12c2:	8f 81       	ldd	r24, Y+7	; 0x07
    12c4:	98 85       	ldd	r25, Y+8	; 0x08
    12c6:	00 97       	sbiw	r24, 0x00	; 0
    12c8:	09 f4       	brne	.+2      	; 0x12cc <.Loc.111>

000012ca <L0^A>:
    12ca:	8f c0       	rjmp	.+286    	; 0x13ea <.L20>

000012cc <.Loc.111>:
                if(Difference > 1){
    12cc:	8b 89       	ldd	r24, Y+19	; 0x13
    12ce:	9c 89       	ldd	r25, Y+20	; 0x14
    12d0:	81 30       	cpi	r24, 0x01	; 1
    12d2:	91 05       	cpc	r25, r1
    12d4:	39 f0       	breq	.+14     	; 0x12e4 <.L21>
    12d6:	34 f0       	brlt	.+12     	; 0x12e4 <.L21>

000012d8 <.Loc.112>:
                //stuur naar links
                Motor_1_set_power(50);
    12d8:	82 e3       	ldi	r24, 0x32	; 50
    12da:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000012de <.Loc.113>:
                Motor_2_set_power(45);
    12de:	8d e2       	ldi	r24, 0x2D	; 45
    12e0:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

000012e4 <.L21>:
                }
                if(Difference > 3){
    12e4:	8b 89       	ldd	r24, Y+19	; 0x13
    12e6:	9c 89       	ldd	r25, Y+20	; 0x14
    12e8:	83 30       	cpi	r24, 0x03	; 3
    12ea:	91 05       	cpc	r25, r1
    12ec:	39 f0       	breq	.+14     	; 0x12fc <.L22>
    12ee:	34 f0       	brlt	.+12     	; 0x12fc <.L22>

000012f0 <.Loc.115>:
                    //stuur naar links
                    Motor_1_set_power(50);
    12f0:	82 e3       	ldi	r24, 0x32	; 50
    12f2:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000012f6 <.Loc.116>:
                    Motor_2_set_power(40);
    12f6:	88 e2       	ldi	r24, 0x28	; 40
    12f8:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

000012fc <.L22>:
                }
                if(Difference > 8){
    12fc:	8b 89       	ldd	r24, Y+19	; 0x13
    12fe:	9c 89       	ldd	r25, Y+20	; 0x14
    1300:	88 30       	cpi	r24, 0x08	; 8
    1302:	91 05       	cpc	r25, r1
    1304:	39 f0       	breq	.+14     	; 0x1314 <.L23>
    1306:	34 f0       	brlt	.+12     	; 0x1314 <.L23>

00001308 <.Loc.118>:
                    //stuur naar links
                    Motor_1_set_power(50);
    1308:	82 e3       	ldi	r24, 0x32	; 50
    130a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000130e <.Loc.119>:
                    Motor_2_set_power(20);
    130e:	84 e1       	ldi	r24, 0x14	; 20
    1310:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001314 <.L23>:
                }
                if(Difference < -1){
    1314:	8b 89       	ldd	r24, Y+19	; 0x13
    1316:	9c 89       	ldd	r25, Y+20	; 0x14
    1318:	8f 3f       	cpi	r24, 0xFF	; 255
    131a:	bf ef       	ldi	r27, 0xFF	; 255
    131c:	9b 07       	cpc	r25, r27
    131e:	34 f4       	brge	.+12     	; 0x132c <.L24>

00001320 <.Loc.121>:
                    //stuur naar rechts
                    Motor_1_set_power(45);
    1320:	8d e2       	ldi	r24, 0x2D	; 45
    1322:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001326 <.Loc.122>:
                    Motor_2_set_power(50);
    1326:	82 e3       	ldi	r24, 0x32	; 50
    1328:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

0000132c <.L24>:
                }
                if(Difference < -3){
    132c:	8b 89       	ldd	r24, Y+19	; 0x13
    132e:	9c 89       	ldd	r25, Y+20	; 0x14
    1330:	8d 3f       	cpi	r24, 0xFD	; 253
    1332:	ef ef       	ldi	r30, 0xFF	; 255
    1334:	9e 07       	cpc	r25, r30
    1336:	34 f4       	brge	.+12     	; 0x1344 <.L25>

00001338 <.Loc.124>:
                    //stuur naar rechts
                    Motor_1_set_power(40);
    1338:	88 e2       	ldi	r24, 0x28	; 40
    133a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000133e <.Loc.125>:
                    Motor_2_set_power(50);
    133e:	82 e3       	ldi	r24, 0x32	; 50
    1340:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001344 <.L25>:
                }
                if(Difference < -8){
    1344:	8b 89       	ldd	r24, Y+19	; 0x13
    1346:	9c 89       	ldd	r25, Y+20	; 0x14
    1348:	88 3f       	cpi	r24, 0xF8	; 248
    134a:	ff ef       	ldi	r31, 0xFF	; 255
    134c:	9f 07       	cpc	r25, r31
    134e:	34 f4       	brge	.+12     	; 0x135c <.L26>

00001350 <.Loc.127>:
                    //stuur naar rechts
                    Motor_1_set_power(20);
    1350:	84 e1       	ldi	r24, 0x14	; 20
    1352:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001356 <.Loc.128>:
                    Motor_2_set_power(50);
    1356:	82 e3       	ldi	r24, 0x32	; 50
    1358:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

0000135c <.L26>:
                }
                if ( -1 < Difference && Difference < 1){
    135c:	8b 89       	ldd	r24, Y+19	; 0x13
    135e:	9c 89       	ldd	r25, Y+20	; 0x14
    1360:	99 23       	and	r25, r25
    1362:	5c f0       	brlt	.+22     	; 0x137a <.L27>

00001364 <.Loc.130>:
    1364:	8b 89       	ldd	r24, Y+19	; 0x13
    1366:	9c 89       	ldd	r25, Y+20	; 0x14
    1368:	00 97       	sbiw	r24, 0x00	; 0
    136a:	09 f0       	breq	.+2      	; 0x136e <.Loc.131>

0000136c <L0^A>:
    136c:	34 f4       	brge	.+12     	; 0x137a <.L27>

0000136e <.Loc.131>:
                    Motor_1_set_power(50);
    136e:	82 e3       	ldi	r24, 0x32	; 50
    1370:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001374 <.Loc.132>:
                    Motor_2_set_power(50);
    1374:	82 e3       	ldi	r24, 0x32	; 50
    1376:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

0000137a <.L27>:
                }
                if(BoomDetectie() == 1){
    137a:	0e 94 8d 0a 	call	0x151a	; 0x151a <BoomDetectie>

0000137e <.Loc.134>:
    137e:	81 30       	cpi	r24, 0x01	; 1
    1380:	91 05       	cpc	r25, r1
    1382:	b1 f4       	brne	.+44     	; 0x13b0 <.L28>

00001384 <.LBB32>:
                    Motor_1_set_power(0);
    1384:	80 e0       	ldi	r24, 0x00	; 0
    1386:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000138a <.Loc.136>:
                    Motor_2_set_power(0);
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001390 <.Loc.137>:
                    GeluidSignaal();
    1390:	0e 94 4b 0c 	call	0x1896	; 0x1896 <GeluidSignaal>

00001394 <.Loc.138>:
                    wait_ms(2000);
    1394:	80 ed       	ldi	r24, 0xD0	; 208
    1396:	97 e0       	ldi	r25, 0x07	; 7
    1398:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

0000139c <.Loc.139>:
                    Motor_1_set_power(50);
    139c:	82 e3       	ldi	r24, 0x32	; 50
    139e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

000013a2 <.Loc.140>:
                    Motor_2_set_power(50);
    13a2:	82 e3       	ldi	r24, 0x32	; 50
    13a4:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

000013a8 <.Loc.141>:
                    wait_ms(180);
    13a8:	84 eb       	ldi	r24, 0xB4	; 180
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

000013b0 <.L28>:
                }
                if(KolomIR()==1){
    13b0:	0e 94 77 0a 	call	0x14ee	; 0x14ee <KolomIR>

000013b4 <.Loc.143>:
    13b4:	81 30       	cpi	r24, 0x01	; 1
    13b6:	91 05       	cpc	r25, r1
    13b8:	41 f4       	brne	.+16     	; 0x13ca <.L29>

000013ba <.Loc.144>:
                    InKolom = 2;
    13ba:	82 e0       	ldi	r24, 0x02	; 2
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	98 87       	std	Y+8, r25	; 0x08
    13c0:	8f 83       	std	Y+7, r24	; 0x07

000013c2 <.Loc.145>:
                   display_getal(5555);
    13c2:	83 eb       	ldi	r24, 0xB3	; 179
    13c4:	95 e1       	ldi	r25, 0x15	; 21
    13c6:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

000013ca <.L29>:
                }
                if(KolomIR()==0){
    13ca:	0e 94 77 0a 	call	0x14ee	; 0x14ee <KolomIR>

000013ce <.Loc.147>:
    13ce:	00 97       	sbiw	r24, 0x00	; 0
    13d0:	61 f4       	brne	.+24     	; 0x13ea <.L20>

000013d2 <.Loc.148>:
                    if(InKolom == 2){
    13d2:	8f 81       	ldd	r24, Y+7	; 0x07
    13d4:	98 85       	ldd	r25, Y+8	; 0x08
    13d6:	82 30       	cpi	r24, 0x02	; 2
    13d8:	91 05       	cpc	r25, r1
    13da:	19 f4       	brne	.+6      	; 0x13e2 <.L30>

000013dc <.Loc.149>:
                        InKolom =0;
    13dc:	18 86       	std	Y+8, r1	; 0x08
    13de:	1f 82       	std	Y+7, r1	; 0x07
    13e0:	04 c0       	rjmp	.+8      	; 0x13ea <.L20>

000013e2 <.L30>:
                    }
                    else{
                       display_getal(0000);
    13e2:	80 e0       	ldi	r24, 0x00	; 0
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

000013ea <.L20>:
                    }
                }
            }
            if(InKolom == 0){
    13ea:	8f 81       	ldd	r24, Y+7	; 0x07
    13ec:	98 85       	ldd	r25, Y+8	; 0x08
    13ee:	00 97       	sbiw	r24, 0x00	; 0
    13f0:	c9 f4       	brne	.+50     	; 0x1424 <.L15>

000013f2 <.LBB35>:
                display_getal(0000);
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

000013fa <.Loc.153>:
                    BochtMaken();
    13fa:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <BochtMaken>

000013fe <.Loc.154>:
                    CurrentKolom++;
    13fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1400:	9e 81       	ldd	r25, Y+6	; 0x06
    1402:	01 96       	adiw	r24, 0x01	; 1
    1404:	9e 83       	std	Y+6, r25	; 0x06
    1406:	8d 83       	std	Y+5, r24	; 0x05

00001408 <.Loc.155>:
                        Motor_1_set_power(0);
    1408:	80 e0       	ldi	r24, 0x00	; 0
    140a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

0000140e <.Loc.156>:
                        Motor_2_set_power(0);
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001414 <.Loc.157>:
                TargetHeading = 538;
    1414:	8a e1       	ldi	r24, 0x1A	; 26
    1416:	92 e0       	ldi	r25, 0x02	; 2
    1418:	9a 83       	std	Y+2, r25	; 0x02
    141a:	89 83       	std	Y+1, r24	; 0x01

0000141c <.Loc.158>:
                InKolom = 1;
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	98 87       	std	Y+8, r25	; 0x08
    1422:	8f 83       	std	Y+7, r24	; 0x07

00001424 <.L15>:
        while(KolommenModus == 1){
    1424:	8b 85       	ldd	r24, Y+11	; 0x0b
    1426:	9c 85       	ldd	r25, Y+12	; 0x0c
    1428:	81 30       	cpi	r24, 0x01	; 1
    142a:	91 05       	cpc	r25, r1
    142c:	09 f4       	brne	.+2      	; 0x1430 <.Loc.160>

0000142e <L0^A>:
    142e:	2a ce       	rjmp	.-940    	; 0x1084 <.L32>

00001430 <.Loc.160>:
        while(TestModus == 1){
    1430:	10 cd       	rjmp	.-1504   	; 0xe52 <.L2>

00001432 <init>:

    return 0;
}


void init (void){
    1432:	cf 93       	push	r28
    1434:	df 93       	push	r29
    1436:	cd b7       	in	r28, 0x3d	; 61
    1438:	de b7       	in	r29, 0x3e	; 62

0000143a <.Loc.162>:
    init_SonicSensors();
    143a:	0e 94 11 11 	call	0x2222	; 0x2222 <init_SonicSensors>

0000143e <.Loc.163>:
    initTimer();
    143e:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <initTimer>

00001442 <.Loc.164>:
    init_motor_1();
    1442:	0e 94 63 04 	call	0x8c6	; 0x8c6 <init_motor_1>

00001446 <.Loc.165>:
    init_motor_2();
    1446:	0e 94 c1 05 	call	0xb82	; 0xb82 <init_motor_2>

0000144a <.Loc.166>:
    init_Gyro();
    144a:	0e 94 82 03 	call	0x704	; 0x704 <init_Gyro>

0000144e <.Loc.167>:
    PORTK &= ~(1<<PK0);
    144e:	88 e0       	ldi	r24, 0x08	; 8
    1450:	91 e0       	ldi	r25, 0x01	; 1
    1452:	fc 01       	movw	r30, r24
    1454:	20 81       	ld	r18, Z

00001456 <.Loc.168>:
    1456:	88 e0       	ldi	r24, 0x08	; 8
    1458:	91 e0       	ldi	r25, 0x01	; 1

0000145a <.Loc.169>:
    145a:	2e 7f       	andi	r18, 0xFE	; 254
    145c:	fc 01       	movw	r30, r24
    145e:	20 83       	st	Z, r18

00001460 <.Loc.170>:
    sei();
    1460:	78 94       	sei

00001462 <.Loc.171>:
}
    1462:	00 00       	nop
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	08 95       	ret

0000146a <ModeSwitch1>:


// 48 46 44
int ModeSwitch1(){
    146a:	cf 93       	push	r28
    146c:	df 93       	push	r29
    146e:	cd b7       	in	r28, 0x3d	; 61
    1470:	de b7       	in	r29, 0x3e	; 62

00001472 <.Loc.173>:
    if (PINL & (1<<PL1)){//D48
    1472:	89 e0       	ldi	r24, 0x09	; 9
    1474:	91 e0       	ldi	r25, 0x01	; 1
    1476:	fc 01       	movw	r30, r24
    1478:	80 81       	ld	r24, Z

0000147a <.Loc.174>:
    147a:	88 2f       	mov	r24, r24
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	82 70       	andi	r24, 0x02	; 2
    1480:	99 27       	eor	r25, r25

00001482 <.Loc.175>:
    1482:	00 97       	sbiw	r24, 0x00	; 0
    1484:	19 f0       	breq	.+6      	; 0x148c <.L36>

00001486 <.Loc.176>:
        return 1;
    1486:	81 e0       	ldi	r24, 0x01	; 1
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <.L37>

0000148c <.L36>:
    }
    else{
        return 0;
    148c:	80 e0       	ldi	r24, 0x00	; 0
    148e:	90 e0       	ldi	r25, 0x00	; 0

00001490 <.L37>:
    }
}
    1490:	df 91       	pop	r29
    1492:	cf 91       	pop	r28
    1494:	08 95       	ret

00001496 <ModeSwitch2>:
int ModeSwitch2(){
    1496:	cf 93       	push	r28
    1498:	df 93       	push	r29
    149a:	cd b7       	in	r28, 0x3d	; 61
    149c:	de b7       	in	r29, 0x3e	; 62

0000149e <.Loc.180>:
    if (PINL & (1<<PL3)){//D46
    149e:	89 e0       	ldi	r24, 0x09	; 9
    14a0:	91 e0       	ldi	r25, 0x01	; 1
    14a2:	fc 01       	movw	r30, r24
    14a4:	80 81       	ld	r24, Z

000014a6 <.Loc.181>:
    14a6:	88 2f       	mov	r24, r24
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	88 70       	andi	r24, 0x08	; 8
    14ac:	99 27       	eor	r25, r25

000014ae <.Loc.182>:
    14ae:	00 97       	sbiw	r24, 0x00	; 0
    14b0:	19 f0       	breq	.+6      	; 0x14b8 <.L39>

000014b2 <.Loc.183>:
        return 1;
    14b2:	81 e0       	ldi	r24, 0x01	; 1
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <.L40>

000014b8 <.L39>:
    }
    else{
        return 0;
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	90 e0       	ldi	r25, 0x00	; 0

000014bc <.L40>:
    }
}
    14bc:	df 91       	pop	r29
    14be:	cf 91       	pop	r28
    14c0:	08 95       	ret

000014c2 <RedSwitch>:
int RedSwitch(){
    14c2:	cf 93       	push	r28
    14c4:	df 93       	push	r29
    14c6:	cd b7       	in	r28, 0x3d	; 61
    14c8:	de b7       	in	r29, 0x3e	; 62

000014ca <.Loc.187>:
    if (PINL & (1<<PL5)){//D44
    14ca:	89 e0       	ldi	r24, 0x09	; 9
    14cc:	91 e0       	ldi	r25, 0x01	; 1
    14ce:	fc 01       	movw	r30, r24
    14d0:	80 81       	ld	r24, Z

000014d2 <.Loc.188>:
    14d2:	88 2f       	mov	r24, r24
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	80 72       	andi	r24, 0x20	; 32
    14d8:	99 27       	eor	r25, r25

000014da <.Loc.189>:
    14da:	00 97       	sbiw	r24, 0x00	; 0
    14dc:	19 f0       	breq	.+6      	; 0x14e4 <.L42>

000014de <.Loc.190>:
        return 1;
    14de:	81 e0       	ldi	r24, 0x01	; 1
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	02 c0       	rjmp	.+4      	; 0x14e8 <.L43>

000014e4 <.L42>:
    }
    else{
        return 0;
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	90 e0       	ldi	r25, 0x00	; 0

000014e8 <.L43>:
    }
}
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	08 95       	ret

000014ee <KolomIR>:
int KolomIR(){
    14ee:	cf 93       	push	r28
    14f0:	df 93       	push	r29
    14f2:	cd b7       	in	r28, 0x3d	; 61
    14f4:	de b7       	in	r29, 0x3e	; 62

000014f6 <.Loc.194>:
    if (PINK & (1<<PK0)){//A8
    14f6:	86 e0       	ldi	r24, 0x06	; 6
    14f8:	91 e0       	ldi	r25, 0x01	; 1
    14fa:	fc 01       	movw	r30, r24
    14fc:	80 81       	ld	r24, Z

000014fe <.Loc.195>:
    14fe:	88 2f       	mov	r24, r24
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	81 70       	andi	r24, 0x01	; 1
    1504:	99 27       	eor	r25, r25

00001506 <.Loc.196>:
    1506:	00 97       	sbiw	r24, 0x00	; 0
    1508:	19 f0       	breq	.+6      	; 0x1510 <.L45>

0000150a <.Loc.197>:
        return 0;
    150a:	80 e0       	ldi	r24, 0x00	; 0
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <.L46>

00001510 <.L45>:
    }
    else{
        return 1;
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	90 e0       	ldi	r25, 0x00	; 0

00001514 <.L46>:
    }
}
    1514:	df 91       	pop	r29
    1516:	cf 91       	pop	r28
    1518:	08 95       	ret

0000151a <BoomDetectie>:

volatile int LinksDetectie = 0;
volatile int RechtsDetectie = 0;
int BoomDetectie(){
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	cd b7       	in	r28, 0x3d	; 61
    1520:	de b7       	in	r29, 0x3e	; 62
    1522:	c8 54       	subi	r28, 0x48	; 72
    1524:	d1 09       	sbc	r29, r1
    1526:	0f b6       	in	r0, 0x3f	; 63
    1528:	f8 94       	cli
    152a:	de bf       	out	0x3e, r29	; 62
    152c:	0f be       	out	0x3f, r0	; 63
    152e:	cd bf       	out	0x3d, r28	; 61

00001530 <.Loc.201>:
    int afstand_Links = GetDistanceLeft();
    1530:	0e 94 64 13 	call	0x26c8	; 0x26c8 <GetDistanceLeft>
    1534:	9a 83       	std	Y+2, r25	; 0x02
    1536:	89 83       	std	Y+1, r24	; 0x01

00001538 <.Loc.202>:
    int afstand_Rechts = GetDistanceRight();
    1538:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <GetDistanceRight>
    153c:	9c 83       	std	Y+4, r25	; 0x04
    153e:	8b 83       	std	Y+3, r24	; 0x03

00001540 <.Loc.203>:

    if (afstand_Links <= 80)
    1540:	89 81       	ldd	r24, Y+1	; 0x01
    1542:	9a 81       	ldd	r25, Y+2	; 0x02
    1544:	80 35       	cpi	r24, 0x50	; 80
    1546:	91 05       	cpc	r25, r1
    1548:	09 f0       	breq	.+2      	; 0x154c <.Loc.204>

0000154a <L0^A>:
    154a:	9c f4       	brge	.+38     	; 0x1572 <.L48>

0000154c <.Loc.204>:
        {
            if (LinksDetectie == 0) // knop is niet al eerder ingedrukt
    154c:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <LinksDetectie>
    1550:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <LinksDetectie+0x1>

00001554 <.Loc.205>:
    1554:	00 97       	sbiw	r24, 0x00	; 0
    1556:	69 f4       	brne	.+26     	; 0x1572 <.L48>

00001558 <.LBB36>:
            {
                wait_ms(20);
    1558:	84 e1       	ldi	r24, 0x14	; 20
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

00001560 <.Loc.207>:
                LinksDetectie = 1;
    1560:	81 e0       	ldi	r24, 0x01	; 1
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <LinksDetectie+0x1>
    1568:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <LinksDetectie>

0000156c <.Loc.208>:
				return 1;
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	6c c1       	rjmp	.+728    	; 0x184a <.L47>

00001572 <.L48>:
            }
        }
    if (afstand_Links > 90)
    1572:	89 81       	ldd	r24, Y+1	; 0x01
    1574:	9a 81       	ldd	r25, Y+2	; 0x02
    1576:	8a 35       	cpi	r24, 0x5A	; 90
    1578:	91 05       	cpc	r25, r1
    157a:	09 f0       	breq	.+2      	; 0x157e <L0^A>

0000157c <L0^A>:
    157c:	0c f4       	brge	.+2      	; 0x1580 <.Loc.210>

0000157e <L0^A>:
    157e:	9a c0       	rjmp	.+308    	; 0x16b4 <.L50>

00001580 <.Loc.210>:
        {
            if (LinksDetectie != 0) // knop is zojuist losgelaten
    1580:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <LinksDetectie>
    1584:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <LinksDetectie+0x1>

00001588 <.Loc.211>:
    1588:	00 97       	sbiw	r24, 0x00	; 0
    158a:	09 f4       	brne	.+2      	; 0x158e <L0^A+0x2>

0000158c <L0^A>:
    158c:	93 c0       	rjmp	.+294    	; 0x16b4 <.L50>
    158e:	80 e0       	ldi	r24, 0x00	; 0
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	a0 ea       	ldi	r26, 0xA0	; 160
    1594:	b1 e4       	ldi	r27, 0x41	; 65
    1596:	8d 83       	std	Y+5, r24	; 0x05
    1598:	9e 83       	std	Y+6, r25	; 0x06
    159a:	af 83       	std	Y+7, r26	; 0x07
    159c:	b8 87       	std	Y+8, r27	; 0x08

0000159e <.LBB37>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    159e:	20 e0       	ldi	r18, 0x00	; 0
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	4a e7       	ldi	r20, 0x7A	; 122
    15a4:	55 e4       	ldi	r21, 0x45	; 69
    15a6:	6d 81       	ldd	r22, Y+5	; 0x05
    15a8:	7e 81       	ldd	r23, Y+6	; 0x06
    15aa:	8f 81       	ldd	r24, Y+7	; 0x07
    15ac:	98 85       	ldd	r25, Y+8	; 0x08
    15ae:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    15b2:	69 a7       	std	Y+41, r22	; 0x29
    15b4:	7a a7       	std	Y+42, r23	; 0x2a
    15b6:	8b a7       	std	Y+43, r24	; 0x2b
    15b8:	9c a7       	std	Y+44, r25	; 0x2c
    15ba:	89 a5       	ldd	r24, Y+41	; 0x29
    15bc:	9a a5       	ldd	r25, Y+42	; 0x2a
    15be:	ab a5       	ldd	r26, Y+43	; 0x2b
    15c0:	bc a5       	ldd	r27, Y+44	; 0x2c
    15c2:	89 87       	std	Y+9, r24	; 0x09
    15c4:	9a 87       	std	Y+10, r25	; 0x0a
    15c6:	ab 87       	std	Y+11, r26	; 0x0b
    15c8:	bc 87       	std	Y+12, r27	; 0x0c

000015ca <.Loc.213>:
	if (__tmp < 1.0)
    15ca:	20 e0       	ldi	r18, 0x00	; 0
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	40 e8       	ldi	r20, 0x80	; 128
    15d0:	5f e3       	ldi	r21, 0x3F	; 63
    15d2:	69 85       	ldd	r22, Y+9	; 0x09
    15d4:	7a 85       	ldd	r23, Y+10	; 0x0a
    15d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    15d8:	9c 85       	ldd	r25, Y+12	; 0x0c
    15da:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    15de:	88 23       	and	r24, r24
    15e0:	2c f4       	brge	.+10     	; 0x15ec <.L74>

000015e2 <.Loc.214>:
		__ticks = 1;
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	9e 87       	std	Y+14, r25	; 0x0e
    15e8:	8d 87       	std	Y+13, r24	; 0x0d
    15ea:	55 c0       	rjmp	.+170    	; 0x1696 <.L53>

000015ec <.L74>:
	else if (__tmp > 65535)
    15ec:	20 e0       	ldi	r18, 0x00	; 0
    15ee:	3f ef       	ldi	r19, 0xFF	; 255
    15f0:	4f e7       	ldi	r20, 0x7F	; 127
    15f2:	57 e4       	ldi	r21, 0x47	; 71
    15f4:	69 85       	ldd	r22, Y+9	; 0x09
    15f6:	7a 85       	ldd	r23, Y+10	; 0x0a
    15f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    15fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    15fc:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    1600:	88 23       	and	r24, r24
    1602:	d9 f1       	breq	.+118    	; 0x167a <.L75>
    1604:	d4 f1       	brlt	.+116    	; 0x167a <.L75>

00001606 <.Loc.216>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1606:	20 e0       	ldi	r18, 0x00	; 0
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	40 e2       	ldi	r20, 0x20	; 32
    160c:	51 e4       	ldi	r21, 0x41	; 65
    160e:	6d 81       	ldd	r22, Y+5	; 0x05
    1610:	7e 81       	ldd	r23, Y+6	; 0x06
    1612:	8f 81       	ldd	r24, Y+7	; 0x07
    1614:	98 85       	ldd	r25, Y+8	; 0x08
    1616:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    161a:	6d a7       	std	Y+45, r22	; 0x2d
    161c:	7e a7       	std	Y+46, r23	; 0x2e
    161e:	8f a7       	std	Y+47, r24	; 0x2f
    1620:	98 ab       	std	Y+48, r25	; 0x30
    1622:	8d a5       	ldd	r24, Y+45	; 0x2d
    1624:	9e a5       	ldd	r25, Y+46	; 0x2e
    1626:	af a5       	ldd	r26, Y+47	; 0x2f
    1628:	b8 a9       	ldd	r27, Y+48	; 0x30
    162a:	89 a3       	std	Y+33, r24	; 0x21
    162c:	9a a3       	std	Y+34, r25	; 0x22
    162e:	ab a3       	std	Y+35, r26	; 0x23
    1630:	bc a3       	std	Y+36, r27	; 0x24

00001632 <.Loc.217>:
    1632:	69 a1       	ldd	r22, Y+33	; 0x21
    1634:	7a a1       	ldd	r23, Y+34	; 0x22
    1636:	8b a1       	ldd	r24, Y+35	; 0x23
    1638:	9c a1       	ldd	r25, Y+36	; 0x24
    163a:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    163e:	69 ab       	std	Y+49, r22	; 0x31
    1640:	7a ab       	std	Y+50, r23	; 0x32
    1642:	8b ab       	std	Y+51, r24	; 0x33
    1644:	9c ab       	std	Y+52, r25	; 0x34
    1646:	a9 a9       	ldd	r26, Y+49	; 0x31
    1648:	ba a9       	ldd	r27, Y+50	; 0x32
    164a:	be 87       	std	Y+14, r27	; 0x0e
    164c:	ad 87       	std	Y+13, r26	; 0x0d

0000164e <.Loc.218>:
		while(__ticks)
    164e:	10 c0       	rjmp	.+32     	; 0x1670 <.L56>

00001650 <.L57>:
    1650:	80 e9       	ldi	r24, 0x90	; 144
    1652:	91 e0       	ldi	r25, 0x01	; 1
    1654:	98 8b       	std	Y+16, r25	; 0x10
    1656:	8f 87       	std	Y+15, r24	; 0x0f

00001658 <.LBB39>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
    1658:	8f 85       	ldd	r24, Y+15	; 0x0f
    165a:	98 89       	ldd	r25, Y+16	; 0x10

0000165c <.L1^B1>:
    165c:	01 97       	sbiw	r24, 0x01	; 1
    165e:	f1 f7       	brne	.-4      	; 0x165c <.L1^B1>
    1660:	98 8b       	std	Y+16, r25	; 0x10
    1662:	8f 87       	std	Y+15, r24	; 0x0f

00001664 <.Loc.220>:
	...

00001666 <.LBE39>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1666:	8d 85       	ldd	r24, Y+13	; 0x0d
    1668:	9e 85       	ldd	r25, Y+14	; 0x0e
    166a:	01 97       	sbiw	r24, 0x01	; 1
    166c:	9e 87       	std	Y+14, r25	; 0x0e
    166e:	8d 87       	std	Y+13, r24	; 0x0d

00001670 <.L56>:
		while(__ticks)
    1670:	8d 85       	ldd	r24, Y+13	; 0x0d
    1672:	9e 85       	ldd	r25, Y+14	; 0x0e
    1674:	00 97       	sbiw	r24, 0x00	; 0
    1676:	61 f7       	brne	.-40     	; 0x1650 <.L57>

00001678 <.Loc.223>:
		}
		return;
    1678:	19 c0       	rjmp	.+50     	; 0x16ac <.L58>

0000167a <.L75>:
	}
	else
		__ticks = (uint16_t)__tmp;
    167a:	69 85       	ldd	r22, Y+9	; 0x09
    167c:	7a 85       	ldd	r23, Y+10	; 0x0a
    167e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1680:	9c 85       	ldd	r25, Y+12	; 0x0c
    1682:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    1686:	6d ab       	std	Y+53, r22	; 0x35
    1688:	7e ab       	std	Y+54, r23	; 0x36
    168a:	8f ab       	std	Y+55, r24	; 0x37
    168c:	98 af       	std	Y+56, r25	; 0x38
    168e:	8d a9       	ldd	r24, Y+53	; 0x35
    1690:	9e a9       	ldd	r25, Y+54	; 0x36
    1692:	9e 87       	std	Y+14, r25	; 0x0e
    1694:	8d 87       	std	Y+13, r24	; 0x0d

00001696 <.L53>:
    1696:	8d 85       	ldd	r24, Y+13	; 0x0d
    1698:	9e 85       	ldd	r25, Y+14	; 0x0e
    169a:	9a 8b       	std	Y+18, r25	; 0x12
    169c:	89 8b       	std	Y+17, r24	; 0x11

0000169e <.LBB41>:
    169e:	89 89       	ldd	r24, Y+17	; 0x11
    16a0:	9a 89       	ldd	r25, Y+18	; 0x12

000016a2 <.L1^B2>:
    16a2:	01 97       	sbiw	r24, 0x01	; 1
    16a4:	f1 f7       	brne	.-4      	; 0x16a2 <.L1^B2>
    16a6:	9a 8b       	std	Y+18, r25	; 0x12
    16a8:	89 8b       	std	Y+17, r24	; 0x11

000016aa <.Loc.226>:
	...

000016ac <.L58>:
            {
                _delay_ms(20);
                LinksDetectie = 0;
    16ac:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <LinksDetectie+0x1>
    16b0:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <LinksDetectie>

000016b4 <.L50>:
            }
        }
    if (afstand_Rechts <= 80)
    16b4:	8b 81       	ldd	r24, Y+3	; 0x03
    16b6:	9c 81       	ldd	r25, Y+4	; 0x04
    16b8:	80 35       	cpi	r24, 0x50	; 80
    16ba:	91 05       	cpc	r25, r1
    16bc:	09 f0       	breq	.+2      	; 0x16c0 <.Loc.229>

000016be <L0^A>:
    16be:	9c f4       	brge	.+38     	; 0x16e6 <.L59>

000016c0 <.Loc.229>:
        {
            if (RechtsDetectie == 0) // knop is niet al eerder ingedrukt
    16c0:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <RechtsDetectie>
    16c4:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <RechtsDetectie+0x1>

000016c8 <.Loc.230>:
    16c8:	00 97       	sbiw	r24, 0x00	; 0
    16ca:	69 f4       	brne	.+26     	; 0x16e6 <.L59>

000016cc <.LBB43>:
            {
                wait_ms(20);
    16cc:	84 e1       	ldi	r24, 0x14	; 20
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

000016d4 <.Loc.232>:
                RechtsDetectie = 1;
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <RechtsDetectie+0x1>
    16dc:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <RechtsDetectie>

000016e0 <.Loc.233>:
				return 1;
    16e0:	81 e0       	ldi	r24, 0x01	; 1
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	b2 c0       	rjmp	.+356    	; 0x184a <.L47>

000016e6 <.L59>:
            }
        }
    if (afstand_Rechts > 90)
    16e6:	8b 81       	ldd	r24, Y+3	; 0x03
    16e8:	9c 81       	ldd	r25, Y+4	; 0x04
    16ea:	8a 35       	cpi	r24, 0x5A	; 90
    16ec:	91 05       	cpc	r25, r1
    16ee:	09 f0       	breq	.+2      	; 0x16f2 <L0^A>

000016f0 <L0^A>:
    16f0:	0c f4       	brge	.+2      	; 0x16f4 <.Loc.235>

000016f2 <L0^A>:
    16f2:	a8 c0       	rjmp	.+336    	; 0x1844 <.L60>

000016f4 <.Loc.235>:
        {
            if (RechtsDetectie != 0) // knop is zojuist losgelaten
    16f4:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <RechtsDetectie>
    16f8:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <RechtsDetectie+0x1>

000016fc <.Loc.236>:
    16fc:	00 97       	sbiw	r24, 0x00	; 0
    16fe:	09 f4       	brne	.+2      	; 0x1702 <L0^A+0x2>

00001700 <L0^A>:
    1700:	a4 c0       	rjmp	.+328    	; 0x184a <.L47>
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	a0 ea       	ldi	r26, 0xA0	; 160
    1708:	b1 e4       	ldi	r27, 0x41	; 65
    170a:	8b 8b       	std	Y+19, r24	; 0x13
    170c:	9c 8b       	std	Y+20, r25	; 0x14
    170e:	ad 8b       	std	Y+21, r26	; 0x15
    1710:	be 8b       	std	Y+22, r27	; 0x16

00001712 <.LBB44>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	4a e7       	ldi	r20, 0x7A	; 122
    1718:	55 e4       	ldi	r21, 0x45	; 69
    171a:	6b 89       	ldd	r22, Y+19	; 0x13
    171c:	7c 89       	ldd	r23, Y+20	; 0x14
    171e:	8d 89       	ldd	r24, Y+21	; 0x15
    1720:	9e 89       	ldd	r25, Y+22	; 0x16
    1722:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    1726:	69 af       	std	Y+57, r22	; 0x39
    1728:	7a af       	std	Y+58, r23	; 0x3a
    172a:	8b af       	std	Y+59, r24	; 0x3b
    172c:	9c af       	std	Y+60, r25	; 0x3c
    172e:	89 ad       	ldd	r24, Y+57	; 0x39
    1730:	9a ad       	ldd	r25, Y+58	; 0x3a
    1732:	ab ad       	ldd	r26, Y+59	; 0x3b
    1734:	bc ad       	ldd	r27, Y+60	; 0x3c
    1736:	8f 8b       	std	Y+23, r24	; 0x17
    1738:	98 8f       	std	Y+24, r25	; 0x18
    173a:	a9 8f       	std	Y+25, r26	; 0x19
    173c:	ba 8f       	std	Y+26, r27	; 0x1a

0000173e <.Loc.238>:
	if (__tmp < 1.0)
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	40 e8       	ldi	r20, 0x80	; 128
    1744:	5f e3       	ldi	r21, 0x3F	; 63
    1746:	6f 89       	ldd	r22, Y+23	; 0x17
    1748:	78 8d       	ldd	r23, Y+24	; 0x18
    174a:	89 8d       	ldd	r24, Y+25	; 0x19
    174c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    174e:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    1752:	88 23       	and	r24, r24
    1754:	2c f4       	brge	.+10     	; 0x1760 <.L76>

00001756 <.Loc.239>:
		__ticks = 1;
    1756:	81 e0       	ldi	r24, 0x01	; 1
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	9c 8f       	std	Y+28, r25	; 0x1c
    175c:	8b 8f       	std	Y+27, r24	; 0x1b
    175e:	62 c0       	rjmp	.+196    	; 0x1824 <.L64>

00001760 <.L76>:
	else if (__tmp > 65535)
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	3f ef       	ldi	r19, 0xFF	; 255
    1764:	4f e7       	ldi	r20, 0x7F	; 127
    1766:	57 e4       	ldi	r21, 0x47	; 71
    1768:	6f 89       	ldd	r22, Y+23	; 0x17
    176a:	78 8d       	ldd	r23, Y+24	; 0x18
    176c:	89 8d       	ldd	r24, Y+25	; 0x19
    176e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1770:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    1774:	88 23       	and	r24, r24
    1776:	09 f0       	breq	.+2      	; 0x177a <L0^A>

00001778 <L0^A>:
    1778:	0c f4       	brge	.+2      	; 0x177c <.Loc.241>

0000177a <L0^A>:
    177a:	42 c0       	rjmp	.+132    	; 0x1800 <.L77>

0000177c <.Loc.241>:
		__ticks = (uint16_t) (__ms * 10.0);
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e2       	ldi	r20, 0x20	; 32
    1782:	51 e4       	ldi	r21, 0x41	; 65
    1784:	6b 89       	ldd	r22, Y+19	; 0x13
    1786:	7c 89       	ldd	r23, Y+20	; 0x14
    1788:	8d 89       	ldd	r24, Y+21	; 0x15
    178a:	9e 89       	ldd	r25, Y+22	; 0x16
    178c:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    1790:	21 96       	adiw	r28, 0x01	; 1
    1792:	6c af       	std	Y+60, r22	; 0x3c
    1794:	7d af       	std	Y+61, r23	; 0x3d
    1796:	8e af       	std	Y+62, r24	; 0x3e
    1798:	9f af       	std	Y+63, r25	; 0x3f
    179a:	21 97       	sbiw	r28, 0x01	; 1
    179c:	21 96       	adiw	r28, 0x01	; 1
    179e:	8c ad       	ldd	r24, Y+60	; 0x3c
    17a0:	9d ad       	ldd	r25, Y+61	; 0x3d
    17a2:	ae ad       	ldd	r26, Y+62	; 0x3e
    17a4:	bf ad       	ldd	r27, Y+63	; 0x3f
    17a6:	21 97       	sbiw	r28, 0x01	; 1
    17a8:	8d a3       	std	Y+37, r24	; 0x25
    17aa:	9e a3       	std	Y+38, r25	; 0x26
    17ac:	af a3       	std	Y+39, r26	; 0x27
    17ae:	b8 a7       	std	Y+40, r27	; 0x28

000017b0 <.Loc.242>:
    17b0:	6d a1       	ldd	r22, Y+37	; 0x25
    17b2:	7e a1       	ldd	r23, Y+38	; 0x26
    17b4:	8f a1       	ldd	r24, Y+39	; 0x27
    17b6:	98 a5       	ldd	r25, Y+40	; 0x28
    17b8:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    17bc:	25 96       	adiw	r28, 0x05	; 5
    17be:	6c af       	std	Y+60, r22	; 0x3c
    17c0:	7d af       	std	Y+61, r23	; 0x3d
    17c2:	8e af       	std	Y+62, r24	; 0x3e
    17c4:	9f af       	std	Y+63, r25	; 0x3f
    17c6:	25 97       	sbiw	r28, 0x05	; 5
    17c8:	23 96       	adiw	r28, 0x03	; 3
    17ca:	ae ad       	ldd	r26, Y+62	; 0x3e
    17cc:	bf ad       	ldd	r27, Y+63	; 0x3f
    17ce:	23 97       	sbiw	r28, 0x03	; 3
    17d0:	bc 8f       	std	Y+28, r27	; 0x1c
    17d2:	ab 8f       	std	Y+27, r26	; 0x1b

000017d4 <.Loc.243>:
		while(__ticks)
    17d4:	10 c0       	rjmp	.+32     	; 0x17f6 <.L67>

000017d6 <.L68>:
    17d6:	80 e9       	ldi	r24, 0x90	; 144
    17d8:	91 e0       	ldi	r25, 0x01	; 1
    17da:	9e 8f       	std	Y+30, r25	; 0x1e
    17dc:	8d 8f       	std	Y+29, r24	; 0x1d

000017de <.LBB46>:
    17de:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17e0:	9e 8d       	ldd	r25, Y+30	; 0x1e

000017e2 <.L1^B3>:
    17e2:	01 97       	sbiw	r24, 0x01	; 1
    17e4:	f1 f7       	brne	.-4      	; 0x17e2 <.L1^B3>
    17e6:	9e 8f       	std	Y+30, r25	; 0x1e
    17e8:	8d 8f       	std	Y+29, r24	; 0x1d

000017ea <.Loc.245>:
	...

000017ec <.LBE46>:
			__ticks --;
    17ec:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17ee:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17f0:	01 97       	sbiw	r24, 0x01	; 1
    17f2:	9c 8f       	std	Y+28, r25	; 0x1c
    17f4:	8b 8f       	std	Y+27, r24	; 0x1b

000017f6 <.L67>:
		while(__ticks)
    17f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17fa:	00 97       	sbiw	r24, 0x00	; 0
    17fc:	61 f7       	brne	.-40     	; 0x17d6 <.L68>

000017fe <.Loc.248>:
		return;
    17fe:	1d c0       	rjmp	.+58     	; 0x183a <.L69>

00001800 <.L77>:
		__ticks = (uint16_t)__tmp;
    1800:	6f 89       	ldd	r22, Y+23	; 0x17
    1802:	78 8d       	ldd	r23, Y+24	; 0x18
    1804:	89 8d       	ldd	r24, Y+25	; 0x19
    1806:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1808:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    180c:	29 96       	adiw	r28, 0x09	; 9
    180e:	6c af       	std	Y+60, r22	; 0x3c
    1810:	7d af       	std	Y+61, r23	; 0x3d
    1812:	8e af       	std	Y+62, r24	; 0x3e
    1814:	9f af       	std	Y+63, r25	; 0x3f
    1816:	29 97       	sbiw	r28, 0x09	; 9
    1818:	27 96       	adiw	r28, 0x07	; 7
    181a:	8e ad       	ldd	r24, Y+62	; 0x3e
    181c:	9f ad       	ldd	r25, Y+63	; 0x3f
    181e:	27 97       	sbiw	r28, 0x07	; 7
    1820:	9c 8f       	std	Y+28, r25	; 0x1c
    1822:	8b 8f       	std	Y+27, r24	; 0x1b

00001824 <.L64>:
    1824:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1826:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1828:	98 a3       	std	Y+32, r25	; 0x20
    182a:	8f 8f       	std	Y+31, r24	; 0x1f

0000182c <.LBB48>:
    182c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    182e:	98 a1       	ldd	r25, Y+32	; 0x20

00001830 <.L1^B4>:
    1830:	01 97       	sbiw	r24, 0x01	; 1
    1832:	f1 f7       	brne	.-4      	; 0x1830 <.L1^B4>
    1834:	98 a3       	std	Y+32, r25	; 0x20
    1836:	8f 8f       	std	Y+31, r24	; 0x1f

00001838 <.Loc.251>:
	...

0000183a <.L69>:
            {
                _delay_ms(20);
                RechtsDetectie = 0;
    183a:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <RechtsDetectie+0x1>
    183e:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <RechtsDetectie>
    1842:	03 c0       	rjmp	.+6      	; 0x184a <.L47>

00001844 <.L60>:
            }
        }
    else{
        return 0;
    1844:	80 e0       	ldi	r24, 0x00	; 0
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	00 c0       	rjmp	.+0      	; 0x184a <.L47>

0000184a <.L47>:
    }

}
    184a:	c8 5b       	subi	r28, 0xB8	; 184
    184c:	df 4f       	sbci	r29, 0xFF	; 255
    184e:	0f b6       	in	r0, 0x3f	; 63
    1850:	f8 94       	cli
    1852:	de bf       	out	0x3e, r29	; 62
    1854:	0f be       	out	0x3f, r0	; 63
    1856:	cd bf       	out	0x3d, r28	; 61
    1858:	df 91       	pop	r29
    185a:	cf 91       	pop	r28
    185c:	08 95       	ret

0000185e <LightSwap>:

void LightSwap(void){
    185e:	cf 93       	push	r28
    1860:	df 93       	push	r29
    1862:	cd b7       	in	r28, 0x3d	; 61
    1864:	de b7       	in	r29, 0x3e	; 62

00001866 <.Loc.256>:
    PORTB ^= (1<<PB7);
    1866:	85 e2       	ldi	r24, 0x25	; 37
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	fc 01       	movw	r30, r24
    186c:	30 81       	ld	r19, Z
    186e:	85 e2       	ldi	r24, 0x25	; 37
    1870:	90 e0       	ldi	r25, 0x00	; 0

00001872 <.Loc.257>:
    1872:	20 e8       	ldi	r18, 0x80	; 128
    1874:	23 27       	eor	r18, r19
    1876:	fc 01       	movw	r30, r24
    1878:	20 83       	st	Z, r18

0000187a <.Loc.258>:
    PORTB ^= (1<<PB6);
    187a:	85 e2       	ldi	r24, 0x25	; 37
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	fc 01       	movw	r30, r24
    1880:	30 81       	ld	r19, Z
    1882:	85 e2       	ldi	r24, 0x25	; 37
    1884:	90 e0       	ldi	r25, 0x00	; 0

00001886 <.Loc.259>:
    1886:	20 e4       	ldi	r18, 0x40	; 64
    1888:	23 27       	eor	r18, r19
    188a:	fc 01       	movw	r30, r24
    188c:	20 83       	st	Z, r18

0000188e <.Loc.260>:
}
    188e:	00 00       	nop
    1890:	df 91       	pop	r29
    1892:	cf 91       	pop	r28
    1894:	08 95       	ret

00001896 <GeluidSignaal>:
void GeluidSignaal(void){
    1896:	cf 93       	push	r28
    1898:	df 93       	push	r29
    189a:	cd b7       	in	r28, 0x3d	; 61
    189c:	de b7       	in	r29, 0x3e	; 62

0000189e <.Loc.262>:
    PORTE &= ~(1<<PE5);
    189e:	8e e2       	ldi	r24, 0x2E	; 46
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	fc 01       	movw	r30, r24
    18a4:	20 81       	ld	r18, Z

000018a6 <.Loc.263>:
    18a6:	8e e2       	ldi	r24, 0x2E	; 46
    18a8:	90 e0       	ldi	r25, 0x00	; 0

000018aa <.Loc.264>:
    18aa:	2f 7d       	andi	r18, 0xDF	; 223
    18ac:	fc 01       	movw	r30, r24
    18ae:	20 83       	st	Z, r18

000018b0 <.Loc.265>:
    wait_ms(40);
    18b0:	88 e2       	ldi	r24, 0x28	; 40
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

000018b8 <.Loc.266>:
    PORTE |= (1<<PE5);
    18b8:	8e e2       	ldi	r24, 0x2E	; 46
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	fc 01       	movw	r30, r24
    18be:	20 81       	ld	r18, Z
    18c0:	8e e2       	ldi	r24, 0x2E	; 46
    18c2:	90 e0       	ldi	r25, 0x00	; 0

000018c4 <.Loc.267>:
    18c4:	20 62       	ori	r18, 0x20	; 32
    18c6:	fc 01       	movw	r30, r24
    18c8:	20 83       	st	Z, r18

000018ca <.Loc.268>:
    wait_ms(80);
    18ca:	80 e5       	ldi	r24, 0x50	; 80
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

000018d2 <.Loc.269>:
    PORTE &= ~(1<<PE5);
    18d2:	8e e2       	ldi	r24, 0x2E	; 46
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	fc 01       	movw	r30, r24
    18d8:	20 81       	ld	r18, Z

000018da <.Loc.270>:
    18da:	8e e2       	ldi	r24, 0x2E	; 46
    18dc:	90 e0       	ldi	r25, 0x00	; 0

000018de <.Loc.271>:
    18de:	2f 7d       	andi	r18, 0xDF	; 223
    18e0:	fc 01       	movw	r30, r24
    18e2:	20 83       	st	Z, r18

000018e4 <.Loc.272>:
    wait_ms(40);
    18e4:	88 e2       	ldi	r24, 0x28	; 40
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

000018ec <.Loc.273>:
    PORTE |= (1<<PE5);
    18ec:	8e e2       	ldi	r24, 0x2E	; 46
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	fc 01       	movw	r30, r24
    18f2:	20 81       	ld	r18, Z
    18f4:	8e e2       	ldi	r24, 0x2E	; 46
    18f6:	90 e0       	ldi	r25, 0x00	; 0

000018f8 <.Loc.274>:
    18f8:	20 62       	ori	r18, 0x20	; 32
    18fa:	fc 01       	movw	r30, r24
    18fc:	20 83       	st	Z, r18

000018fe <.Loc.275>:
    wait_ms(150);
    18fe:	86 e9       	ldi	r24, 0x96	; 150
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

00001906 <.Loc.276>:
    PORTE &= ~(1<<PE5);
    1906:	8e e2       	ldi	r24, 0x2E	; 46
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	fc 01       	movw	r30, r24
    190c:	20 81       	ld	r18, Z

0000190e <.Loc.277>:
    190e:	8e e2       	ldi	r24, 0x2E	; 46
    1910:	90 e0       	ldi	r25, 0x00	; 0

00001912 <.Loc.278>:
    1912:	2f 7d       	andi	r18, 0xDF	; 223
    1914:	fc 01       	movw	r30, r24
    1916:	20 83       	st	Z, r18

00001918 <.Loc.279>:
    wait_ms(70);
    1918:	86 e4       	ldi	r24, 0x46	; 70
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

00001920 <.Loc.280>:
    PORTE |= (1<<PE5);
    1920:	8e e2       	ldi	r24, 0x2E	; 46
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	fc 01       	movw	r30, r24
    1926:	20 81       	ld	r18, Z
    1928:	8e e2       	ldi	r24, 0x2E	; 46
    192a:	90 e0       	ldi	r25, 0x00	; 0

0000192c <.Loc.281>:
    192c:	20 62       	ori	r18, 0x20	; 32
    192e:	fc 01       	movw	r30, r24
    1930:	20 83       	st	Z, r18

00001932 <.Loc.282>:
}
    1932:	00 00       	nop
    1934:	df 91       	pop	r29
    1936:	cf 91       	pop	r28
    1938:	08 95       	ret

0000193a <TurnTo>:


void TurnTo(int TargetHeading){
    193a:	cf 93       	push	r28
    193c:	df 93       	push	r29
    193e:	cd b7       	in	r28, 0x3d	; 61
    1940:	de b7       	in	r29, 0x3e	; 62
    1942:	c8 54       	subi	r28, 0x48	; 72
    1944:	d1 09       	sbc	r29, r1
    1946:	0f b6       	in	r0, 0x3f	; 63
    1948:	f8 94       	cli
    194a:	de bf       	out	0x3e, r29	; 62
    194c:	0f be       	out	0x3f, r0	; 63
    194e:	cd bf       	out	0x3d, r28	; 61
    1950:	98 87       	std	Y+8, r25	; 0x08
    1952:	8f 83       	std	Y+7, r24	; 0x07

00001954 <.Loc.284>:
    CurrentHeading = UpdateHeading(CurrentHeading);
    1954:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1958:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    195c:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1960:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1964:	29 87       	std	Y+9, r18	; 0x09
    1966:	3a 87       	std	Y+10, r19	; 0x0a
    1968:	4b 87       	std	Y+11, r20	; 0x0b
    196a:	5c 87       	std	Y+12, r21	; 0x0c
    196c:	69 85       	ldd	r22, Y+9	; 0x09
    196e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1970:	8b 85       	ldd	r24, Y+11	; 0x0b
    1972:	9c 85       	ldd	r25, Y+12	; 0x0c
    1974:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1978:	6d 87       	std	Y+13, r22	; 0x0d
    197a:	7e 87       	std	Y+14, r23	; 0x0e
    197c:	8f 87       	std	Y+15, r24	; 0x0f
    197e:	98 8b       	std	Y+16, r25	; 0x10

00001980 <.Loc.285>:
    1980:	8d 85       	ldd	r24, Y+13	; 0x0d
    1982:	9e 85       	ldd	r25, Y+14	; 0x0e
    1984:	af 85       	ldd	r26, Y+15	; 0x0f
    1986:	b8 89       	ldd	r27, Y+16	; 0x10
    1988:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    198c:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1990:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1994:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001998 <.Loc.286>:
    int Difference = TargetHeading - CurrentHeading;
    1998:	8f 81       	ldd	r24, Y+7	; 0x07
    199a:	98 85       	ldd	r25, Y+8	; 0x08
    199c:	9c 01       	movw	r18, r24
    199e:	99 0f       	add	r25, r25
    19a0:	44 0b       	sbc	r20, r20
    19a2:	55 0b       	sbc	r21, r21
    19a4:	2d a7       	std	Y+45, r18	; 0x2d
    19a6:	3e a7       	std	Y+46, r19	; 0x2e
    19a8:	4f a7       	std	Y+47, r20	; 0x2f
    19aa:	58 ab       	std	Y+48, r21	; 0x30
    19ac:	6d a5       	ldd	r22, Y+45	; 0x2d
    19ae:	7e a5       	ldd	r23, Y+46	; 0x2e
    19b0:	8f a5       	ldd	r24, Y+47	; 0x2f
    19b2:	98 a9       	ldd	r25, Y+48	; 0x30
    19b4:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    19b8:	69 8b       	std	Y+17, r22	; 0x11
    19ba:	7a 8b       	std	Y+18, r23	; 0x12
    19bc:	8b 8b       	std	Y+19, r24	; 0x13
    19be:	9c 8b       	std	Y+20, r25	; 0x14
    19c0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    19c4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    19c8:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    19cc:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    19d0:	9c 01       	movw	r18, r24
    19d2:	ad 01       	movw	r20, r26
    19d4:	69 89       	ldd	r22, Y+17	; 0x11
    19d6:	7a 89       	ldd	r23, Y+18	; 0x12
    19d8:	8b 89       	ldd	r24, Y+19	; 0x13
    19da:	9c 89       	ldd	r25, Y+20	; 0x14
    19dc:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__subsf3>
    19e0:	69 ab       	std	Y+49, r22	; 0x31
    19e2:	7a ab       	std	Y+50, r23	; 0x32
    19e4:	8b ab       	std	Y+51, r24	; 0x33
    19e6:	9c ab       	std	Y+52, r25	; 0x34
    19e8:	89 a9       	ldd	r24, Y+49	; 0x31
    19ea:	9a a9       	ldd	r25, Y+50	; 0x32
    19ec:	ab a9       	ldd	r26, Y+51	; 0x33
    19ee:	bc a9       	ldd	r27, Y+52	; 0x34
    19f0:	8d 8b       	std	Y+21, r24	; 0x15
    19f2:	9e 8b       	std	Y+22, r25	; 0x16
    19f4:	af 8b       	std	Y+23, r26	; 0x17
    19f6:	b8 8f       	std	Y+24, r27	; 0x18

000019f8 <.Loc.287>:
    19f8:	6d 89       	ldd	r22, Y+21	; 0x15
    19fa:	7e 89       	ldd	r23, Y+22	; 0x16
    19fc:	8f 89       	ldd	r24, Y+23	; 0x17
    19fe:	98 8d       	ldd	r25, Y+24	; 0x18
    1a00:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    1a04:	6d ab       	std	Y+53, r22	; 0x35
    1a06:	7e ab       	std	Y+54, r23	; 0x36
    1a08:	8f ab       	std	Y+55, r24	; 0x37
    1a0a:	98 af       	std	Y+56, r25	; 0x38
    1a0c:	ad a9       	ldd	r26, Y+53	; 0x35
    1a0e:	be a9       	ldd	r27, Y+54	; 0x36
    1a10:	bc 83       	std	Y+4, r27	; 0x04
    1a12:	ab 83       	std	Y+3, r26	; 0x03

00001a14 <.Loc.288>:
    int turning = 1;
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	9a 83       	std	Y+2, r25	; 0x02
    1a1a:	89 83       	std	Y+1, r24	; 0x01

00001a1c <.Loc.289>:
    int printgetal;
    while (turning ==1){
    1a1c:	e0 c0       	rjmp	.+448    	; 0x1bde <.L81>

00001a1e <.L89>:
        CurrentHeading = UpdateHeading(CurrentHeading);
    1a1e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1a22:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1a26:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1a2a:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1a2e:	29 8f       	std	Y+25, r18	; 0x19
    1a30:	3a 8f       	std	Y+26, r19	; 0x1a
    1a32:	4b 8f       	std	Y+27, r20	; 0x1b
    1a34:	5c 8f       	std	Y+28, r21	; 0x1c
    1a36:	69 8d       	ldd	r22, Y+25	; 0x19
    1a38:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a3a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a3c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a3e:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1a42:	6d 8f       	std	Y+29, r22	; 0x1d
    1a44:	7e 8f       	std	Y+30, r23	; 0x1e
    1a46:	8f 8f       	std	Y+31, r24	; 0x1f
    1a48:	98 a3       	std	Y+32, r25	; 0x20

00001a4a <.Loc.291>:
    1a4a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a4c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a4e:	af 8d       	ldd	r26, Y+31	; 0x1f
    1a50:	b8 a1       	ldd	r27, Y+32	; 0x20
    1a52:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1a56:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1a5a:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1a5e:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001a62 <.Loc.292>:
        Difference = TargetHeading - CurrentHeading;
    1a62:	8f 81       	ldd	r24, Y+7	; 0x07
    1a64:	98 85       	ldd	r25, Y+8	; 0x08
    1a66:	9c 01       	movw	r18, r24
    1a68:	99 0f       	add	r25, r25
    1a6a:	44 0b       	sbc	r20, r20
    1a6c:	55 0b       	sbc	r21, r21
    1a6e:	29 af       	std	Y+57, r18	; 0x39
    1a70:	3a af       	std	Y+58, r19	; 0x3a
    1a72:	4b af       	std	Y+59, r20	; 0x3b
    1a74:	5c af       	std	Y+60, r21	; 0x3c
    1a76:	69 ad       	ldd	r22, Y+57	; 0x39
    1a78:	7a ad       	ldd	r23, Y+58	; 0x3a
    1a7a:	8b ad       	ldd	r24, Y+59	; 0x3b
    1a7c:	9c ad       	ldd	r25, Y+60	; 0x3c
    1a7e:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    1a82:	69 a3       	std	Y+33, r22	; 0x21
    1a84:	7a a3       	std	Y+34, r23	; 0x22
    1a86:	8b a3       	std	Y+35, r24	; 0x23
    1a88:	9c a3       	std	Y+36, r25	; 0x24
    1a8a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1a8e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1a92:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1a96:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1a9a:	9c 01       	movw	r18, r24
    1a9c:	ad 01       	movw	r20, r26
    1a9e:	69 a1       	ldd	r22, Y+33	; 0x21
    1aa0:	7a a1       	ldd	r23, Y+34	; 0x22
    1aa2:	8b a1       	ldd	r24, Y+35	; 0x23
    1aa4:	9c a1       	ldd	r25, Y+36	; 0x24
    1aa6:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__subsf3>
    1aaa:	21 96       	adiw	r28, 0x01	; 1
    1aac:	6c af       	std	Y+60, r22	; 0x3c
    1aae:	7d af       	std	Y+61, r23	; 0x3d
    1ab0:	8e af       	std	Y+62, r24	; 0x3e
    1ab2:	9f af       	std	Y+63, r25	; 0x3f
    1ab4:	21 97       	sbiw	r28, 0x01	; 1
    1ab6:	21 96       	adiw	r28, 0x01	; 1
    1ab8:	8c ad       	ldd	r24, Y+60	; 0x3c
    1aba:	9d ad       	ldd	r25, Y+61	; 0x3d
    1abc:	ae ad       	ldd	r26, Y+62	; 0x3e
    1abe:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ac0:	21 97       	sbiw	r28, 0x01	; 1
    1ac2:	8d a3       	std	Y+37, r24	; 0x25
    1ac4:	9e a3       	std	Y+38, r25	; 0x26
    1ac6:	af a3       	std	Y+39, r26	; 0x27
    1ac8:	b8 a7       	std	Y+40, r27	; 0x28

00001aca <.Loc.293>:
    1aca:	6d a1       	ldd	r22, Y+37	; 0x25
    1acc:	7e a1       	ldd	r23, Y+38	; 0x26
    1ace:	8f a1       	ldd	r24, Y+39	; 0x27
    1ad0:	98 a5       	ldd	r25, Y+40	; 0x28
    1ad2:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    1ad6:	25 96       	adiw	r28, 0x05	; 5
    1ad8:	6c af       	std	Y+60, r22	; 0x3c
    1ada:	7d af       	std	Y+61, r23	; 0x3d
    1adc:	8e af       	std	Y+62, r24	; 0x3e
    1ade:	9f af       	std	Y+63, r25	; 0x3f
    1ae0:	25 97       	sbiw	r28, 0x05	; 5
    1ae2:	23 96       	adiw	r28, 0x03	; 3
    1ae4:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ae6:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ae8:	23 97       	sbiw	r28, 0x03	; 3
    1aea:	bc 83       	std	Y+4, r27	; 0x04
    1aec:	ab 83       	std	Y+3, r26	; 0x03

00001aee <.Loc.294>:
        printgetal = (int)CurrentHeading;
    1aee:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1af2:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1af6:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1afa:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1afe:	29 a7       	std	Y+41, r18	; 0x29
    1b00:	3a a7       	std	Y+42, r19	; 0x2a
    1b02:	4b a7       	std	Y+43, r20	; 0x2b
    1b04:	5c a7       	std	Y+44, r21	; 0x2c

00001b06 <.Loc.295>:
    1b06:	69 a5       	ldd	r22, Y+41	; 0x29
    1b08:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b0a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b0c:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b0e:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    1b12:	29 96       	adiw	r28, 0x09	; 9
    1b14:	6c af       	std	Y+60, r22	; 0x3c
    1b16:	7d af       	std	Y+61, r23	; 0x3d
    1b18:	8e af       	std	Y+62, r24	; 0x3e
    1b1a:	9f af       	std	Y+63, r25	; 0x3f
    1b1c:	29 97       	sbiw	r28, 0x09	; 9
    1b1e:	27 96       	adiw	r28, 0x07	; 7
    1b20:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b22:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b24:	27 97       	sbiw	r28, 0x07	; 7
    1b26:	5e 83       	std	Y+6, r21	; 0x06
    1b28:	4d 83       	std	Y+5, r20	; 0x05

00001b2a <.Loc.296>:
        display_getal(printgetal);
    1b2a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b2c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b2e:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

00001b32 <.Loc.297>:
        if(Difference > 0){
    1b32:	8b 81       	ldd	r24, Y+3	; 0x03
    1b34:	9c 81       	ldd	r25, Y+4	; 0x04
    1b36:	00 97       	sbiw	r24, 0x00	; 0
    1b38:	39 f0       	breq	.+14     	; 0x1b48 <.L82>
    1b3a:	34 f0       	brlt	.+12     	; 0x1b48 <.L82>

00001b3c <.Loc.298>:
            Motor_1_set_power(32);
    1b3c:	80 e2       	ldi	r24, 0x20	; 32
    1b3e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001b42 <.Loc.299>:
            Motor_2_set_power(-32);
    1b42:	80 ee       	ldi	r24, 0xE0	; 224
    1b44:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001b48 <.L82>:
        }
        if(Difference > 10){
    1b48:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b4c:	8a 30       	cpi	r24, 0x0A	; 10
    1b4e:	91 05       	cpc	r25, r1
    1b50:	39 f0       	breq	.+14     	; 0x1b60 <.L83>
    1b52:	34 f0       	brlt	.+12     	; 0x1b60 <.L83>

00001b54 <.Loc.301>:
            Motor_1_set_power(38);
    1b54:	86 e2       	ldi	r24, 0x26	; 38
    1b56:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001b5a <.Loc.302>:
            Motor_2_set_power(-38);
    1b5a:	8a ed       	ldi	r24, 0xDA	; 218
    1b5c:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001b60 <.L83>:
        }
        if(Difference > 20){
    1b60:	8b 81       	ldd	r24, Y+3	; 0x03
    1b62:	9c 81       	ldd	r25, Y+4	; 0x04
    1b64:	84 31       	cpi	r24, 0x14	; 20
    1b66:	91 05       	cpc	r25, r1
    1b68:	39 f0       	breq	.+14     	; 0x1b78 <.L84>
    1b6a:	34 f0       	brlt	.+12     	; 0x1b78 <.L84>

00001b6c <.Loc.304>:
            Motor_1_set_power(45);
    1b6c:	8d e2       	ldi	r24, 0x2D	; 45
    1b6e:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001b72 <.Loc.305>:
            Motor_2_set_power(-45);
    1b72:	83 ed       	ldi	r24, 0xD3	; 211
    1b74:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001b78 <.L84>:
        }
        if(Difference < 0){
    1b78:	8b 81       	ldd	r24, Y+3	; 0x03
    1b7a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b7c:	99 23       	and	r25, r25
    1b7e:	34 f4       	brge	.+12     	; 0x1b8c <.L85>

00001b80 <.Loc.307>:
            Motor_1_set_power(-32);
    1b80:	80 ee       	ldi	r24, 0xE0	; 224
    1b82:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001b86 <.Loc.308>:
            Motor_2_set_power(32);
    1b86:	80 e2       	ldi	r24, 0x20	; 32
    1b88:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001b8c <.L85>:
        }
        if(Difference < -10){
    1b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b90:	86 3f       	cpi	r24, 0xF6	; 246
    1b92:	5f ef       	ldi	r21, 0xFF	; 255
    1b94:	95 07       	cpc	r25, r21
    1b96:	34 f4       	brge	.+12     	; 0x1ba4 <.L86>

00001b98 <.Loc.310>:
            Motor_1_set_power(-38);
    1b98:	8a ed       	ldi	r24, 0xDA	; 218
    1b9a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001b9e <.Loc.311>:
            Motor_2_set_power(38);
    1b9e:	86 e2       	ldi	r24, 0x26	; 38
    1ba0:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001ba4 <.L86>:
        }
        if(Difference < -20){
    1ba4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ba8:	8c 3e       	cpi	r24, 0xEC	; 236
    1baa:	af ef       	ldi	r26, 0xFF	; 255
    1bac:	9a 07       	cpc	r25, r26
    1bae:	34 f4       	brge	.+12     	; 0x1bbc <.L87>

00001bb0 <.Loc.313>:
            Motor_1_set_power(-45);
    1bb0:	83 ed       	ldi	r24, 0xD3	; 211
    1bb2:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001bb6 <.Loc.314>:
            Motor_2_set_power(45);
    1bb6:	8d e2       	ldi	r24, 0x2D	; 45
    1bb8:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001bbc <.L87>:
        }
        if ( -1 < Difference && Difference < 1){
    1bbc:	8b 81       	ldd	r24, Y+3	; 0x03
    1bbe:	9c 81       	ldd	r25, Y+4	; 0x04
    1bc0:	99 23       	and	r25, r25
    1bc2:	6c f0       	brlt	.+26     	; 0x1bde <.L81>

00001bc4 <.Loc.316>:
    1bc4:	8b 81       	ldd	r24, Y+3	; 0x03
    1bc6:	9c 81       	ldd	r25, Y+4	; 0x04
    1bc8:	00 97       	sbiw	r24, 0x00	; 0
    1bca:	09 f0       	breq	.+2      	; 0x1bce <.Loc.317>

00001bcc <L0^A>:
    1bcc:	44 f4       	brge	.+16     	; 0x1bde <.L81>

00001bce <.Loc.317>:
            Motor_1_set_power(0);
    1bce:	80 e0       	ldi	r24, 0x00	; 0
    1bd0:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001bd4 <.Loc.318>:
            Motor_2_set_power(0);
    1bd4:	80 e0       	ldi	r24, 0x00	; 0
    1bd6:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001bda <.Loc.319>:
            turning = 0;
    1bda:	1a 82       	std	Y+2, r1	; 0x02
    1bdc:	19 82       	std	Y+1, r1	; 0x01

00001bde <.L81>:
    while (turning ==1){
    1bde:	89 81       	ldd	r24, Y+1	; 0x01
    1be0:	9a 81       	ldd	r25, Y+2	; 0x02
    1be2:	81 30       	cpi	r24, 0x01	; 1
    1be4:	91 05       	cpc	r25, r1
    1be6:	09 f4       	brne	.+2      	; 0x1bea <.Loc.321>

00001be8 <L0^A>:
    1be8:	1a cf       	rjmp	.-460    	; 0x1a1e <.L89>

00001bea <.Loc.321>:
        }
    }

}
    1bea:	00 00       	nop
    1bec:	00 00       	nop
    1bee:	c8 5b       	subi	r28, 0xB8	; 184
    1bf0:	df 4f       	sbci	r29, 0xFF	; 255
    1bf2:	0f b6       	in	r0, 0x3f	; 63
    1bf4:	f8 94       	cli
    1bf6:	de bf       	out	0x3e, r29	; 62
    1bf8:	0f be       	out	0x3f, r0	; 63
    1bfa:	cd bf       	out	0x3d, r28	; 61
    1bfc:	df 91       	pop	r29
    1bfe:	cf 91       	pop	r28
    1c00:	08 95       	ret

00001c02 <Drive>:
void Drive(int RijAfstand,int TargetHeading){
    1c02:	cf 93       	push	r28
    1c04:	df 93       	push	r29
    1c06:	cd b7       	in	r28, 0x3d	; 61
    1c08:	de b7       	in	r29, 0x3e	; 62
    1c0a:	a4 97       	sbiw	r28, 0x24	; 36
    1c0c:	0f b6       	in	r0, 0x3f	; 63
    1c0e:	f8 94       	cli
    1c10:	de bf       	out	0x3e, r29	; 62
    1c12:	0f be       	out	0x3f, r0	; 63
    1c14:	cd bf       	out	0x3d, r28	; 61
    1c16:	9e 83       	std	Y+6, r25	; 0x06
    1c18:	8d 83       	std	Y+5, r24	; 0x05
    1c1a:	78 87       	std	Y+8, r23	; 0x08
    1c1c:	6f 83       	std	Y+7, r22	; 0x07

00001c1e <.LBB51>:
    int Difference;
    for(int i = 0; i<RijAfstand; i++){
    1c1e:	1a 82       	std	Y+2, r1	; 0x02
    1c20:	19 82       	std	Y+1, r1	; 0x01

00001c22 <.Loc.324>:
    1c22:	c0 c0       	rjmp	.+384    	; 0x1da4 <.L91>

00001c24 <.L99>:
        CurrentHeading = UpdateHeading(CurrentHeading);
    1c24:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <CurrentHeading>
    1c28:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1c2c:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1c30:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1c34:	29 87       	std	Y+9, r18	; 0x09
    1c36:	3a 87       	std	Y+10, r19	; 0x0a
    1c38:	4b 87       	std	Y+11, r20	; 0x0b
    1c3a:	5c 87       	std	Y+12, r21	; 0x0c
    1c3c:	69 85       	ldd	r22, Y+9	; 0x09
    1c3e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1c40:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c42:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c44:	0e 94 8e 02 	call	0x51c	; 0x51c <UpdateHeading>
    1c48:	6d 87       	std	Y+13, r22	; 0x0d
    1c4a:	7e 87       	std	Y+14, r23	; 0x0e
    1c4c:	8f 87       	std	Y+15, r24	; 0x0f
    1c4e:	98 8b       	std	Y+16, r25	; 0x10

00001c50 <.Loc.326>:
    1c50:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c52:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c54:	af 85       	ldd	r26, Y+15	; 0x0f
    1c56:	b8 89       	ldd	r27, Y+16	; 0x10
    1c58:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <CurrentHeading>
    1c5c:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <CurrentHeading+0x1>
    1c60:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <CurrentHeading+0x2>
    1c64:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <CurrentHeading+0x3>

00001c68 <.Loc.327>:
        Difference = TargetHeading - CurrentHeading;
    1c68:	8f 81       	ldd	r24, Y+7	; 0x07
    1c6a:	98 85       	ldd	r25, Y+8	; 0x08
    1c6c:	9c 01       	movw	r18, r24
    1c6e:	99 0f       	add	r25, r25
    1c70:	44 0b       	sbc	r20, r20
    1c72:	55 0b       	sbc	r21, r21
    1c74:	29 8f       	std	Y+25, r18	; 0x19
    1c76:	3a 8f       	std	Y+26, r19	; 0x1a
    1c78:	4b 8f       	std	Y+27, r20	; 0x1b
    1c7a:	5c 8f       	std	Y+28, r21	; 0x1c
    1c7c:	69 8d       	ldd	r22, Y+25	; 0x19
    1c7e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c80:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c82:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c84:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    1c88:	69 8b       	std	Y+17, r22	; 0x11
    1c8a:	7a 8b       	std	Y+18, r23	; 0x12
    1c8c:	8b 8b       	std	Y+19, r24	; 0x13
    1c8e:	9c 8b       	std	Y+20, r25	; 0x14
    1c90:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <CurrentHeading>
    1c94:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <CurrentHeading+0x1>
    1c98:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <CurrentHeading+0x2>
    1c9c:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <CurrentHeading+0x3>
    1ca0:	9c 01       	movw	r18, r24
    1ca2:	ad 01       	movw	r20, r26
    1ca4:	69 89       	ldd	r22, Y+17	; 0x11
    1ca6:	7a 89       	ldd	r23, Y+18	; 0x12
    1ca8:	8b 89       	ldd	r24, Y+19	; 0x13
    1caa:	9c 89       	ldd	r25, Y+20	; 0x14
    1cac:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__subsf3>
    1cb0:	6d 8f       	std	Y+29, r22	; 0x1d
    1cb2:	7e 8f       	std	Y+30, r23	; 0x1e
    1cb4:	8f 8f       	std	Y+31, r24	; 0x1f
    1cb6:	98 a3       	std	Y+32, r25	; 0x20
    1cb8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1cba:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1cbc:	af 8d       	ldd	r26, Y+31	; 0x1f
    1cbe:	b8 a1       	ldd	r27, Y+32	; 0x20
    1cc0:	8d 8b       	std	Y+21, r24	; 0x15
    1cc2:	9e 8b       	std	Y+22, r25	; 0x16
    1cc4:	af 8b       	std	Y+23, r26	; 0x17
    1cc6:	b8 8f       	std	Y+24, r27	; 0x18

00001cc8 <.Loc.328>:
    1cc8:	6d 89       	ldd	r22, Y+21	; 0x15
    1cca:	7e 89       	ldd	r23, Y+22	; 0x16
    1ccc:	8f 89       	ldd	r24, Y+23	; 0x17
    1cce:	98 8d       	ldd	r25, Y+24	; 0x18
    1cd0:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    1cd4:	69 a3       	std	Y+33, r22	; 0x21
    1cd6:	7a a3       	std	Y+34, r23	; 0x22
    1cd8:	8b a3       	std	Y+35, r24	; 0x23
    1cda:	9c a3       	std	Y+36, r25	; 0x24
    1cdc:	a9 a1       	ldd	r26, Y+33	; 0x21
    1cde:	ba a1       	ldd	r27, Y+34	; 0x22
    1ce0:	bc 83       	std	Y+4, r27	; 0x04
    1ce2:	ab 83       	std	Y+3, r26	; 0x03

00001ce4 <.Loc.329>:
        display_getal(i);
    1ce4:	89 81       	ldd	r24, Y+1	; 0x01
    1ce6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ce8:	0e 94 24 10 	call	0x2048	; 0x2048 <display_getal>

00001cec <.Loc.330>:
        if(Difference > 1){
    1cec:	8b 81       	ldd	r24, Y+3	; 0x03
    1cee:	9c 81       	ldd	r25, Y+4	; 0x04
    1cf0:	81 30       	cpi	r24, 0x01	; 1
    1cf2:	91 05       	cpc	r25, r1
    1cf4:	39 f0       	breq	.+14     	; 0x1d04 <.L92>
    1cf6:	34 f0       	brlt	.+12     	; 0x1d04 <.L92>

00001cf8 <.Loc.331>:
            //stuur naar links
            Motor_1_set_power(50);
    1cf8:	82 e3       	ldi	r24, 0x32	; 50
    1cfa:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001cfe <.Loc.332>:
            Motor_2_set_power(45);
    1cfe:	8d e2       	ldi	r24, 0x2D	; 45
    1d00:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d04 <.L92>:
        }
        if(Difference > 3){
    1d04:	8b 81       	ldd	r24, Y+3	; 0x03
    1d06:	9c 81       	ldd	r25, Y+4	; 0x04
    1d08:	83 30       	cpi	r24, 0x03	; 3
    1d0a:	91 05       	cpc	r25, r1
    1d0c:	39 f0       	breq	.+14     	; 0x1d1c <.L93>
    1d0e:	34 f0       	brlt	.+12     	; 0x1d1c <.L93>

00001d10 <.Loc.334>:
            //stuur naar links
            Motor_1_set_power(50);
    1d10:	82 e3       	ldi	r24, 0x32	; 50
    1d12:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d16 <.Loc.335>:
            Motor_2_set_power(40);
    1d16:	88 e2       	ldi	r24, 0x28	; 40
    1d18:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d1c <.L93>:
        }
        if(Difference > 8){
    1d1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d1e:	9c 81       	ldd	r25, Y+4	; 0x04
    1d20:	88 30       	cpi	r24, 0x08	; 8
    1d22:	91 05       	cpc	r25, r1
    1d24:	39 f0       	breq	.+14     	; 0x1d34 <.L94>
    1d26:	34 f0       	brlt	.+12     	; 0x1d34 <.L94>

00001d28 <.Loc.337>:
            //stuur naar links
            Motor_1_set_power(50);
    1d28:	82 e3       	ldi	r24, 0x32	; 50
    1d2a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d2e <.Loc.338>:
            Motor_2_set_power(20);
    1d2e:	84 e1       	ldi	r24, 0x14	; 20
    1d30:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d34 <.L94>:
        }
        if(Difference < -1){
    1d34:	8b 81       	ldd	r24, Y+3	; 0x03
    1d36:	9c 81       	ldd	r25, Y+4	; 0x04
    1d38:	8f 3f       	cpi	r24, 0xFF	; 255
    1d3a:	bf ef       	ldi	r27, 0xFF	; 255
    1d3c:	9b 07       	cpc	r25, r27
    1d3e:	34 f4       	brge	.+12     	; 0x1d4c <.L95>

00001d40 <.Loc.340>:
            //stuur naar rechts
            Motor_1_set_power(45);
    1d40:	8d e2       	ldi	r24, 0x2D	; 45
    1d42:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d46 <.Loc.341>:
            Motor_2_set_power(50);
    1d46:	82 e3       	ldi	r24, 0x32	; 50
    1d48:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d4c <.L95>:
        }
        if(Difference < -3){
    1d4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d4e:	9c 81       	ldd	r25, Y+4	; 0x04
    1d50:	8d 3f       	cpi	r24, 0xFD	; 253
    1d52:	2f ef       	ldi	r18, 0xFF	; 255
    1d54:	92 07       	cpc	r25, r18
    1d56:	34 f4       	brge	.+12     	; 0x1d64 <.L96>

00001d58 <.Loc.343>:
            //stuur naar rechts
            Motor_1_set_power(40);
    1d58:	88 e2       	ldi	r24, 0x28	; 40
    1d5a:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d5e <.Loc.344>:
            Motor_2_set_power(50);
    1d5e:	82 e3       	ldi	r24, 0x32	; 50
    1d60:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d64 <.L96>:
        }
        if(Difference < -8){
    1d64:	8b 81       	ldd	r24, Y+3	; 0x03
    1d66:	9c 81       	ldd	r25, Y+4	; 0x04
    1d68:	88 3f       	cpi	r24, 0xF8	; 248
    1d6a:	3f ef       	ldi	r19, 0xFF	; 255
    1d6c:	93 07       	cpc	r25, r19
    1d6e:	34 f4       	brge	.+12     	; 0x1d7c <.L97>

00001d70 <.Loc.346>:
            //stuur naar rechts
            Motor_1_set_power(20);
    1d70:	84 e1       	ldi	r24, 0x14	; 20
    1d72:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d76 <.Loc.347>:
            Motor_2_set_power(50);
    1d76:	82 e3       	ldi	r24, 0x32	; 50
    1d78:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d7c <.L97>:
        }
        if ( -1 < Difference && Difference < 1){
    1d7c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d7e:	9c 81       	ldd	r25, Y+4	; 0x04
    1d80:	99 23       	and	r25, r25
    1d82:	5c f0       	brlt	.+22     	; 0x1d9a <.L98>

00001d84 <.Loc.349>:
    1d84:	8b 81       	ldd	r24, Y+3	; 0x03
    1d86:	9c 81       	ldd	r25, Y+4	; 0x04
    1d88:	00 97       	sbiw	r24, 0x00	; 0
    1d8a:	09 f0       	breq	.+2      	; 0x1d8e <.Loc.350>

00001d8c <L0^A>:
    1d8c:	34 f4       	brge	.+12     	; 0x1d9a <.L98>

00001d8e <.Loc.350>:
            Motor_1_set_power(50);
    1d8e:	82 e3       	ldi	r24, 0x32	; 50
    1d90:	0e 94 aa 04 	call	0x954	; 0x954 <Motor_1_set_power>

00001d94 <.Loc.351>:
            Motor_2_set_power(50);
    1d94:	82 e3       	ldi	r24, 0x32	; 50
    1d96:	0e 94 08 06 	call	0xc10	; 0xc10 <Motor_2_set_power>

00001d9a <.L98>:
    for(int i = 0; i<RijAfstand; i++){
    1d9a:	89 81       	ldd	r24, Y+1	; 0x01
    1d9c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d9e:	01 96       	adiw	r24, 0x01	; 1
    1da0:	9a 83       	std	Y+2, r25	; 0x02
    1da2:	89 83       	std	Y+1, r24	; 0x01

00001da4 <.L91>:
    1da4:	29 81       	ldd	r18, Y+1	; 0x01
    1da6:	3a 81       	ldd	r19, Y+2	; 0x02
    1da8:	8d 81       	ldd	r24, Y+5	; 0x05
    1daa:	9e 81       	ldd	r25, Y+6	; 0x06
    1dac:	28 17       	cp	r18, r24
    1dae:	39 07       	cpc	r19, r25
    1db0:	0c f4       	brge	.+2      	; 0x1db4 <.LBE51>

00001db2 <L0^A>:
    1db2:	38 cf       	rjmp	.-400    	; 0x1c24 <.L99>

00001db4 <.LBE51>:
        }
    }


}
    1db4:	00 00       	nop
    1db6:	00 00       	nop
    1db8:	a4 96       	adiw	r28, 0x24	; 36
    1dba:	0f b6       	in	r0, 0x3f	; 63
    1dbc:	f8 94       	cli
    1dbe:	de bf       	out	0x3e, r29	; 62
    1dc0:	0f be       	out	0x3f, r0	; 63
    1dc2:	cd bf       	out	0x3d, r28	; 61
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	08 95       	ret

00001dca <BochtMaken>:
void BochtMaken(void){
    1dca:	cf 93       	push	r28
    1dcc:	df 93       	push	r29
    1dce:	cd b7       	in	r28, 0x3d	; 61
    1dd0:	de b7       	in	r29, 0x3e	; 62

00001dd2 <.Loc.356>:
    wait_ms(500);
    1dd2:	84 ef       	ldi	r24, 0xF4	; 244
    1dd4:	91 e0       	ldi	r25, 0x01	; 1
    1dd6:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <wait_ms>

00001dda <.Loc.357>:
    Drive(130, 360);
    1dda:	68 e6       	ldi	r22, 0x68	; 104
    1ddc:	71 e0       	ldi	r23, 0x01	; 1
    1dde:	82 e8       	ldi	r24, 0x82	; 130
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <Drive>

00001de6 <.Loc.358>:
    TurnTo(450);
    1de6:	82 ec       	ldi	r24, 0xC2	; 194
    1de8:	91 e0       	ldi	r25, 0x01	; 1
    1dea:	0e 94 9d 0c 	call	0x193a	; 0x193a <TurnTo>

00001dee <.Loc.359>:
    Drive(265, 450);
    1dee:	62 ec       	ldi	r22, 0xC2	; 194
    1df0:	71 e0       	ldi	r23, 0x01	; 1
    1df2:	89 e0       	ldi	r24, 0x09	; 9
    1df4:	91 e0       	ldi	r25, 0x01	; 1
    1df6:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <Drive>

00001dfa <.Loc.360>:
    TurnTo(538);
    1dfa:	8a e1       	ldi	r24, 0x1A	; 26
    1dfc:	92 e0       	ldi	r25, 0x02	; 2
    1dfe:	0e 94 9d 0c 	call	0x193a	; 0x193a <TurnTo>

00001e02 <.Loc.361>:
    Drive(100, 538);
    1e02:	6a e1       	ldi	r22, 0x1A	; 26
    1e04:	72 e0       	ldi	r23, 0x02	; 2
    1e06:	84 e6       	ldi	r24, 0x64	; 100
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <Drive>

00001e0e <.Loc.362>:
}
    1e0e:	00 00       	nop
    1e10:	df 91       	pop	r29
    1e12:	cf 91       	pop	r28
    1e14:	08 95       	ret

00001e16 <initTimer>:

void initTimer(void)
{
    1e16:	cf 93       	push	r28
    1e18:	df 93       	push	r29
    1e1a:	cd b7       	in	r28, 0x3d	; 61
    1e1c:	de b7       	in	r29, 0x3e	; 62

00001e1e <.Loc.364>:
    TCCR4A = 0;
    1e1e:	80 ea       	ldi	r24, 0xA0	; 160
    1e20:	90 e0       	ldi	r25, 0x00	; 0

00001e22 <.Loc.365>:
    1e22:	fc 01       	movw	r30, r24
    1e24:	10 82       	st	Z, r1

00001e26 <.Loc.366>:
    TCCR4B |=  (1<<CS41);
    1e26:	81 ea       	ldi	r24, 0xA1	; 161
    1e28:	90 e0       	ldi	r25, 0x00	; 0
    1e2a:	fc 01       	movw	r30, r24
    1e2c:	20 81       	ld	r18, Z
    1e2e:	81 ea       	ldi	r24, 0xA1	; 161
    1e30:	90 e0       	ldi	r25, 0x00	; 0

00001e32 <.Loc.367>:
    1e32:	22 60       	ori	r18, 0x02	; 2
    1e34:	fc 01       	movw	r30, r24
    1e36:	20 83       	st	Z, r18

00001e38 <.Loc.368>:
}
    1e38:	00 00       	nop
    1e3a:	df 91       	pop	r29
    1e3c:	cf 91       	pop	r28
    1e3e:	08 95       	ret

00001e40 <wait_ms>:

void wait_ms(int ms){
    1e40:	cf 93       	push	r28
    1e42:	df 93       	push	r29
    1e44:	00 d0       	rcall	.+0      	; 0x1e46 <L0^A>

00001e46 <L0^A>:
    1e46:	00 d0       	rcall	.+0      	; 0x1e48 <L0^A>

00001e48 <L0^A>:
    1e48:	cd b7       	in	r28, 0x3d	; 61
    1e4a:	de b7       	in	r29, 0x3e	; 62
    1e4c:	9e 83       	std	Y+6, r25	; 0x06
    1e4e:	8d 83       	std	Y+5, r24	; 0x05

00001e50 <.Loc.370>:
    int WachtTijd = ms/33;
    1e50:	8d 81       	ldd	r24, Y+5	; 0x05
    1e52:	9e 81       	ldd	r25, Y+6	; 0x06
    1e54:	21 e2       	ldi	r18, 0x21	; 33
    1e56:	30 e0       	ldi	r19, 0x00	; 0
    1e58:	b9 01       	movw	r22, r18
    1e5a:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <__divmodhi4>
    1e5e:	cb 01       	movw	r24, r22
    1e60:	9c 83       	std	Y+4, r25	; 0x04
    1e62:	8b 83       	std	Y+3, r24	; 0x03

00001e64 <.Loc.371>:
    int teller =0;
    1e64:	1a 82       	std	Y+2, r1	; 0x02
    1e66:	19 82       	std	Y+1, r1	; 0x01

00001e68 <.Loc.372>:
    while(teller < WachtTijd)
    1e68:	14 c0       	rjmp	.+40     	; 0x1e92 <.L104>

00001e6a <.L105>:
    {
        if (TIFR4 & (1<<TOV4))
    1e6a:	89 e3       	ldi	r24, 0x39	; 57
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	fc 01       	movw	r30, r24
    1e70:	80 81       	ld	r24, Z

00001e72 <.Loc.374>:
    1e72:	88 2f       	mov	r24, r24
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	81 70       	andi	r24, 0x01	; 1
    1e78:	99 27       	eor	r25, r25

00001e7a <.Loc.375>:
    1e7a:	00 97       	sbiw	r24, 0x00	; 0
    1e7c:	51 f0       	breq	.+20     	; 0x1e92 <.L104>

00001e7e <.Loc.376>:
        {
            TIFR4 = (1<<TOV4);
    1e7e:	89 e3       	ldi	r24, 0x39	; 57
    1e80:	90 e0       	ldi	r25, 0x00	; 0

00001e82 <.Loc.377>:
    1e82:	21 e0       	ldi	r18, 0x01	; 1
    1e84:	fc 01       	movw	r30, r24
    1e86:	20 83       	st	Z, r18

00001e88 <.Loc.378>:
            teller++;
    1e88:	89 81       	ldd	r24, Y+1	; 0x01
    1e8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1e8c:	01 96       	adiw	r24, 0x01	; 1
    1e8e:	9a 83       	std	Y+2, r25	; 0x02
    1e90:	89 83       	std	Y+1, r24	; 0x01

00001e92 <.L104>:
    while(teller < WachtTijd)
    1e92:	29 81       	ldd	r18, Y+1	; 0x01
    1e94:	3a 81       	ldd	r19, Y+2	; 0x02
    1e96:	8b 81       	ldd	r24, Y+3	; 0x03
    1e98:	9c 81       	ldd	r25, Y+4	; 0x04
    1e9a:	28 17       	cp	r18, r24
    1e9c:	39 07       	cpc	r19, r25
    1e9e:	2c f3       	brlt	.-54     	; 0x1e6a <.L105>

00001ea0 <.Loc.380>:
        }
    }
}
    1ea0:	00 00       	nop
    1ea2:	00 00       	nop
    1ea4:	0f 90       	pop	r0
    1ea6:	0f 90       	pop	r0
    1ea8:	0f 90       	pop	r0
    1eaa:	0f 90       	pop	r0
    1eac:	0f 90       	pop	r0
    1eae:	0f 90       	pop	r0
    1eb0:	df 91       	pop	r29
    1eb2:	cf 91       	pop	r28
    1eb4:	08 95       	ret

00001eb6 <init_display_meneer>:
	~0x66, ~0xB6, ~0xBE, ~0xE0,
	~0xFE, ~0xF6, ~0xEE, ~0x3E,
	~0x9C, ~0x7A, ~0x9E, ~0x8E };

void init_display_meneer (void)
{
    1eb6:	cf 93       	push	r28
    1eb8:	df 93       	push	r29
    1eba:	cd b7       	in	r28, 0x3d	; 61
    1ebc:	de b7       	in	r29, 0x3e	; 62

00001ebe <.Loc.382>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDR_SDI    |= (1 << SDI_BIT);
    1ebe:	81 e0       	ldi	r24, 0x01	; 1
    1ec0:	91 e0       	ldi	r25, 0x01	; 1
    1ec2:	fc 01       	movw	r30, r24
    1ec4:	20 81       	ld	r18, Z
    1ec6:	81 e0       	ldi	r24, 0x01	; 1
    1ec8:	91 e0       	ldi	r25, 0x01	; 1

00001eca <.Loc.383>:
    1eca:	20 62       	ori	r18, 0x20	; 32
    1ecc:	fc 01       	movw	r30, r24
    1ece:	20 83       	st	Z, r18

00001ed0 <.Loc.384>:
	DDR_SFTCLK |= (1 << SFTCLK_BIT);
    1ed0:	81 e0       	ldi	r24, 0x01	; 1
    1ed2:	91 e0       	ldi	r25, 0x01	; 1
    1ed4:	fc 01       	movw	r30, r24
    1ed6:	20 81       	ld	r18, Z
    1ed8:	81 e0       	ldi	r24, 0x01	; 1
    1eda:	91 e0       	ldi	r25, 0x01	; 1

00001edc <.Loc.385>:
    1edc:	20 61       	ori	r18, 0x10	; 16
    1ede:	fc 01       	movw	r30, r24
    1ee0:	20 83       	st	Z, r18

00001ee2 <.Loc.386>:
	DDR_LCHCLK |= (1 << LCHCLK_BIT);
    1ee2:	83 e3       	ldi	r24, 0x33	; 51
    1ee4:	90 e0       	ldi	r25, 0x00	; 0
    1ee6:	fc 01       	movw	r30, r24
    1ee8:	20 81       	ld	r18, Z
    1eea:	83 e3       	ldi	r24, 0x33	; 51
    1eec:	90 e0       	ldi	r25, 0x00	; 0

00001eee <.Loc.387>:
    1eee:	20 62       	ori	r18, 0x20	; 32
    1ef0:	fc 01       	movw	r30, r24
    1ef2:	20 83       	st	Z, r18

00001ef4 <.Loc.388>:

	// Maak shiftclk en latchclk laag
	PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1ef4:	82 e0       	ldi	r24, 0x02	; 2
    1ef6:	91 e0       	ldi	r25, 0x01	; 1
    1ef8:	fc 01       	movw	r30, r24
    1efa:	20 81       	ld	r18, Z

00001efc <.Loc.389>:
    1efc:	82 e0       	ldi	r24, 0x02	; 2
    1efe:	91 e0       	ldi	r25, 0x01	; 1

00001f00 <.Loc.390>:
    1f00:	2f 7e       	andi	r18, 0xEF	; 239
    1f02:	fc 01       	movw	r30, r24
    1f04:	20 83       	st	Z, r18

00001f06 <.Loc.391>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    1f06:	84 e3       	ldi	r24, 0x34	; 52
    1f08:	90 e0       	ldi	r25, 0x00	; 0
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	20 81       	ld	r18, Z

00001f0e <.Loc.392>:
    1f0e:	84 e3       	ldi	r24, 0x34	; 52
    1f10:	90 e0       	ldi	r25, 0x00	; 0

00001f12 <.Loc.393>:
    1f12:	2f 7d       	andi	r18, 0xDF	; 223
    1f14:	fc 01       	movw	r30, r24
    1f16:	20 83       	st	Z, r18

00001f18 <.Loc.394>:
}
    1f18:	00 00       	nop
    1f1a:	df 91       	pop	r29
    1f1c:	cf 91       	pop	r28
    1f1e:	08 95       	ret

00001f20 <send_data>:

void send_data(char data)
{
    1f20:	cf 93       	push	r28
    1f22:	df 93       	push	r29
    1f24:	00 d0       	rcall	.+0      	; 0x1f26 <L0^A>

00001f26 <L0^A>:
    1f26:	0f 92       	push	r0
    1f28:	0f 92       	push	r0
    1f2a:	cd b7       	in	r28, 0x3d	; 61
    1f2c:	de b7       	in	r29, 0x3e	; 62
    1f2e:	8d 83       	std	Y+5, r24	; 0x05

00001f30 <.LBB53>:
	for (unsigned i = 0; i < 8; i++)
    1f30:	1a 82       	std	Y+2, r1	; 0x02
    1f32:	19 82       	std	Y+1, r1	; 0x01

00001f34 <.Loc.397>:
    1f34:	39 c0       	rjmp	.+114    	; 0x1fa8 <.L108>

00001f36 <.L111>:
	// Herhaal voor alle bits in een char
	{
		// Bepaal de waarde van de bit die je naar het schuifregister
		// wil sturen
		int bit = data & 1;
    1f36:	8d 81       	ldd	r24, Y+5	; 0x05
    1f38:	08 2e       	mov	r0, r24
    1f3a:	00 0c       	add	r0, r0
    1f3c:	99 0b       	sbc	r25, r25

00001f3e <.Loc.399>:
    1f3e:	81 70       	andi	r24, 0x01	; 1
    1f40:	99 27       	eor	r25, r25
    1f42:	9c 83       	std	Y+4, r25	; 0x04
    1f44:	8b 83       	std	Y+3, r24	; 0x03

00001f46 <.Loc.400>:
		data >>= 1;
    1f46:	8d 81       	ldd	r24, Y+5	; 0x05
    1f48:	85 95       	asr	r24
    1f4a:	8d 83       	std	Y+5, r24	; 0x05

00001f4c <.Loc.401>:

		// Maak de juiste pin hoog of laag op basis van de bepaalde waarde
		// van het bit
		if (bit)
    1f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f4e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f50:	00 97       	sbiw	r24, 0x00	; 0
    1f52:	51 f0       	breq	.+20     	; 0x1f68 <.L109>

00001f54 <.Loc.402>:
		{
			PORT_SDI |= (1 << SDI_BIT);
    1f54:	82 e0       	ldi	r24, 0x02	; 2
    1f56:	91 e0       	ldi	r25, 0x01	; 1
    1f58:	fc 01       	movw	r30, r24
    1f5a:	20 81       	ld	r18, Z
    1f5c:	82 e0       	ldi	r24, 0x02	; 2
    1f5e:	91 e0       	ldi	r25, 0x01	; 1

00001f60 <.Loc.403>:
    1f60:	20 62       	ori	r18, 0x20	; 32
    1f62:	fc 01       	movw	r30, r24
    1f64:	20 83       	st	Z, r18
    1f66:	09 c0       	rjmp	.+18     	; 0x1f7a <.L110>

00001f68 <.L109>:
		}
		else
		{
			PORT_SDI &= ~(1 << SDI_BIT);
    1f68:	82 e0       	ldi	r24, 0x02	; 2
    1f6a:	91 e0       	ldi	r25, 0x01	; 1
    1f6c:	fc 01       	movw	r30, r24
    1f6e:	20 81       	ld	r18, Z

00001f70 <.Loc.405>:
    1f70:	82 e0       	ldi	r24, 0x02	; 2
    1f72:	91 e0       	ldi	r25, 0x01	; 1

00001f74 <.Loc.406>:
    1f74:	2f 7d       	andi	r18, 0xDF	; 223
    1f76:	fc 01       	movw	r30, r24
    1f78:	20 83       	st	Z, r18

00001f7a <.L110>:
		}

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
		// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
		PORT_SFTCLK |= (1 << SFTCLK_BIT);
    1f7a:	82 e0       	ldi	r24, 0x02	; 2
    1f7c:	91 e0       	ldi	r25, 0x01	; 1
    1f7e:	fc 01       	movw	r30, r24
    1f80:	20 81       	ld	r18, Z
    1f82:	82 e0       	ldi	r24, 0x02	; 2
    1f84:	91 e0       	ldi	r25, 0x01	; 1

00001f86 <.Loc.408>:
    1f86:	20 61       	ori	r18, 0x10	; 16
    1f88:	fc 01       	movw	r30, r24
    1f8a:	20 83       	st	Z, r18

00001f8c <.Loc.409>:
		PORT_SFTCLK &= ~(1 << SFTCLK_BIT);
    1f8c:	82 e0       	ldi	r24, 0x02	; 2
    1f8e:	91 e0       	ldi	r25, 0x01	; 1
    1f90:	fc 01       	movw	r30, r24
    1f92:	20 81       	ld	r18, Z

00001f94 <.Loc.410>:
    1f94:	82 e0       	ldi	r24, 0x02	; 2
    1f96:	91 e0       	ldi	r25, 0x01	; 1

00001f98 <.Loc.411>:
    1f98:	2f 7e       	andi	r18, 0xEF	; 239
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	20 83       	st	Z, r18

00001f9e <.LBE54>:
	for (unsigned i = 0; i < 8; i++)
    1f9e:	89 81       	ldd	r24, Y+1	; 0x01
    1fa0:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa2:	01 96       	adiw	r24, 0x01	; 1
    1fa4:	9a 83       	std	Y+2, r25	; 0x02
    1fa6:	89 83       	std	Y+1, r24	; 0x01

00001fa8 <.L108>:
    1fa8:	89 81       	ldd	r24, Y+1	; 0x01
    1faa:	9a 81       	ldd	r25, Y+2	; 0x02
    1fac:	87 30       	cpi	r24, 0x07	; 7
    1fae:	91 05       	cpc	r25, r1
    1fb0:	11 f2       	breq	.-124    	; 0x1f36 <.L111>
    1fb2:	08 f2       	brcs	.-126    	; 0x1f36 <.L111>

00001fb4 <.LBE53>:
	}
}
    1fb4:	00 00       	nop
    1fb6:	00 00       	nop
    1fb8:	0f 90       	pop	r0
    1fba:	0f 90       	pop	r0
    1fbc:	0f 90       	pop	r0
    1fbe:	0f 90       	pop	r0
    1fc0:	0f 90       	pop	r0
    1fc2:	df 91       	pop	r29
    1fc4:	cf 91       	pop	r28
    1fc6:	08 95       	ret

00001fc8 <send_enable>:

void send_enable(int display_nummer)
{
    1fc8:	cf 93       	push	r28
    1fca:	df 93       	push	r29
    1fcc:	0f 92       	push	r0
    1fce:	0f 92       	push	r0
    1fd0:	cd b7       	in	r28, 0x3d	; 61
    1fd2:	de b7       	in	r29, 0x3e	; 62
    1fd4:	9a 83       	std	Y+2, r25	; 0x02
    1fd6:	89 83       	std	Y+1, r24	; 0x01

00001fd8 <.Loc.416>:
	send_data(0x10 << display_nummer);
    1fd8:	80 e1       	ldi	r24, 0x10	; 16
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	09 80       	ldd	r0, Y+1	; 0x01
    1fde:	02 c0       	rjmp	.+4      	; 0x1fe4 <.L2^B1>

00001fe0 <.L1^B5>:
    1fe0:	88 0f       	add	r24, r24
    1fe2:	99 1f       	adc	r25, r25

00001fe4 <.L2^B1>:
    1fe4:	0a 94       	dec	r0
    1fe6:	e2 f7       	brpl	.-8      	; 0x1fe0 <.L1^B5>

00001fe8 <.Loc.417>:
    1fe8:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <send_data>

00001fec <.Loc.418>:
}
    1fec:	00 00       	nop
    1fee:	0f 90       	pop	r0
    1ff0:	0f 90       	pop	r0
    1ff2:	df 91       	pop	r29
    1ff4:	cf 91       	pop	r28
    1ff6:	08 95       	ret

00001ff8 <display>:

void display(char data, int display_nummer)
{
    1ff8:	cf 93       	push	r28
    1ffa:	df 93       	push	r29
    1ffc:	00 d0       	rcall	.+0      	; 0x1ffe <L0^A>

00001ffe <L0^A>:
    1ffe:	cd b7       	in	r28, 0x3d	; 61
    2000:	de b7       	in	r29, 0x3e	; 62
    2002:	89 83       	std	Y+1, r24	; 0x01
    2004:	7b 83       	std	Y+3, r23	; 0x03
    2006:	6a 83       	std	Y+2, r22	; 0x02

00002008 <.Loc.420>:
	send_data(data);
    2008:	89 81       	ldd	r24, Y+1	; 0x01
    200a:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <send_data>

0000200e <.Loc.421>:
	send_enable(display_nummer);
    200e:	8a 81       	ldd	r24, Y+2	; 0x02
    2010:	9b 81       	ldd	r25, Y+3	; 0x03
    2012:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <send_enable>

00002016 <.Loc.422>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	// Puls moet minimaal 13 ns hoog zijn. Een clk cycle op de Arduino duurt
	// 62 ns, dus signaal kan hoog en de volgende cycle weer omlaag
	PORT_LCHCLK |= (1 << LCHCLK_BIT);
    2016:	84 e3       	ldi	r24, 0x34	; 52
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	fc 01       	movw	r30, r24
    201c:	20 81       	ld	r18, Z
    201e:	84 e3       	ldi	r24, 0x34	; 52
    2020:	90 e0       	ldi	r25, 0x00	; 0

00002022 <.Loc.423>:
    2022:	20 62       	ori	r18, 0x20	; 32
    2024:	fc 01       	movw	r30, r24
    2026:	20 83       	st	Z, r18

00002028 <.Loc.424>:
	PORT_LCHCLK &= ~(1 << LCHCLK_BIT);
    2028:	84 e3       	ldi	r24, 0x34	; 52
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	fc 01       	movw	r30, r24
    202e:	20 81       	ld	r18, Z

00002030 <.Loc.425>:
    2030:	84 e3       	ldi	r24, 0x34	; 52
    2032:	90 e0       	ldi	r25, 0x00	; 0

00002034 <.Loc.426>:
    2034:	2f 7d       	andi	r18, 0xDF	; 223
    2036:	fc 01       	movw	r30, r24
    2038:	20 83       	st	Z, r18

0000203a <.Loc.427>:
}
    203a:	00 00       	nop
    203c:	0f 90       	pop	r0
    203e:	0f 90       	pop	r0
    2040:	0f 90       	pop	r0
    2042:	df 91       	pop	r29
    2044:	cf 91       	pop	r28
    2046:	08 95       	ret

00002048 <display_getal>:

void display_getal(unsigned int getal)
{
    2048:	cf 93       	push	r28
    204a:	df 93       	push	r29
    204c:	cd b7       	in	r28, 0x3d	; 61
    204e:	de b7       	in	r29, 0x3e	; 62
    2050:	a6 97       	sbiw	r28, 0x26	; 38
    2052:	0f b6       	in	r0, 0x3f	; 63
    2054:	f8 94       	cli
    2056:	de bf       	out	0x3e, r29	; 62
    2058:	0f be       	out	0x3f, r0	; 63
    205a:	cd bf       	out	0x3d, r28	; 61
    205c:	9a 8b       	std	Y+18, r25	; 0x12
    205e:	89 8b       	std	Y+17, r24	; 0x11

00002060 <.LBB55>:
	for (int i = 0; i < 4; i++)
    2060:	1a 82       	std	Y+2, r1	; 0x02
    2062:	19 82       	std	Y+1, r1	; 0x01

00002064 <.Loc.430>:
    2064:	cc c0       	rjmp	.+408    	; 0x21fe <.L115>

00002066 <.L124>:
	{
		display(segmentcodes[getal%10], i);
    2066:	49 89       	ldd	r20, Y+17	; 0x11
    2068:	5a 89       	ldd	r21, Y+18	; 0x12
    206a:	9a 01       	movw	r18, r20
    206c:	ad ec       	ldi	r26, 0xCD	; 205
    206e:	bc ec       	ldi	r27, 0xCC	; 204
    2070:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <__umulhisi3>
    2074:	9c 01       	movw	r18, r24
    2076:	36 95       	lsr	r19
    2078:	27 95       	ror	r18
    207a:	36 95       	lsr	r19
    207c:	27 95       	ror	r18
    207e:	36 95       	lsr	r19
    2080:	27 95       	ror	r18
    2082:	c9 01       	movw	r24, r18
    2084:	88 0f       	add	r24, r24
    2086:	99 1f       	adc	r25, r25
    2088:	88 0f       	add	r24, r24
    208a:	99 1f       	adc	r25, r25
    208c:	82 0f       	add	r24, r18
    208e:	93 1f       	adc	r25, r19
    2090:	88 0f       	add	r24, r24
    2092:	99 1f       	adc	r25, r25
    2094:	9a 01       	movw	r18, r20
    2096:	28 1b       	sub	r18, r24
    2098:	39 0b       	sbc	r19, r25

0000209a <.Loc.432>:
    209a:	c9 01       	movw	r24, r18
    209c:	88 0f       	add	r24, r24
    209e:	99 1f       	adc	r25, r25
    20a0:	8c 5f       	subi	r24, 0xFC	; 252
    20a2:	9d 4f       	sbci	r25, 0xFD	; 253
    20a4:	dc 01       	movw	r26, r24
    20a6:	8d 91       	ld	r24, X+
    20a8:	9c 91       	ld	r25, X

000020aa <.Loc.433>:
    20aa:	28 2f       	mov	r18, r24
    20ac:	89 81       	ldd	r24, Y+1	; 0x01
    20ae:	9a 81       	ldd	r25, Y+2	; 0x02
    20b0:	bc 01       	movw	r22, r24
    20b2:	82 2f       	mov	r24, r18
    20b4:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <display>

000020b8 <.Loc.434>:
		getal /= 10;
    20b8:	89 89       	ldd	r24, Y+17	; 0x11
    20ba:	9a 89       	ldd	r25, Y+18	; 0x12
    20bc:	9c 01       	movw	r18, r24
    20be:	ad ec       	ldi	r26, 0xCD	; 205
    20c0:	bc ec       	ldi	r27, 0xCC	; 204
    20c2:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <__umulhisi3>
    20c6:	96 95       	lsr	r25
    20c8:	87 95       	ror	r24
    20ca:	96 95       	lsr	r25
    20cc:	87 95       	ror	r24
    20ce:	96 95       	lsr	r25
    20d0:	87 95       	ror	r24
    20d2:	9a 8b       	std	Y+18, r25	; 0x12
    20d4:	89 8b       	std	Y+17, r24	; 0x11
    20d6:	80 e0       	ldi	r24, 0x00	; 0
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	a0 e8       	ldi	r26, 0x80	; 128
    20dc:	bf e3       	ldi	r27, 0x3F	; 63
    20de:	8b 83       	std	Y+3, r24	; 0x03
    20e0:	9c 83       	std	Y+4, r25	; 0x04
    20e2:	ad 83       	std	Y+5, r26	; 0x05
    20e4:	be 83       	std	Y+6, r27	; 0x06

000020e6 <.LBB56>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	4a e7       	ldi	r20, 0x7A	; 122
    20ec:	55 e4       	ldi	r21, 0x45	; 69
    20ee:	6b 81       	ldd	r22, Y+3	; 0x03
    20f0:	7c 81       	ldd	r23, Y+4	; 0x04
    20f2:	8d 81       	ldd	r24, Y+5	; 0x05
    20f4:	9e 81       	ldd	r25, Y+6	; 0x06
    20f6:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    20fa:	6f 8b       	std	Y+23, r22	; 0x17
    20fc:	78 8f       	std	Y+24, r23	; 0x18
    20fe:	89 8f       	std	Y+25, r24	; 0x19
    2100:	9a 8f       	std	Y+26, r25	; 0x1a
    2102:	8f 89       	ldd	r24, Y+23	; 0x17
    2104:	98 8d       	ldd	r25, Y+24	; 0x18
    2106:	a9 8d       	ldd	r26, Y+25	; 0x19
    2108:	ba 8d       	ldd	r27, Y+26	; 0x1a
    210a:	8f 83       	std	Y+7, r24	; 0x07
    210c:	98 87       	std	Y+8, r25	; 0x08
    210e:	a9 87       	std	Y+9, r26	; 0x09
    2110:	ba 87       	std	Y+10, r27	; 0x0a

00002112 <.Loc.436>:
	if (__tmp < 1.0)
    2112:	20 e0       	ldi	r18, 0x00	; 0
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	40 e8       	ldi	r20, 0x80	; 128
    2118:	5f e3       	ldi	r21, 0x3F	; 63
    211a:	6f 81       	ldd	r22, Y+7	; 0x07
    211c:	78 85       	ldd	r23, Y+8	; 0x08
    211e:	89 85       	ldd	r24, Y+9	; 0x09
    2120:	9a 85       	ldd	r25, Y+10	; 0x0a
    2122:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    2126:	88 23       	and	r24, r24
    2128:	2c f4       	brge	.+10     	; 0x2134 <.L127>

0000212a <.Loc.437>:
		__ticks = 1;
    212a:	81 e0       	ldi	r24, 0x01	; 1
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	9c 87       	std	Y+12, r25	; 0x0c
    2130:	8b 87       	std	Y+11, r24	; 0x0b
    2132:	55 c0       	rjmp	.+170    	; 0x21de <.L118>

00002134 <.L127>:
	else if (__tmp > 65535)
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	3f ef       	ldi	r19, 0xFF	; 255
    2138:	4f e7       	ldi	r20, 0x7F	; 127
    213a:	57 e4       	ldi	r21, 0x47	; 71
    213c:	6f 81       	ldd	r22, Y+7	; 0x07
    213e:	78 85       	ldd	r23, Y+8	; 0x08
    2140:	89 85       	ldd	r24, Y+9	; 0x09
    2142:	9a 85       	ldd	r25, Y+10	; 0x0a
    2144:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    2148:	88 23       	and	r24, r24
    214a:	d9 f1       	breq	.+118    	; 0x21c2 <.L128>
    214c:	d4 f1       	brlt	.+116    	; 0x21c2 <.L128>

0000214e <.Loc.439>:
		__ticks = (uint16_t) (__ms * 10.0);
    214e:	20 e0       	ldi	r18, 0x00	; 0
    2150:	30 e0       	ldi	r19, 0x00	; 0
    2152:	40 e2       	ldi	r20, 0x20	; 32
    2154:	51 e4       	ldi	r21, 0x41	; 65
    2156:	6b 81       	ldd	r22, Y+3	; 0x03
    2158:	7c 81       	ldd	r23, Y+4	; 0x04
    215a:	8d 81       	ldd	r24, Y+5	; 0x05
    215c:	9e 81       	ldd	r25, Y+6	; 0x06
    215e:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2162:	6b 8f       	std	Y+27, r22	; 0x1b
    2164:	7c 8f       	std	Y+28, r23	; 0x1c
    2166:	8d 8f       	std	Y+29, r24	; 0x1d
    2168:	9e 8f       	std	Y+30, r25	; 0x1e
    216a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    216c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    216e:	ad 8d       	ldd	r26, Y+29	; 0x1d
    2170:	be 8d       	ldd	r27, Y+30	; 0x1e
    2172:	8b 8b       	std	Y+19, r24	; 0x13
    2174:	9c 8b       	std	Y+20, r25	; 0x14
    2176:	ad 8b       	std	Y+21, r26	; 0x15
    2178:	be 8b       	std	Y+22, r27	; 0x16

0000217a <.Loc.440>:
    217a:	6b 89       	ldd	r22, Y+19	; 0x13
    217c:	7c 89       	ldd	r23, Y+20	; 0x14
    217e:	8d 89       	ldd	r24, Y+21	; 0x15
    2180:	9e 89       	ldd	r25, Y+22	; 0x16
    2182:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2186:	6f 8f       	std	Y+31, r22	; 0x1f
    2188:	78 a3       	std	Y+32, r23	; 0x20
    218a:	89 a3       	std	Y+33, r24	; 0x21
    218c:	9a a3       	std	Y+34, r25	; 0x22
    218e:	af 8d       	ldd	r26, Y+31	; 0x1f
    2190:	b8 a1       	ldd	r27, Y+32	; 0x20
    2192:	bc 87       	std	Y+12, r27	; 0x0c
    2194:	ab 87       	std	Y+11, r26	; 0x0b

00002196 <.Loc.441>:
		while(__ticks)
    2196:	10 c0       	rjmp	.+32     	; 0x21b8 <.L121>

00002198 <.L122>:
    2198:	80 e9       	ldi	r24, 0x90	; 144
    219a:	91 e0       	ldi	r25, 0x01	; 1
    219c:	9e 87       	std	Y+14, r25	; 0x0e
    219e:	8d 87       	std	Y+13, r24	; 0x0d

000021a0 <.LBB58>:
    21a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    21a2:	9e 85       	ldd	r25, Y+14	; 0x0e

000021a4 <.L1^B6>:
    21a4:	01 97       	sbiw	r24, 0x01	; 1
    21a6:	f1 f7       	brne	.-4      	; 0x21a4 <.L1^B6>
    21a8:	9e 87       	std	Y+14, r25	; 0x0e
    21aa:	8d 87       	std	Y+13, r24	; 0x0d

000021ac <.Loc.443>:
	...

000021ae <.LBE58>:
			__ticks --;
    21ae:	8b 85       	ldd	r24, Y+11	; 0x0b
    21b0:	9c 85       	ldd	r25, Y+12	; 0x0c
    21b2:	01 97       	sbiw	r24, 0x01	; 1
    21b4:	9c 87       	std	Y+12, r25	; 0x0c
    21b6:	8b 87       	std	Y+11, r24	; 0x0b

000021b8 <.L121>:
		while(__ticks)
    21b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    21ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    21bc:	00 97       	sbiw	r24, 0x00	; 0
    21be:	61 f7       	brne	.-40     	; 0x2198 <.L122>

000021c0 <.Loc.446>:
		return;
    21c0:	19 c0       	rjmp	.+50     	; 0x21f4 <.L123>

000021c2 <.L128>:
		__ticks = (uint16_t)__tmp;
    21c2:	6f 81       	ldd	r22, Y+7	; 0x07
    21c4:	78 85       	ldd	r23, Y+8	; 0x08
    21c6:	89 85       	ldd	r24, Y+9	; 0x09
    21c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    21ca:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    21ce:	6b a3       	std	Y+35, r22	; 0x23
    21d0:	7c a3       	std	Y+36, r23	; 0x24
    21d2:	8d a3       	std	Y+37, r24	; 0x25
    21d4:	9e a3       	std	Y+38, r25	; 0x26
    21d6:	eb a1       	ldd	r30, Y+35	; 0x23
    21d8:	fc a1       	ldd	r31, Y+36	; 0x24
    21da:	fc 87       	std	Y+12, r31	; 0x0c
    21dc:	eb 87       	std	Y+11, r30	; 0x0b

000021de <.L118>:
    21de:	8b 85       	ldd	r24, Y+11	; 0x0b
    21e0:	9c 85       	ldd	r25, Y+12	; 0x0c
    21e2:	98 8b       	std	Y+16, r25	; 0x10
    21e4:	8f 87       	std	Y+15, r24	; 0x0f

000021e6 <.LBB60>:
    21e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    21e8:	98 89       	ldd	r25, Y+16	; 0x10

000021ea <.L1^B7>:
    21ea:	01 97       	sbiw	r24, 0x01	; 1
    21ec:	f1 f7       	brne	.-4      	; 0x21ea <.L1^B7>
    21ee:	98 8b       	std	Y+16, r25	; 0x10
    21f0:	8f 87       	std	Y+15, r24	; 0x0f

000021f2 <.Loc.449>:
	...

000021f4 <.L123>:
	for (int i = 0; i < 4; i++)
    21f4:	89 81       	ldd	r24, Y+1	; 0x01
    21f6:	9a 81       	ldd	r25, Y+2	; 0x02
    21f8:	01 96       	adiw	r24, 0x01	; 1
    21fa:	9a 83       	std	Y+2, r25	; 0x02
    21fc:	89 83       	std	Y+1, r24	; 0x01

000021fe <.L115>:
    21fe:	89 81       	ldd	r24, Y+1	; 0x01
    2200:	9a 81       	ldd	r25, Y+2	; 0x02
    2202:	83 30       	cpi	r24, 0x03	; 3
    2204:	91 05       	cpc	r25, r1
    2206:	09 f0       	breq	.+2      	; 0x220a <L0^A>

00002208 <L0^A>:
    2208:	0c f4       	brge	.+2      	; 0x220c <.LBE55>

0000220a <L0^A>:
    220a:	2d cf       	rjmp	.-422    	; 0x2066 <.L124>

0000220c <.LBE55>:
		_delay_ms(1);   // 1 kHz
	}
}
    220c:	00 00       	nop
    220e:	00 00       	nop
    2210:	a6 96       	adiw	r28, 0x26	; 38
    2212:	0f b6       	in	r0, 0x3f	; 63
    2214:	f8 94       	cli
    2216:	de bf       	out	0x3e, r29	; 62
    2218:	0f be       	out	0x3f, r0	; 63
    221a:	cd bf       	out	0x3d, r28	; 61
    221c:	df 91       	pop	r29
    221e:	cf 91       	pop	r28
    2220:	08 95       	ret

00002222 <init_SonicSensors>:
#include "Ultra_Sonic_Front.h"
#include <avr/io.h>
#include <avr/interrupt.h>
volatile int count = 0;

void init_SonicSensors(void){
    2222:	cf 93       	push	r28
    2224:	df 93       	push	r29
    2226:	cd b7       	in	r28, 0x3d	; 61
    2228:	de b7       	in	r29, 0x3e	; 62

0000222a <.Loc.1>:
	ddr_ech_F &= ~(1<<pin_ech_F);
    222a:	87 e0       	ldi	r24, 0x07	; 7
    222c:	91 e0       	ldi	r25, 0x01	; 1
    222e:	fc 01       	movw	r30, r24
    2230:	20 81       	ld	r18, Z

00002232 <.Loc.2>:
    2232:	87 e0       	ldi	r24, 0x07	; 7
    2234:	91 e0       	ldi	r25, 0x01	; 1

00002236 <.Loc.3>:
    2236:	27 7f       	andi	r18, 0xF7	; 247
    2238:	fc 01       	movw	r30, r24
    223a:	20 83       	st	Z, r18

0000223c <.Loc.4>:
	ddr_tri_F |= (1<<pin_tri_F);
    223c:	81 e2       	ldi	r24, 0x21	; 33
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	fc 01       	movw	r30, r24
    2242:	20 81       	ld	r18, Z
    2244:	81 e2       	ldi	r24, 0x21	; 33
    2246:	90 e0       	ldi	r25, 0x00	; 0

00002248 <.Loc.5>:
    2248:	21 60       	ori	r18, 0x01	; 1
    224a:	fc 01       	movw	r30, r24
    224c:	20 83       	st	Z, r18

0000224e <.Loc.6>:
    port_tri_F &= ~(1<<pin_tri_F);
    224e:	82 e2       	ldi	r24, 0x22	; 34
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	fc 01       	movw	r30, r24
    2254:	20 81       	ld	r18, Z

00002256 <.Loc.7>:
    2256:	82 e2       	ldi	r24, 0x22	; 34
    2258:	90 e0       	ldi	r25, 0x00	; 0

0000225a <.Loc.8>:
    225a:	2e 7f       	andi	r18, 0xFE	; 254
    225c:	fc 01       	movw	r30, r24
    225e:	20 83       	st	Z, r18

00002260 <.Loc.9>:

	ddr_ech_R &= ~(1<<pin_ech_R);
    2260:	87 e0       	ldi	r24, 0x07	; 7
    2262:	91 e0       	ldi	r25, 0x01	; 1
    2264:	fc 01       	movw	r30, r24
    2266:	20 81       	ld	r18, Z

00002268 <.Loc.10>:
    2268:	87 e0       	ldi	r24, 0x07	; 7
    226a:	91 e0       	ldi	r25, 0x01	; 1

0000226c <.Loc.11>:
    226c:	2d 7f       	andi	r18, 0xFD	; 253
    226e:	fc 01       	movw	r30, r24
    2270:	20 83       	st	Z, r18

00002272 <.Loc.12>:
	ddr_tri_R |= (1<<pin_tri_R);
    2272:	81 e2       	ldi	r24, 0x21	; 33
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	fc 01       	movw	r30, r24
    2278:	20 81       	ld	r18, Z
    227a:	81 e2       	ldi	r24, 0x21	; 33
    227c:	90 e0       	ldi	r25, 0x00	; 0

0000227e <.Loc.13>:
    227e:	20 61       	ori	r18, 0x10	; 16
    2280:	fc 01       	movw	r30, r24
    2282:	20 83       	st	Z, r18

00002284 <.Loc.14>:
    port_tri_R &= ~(1<<pin_tri_R);
    2284:	82 e2       	ldi	r24, 0x22	; 34
    2286:	90 e0       	ldi	r25, 0x00	; 0
    2288:	fc 01       	movw	r30, r24
    228a:	20 81       	ld	r18, Z

0000228c <.Loc.15>:
    228c:	82 e2       	ldi	r24, 0x22	; 34
    228e:	90 e0       	ldi	r25, 0x00	; 0

00002290 <.Loc.16>:
    2290:	2f 7e       	andi	r18, 0xEF	; 239
    2292:	fc 01       	movw	r30, r24
    2294:	20 83       	st	Z, r18

00002296 <.Loc.17>:

	ddr_ech_L &= ~(1<<pin_ech_L);
    2296:	87 e0       	ldi	r24, 0x07	; 7
    2298:	91 e0       	ldi	r25, 0x01	; 1
    229a:	fc 01       	movw	r30, r24
    229c:	20 81       	ld	r18, Z

0000229e <.Loc.18>:
    229e:	87 e0       	ldi	r24, 0x07	; 7
    22a0:	91 e0       	ldi	r25, 0x01	; 1

000022a2 <.Loc.19>:
    22a2:	2b 7f       	andi	r18, 0xFB	; 251
    22a4:	fc 01       	movw	r30, r24
    22a6:	20 83       	st	Z, r18

000022a8 <.Loc.20>:
	ddr_tri_L |= (1<<pin_tri_L);
    22a8:	81 e2       	ldi	r24, 0x21	; 33
    22aa:	90 e0       	ldi	r25, 0x00	; 0
    22ac:	fc 01       	movw	r30, r24
    22ae:	20 81       	ld	r18, Z
    22b0:	81 e2       	ldi	r24, 0x21	; 33
    22b2:	90 e0       	ldi	r25, 0x00	; 0

000022b4 <.Loc.21>:
    22b4:	24 60       	ori	r18, 0x04	; 4
    22b6:	fc 01       	movw	r30, r24
    22b8:	20 83       	st	Z, r18

000022ba <.Loc.22>:
    port_tri_L &= ~(1<<pin_tri_L);
    22ba:	82 e2       	ldi	r24, 0x22	; 34
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	fc 01       	movw	r30, r24
    22c0:	20 81       	ld	r18, Z

000022c2 <.Loc.23>:
    22c2:	82 e2       	ldi	r24, 0x22	; 34
    22c4:	90 e0       	ldi	r25, 0x00	; 0

000022c6 <.Loc.24>:
    22c6:	2b 7f       	andi	r18, 0xFB	; 251
    22c8:	fc 01       	movw	r30, r24
    22ca:	20 83       	st	Z, r18

000022cc <.Loc.25>:

    TCCR2A = 0;
    22cc:	80 eb       	ldi	r24, 0xB0	; 176
    22ce:	90 e0       	ldi	r25, 0x00	; 0

000022d0 <.Loc.26>:
    22d0:	fc 01       	movw	r30, r24
    22d2:	10 82       	st	Z, r1

000022d4 <.Loc.27>:
    TCCR2B |= (1<<CS20) ;
    22d4:	81 eb       	ldi	r24, 0xB1	; 177
    22d6:	90 e0       	ldi	r25, 0x00	; 0
    22d8:	fc 01       	movw	r30, r24
    22da:	20 81       	ld	r18, Z
    22dc:	81 eb       	ldi	r24, 0xB1	; 177
    22de:	90 e0       	ldi	r25, 0x00	; 0

000022e0 <.Loc.28>:
    22e0:	21 60       	ori	r18, 0x01	; 1
    22e2:	fc 01       	movw	r30, r24
    22e4:	20 83       	st	Z, r18

000022e6 <.Loc.29>:
    //16000000 / 256 = 62,500
    //1 / 62500 = 0.000016s
    //62500x/sec
    TIMSK2 = (1<<TOIE2);
    22e6:	80 e7       	ldi	r24, 0x70	; 112
    22e8:	90 e0       	ldi	r25, 0x00	; 0

000022ea <.Loc.30>:
    22ea:	21 e0       	ldi	r18, 0x01	; 1
    22ec:	fc 01       	movw	r30, r24
    22ee:	20 83       	st	Z, r18

000022f0 <.Loc.31>:
}
    22f0:	00 00       	nop
    22f2:	df 91       	pop	r29
    22f4:	cf 91       	pop	r28
    22f6:	08 95       	ret

000022f8 <GetDistanceFront>:

int GetDistanceFront(void){
    22f8:	cf 93       	push	r28
    22fa:	df 93       	push	r29
    22fc:	cd b7       	in	r28, 0x3d	; 61
    22fe:	de b7       	in	r29, 0x3e	; 62
    2300:	6e 97       	sbiw	r28, 0x1e	; 30
    2302:	0f b6       	in	r0, 0x3f	; 63
    2304:	f8 94       	cli
    2306:	de bf       	out	0x3e, r29	; 62
    2308:	0f be       	out	0x3f, r0	; 63
    230a:	cd bf       	out	0x3d, r28	; 61

0000230c <.Loc.33>:
    int Distance;
    TriggerPulseFront();
    230c:	0e 94 0a 12 	call	0x2414	; 0x2414 <TriggerPulseFront>

00002310 <.Loc.34>:
	...

00002312 <.L3>:
    while ((port_ech_F & (1<<pin_ech_F)) == 0){
    2312:	86 e0       	ldi	r24, 0x06	; 6
    2314:	91 e0       	ldi	r25, 0x01	; 1
    2316:	dc 01       	movw	r26, r24
    2318:	8c 91       	ld	r24, X

0000231a <.Loc.36>:
    231a:	88 2f       	mov	r24, r24
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	88 70       	andi	r24, 0x08	; 8
    2320:	99 27       	eor	r25, r25

00002322 <.Loc.37>:
    2322:	00 97       	sbiw	r24, 0x00	; 0
    2324:	b1 f3       	breq	.-20     	; 0x2312 <.L3>

00002326 <.Loc.38>:
    }
    TCNT2 = 0;
    2326:	82 eb       	ldi	r24, 0xB2	; 178
    2328:	90 e0       	ldi	r25, 0x00	; 0

0000232a <.Loc.39>:
    232a:	fc 01       	movw	r30, r24
    232c:	10 82       	st	Z, r1

0000232e <.Loc.40>:
    TIFR2 = 1<<TOV2;
    232e:	87 e3       	ldi	r24, 0x37	; 55
    2330:	90 e0       	ldi	r25, 0x00	; 0

00002332 <.Loc.41>:
    2332:	21 e0       	ldi	r18, 0x01	; 1
    2334:	dc 01       	movw	r26, r24
    2336:	2c 93       	st	X, r18

00002338 <.Loc.42>:
    count = 0;
    2338:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    233c:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002340 <.Loc.43>:
	...

00002342 <.L4>:
    while ((port_ech_F & (1<<pin_ech_F)) != 0){
    2342:	86 e0       	ldi	r24, 0x06	; 6
    2344:	91 e0       	ldi	r25, 0x01	; 1
    2346:	fc 01       	movw	r30, r24
    2348:	80 81       	ld	r24, Z

0000234a <.Loc.45>:
    234a:	88 2f       	mov	r24, r24
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	88 70       	andi	r24, 0x08	; 8
    2350:	99 27       	eor	r25, r25

00002352 <.Loc.46>:
    2352:	00 97       	sbiw	r24, 0x00	; 0
    2354:	b1 f7       	brne	.-20     	; 0x2342 <.L4>

00002356 <.Loc.47>:

    }
    Distance = count;
    2356:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    235a:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    235e:	9a 83       	std	Y+2, r25	; 0x02
    2360:	89 83       	std	Y+1, r24	; 0x01

00002362 <.Loc.48>:
    Distance = Distance * 0.008 * 343;
    2362:	89 81       	ldd	r24, Y+1	; 0x01
    2364:	9a 81       	ldd	r25, Y+2	; 0x02
    2366:	9c 01       	movw	r18, r24
    2368:	99 0f       	add	r25, r25
    236a:	44 0b       	sbc	r20, r20
    236c:	55 0b       	sbc	r21, r21
    236e:	2f 87       	std	Y+15, r18	; 0x0f
    2370:	38 8b       	std	Y+16, r19	; 0x10
    2372:	49 8b       	std	Y+17, r20	; 0x11
    2374:	5a 8b       	std	Y+18, r21	; 0x12
    2376:	6f 85       	ldd	r22, Y+15	; 0x0f
    2378:	78 89       	ldd	r23, Y+16	; 0x10
    237a:	89 89       	ldd	r24, Y+17	; 0x11
    237c:	9a 89       	ldd	r25, Y+18	; 0x12
    237e:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    2382:	6b 83       	std	Y+3, r22	; 0x03
    2384:	7c 83       	std	Y+4, r23	; 0x04
    2386:	8d 83       	std	Y+5, r24	; 0x05
    2388:	9e 83       	std	Y+6, r25	; 0x06
    238a:	2f e6       	ldi	r18, 0x6F	; 111
    238c:	32 e1       	ldi	r19, 0x12	; 18
    238e:	43 e0       	ldi	r20, 0x03	; 3
    2390:	5c e3       	ldi	r21, 0x3C	; 60
    2392:	6b 81       	ldd	r22, Y+3	; 0x03
    2394:	7c 81       	ldd	r23, Y+4	; 0x04
    2396:	8d 81       	ldd	r24, Y+5	; 0x05
    2398:	9e 81       	ldd	r25, Y+6	; 0x06
    239a:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    239e:	6b 8b       	std	Y+19, r22	; 0x13
    23a0:	7c 8b       	std	Y+20, r23	; 0x14
    23a2:	8d 8b       	std	Y+21, r24	; 0x15
    23a4:	9e 8b       	std	Y+22, r25	; 0x16
    23a6:	8b 89       	ldd	r24, Y+19	; 0x13
    23a8:	9c 89       	ldd	r25, Y+20	; 0x14
    23aa:	ad 89       	ldd	r26, Y+21	; 0x15
    23ac:	be 89       	ldd	r27, Y+22	; 0x16
    23ae:	8f 83       	std	Y+7, r24	; 0x07
    23b0:	98 87       	std	Y+8, r25	; 0x08
    23b2:	a9 87       	std	Y+9, r26	; 0x09
    23b4:	ba 87       	std	Y+10, r27	; 0x0a

000023b6 <.Loc.49>:
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e8       	ldi	r19, 0x80	; 128
    23ba:	4b ea       	ldi	r20, 0xAB	; 171
    23bc:	53 e4       	ldi	r21, 0x43	; 67
    23be:	6f 81       	ldd	r22, Y+7	; 0x07
    23c0:	78 85       	ldd	r23, Y+8	; 0x08
    23c2:	89 85       	ldd	r24, Y+9	; 0x09
    23c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    23c6:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    23ca:	6f 8b       	std	Y+23, r22	; 0x17
    23cc:	78 8f       	std	Y+24, r23	; 0x18
    23ce:	89 8f       	std	Y+25, r24	; 0x19
    23d0:	9a 8f       	std	Y+26, r25	; 0x1a
    23d2:	2f 89       	ldd	r18, Y+23	; 0x17
    23d4:	38 8d       	ldd	r19, Y+24	; 0x18
    23d6:	49 8d       	ldd	r20, Y+25	; 0x19
    23d8:	5a 8d       	ldd	r21, Y+26	; 0x1a
    23da:	2b 87       	std	Y+11, r18	; 0x0b
    23dc:	3c 87       	std	Y+12, r19	; 0x0c
    23de:	4d 87       	std	Y+13, r20	; 0x0d
    23e0:	5e 87       	std	Y+14, r21	; 0x0e

000023e2 <.Loc.50>:
    23e2:	6b 85       	ldd	r22, Y+11	; 0x0b
    23e4:	7c 85       	ldd	r23, Y+12	; 0x0c
    23e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    23e8:	9e 85       	ldd	r25, Y+14	; 0x0e
    23ea:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    23ee:	6b 8f       	std	Y+27, r22	; 0x1b
    23f0:	7c 8f       	std	Y+28, r23	; 0x1c
    23f2:	8d 8f       	std	Y+29, r24	; 0x1d
    23f4:	9e 8f       	std	Y+30, r25	; 0x1e
    23f6:	4b 8d       	ldd	r20, Y+27	; 0x1b
    23f8:	5c 8d       	ldd	r21, Y+28	; 0x1c
    23fa:	5a 83       	std	Y+2, r21	; 0x02
    23fc:	49 83       	std	Y+1, r20	; 0x01

000023fe <.Loc.51>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    23fe:	89 81       	ldd	r24, Y+1	; 0x01
    2400:	9a 81       	ldd	r25, Y+2	; 0x02

00002402 <.Loc.52>:
}
    2402:	6e 96       	adiw	r28, 0x1e	; 30
    2404:	0f b6       	in	r0, 0x3f	; 63
    2406:	f8 94       	cli
    2408:	de bf       	out	0x3e, r29	; 62
    240a:	0f be       	out	0x3f, r0	; 63
    240c:	cd bf       	out	0x3d, r28	; 61
    240e:	df 91       	pop	r29
    2410:	cf 91       	pop	r28
    2412:	08 95       	ret

00002414 <TriggerPulseFront>:
void TriggerPulseFront (void){
    2414:	cf 93       	push	r28
    2416:	df 93       	push	r29
    2418:	cd b7       	in	r28, 0x3d	; 61
    241a:	de b7       	in	r29, 0x3e	; 62
    241c:	c8 54       	subi	r28, 0x48	; 72
    241e:	d1 09       	sbc	r29, r1
    2420:	0f b6       	in	r0, 0x3f	; 63
    2422:	f8 94       	cli
    2424:	de bf       	out	0x3e, r29	; 62
    2426:	0f be       	out	0x3f, r0	; 63
    2428:	cd bf       	out	0x3d, r28	; 61

0000242a <.Loc.54>:
    port_tri_F |= (1<<pin_tri_F);
    242a:	82 e2       	ldi	r24, 0x22	; 34
    242c:	90 e0       	ldi	r25, 0x00	; 0
    242e:	dc 01       	movw	r26, r24
    2430:	2c 91       	ld	r18, X
    2432:	82 e2       	ldi	r24, 0x22	; 34
    2434:	90 e0       	ldi	r25, 0x00	; 0

00002436 <.Loc.55>:
    2436:	21 60       	ori	r18, 0x01	; 1
    2438:	fc 01       	movw	r30, r24
    243a:	20 83       	st	Z, r18
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	a0 e2       	ldi	r26, 0x20	; 32
    2442:	b1 e4       	ldi	r27, 0x41	; 65
    2444:	89 83       	std	Y+1, r24	; 0x01
    2446:	9a 83       	std	Y+2, r25	; 0x02
    2448:	ab 83       	std	Y+3, r26	; 0x03
    244a:	bc 83       	std	Y+4, r27	; 0x04

0000244c <.LBB56>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    244c:	2b ea       	ldi	r18, 0xAB	; 171
    244e:	3a ea       	ldi	r19, 0xAA	; 170
    2450:	4a ea       	ldi	r20, 0xAA	; 170
    2452:	50 e4       	ldi	r21, 0x40	; 64
    2454:	69 81       	ldd	r22, Y+1	; 0x01
    2456:	7a 81       	ldd	r23, Y+2	; 0x02
    2458:	8b 81       	ldd	r24, Y+3	; 0x03
    245a:	9c 81       	ldd	r25, Y+4	; 0x04
    245c:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2460:	6d a3       	std	Y+37, r22	; 0x25
    2462:	7e a3       	std	Y+38, r23	; 0x26
    2464:	8f a3       	std	Y+39, r24	; 0x27
    2466:	98 a7       	std	Y+40, r25	; 0x28
    2468:	8d a1       	ldd	r24, Y+37	; 0x25
    246a:	9e a1       	ldd	r25, Y+38	; 0x26
    246c:	af a1       	ldd	r26, Y+39	; 0x27
    246e:	b8 a5       	ldd	r27, Y+40	; 0x28
    2470:	8d 83       	std	Y+5, r24	; 0x05
    2472:	9e 83       	std	Y+6, r25	; 0x06
    2474:	af 83       	std	Y+7, r26	; 0x07
    2476:	b8 87       	std	Y+8, r27	; 0x08

00002478 <.Loc.57>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2478:	20 e0       	ldi	r18, 0x00	; 0
    247a:	30 e0       	ldi	r19, 0x00	; 0
    247c:	40 e8       	ldi	r20, 0x80	; 128
    247e:	50 e4       	ldi	r21, 0x40	; 64
    2480:	69 81       	ldd	r22, Y+1	; 0x01
    2482:	7a 81       	ldd	r23, Y+2	; 0x02
    2484:	8b 81       	ldd	r24, Y+3	; 0x03
    2486:	9c 81       	ldd	r25, Y+4	; 0x04
    2488:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    248c:	69 a7       	std	Y+41, r22	; 0x29
    248e:	7a a7       	std	Y+42, r23	; 0x2a
    2490:	8b a7       	std	Y+43, r24	; 0x2b
    2492:	9c a7       	std	Y+44, r25	; 0x2c
    2494:	89 a5       	ldd	r24, Y+41	; 0x29
    2496:	9a a5       	ldd	r25, Y+42	; 0x2a
    2498:	ab a5       	ldd	r26, Y+43	; 0x2b
    249a:	bc a5       	ldd	r27, Y+44	; 0x2c
    249c:	89 87       	std	Y+9, r24	; 0x09
    249e:	9a 87       	std	Y+10, r25	; 0x0a
    24a0:	ab 87       	std	Y+11, r26	; 0x0b
    24a2:	bc 87       	std	Y+12, r27	; 0x0c

000024a4 <.Loc.58>:
	if (__tmp < 1.0)
    24a4:	20 e0       	ldi	r18, 0x00	; 0
    24a6:	30 e0       	ldi	r19, 0x00	; 0
    24a8:	40 e8       	ldi	r20, 0x80	; 128
    24aa:	5f e3       	ldi	r21, 0x3F	; 63
    24ac:	6d 81       	ldd	r22, Y+5	; 0x05
    24ae:	7e 81       	ldd	r23, Y+6	; 0x06
    24b0:	8f 81       	ldd	r24, Y+7	; 0x07
    24b2:	98 85       	ldd	r25, Y+8	; 0x08
    24b4:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    24b8:	88 23       	and	r24, r24
    24ba:	1c f4       	brge	.+6      	; 0x24c2 <.L28>

000024bc <.Loc.59>:
		__ticks = 1;
    24bc:	81 e0       	ldi	r24, 0x01	; 1
    24be:	8d 87       	std	Y+13, r24	; 0x0d
    24c0:	e8 c0       	rjmp	.+464    	; 0x2692 <.L9>

000024c2 <.L28>:
	else if (__tmp2 > 65535)
    24c2:	20 e0       	ldi	r18, 0x00	; 0
    24c4:	3f ef       	ldi	r19, 0xFF	; 255
    24c6:	4f e7       	ldi	r20, 0x7F	; 127
    24c8:	57 e4       	ldi	r21, 0x47	; 71
    24ca:	69 85       	ldd	r22, Y+9	; 0x09
    24cc:	7a 85       	ldd	r23, Y+10	; 0x0a
    24ce:	8b 85       	ldd	r24, Y+11	; 0x0b
    24d0:	9c 85       	ldd	r25, Y+12	; 0x0c
    24d2:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    24d6:	88 23       	and	r24, r24
    24d8:	09 f0       	breq	.+2      	; 0x24dc <L0^A>

000024da <L0^A>:
    24da:	0c f4       	brge	.+2      	; 0x24de <.Loc.61>

000024dc <L0^A>:
    24dc:	9f c0       	rjmp	.+318    	; 0x261c <.L29>

000024de <.Loc.61>:
	{
		_delay_ms(__us / 1000.0);
    24de:	20 e0       	ldi	r18, 0x00	; 0
    24e0:	30 e0       	ldi	r19, 0x00	; 0
    24e2:	4a e7       	ldi	r20, 0x7A	; 122
    24e4:	54 e4       	ldi	r21, 0x44	; 68
    24e6:	69 81       	ldd	r22, Y+1	; 0x01
    24e8:	7a 81       	ldd	r23, Y+2	; 0x02
    24ea:	8b 81       	ldd	r24, Y+3	; 0x03
    24ec:	9c 81       	ldd	r25, Y+4	; 0x04
    24ee:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
    24f2:	6d a7       	std	Y+45, r22	; 0x2d
    24f4:	7e a7       	std	Y+46, r23	; 0x2e
    24f6:	8f a7       	std	Y+47, r24	; 0x2f
    24f8:	98 ab       	std	Y+48, r25	; 0x30
    24fa:	8d a5       	ldd	r24, Y+45	; 0x2d
    24fc:	9e a5       	ldd	r25, Y+46	; 0x2e
    24fe:	af a5       	ldd	r26, Y+47	; 0x2f
    2500:	b8 a9       	ldd	r27, Y+48	; 0x30
    2502:	8e 87       	std	Y+14, r24	; 0x0e
    2504:	9f 87       	std	Y+15, r25	; 0x0f
    2506:	a8 8b       	std	Y+16, r26	; 0x10
    2508:	b9 8b       	std	Y+17, r27	; 0x11

0000250a <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	4a e7       	ldi	r20, 0x7A	; 122
    2510:	55 e4       	ldi	r21, 0x45	; 69
    2512:	6e 85       	ldd	r22, Y+14	; 0x0e
    2514:	7f 85       	ldd	r23, Y+15	; 0x0f
    2516:	88 89       	ldd	r24, Y+16	; 0x10
    2518:	99 89       	ldd	r25, Y+17	; 0x11
    251a:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    251e:	69 ab       	std	Y+49, r22	; 0x31
    2520:	7a ab       	std	Y+50, r23	; 0x32
    2522:	8b ab       	std	Y+51, r24	; 0x33
    2524:	9c ab       	std	Y+52, r25	; 0x34
    2526:	89 a9       	ldd	r24, Y+49	; 0x31
    2528:	9a a9       	ldd	r25, Y+50	; 0x32
    252a:	ab a9       	ldd	r26, Y+51	; 0x33
    252c:	bc a9       	ldd	r27, Y+52	; 0x34
    252e:	8a 8b       	std	Y+18, r24	; 0x12
    2530:	9b 8b       	std	Y+19, r25	; 0x13
    2532:	ac 8b       	std	Y+20, r26	; 0x14
    2534:	bd 8b       	std	Y+21, r27	; 0x15

00002536 <.Loc.63>:
	if (__tmp < 1.0)
    2536:	20 e0       	ldi	r18, 0x00	; 0
    2538:	30 e0       	ldi	r19, 0x00	; 0
    253a:	40 e8       	ldi	r20, 0x80	; 128
    253c:	5f e3       	ldi	r21, 0x3F	; 63
    253e:	6a 89       	ldd	r22, Y+18	; 0x12
    2540:	7b 89       	ldd	r23, Y+19	; 0x13
    2542:	8c 89       	ldd	r24, Y+20	; 0x14
    2544:	9d 89       	ldd	r25, Y+21	; 0x15
    2546:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    254a:	88 23       	and	r24, r24
    254c:	2c f4       	brge	.+10     	; 0x2558 <.L30>

0000254e <.Loc.64>:
		__ticks = 1;
    254e:	81 e0       	ldi	r24, 0x01	; 1
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	9f 8b       	std	Y+23, r25	; 0x17
    2554:	8e 8b       	std	Y+22, r24	; 0x16
    2556:	57 c0       	rjmp	.+174    	; 0x2606 <.L14>

00002558 <.L30>:
	else if (__tmp > 65535)
    2558:	20 e0       	ldi	r18, 0x00	; 0
    255a:	3f ef       	ldi	r19, 0xFF	; 255
    255c:	4f e7       	ldi	r20, 0x7F	; 127
    255e:	57 e4       	ldi	r21, 0x47	; 71
    2560:	6a 89       	ldd	r22, Y+18	; 0x12
    2562:	7b 89       	ldd	r23, Y+19	; 0x13
    2564:	8c 89       	ldd	r24, Y+20	; 0x14
    2566:	9d 89       	ldd	r25, Y+21	; 0x15
    2568:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    256c:	88 23       	and	r24, r24
    256e:	d9 f1       	breq	.+118    	; 0x25e6 <.L31>
    2570:	d4 f1       	brlt	.+116    	; 0x25e6 <.L31>

00002572 <.Loc.66>:
		__ticks = (uint16_t) (__ms * 10.0);
    2572:	20 e0       	ldi	r18, 0x00	; 0
    2574:	30 e0       	ldi	r19, 0x00	; 0
    2576:	40 e2       	ldi	r20, 0x20	; 32
    2578:	51 e4       	ldi	r21, 0x41	; 65
    257a:	6e 85       	ldd	r22, Y+14	; 0x0e
    257c:	7f 85       	ldd	r23, Y+15	; 0x0f
    257e:	88 89       	ldd	r24, Y+16	; 0x10
    2580:	99 89       	ldd	r25, Y+17	; 0x11
    2582:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2586:	6d ab       	std	Y+53, r22	; 0x35
    2588:	7e ab       	std	Y+54, r23	; 0x36
    258a:	8f ab       	std	Y+55, r24	; 0x37
    258c:	98 af       	std	Y+56, r25	; 0x38
    258e:	8d a9       	ldd	r24, Y+53	; 0x35
    2590:	9e a9       	ldd	r25, Y+54	; 0x36
    2592:	af a9       	ldd	r26, Y+55	; 0x37
    2594:	b8 ad       	ldd	r27, Y+56	; 0x38
    2596:	89 a3       	std	Y+33, r24	; 0x21
    2598:	9a a3       	std	Y+34, r25	; 0x22
    259a:	ab a3       	std	Y+35, r26	; 0x23
    259c:	bc a3       	std	Y+36, r27	; 0x24

0000259e <.Loc.67>:
    259e:	69 a1       	ldd	r22, Y+33	; 0x21
    25a0:	7a a1       	ldd	r23, Y+34	; 0x22
    25a2:	8b a1       	ldd	r24, Y+35	; 0x23
    25a4:	9c a1       	ldd	r25, Y+36	; 0x24
    25a6:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    25aa:	69 af       	std	Y+57, r22	; 0x39
    25ac:	7a af       	std	Y+58, r23	; 0x3a
    25ae:	8b af       	std	Y+59, r24	; 0x3b
    25b0:	9c af       	std	Y+60, r25	; 0x3c
    25b2:	a9 ad       	ldd	r26, Y+57	; 0x39
    25b4:	ba ad       	ldd	r27, Y+58	; 0x3a
    25b6:	bf 8b       	std	Y+23, r27	; 0x17
    25b8:	ae 8b       	std	Y+22, r26	; 0x16

000025ba <.Loc.68>:
		while(__ticks)
    25ba:	10 c0       	rjmp	.+32     	; 0x25dc <.L17>

000025bc <.L18>:
    25bc:	80 e9       	ldi	r24, 0x90	; 144
    25be:	91 e0       	ldi	r25, 0x01	; 1
    25c0:	99 8f       	std	Y+25, r25	; 0x19
    25c2:	88 8f       	std	Y+24, r24	; 0x18

000025c4 <.LBB60>:
    25c4:	88 8d       	ldd	r24, Y+24	; 0x18
    25c6:	99 8d       	ldd	r25, Y+25	; 0x19

000025c8 <.L1^B1>:
    25c8:	01 97       	sbiw	r24, 0x01	; 1
    25ca:	f1 f7       	brne	.-4      	; 0x25c8 <.L1^B1>
    25cc:	99 8f       	std	Y+25, r25	; 0x19
    25ce:	88 8f       	std	Y+24, r24	; 0x18

000025d0 <.Loc.70>:
	...

000025d2 <.LBE60>:
			__ticks --;
    25d2:	8e 89       	ldd	r24, Y+22	; 0x16
    25d4:	9f 89       	ldd	r25, Y+23	; 0x17
    25d6:	01 97       	sbiw	r24, 0x01	; 1
    25d8:	9f 8b       	std	Y+23, r25	; 0x17
    25da:	8e 8b       	std	Y+22, r24	; 0x16

000025dc <.L17>:
		while(__ticks)
    25dc:	8e 89       	ldd	r24, Y+22	; 0x16
    25de:	9f 89       	ldd	r25, Y+23	; 0x17
    25e0:	00 97       	sbiw	r24, 0x00	; 0
    25e2:	61 f7       	brne	.-40     	; 0x25bc <.L18>

000025e4 <.Loc.73>:
		return;
    25e4:	56 c0       	rjmp	.+172    	; 0x2692 <.L9>

000025e6 <.L31>:
		__ticks = (uint16_t)__tmp;
    25e6:	6a 89       	ldd	r22, Y+18	; 0x12
    25e8:	7b 89       	ldd	r23, Y+19	; 0x13
    25ea:	8c 89       	ldd	r24, Y+20	; 0x14
    25ec:	9d 89       	ldd	r25, Y+21	; 0x15
    25ee:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    25f2:	21 96       	adiw	r28, 0x01	; 1
    25f4:	6c af       	std	Y+60, r22	; 0x3c
    25f6:	7d af       	std	Y+61, r23	; 0x3d
    25f8:	8e af       	std	Y+62, r24	; 0x3e
    25fa:	9f af       	std	Y+63, r25	; 0x3f
    25fc:	21 97       	sbiw	r28, 0x01	; 1
    25fe:	ed ad       	ldd	r30, Y+61	; 0x3d
    2600:	fe ad       	ldd	r31, Y+62	; 0x3e
    2602:	ff 8b       	std	Y+23, r31	; 0x17
    2604:	ee 8b       	std	Y+22, r30	; 0x16

00002606 <.L14>:
    2606:	8e 89       	ldd	r24, Y+22	; 0x16
    2608:	9f 89       	ldd	r25, Y+23	; 0x17
    260a:	9b 8f       	std	Y+27, r25	; 0x1b
    260c:	8a 8f       	std	Y+26, r24	; 0x1a

0000260e <.LBB62>:
    260e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2610:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002612 <.L1^B2>:
    2612:	01 97       	sbiw	r24, 0x01	; 1
    2614:	f1 f7       	brne	.-4      	; 0x2612 <.L1^B2>
    2616:	9b 8f       	std	Y+27, r25	; 0x1b
    2618:	8a 8f       	std	Y+26, r24	; 0x1a

0000261a <.Loc.76>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    261a:	3b c0       	rjmp	.+118    	; 0x2692 <.L9>

0000261c <.L29>:
	}
	else if (__tmp > 255)
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	4f e7       	ldi	r20, 0x7F	; 127
    2622:	53 e4       	ldi	r21, 0x43	; 67
    2624:	6d 81       	ldd	r22, Y+5	; 0x05
    2626:	7e 81       	ldd	r23, Y+6	; 0x06
    2628:	8f 81       	ldd	r24, Y+7	; 0x07
    262a:	98 85       	ldd	r25, Y+8	; 0x08
    262c:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    2630:	88 23       	and	r24, r24
    2632:	f9 f0       	breq	.+62     	; 0x2672 <.L32>
    2634:	f4 f0       	brlt	.+60     	; 0x2672 <.L32>

00002636 <.LBB64>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    2636:	69 85       	ldd	r22, Y+9	; 0x09
    2638:	7a 85       	ldd	r23, Y+10	; 0x0a
    263a:	8b 85       	ldd	r24, Y+11	; 0x0b
    263c:	9c 85       	ldd	r25, Y+12	; 0x0c
    263e:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2642:	25 96       	adiw	r28, 0x05	; 5
    2644:	6c af       	std	Y+60, r22	; 0x3c
    2646:	7d af       	std	Y+61, r23	; 0x3d
    2648:	8e af       	std	Y+62, r24	; 0x3e
    264a:	9f af       	std	Y+63, r25	; 0x3f
    264c:	25 97       	sbiw	r28, 0x05	; 5
    264e:	23 96       	adiw	r28, 0x03	; 3
    2650:	8e ad       	ldd	r24, Y+62	; 0x3e
    2652:	9f ad       	ldd	r25, Y+63	; 0x3f
    2654:	23 97       	sbiw	r28, 0x03	; 3
    2656:	9d 8f       	std	Y+29, r25	; 0x1d
    2658:	8c 8f       	std	Y+28, r24	; 0x1c
    265a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    265c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    265e:	9f 8f       	std	Y+31, r25	; 0x1f
    2660:	8e 8f       	std	Y+30, r24	; 0x1e

00002662 <.LBB65>:
	__asm__ volatile (
    2662:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2664:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002666 <.L1^B3>:
    2666:	01 97       	sbiw	r24, 0x01	; 1
    2668:	f1 f7       	brne	.-4      	; 0x2666 <.L1^B3>
    266a:	9f 8f       	std	Y+31, r25	; 0x1f
    266c:	8e 8f       	std	Y+30, r24	; 0x1e

0000266e <.Loc.80>:
	...

00002670 <.LBE65>:
		_delay_loop_2(__ticks);
		return;
    2670:	17 c0       	rjmp	.+46     	; 0x26a0 <.L22>

00002672 <.L32>:
	}
	else
		__ticks = (uint8_t)__tmp;
    2672:	6d 81       	ldd	r22, Y+5	; 0x05
    2674:	7e 81       	ldd	r23, Y+6	; 0x06
    2676:	8f 81       	ldd	r24, Y+7	; 0x07
    2678:	98 85       	ldd	r25, Y+8	; 0x08
    267a:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    267e:	29 96       	adiw	r28, 0x09	; 9
    2680:	6c af       	std	Y+60, r22	; 0x3c
    2682:	7d af       	std	Y+61, r23	; 0x3d
    2684:	8e af       	std	Y+62, r24	; 0x3e
    2686:	9f af       	std	Y+63, r25	; 0x3f
    2688:	29 97       	sbiw	r28, 0x09	; 9
    268a:	26 96       	adiw	r28, 0x06	; 6
    268c:	9f ad       	ldd	r25, Y+63	; 0x3f
    268e:	26 97       	sbiw	r28, 0x06	; 6
    2690:	9d 87       	std	Y+13, r25	; 0x0d

00002692 <.L9>:
    2692:	8d 85       	ldd	r24, Y+13	; 0x0d
    2694:	88 a3       	std	Y+32, r24	; 0x20

00002696 <.LBB67>:
	__asm__ volatile (
    2696:	88 a1       	ldd	r24, Y+32	; 0x20

00002698 <.L1^B4>:
    2698:	8a 95       	dec	r24
    269a:	f1 f7       	brne	.-4      	; 0x2698 <.L1^B4>
    269c:	88 a3       	std	Y+32, r24	; 0x20

0000269e <.Loc.84>:
	...

000026a0 <.L22>:
    _delay_us(10);
    port_tri_F &= (~(1<<pin_tri_F));
    26a0:	82 e2       	ldi	r24, 0x22	; 34
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	dc 01       	movw	r26, r24
    26a6:	2c 91       	ld	r18, X

000026a8 <.Loc.86>:
    26a8:	82 e2       	ldi	r24, 0x22	; 34
    26aa:	90 e0       	ldi	r25, 0x00	; 0

000026ac <.Loc.87>:
    26ac:	2e 7f       	andi	r18, 0xFE	; 254
    26ae:	fc 01       	movw	r30, r24
    26b0:	20 83       	st	Z, r18

000026b2 <.Loc.88>:
}
    26b2:	00 00       	nop
    26b4:	c8 5b       	subi	r28, 0xB8	; 184
    26b6:	df 4f       	sbci	r29, 0xFF	; 255
    26b8:	0f b6       	in	r0, 0x3f	; 63
    26ba:	f8 94       	cli
    26bc:	de bf       	out	0x3e, r29	; 62
    26be:	0f be       	out	0x3f, r0	; 63
    26c0:	cd bf       	out	0x3d, r28	; 61
    26c2:	df 91       	pop	r29
    26c4:	cf 91       	pop	r28
    26c6:	08 95       	ret

000026c8 <GetDistanceLeft>:

int GetDistanceLeft(void){
    26c8:	cf 93       	push	r28
    26ca:	df 93       	push	r29
    26cc:	cd b7       	in	r28, 0x3d	; 61
    26ce:	de b7       	in	r29, 0x3e	; 62
    26d0:	6e 97       	sbiw	r28, 0x1e	; 30
    26d2:	0f b6       	in	r0, 0x3f	; 63
    26d4:	f8 94       	cli
    26d6:	de bf       	out	0x3e, r29	; 62
    26d8:	0f be       	out	0x3f, r0	; 63
    26da:	cd bf       	out	0x3d, r28	; 61

000026dc <.Loc.90>:
    int Distance;
    TriggerPulseLeft();
    26dc:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <TriggerPulseLeft>

000026e0 <.Loc.91>:
	...

000026e2 <.L34>:
    while ((port_ech_L & (1<<pin_ech_L)) == 0){
    26e2:	86 e0       	ldi	r24, 0x06	; 6
    26e4:	91 e0       	ldi	r25, 0x01	; 1
    26e6:	dc 01       	movw	r26, r24
    26e8:	8c 91       	ld	r24, X

000026ea <.Loc.93>:
    26ea:	88 2f       	mov	r24, r24
    26ec:	90 e0       	ldi	r25, 0x00	; 0
    26ee:	84 70       	andi	r24, 0x04	; 4
    26f0:	99 27       	eor	r25, r25

000026f2 <.Loc.94>:
    26f2:	00 97       	sbiw	r24, 0x00	; 0
    26f4:	b1 f3       	breq	.-20     	; 0x26e2 <.L34>

000026f6 <.Loc.95>:
    }
    TCNT2 = 0;
    26f6:	82 eb       	ldi	r24, 0xB2	; 178
    26f8:	90 e0       	ldi	r25, 0x00	; 0

000026fa <.Loc.96>:
    26fa:	fc 01       	movw	r30, r24
    26fc:	10 82       	st	Z, r1

000026fe <.Loc.97>:
    TIFR2 = 1<<TOV2;
    26fe:	87 e3       	ldi	r24, 0x37	; 55
    2700:	90 e0       	ldi	r25, 0x00	; 0

00002702 <.Loc.98>:
    2702:	21 e0       	ldi	r18, 0x01	; 1
    2704:	dc 01       	movw	r26, r24
    2706:	2c 93       	st	X, r18

00002708 <.Loc.99>:
    count = 0;
    2708:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    270c:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002710 <.Loc.100>:
	...

00002712 <.L35>:
    while ((port_ech_L & (1<<pin_ech_L)) != 0){
    2712:	86 e0       	ldi	r24, 0x06	; 6
    2714:	91 e0       	ldi	r25, 0x01	; 1
    2716:	fc 01       	movw	r30, r24
    2718:	80 81       	ld	r24, Z

0000271a <.Loc.102>:
    271a:	88 2f       	mov	r24, r24
    271c:	90 e0       	ldi	r25, 0x00	; 0
    271e:	84 70       	andi	r24, 0x04	; 4
    2720:	99 27       	eor	r25, r25

00002722 <.Loc.103>:
    2722:	00 97       	sbiw	r24, 0x00	; 0
    2724:	b1 f7       	brne	.-20     	; 0x2712 <.L35>

00002726 <.Loc.104>:

    }
    Distance = count;
    2726:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    272a:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    272e:	9a 83       	std	Y+2, r25	; 0x02
    2730:	89 83       	std	Y+1, r24	; 0x01

00002732 <.Loc.105>:
    Distance = Distance * 0.008 * 343;
    2732:	89 81       	ldd	r24, Y+1	; 0x01
    2734:	9a 81       	ldd	r25, Y+2	; 0x02
    2736:	9c 01       	movw	r18, r24
    2738:	99 0f       	add	r25, r25
    273a:	44 0b       	sbc	r20, r20
    273c:	55 0b       	sbc	r21, r21
    273e:	2f 87       	std	Y+15, r18	; 0x0f
    2740:	38 8b       	std	Y+16, r19	; 0x10
    2742:	49 8b       	std	Y+17, r20	; 0x11
    2744:	5a 8b       	std	Y+18, r21	; 0x12
    2746:	6f 85       	ldd	r22, Y+15	; 0x0f
    2748:	78 89       	ldd	r23, Y+16	; 0x10
    274a:	89 89       	ldd	r24, Y+17	; 0x11
    274c:	9a 89       	ldd	r25, Y+18	; 0x12
    274e:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    2752:	6b 83       	std	Y+3, r22	; 0x03
    2754:	7c 83       	std	Y+4, r23	; 0x04
    2756:	8d 83       	std	Y+5, r24	; 0x05
    2758:	9e 83       	std	Y+6, r25	; 0x06
    275a:	2f e6       	ldi	r18, 0x6F	; 111
    275c:	32 e1       	ldi	r19, 0x12	; 18
    275e:	43 e0       	ldi	r20, 0x03	; 3
    2760:	5c e3       	ldi	r21, 0x3C	; 60
    2762:	6b 81       	ldd	r22, Y+3	; 0x03
    2764:	7c 81       	ldd	r23, Y+4	; 0x04
    2766:	8d 81       	ldd	r24, Y+5	; 0x05
    2768:	9e 81       	ldd	r25, Y+6	; 0x06
    276a:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    276e:	6b 8b       	std	Y+19, r22	; 0x13
    2770:	7c 8b       	std	Y+20, r23	; 0x14
    2772:	8d 8b       	std	Y+21, r24	; 0x15
    2774:	9e 8b       	std	Y+22, r25	; 0x16
    2776:	8b 89       	ldd	r24, Y+19	; 0x13
    2778:	9c 89       	ldd	r25, Y+20	; 0x14
    277a:	ad 89       	ldd	r26, Y+21	; 0x15
    277c:	be 89       	ldd	r27, Y+22	; 0x16
    277e:	8f 83       	std	Y+7, r24	; 0x07
    2780:	98 87       	std	Y+8, r25	; 0x08
    2782:	a9 87       	std	Y+9, r26	; 0x09
    2784:	ba 87       	std	Y+10, r27	; 0x0a

00002786 <.Loc.106>:
    2786:	20 e0       	ldi	r18, 0x00	; 0
    2788:	30 e8       	ldi	r19, 0x80	; 128
    278a:	4b ea       	ldi	r20, 0xAB	; 171
    278c:	53 e4       	ldi	r21, 0x43	; 67
    278e:	6f 81       	ldd	r22, Y+7	; 0x07
    2790:	78 85       	ldd	r23, Y+8	; 0x08
    2792:	89 85       	ldd	r24, Y+9	; 0x09
    2794:	9a 85       	ldd	r25, Y+10	; 0x0a
    2796:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    279a:	6f 8b       	std	Y+23, r22	; 0x17
    279c:	78 8f       	std	Y+24, r23	; 0x18
    279e:	89 8f       	std	Y+25, r24	; 0x19
    27a0:	9a 8f       	std	Y+26, r25	; 0x1a
    27a2:	2f 89       	ldd	r18, Y+23	; 0x17
    27a4:	38 8d       	ldd	r19, Y+24	; 0x18
    27a6:	49 8d       	ldd	r20, Y+25	; 0x19
    27a8:	5a 8d       	ldd	r21, Y+26	; 0x1a
    27aa:	2b 87       	std	Y+11, r18	; 0x0b
    27ac:	3c 87       	std	Y+12, r19	; 0x0c
    27ae:	4d 87       	std	Y+13, r20	; 0x0d
    27b0:	5e 87       	std	Y+14, r21	; 0x0e

000027b2 <.Loc.107>:
    27b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    27b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    27b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    27b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    27ba:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    27be:	6b 8f       	std	Y+27, r22	; 0x1b
    27c0:	7c 8f       	std	Y+28, r23	; 0x1c
    27c2:	8d 8f       	std	Y+29, r24	; 0x1d
    27c4:	9e 8f       	std	Y+30, r25	; 0x1e
    27c6:	4b 8d       	ldd	r20, Y+27	; 0x1b
    27c8:	5c 8d       	ldd	r21, Y+28	; 0x1c
    27ca:	5a 83       	std	Y+2, r21	; 0x02
    27cc:	49 83       	std	Y+1, r20	; 0x01

000027ce <.Loc.108>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    27ce:	89 81       	ldd	r24, Y+1	; 0x01
    27d0:	9a 81       	ldd	r25, Y+2	; 0x02

000027d2 <.Loc.109>:
}
    27d2:	6e 96       	adiw	r28, 0x1e	; 30
    27d4:	0f b6       	in	r0, 0x3f	; 63
    27d6:	f8 94       	cli
    27d8:	de bf       	out	0x3e, r29	; 62
    27da:	0f be       	out	0x3f, r0	; 63
    27dc:	cd bf       	out	0x3d, r28	; 61
    27de:	df 91       	pop	r29
    27e0:	cf 91       	pop	r28
    27e2:	08 95       	ret

000027e4 <TriggerPulseLeft>:
void TriggerPulseLeft (void){
    27e4:	cf 93       	push	r28
    27e6:	df 93       	push	r29
    27e8:	cd b7       	in	r28, 0x3d	; 61
    27ea:	de b7       	in	r29, 0x3e	; 62
    27ec:	c8 54       	subi	r28, 0x48	; 72
    27ee:	d1 09       	sbc	r29, r1
    27f0:	0f b6       	in	r0, 0x3f	; 63
    27f2:	f8 94       	cli
    27f4:	de bf       	out	0x3e, r29	; 62
    27f6:	0f be       	out	0x3f, r0	; 63
    27f8:	cd bf       	out	0x3d, r28	; 61

000027fa <.Loc.111>:
    port_tri_L |= (1<<pin_tri_L);
    27fa:	82 e2       	ldi	r24, 0x22	; 34
    27fc:	90 e0       	ldi	r25, 0x00	; 0
    27fe:	dc 01       	movw	r26, r24
    2800:	2c 91       	ld	r18, X
    2802:	82 e2       	ldi	r24, 0x22	; 34
    2804:	90 e0       	ldi	r25, 0x00	; 0

00002806 <.Loc.112>:
    2806:	24 60       	ori	r18, 0x04	; 4
    2808:	fc 01       	movw	r30, r24
    280a:	20 83       	st	Z, r18
    280c:	80 e0       	ldi	r24, 0x00	; 0
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	a0 e2       	ldi	r26, 0x20	; 32
    2812:	b1 e4       	ldi	r27, 0x41	; 65
    2814:	89 83       	std	Y+1, r24	; 0x01
    2816:	9a 83       	std	Y+2, r25	; 0x02
    2818:	ab 83       	std	Y+3, r26	; 0x03
    281a:	bc 83       	std	Y+4, r27	; 0x04

0000281c <.LBB69>:
	__tmp = ((F_CPU) / 3e6) * __us;
    281c:	2b ea       	ldi	r18, 0xAB	; 171
    281e:	3a ea       	ldi	r19, 0xAA	; 170
    2820:	4a ea       	ldi	r20, 0xAA	; 170
    2822:	50 e4       	ldi	r21, 0x40	; 64
    2824:	69 81       	ldd	r22, Y+1	; 0x01
    2826:	7a 81       	ldd	r23, Y+2	; 0x02
    2828:	8b 81       	ldd	r24, Y+3	; 0x03
    282a:	9c 81       	ldd	r25, Y+4	; 0x04
    282c:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2830:	6d a3       	std	Y+37, r22	; 0x25
    2832:	7e a3       	std	Y+38, r23	; 0x26
    2834:	8f a3       	std	Y+39, r24	; 0x27
    2836:	98 a7       	std	Y+40, r25	; 0x28
    2838:	8d a1       	ldd	r24, Y+37	; 0x25
    283a:	9e a1       	ldd	r25, Y+38	; 0x26
    283c:	af a1       	ldd	r26, Y+39	; 0x27
    283e:	b8 a5       	ldd	r27, Y+40	; 0x28
    2840:	8d 83       	std	Y+5, r24	; 0x05
    2842:	9e 83       	std	Y+6, r25	; 0x06
    2844:	af 83       	std	Y+7, r26	; 0x07
    2846:	b8 87       	std	Y+8, r27	; 0x08

00002848 <.Loc.114>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2848:	20 e0       	ldi	r18, 0x00	; 0
    284a:	30 e0       	ldi	r19, 0x00	; 0
    284c:	40 e8       	ldi	r20, 0x80	; 128
    284e:	50 e4       	ldi	r21, 0x40	; 64
    2850:	69 81       	ldd	r22, Y+1	; 0x01
    2852:	7a 81       	ldd	r23, Y+2	; 0x02
    2854:	8b 81       	ldd	r24, Y+3	; 0x03
    2856:	9c 81       	ldd	r25, Y+4	; 0x04
    2858:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    285c:	69 a7       	std	Y+41, r22	; 0x29
    285e:	7a a7       	std	Y+42, r23	; 0x2a
    2860:	8b a7       	std	Y+43, r24	; 0x2b
    2862:	9c a7       	std	Y+44, r25	; 0x2c
    2864:	89 a5       	ldd	r24, Y+41	; 0x29
    2866:	9a a5       	ldd	r25, Y+42	; 0x2a
    2868:	ab a5       	ldd	r26, Y+43	; 0x2b
    286a:	bc a5       	ldd	r27, Y+44	; 0x2c
    286c:	89 87       	std	Y+9, r24	; 0x09
    286e:	9a 87       	std	Y+10, r25	; 0x0a
    2870:	ab 87       	std	Y+11, r26	; 0x0b
    2872:	bc 87       	std	Y+12, r27	; 0x0c

00002874 <.Loc.115>:
	if (__tmp < 1.0)
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	40 e8       	ldi	r20, 0x80	; 128
    287a:	5f e3       	ldi	r21, 0x3F	; 63
    287c:	6d 81       	ldd	r22, Y+5	; 0x05
    287e:	7e 81       	ldd	r23, Y+6	; 0x06
    2880:	8f 81       	ldd	r24, Y+7	; 0x07
    2882:	98 85       	ldd	r25, Y+8	; 0x08
    2884:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    2888:	88 23       	and	r24, r24
    288a:	1c f4       	brge	.+6      	; 0x2892 <.L59>

0000288c <.Loc.116>:
		__ticks = 1;
    288c:	81 e0       	ldi	r24, 0x01	; 1
    288e:	8d 87       	std	Y+13, r24	; 0x0d
    2890:	e8 c0       	rjmp	.+464    	; 0x2a62 <.L40>

00002892 <.L59>:
	else if (__tmp2 > 65535)
    2892:	20 e0       	ldi	r18, 0x00	; 0
    2894:	3f ef       	ldi	r19, 0xFF	; 255
    2896:	4f e7       	ldi	r20, 0x7F	; 127
    2898:	57 e4       	ldi	r21, 0x47	; 71
    289a:	69 85       	ldd	r22, Y+9	; 0x09
    289c:	7a 85       	ldd	r23, Y+10	; 0x0a
    289e:	8b 85       	ldd	r24, Y+11	; 0x0b
    28a0:	9c 85       	ldd	r25, Y+12	; 0x0c
    28a2:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    28a6:	88 23       	and	r24, r24
    28a8:	09 f0       	breq	.+2      	; 0x28ac <L0^A>

000028aa <L0^A>:
    28aa:	0c f4       	brge	.+2      	; 0x28ae <.Loc.118>

000028ac <L0^A>:
    28ac:	9f c0       	rjmp	.+318    	; 0x29ec <.L60>

000028ae <.Loc.118>:
		_delay_ms(__us / 1000.0);
    28ae:	20 e0       	ldi	r18, 0x00	; 0
    28b0:	30 e0       	ldi	r19, 0x00	; 0
    28b2:	4a e7       	ldi	r20, 0x7A	; 122
    28b4:	54 e4       	ldi	r21, 0x44	; 68
    28b6:	69 81       	ldd	r22, Y+1	; 0x01
    28b8:	7a 81       	ldd	r23, Y+2	; 0x02
    28ba:	8b 81       	ldd	r24, Y+3	; 0x03
    28bc:	9c 81       	ldd	r25, Y+4	; 0x04
    28be:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
    28c2:	6d a7       	std	Y+45, r22	; 0x2d
    28c4:	7e a7       	std	Y+46, r23	; 0x2e
    28c6:	8f a7       	std	Y+47, r24	; 0x2f
    28c8:	98 ab       	std	Y+48, r25	; 0x30
    28ca:	8d a5       	ldd	r24, Y+45	; 0x2d
    28cc:	9e a5       	ldd	r25, Y+46	; 0x2e
    28ce:	af a5       	ldd	r26, Y+47	; 0x2f
    28d0:	b8 a9       	ldd	r27, Y+48	; 0x30
    28d2:	8e 87       	std	Y+14, r24	; 0x0e
    28d4:	9f 87       	std	Y+15, r25	; 0x0f
    28d6:	a8 8b       	std	Y+16, r26	; 0x10
    28d8:	b9 8b       	std	Y+17, r27	; 0x11

000028da <.LBB71>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    28da:	20 e0       	ldi	r18, 0x00	; 0
    28dc:	30 e0       	ldi	r19, 0x00	; 0
    28de:	4a e7       	ldi	r20, 0x7A	; 122
    28e0:	55 e4       	ldi	r21, 0x45	; 69
    28e2:	6e 85       	ldd	r22, Y+14	; 0x0e
    28e4:	7f 85       	ldd	r23, Y+15	; 0x0f
    28e6:	88 89       	ldd	r24, Y+16	; 0x10
    28e8:	99 89       	ldd	r25, Y+17	; 0x11
    28ea:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    28ee:	69 ab       	std	Y+49, r22	; 0x31
    28f0:	7a ab       	std	Y+50, r23	; 0x32
    28f2:	8b ab       	std	Y+51, r24	; 0x33
    28f4:	9c ab       	std	Y+52, r25	; 0x34
    28f6:	89 a9       	ldd	r24, Y+49	; 0x31
    28f8:	9a a9       	ldd	r25, Y+50	; 0x32
    28fa:	ab a9       	ldd	r26, Y+51	; 0x33
    28fc:	bc a9       	ldd	r27, Y+52	; 0x34
    28fe:	8a 8b       	std	Y+18, r24	; 0x12
    2900:	9b 8b       	std	Y+19, r25	; 0x13
    2902:	ac 8b       	std	Y+20, r26	; 0x14
    2904:	bd 8b       	std	Y+21, r27	; 0x15

00002906 <.Loc.120>:
	if (__tmp < 1.0)
    2906:	20 e0       	ldi	r18, 0x00	; 0
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	40 e8       	ldi	r20, 0x80	; 128
    290c:	5f e3       	ldi	r21, 0x3F	; 63
    290e:	6a 89       	ldd	r22, Y+18	; 0x12
    2910:	7b 89       	ldd	r23, Y+19	; 0x13
    2912:	8c 89       	ldd	r24, Y+20	; 0x14
    2914:	9d 89       	ldd	r25, Y+21	; 0x15
    2916:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    291a:	88 23       	and	r24, r24
    291c:	2c f4       	brge	.+10     	; 0x2928 <.L61>

0000291e <.Loc.121>:
		__ticks = 1;
    291e:	81 e0       	ldi	r24, 0x01	; 1
    2920:	90 e0       	ldi	r25, 0x00	; 0
    2922:	9f 8b       	std	Y+23, r25	; 0x17
    2924:	8e 8b       	std	Y+22, r24	; 0x16
    2926:	57 c0       	rjmp	.+174    	; 0x29d6 <.L45>

00002928 <.L61>:
	else if (__tmp > 65535)
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	3f ef       	ldi	r19, 0xFF	; 255
    292c:	4f e7       	ldi	r20, 0x7F	; 127
    292e:	57 e4       	ldi	r21, 0x47	; 71
    2930:	6a 89       	ldd	r22, Y+18	; 0x12
    2932:	7b 89       	ldd	r23, Y+19	; 0x13
    2934:	8c 89       	ldd	r24, Y+20	; 0x14
    2936:	9d 89       	ldd	r25, Y+21	; 0x15
    2938:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    293c:	88 23       	and	r24, r24
    293e:	d9 f1       	breq	.+118    	; 0x29b6 <.L62>
    2940:	d4 f1       	brlt	.+116    	; 0x29b6 <.L62>

00002942 <.Loc.123>:
		__ticks = (uint16_t) (__ms * 10.0);
    2942:	20 e0       	ldi	r18, 0x00	; 0
    2944:	30 e0       	ldi	r19, 0x00	; 0
    2946:	40 e2       	ldi	r20, 0x20	; 32
    2948:	51 e4       	ldi	r21, 0x41	; 65
    294a:	6e 85       	ldd	r22, Y+14	; 0x0e
    294c:	7f 85       	ldd	r23, Y+15	; 0x0f
    294e:	88 89       	ldd	r24, Y+16	; 0x10
    2950:	99 89       	ldd	r25, Y+17	; 0x11
    2952:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2956:	6d ab       	std	Y+53, r22	; 0x35
    2958:	7e ab       	std	Y+54, r23	; 0x36
    295a:	8f ab       	std	Y+55, r24	; 0x37
    295c:	98 af       	std	Y+56, r25	; 0x38
    295e:	8d a9       	ldd	r24, Y+53	; 0x35
    2960:	9e a9       	ldd	r25, Y+54	; 0x36
    2962:	af a9       	ldd	r26, Y+55	; 0x37
    2964:	b8 ad       	ldd	r27, Y+56	; 0x38
    2966:	89 a3       	std	Y+33, r24	; 0x21
    2968:	9a a3       	std	Y+34, r25	; 0x22
    296a:	ab a3       	std	Y+35, r26	; 0x23
    296c:	bc a3       	std	Y+36, r27	; 0x24

0000296e <.Loc.124>:
    296e:	69 a1       	ldd	r22, Y+33	; 0x21
    2970:	7a a1       	ldd	r23, Y+34	; 0x22
    2972:	8b a1       	ldd	r24, Y+35	; 0x23
    2974:	9c a1       	ldd	r25, Y+36	; 0x24
    2976:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    297a:	69 af       	std	Y+57, r22	; 0x39
    297c:	7a af       	std	Y+58, r23	; 0x3a
    297e:	8b af       	std	Y+59, r24	; 0x3b
    2980:	9c af       	std	Y+60, r25	; 0x3c
    2982:	a9 ad       	ldd	r26, Y+57	; 0x39
    2984:	ba ad       	ldd	r27, Y+58	; 0x3a
    2986:	bf 8b       	std	Y+23, r27	; 0x17
    2988:	ae 8b       	std	Y+22, r26	; 0x16

0000298a <.Loc.125>:
		while(__ticks)
    298a:	10 c0       	rjmp	.+32     	; 0x29ac <.L48>

0000298c <.L49>:
    298c:	80 e9       	ldi	r24, 0x90	; 144
    298e:	91 e0       	ldi	r25, 0x01	; 1
    2990:	99 8f       	std	Y+25, r25	; 0x19
    2992:	88 8f       	std	Y+24, r24	; 0x18

00002994 <.LBB73>:
	__asm__ volatile (
    2994:	88 8d       	ldd	r24, Y+24	; 0x18
    2996:	99 8d       	ldd	r25, Y+25	; 0x19

00002998 <.L1^B5>:
    2998:	01 97       	sbiw	r24, 0x01	; 1
    299a:	f1 f7       	brne	.-4      	; 0x2998 <.L1^B5>
    299c:	99 8f       	std	Y+25, r25	; 0x19
    299e:	88 8f       	std	Y+24, r24	; 0x18

000029a0 <.Loc.127>:
	...

000029a2 <.LBE73>:
			__ticks --;
    29a2:	8e 89       	ldd	r24, Y+22	; 0x16
    29a4:	9f 89       	ldd	r25, Y+23	; 0x17
    29a6:	01 97       	sbiw	r24, 0x01	; 1
    29a8:	9f 8b       	std	Y+23, r25	; 0x17
    29aa:	8e 8b       	std	Y+22, r24	; 0x16

000029ac <.L48>:
		while(__ticks)
    29ac:	8e 89       	ldd	r24, Y+22	; 0x16
    29ae:	9f 89       	ldd	r25, Y+23	; 0x17
    29b0:	00 97       	sbiw	r24, 0x00	; 0
    29b2:	61 f7       	brne	.-40     	; 0x298c <.L49>

000029b4 <.Loc.130>:
		return;
    29b4:	56 c0       	rjmp	.+172    	; 0x2a62 <.L40>

000029b6 <.L62>:
		__ticks = (uint16_t)__tmp;
    29b6:	6a 89       	ldd	r22, Y+18	; 0x12
    29b8:	7b 89       	ldd	r23, Y+19	; 0x13
    29ba:	8c 89       	ldd	r24, Y+20	; 0x14
    29bc:	9d 89       	ldd	r25, Y+21	; 0x15
    29be:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    29c2:	21 96       	adiw	r28, 0x01	; 1
    29c4:	6c af       	std	Y+60, r22	; 0x3c
    29c6:	7d af       	std	Y+61, r23	; 0x3d
    29c8:	8e af       	std	Y+62, r24	; 0x3e
    29ca:	9f af       	std	Y+63, r25	; 0x3f
    29cc:	21 97       	sbiw	r28, 0x01	; 1
    29ce:	ed ad       	ldd	r30, Y+61	; 0x3d
    29d0:	fe ad       	ldd	r31, Y+62	; 0x3e
    29d2:	ff 8b       	std	Y+23, r31	; 0x17
    29d4:	ee 8b       	std	Y+22, r30	; 0x16

000029d6 <.L45>:
    29d6:	8e 89       	ldd	r24, Y+22	; 0x16
    29d8:	9f 89       	ldd	r25, Y+23	; 0x17
    29da:	9b 8f       	std	Y+27, r25	; 0x1b
    29dc:	8a 8f       	std	Y+26, r24	; 0x1a

000029de <.LBB75>:
    29de:	8a 8d       	ldd	r24, Y+26	; 0x1a
    29e0:	9b 8d       	ldd	r25, Y+27	; 0x1b

000029e2 <.L1^B6>:
    29e2:	01 97       	sbiw	r24, 0x01	; 1
    29e4:	f1 f7       	brne	.-4      	; 0x29e2 <.L1^B6>
    29e6:	9b 8f       	std	Y+27, r25	; 0x1b
    29e8:	8a 8f       	std	Y+26, r24	; 0x1a

000029ea <.Loc.133>:
}
    29ea:	3b c0       	rjmp	.+118    	; 0x2a62 <.L40>

000029ec <.L60>:
	else if (__tmp > 255)
    29ec:	20 e0       	ldi	r18, 0x00	; 0
    29ee:	30 e0       	ldi	r19, 0x00	; 0
    29f0:	4f e7       	ldi	r20, 0x7F	; 127
    29f2:	53 e4       	ldi	r21, 0x43	; 67
    29f4:	6d 81       	ldd	r22, Y+5	; 0x05
    29f6:	7e 81       	ldd	r23, Y+6	; 0x06
    29f8:	8f 81       	ldd	r24, Y+7	; 0x07
    29fa:	98 85       	ldd	r25, Y+8	; 0x08
    29fc:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    2a00:	88 23       	and	r24, r24
    2a02:	f9 f0       	breq	.+62     	; 0x2a42 <.L63>
    2a04:	f4 f0       	brlt	.+60     	; 0x2a42 <.L63>

00002a06 <.LBB77>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2a06:	69 85       	ldd	r22, Y+9	; 0x09
    2a08:	7a 85       	ldd	r23, Y+10	; 0x0a
    2a0a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2a0c:	9c 85       	ldd	r25, Y+12	; 0x0c
    2a0e:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2a12:	25 96       	adiw	r28, 0x05	; 5
    2a14:	6c af       	std	Y+60, r22	; 0x3c
    2a16:	7d af       	std	Y+61, r23	; 0x3d
    2a18:	8e af       	std	Y+62, r24	; 0x3e
    2a1a:	9f af       	std	Y+63, r25	; 0x3f
    2a1c:	25 97       	sbiw	r28, 0x05	; 5
    2a1e:	23 96       	adiw	r28, 0x03	; 3
    2a20:	8e ad       	ldd	r24, Y+62	; 0x3e
    2a22:	9f ad       	ldd	r25, Y+63	; 0x3f
    2a24:	23 97       	sbiw	r28, 0x03	; 3
    2a26:	9d 8f       	std	Y+29, r25	; 0x1d
    2a28:	8c 8f       	std	Y+28, r24	; 0x1c
    2a2a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a2c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a2e:	9f 8f       	std	Y+31, r25	; 0x1f
    2a30:	8e 8f       	std	Y+30, r24	; 0x1e

00002a32 <.LBB78>:
	__asm__ volatile (
    2a32:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2a34:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002a36 <.L1^B7>:
    2a36:	01 97       	sbiw	r24, 0x01	; 1
    2a38:	f1 f7       	brne	.-4      	; 0x2a36 <.L1^B7>
    2a3a:	9f 8f       	std	Y+31, r25	; 0x1f
    2a3c:	8e 8f       	std	Y+30, r24	; 0x1e

00002a3e <.Loc.137>:
	...

00002a40 <.LBE78>:
		return;
    2a40:	17 c0       	rjmp	.+46     	; 0x2a70 <.L53>

00002a42 <.L63>:
		__ticks = (uint8_t)__tmp;
    2a42:	6d 81       	ldd	r22, Y+5	; 0x05
    2a44:	7e 81       	ldd	r23, Y+6	; 0x06
    2a46:	8f 81       	ldd	r24, Y+7	; 0x07
    2a48:	98 85       	ldd	r25, Y+8	; 0x08
    2a4a:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2a4e:	29 96       	adiw	r28, 0x09	; 9
    2a50:	6c af       	std	Y+60, r22	; 0x3c
    2a52:	7d af       	std	Y+61, r23	; 0x3d
    2a54:	8e af       	std	Y+62, r24	; 0x3e
    2a56:	9f af       	std	Y+63, r25	; 0x3f
    2a58:	29 97       	sbiw	r28, 0x09	; 9
    2a5a:	26 96       	adiw	r28, 0x06	; 6
    2a5c:	9f ad       	ldd	r25, Y+63	; 0x3f
    2a5e:	26 97       	sbiw	r28, 0x06	; 6
    2a60:	9d 87       	std	Y+13, r25	; 0x0d

00002a62 <.L40>:
    2a62:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a64:	88 a3       	std	Y+32, r24	; 0x20

00002a66 <.LBB80>:
	__asm__ volatile (
    2a66:	88 a1       	ldd	r24, Y+32	; 0x20

00002a68 <.L1^B8>:
    2a68:	8a 95       	dec	r24
    2a6a:	f1 f7       	brne	.-4      	; 0x2a68 <.L1^B8>
    2a6c:	88 a3       	std	Y+32, r24	; 0x20

00002a6e <.Loc.141>:
	...

00002a70 <.L53>:
    _delay_us(10);
    port_tri_L &= (~(1<<pin_tri_L));
    2a70:	82 e2       	ldi	r24, 0x22	; 34
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	dc 01       	movw	r26, r24
    2a76:	2c 91       	ld	r18, X

00002a78 <.Loc.143>:
    2a78:	82 e2       	ldi	r24, 0x22	; 34
    2a7a:	90 e0       	ldi	r25, 0x00	; 0

00002a7c <.Loc.144>:
    2a7c:	2b 7f       	andi	r18, 0xFB	; 251
    2a7e:	fc 01       	movw	r30, r24
    2a80:	20 83       	st	Z, r18

00002a82 <.Loc.145>:
}
    2a82:	00 00       	nop
    2a84:	c8 5b       	subi	r28, 0xB8	; 184
    2a86:	df 4f       	sbci	r29, 0xFF	; 255
    2a88:	0f b6       	in	r0, 0x3f	; 63
    2a8a:	f8 94       	cli
    2a8c:	de bf       	out	0x3e, r29	; 62
    2a8e:	0f be       	out	0x3f, r0	; 63
    2a90:	cd bf       	out	0x3d, r28	; 61
    2a92:	df 91       	pop	r29
    2a94:	cf 91       	pop	r28
    2a96:	08 95       	ret

00002a98 <GetDistanceRight>:

int GetDistanceRight(void){
    2a98:	cf 93       	push	r28
    2a9a:	df 93       	push	r29
    2a9c:	cd b7       	in	r28, 0x3d	; 61
    2a9e:	de b7       	in	r29, 0x3e	; 62
    2aa0:	6e 97       	sbiw	r28, 0x1e	; 30
    2aa2:	0f b6       	in	r0, 0x3f	; 63
    2aa4:	f8 94       	cli
    2aa6:	de bf       	out	0x3e, r29	; 62
    2aa8:	0f be       	out	0x3f, r0	; 63
    2aaa:	cd bf       	out	0x3d, r28	; 61

00002aac <.Loc.147>:
    int Distance;
    TriggerPulseRight();
    2aac:	0e 94 da 15 	call	0x2bb4	; 0x2bb4 <TriggerPulseRight>

00002ab0 <.Loc.148>:
	...

00002ab2 <.L65>:
    while ((port_ech_R & (1<<pin_ech_R)) == 0){
    2ab2:	86 e0       	ldi	r24, 0x06	; 6
    2ab4:	91 e0       	ldi	r25, 0x01	; 1
    2ab6:	dc 01       	movw	r26, r24
    2ab8:	8c 91       	ld	r24, X

00002aba <.Loc.150>:
    2aba:	88 2f       	mov	r24, r24
    2abc:	90 e0       	ldi	r25, 0x00	; 0
    2abe:	82 70       	andi	r24, 0x02	; 2
    2ac0:	99 27       	eor	r25, r25

00002ac2 <.Loc.151>:
    2ac2:	00 97       	sbiw	r24, 0x00	; 0
    2ac4:	b1 f3       	breq	.-20     	; 0x2ab2 <.L65>

00002ac6 <.Loc.152>:
    }
    TCNT2 = 0;
    2ac6:	82 eb       	ldi	r24, 0xB2	; 178
    2ac8:	90 e0       	ldi	r25, 0x00	; 0

00002aca <.Loc.153>:
    2aca:	fc 01       	movw	r30, r24
    2acc:	10 82       	st	Z, r1

00002ace <.Loc.154>:
    TIFR2 = 1<<TOV2;
    2ace:	87 e3       	ldi	r24, 0x37	; 55
    2ad0:	90 e0       	ldi	r25, 0x00	; 0

00002ad2 <.Loc.155>:
    2ad2:	21 e0       	ldi	r18, 0x01	; 1
    2ad4:	dc 01       	movw	r26, r24
    2ad6:	2c 93       	st	X, r18

00002ad8 <.Loc.156>:
    count = 0;
    2ad8:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <count+0x1>
    2adc:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <count>

00002ae0 <.Loc.157>:
	...

00002ae2 <.L66>:
    while ((port_ech_R & (1<<pin_ech_R)) != 0){
    2ae2:	86 e0       	ldi	r24, 0x06	; 6
    2ae4:	91 e0       	ldi	r25, 0x01	; 1
    2ae6:	fc 01       	movw	r30, r24
    2ae8:	80 81       	ld	r24, Z

00002aea <.Loc.159>:
    2aea:	88 2f       	mov	r24, r24
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	82 70       	andi	r24, 0x02	; 2
    2af0:	99 27       	eor	r25, r25

00002af2 <.Loc.160>:
    2af2:	00 97       	sbiw	r24, 0x00	; 0
    2af4:	b1 f7       	brne	.-20     	; 0x2ae2 <.L66>

00002af6 <.Loc.161>:

    }
    Distance = count;
    2af6:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2afa:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2afe:	9a 83       	std	Y+2, r25	; 0x02
    2b00:	89 83       	std	Y+1, r24	; 0x01

00002b02 <.Loc.162>:
    Distance = Distance * 0.008 * 343;
    2b02:	89 81       	ldd	r24, Y+1	; 0x01
    2b04:	9a 81       	ldd	r25, Y+2	; 0x02
    2b06:	9c 01       	movw	r18, r24
    2b08:	99 0f       	add	r25, r25
    2b0a:	44 0b       	sbc	r20, r20
    2b0c:	55 0b       	sbc	r21, r21
    2b0e:	2f 87       	std	Y+15, r18	; 0x0f
    2b10:	38 8b       	std	Y+16, r19	; 0x10
    2b12:	49 8b       	std	Y+17, r20	; 0x11
    2b14:	5a 8b       	std	Y+18, r21	; 0x12
    2b16:	6f 85       	ldd	r22, Y+15	; 0x0f
    2b18:	78 89       	ldd	r23, Y+16	; 0x10
    2b1a:	89 89       	ldd	r24, Y+17	; 0x11
    2b1c:	9a 89       	ldd	r25, Y+18	; 0x12
    2b1e:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <__floatsisf>
    2b22:	6b 83       	std	Y+3, r22	; 0x03
    2b24:	7c 83       	std	Y+4, r23	; 0x04
    2b26:	8d 83       	std	Y+5, r24	; 0x05
    2b28:	9e 83       	std	Y+6, r25	; 0x06
    2b2a:	2f e6       	ldi	r18, 0x6F	; 111
    2b2c:	32 e1       	ldi	r19, 0x12	; 18
    2b2e:	43 e0       	ldi	r20, 0x03	; 3
    2b30:	5c e3       	ldi	r21, 0x3C	; 60
    2b32:	6b 81       	ldd	r22, Y+3	; 0x03
    2b34:	7c 81       	ldd	r23, Y+4	; 0x04
    2b36:	8d 81       	ldd	r24, Y+5	; 0x05
    2b38:	9e 81       	ldd	r25, Y+6	; 0x06
    2b3a:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2b3e:	6b 8b       	std	Y+19, r22	; 0x13
    2b40:	7c 8b       	std	Y+20, r23	; 0x14
    2b42:	8d 8b       	std	Y+21, r24	; 0x15
    2b44:	9e 8b       	std	Y+22, r25	; 0x16
    2b46:	8b 89       	ldd	r24, Y+19	; 0x13
    2b48:	9c 89       	ldd	r25, Y+20	; 0x14
    2b4a:	ad 89       	ldd	r26, Y+21	; 0x15
    2b4c:	be 89       	ldd	r27, Y+22	; 0x16
    2b4e:	8f 83       	std	Y+7, r24	; 0x07
    2b50:	98 87       	std	Y+8, r25	; 0x08
    2b52:	a9 87       	std	Y+9, r26	; 0x09
    2b54:	ba 87       	std	Y+10, r27	; 0x0a

00002b56 <.Loc.163>:
    2b56:	20 e0       	ldi	r18, 0x00	; 0
    2b58:	30 e8       	ldi	r19, 0x80	; 128
    2b5a:	4b ea       	ldi	r20, 0xAB	; 171
    2b5c:	53 e4       	ldi	r21, 0x43	; 67
    2b5e:	6f 81       	ldd	r22, Y+7	; 0x07
    2b60:	78 85       	ldd	r23, Y+8	; 0x08
    2b62:	89 85       	ldd	r24, Y+9	; 0x09
    2b64:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b66:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2b6a:	6f 8b       	std	Y+23, r22	; 0x17
    2b6c:	78 8f       	std	Y+24, r23	; 0x18
    2b6e:	89 8f       	std	Y+25, r24	; 0x19
    2b70:	9a 8f       	std	Y+26, r25	; 0x1a
    2b72:	2f 89       	ldd	r18, Y+23	; 0x17
    2b74:	38 8d       	ldd	r19, Y+24	; 0x18
    2b76:	49 8d       	ldd	r20, Y+25	; 0x19
    2b78:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2b7a:	2b 87       	std	Y+11, r18	; 0x0b
    2b7c:	3c 87       	std	Y+12, r19	; 0x0c
    2b7e:	4d 87       	std	Y+13, r20	; 0x0d
    2b80:	5e 87       	std	Y+14, r21	; 0x0e

00002b82 <.Loc.164>:
    2b82:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b84:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b86:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b88:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b8a:	0e 94 b9 18 	call	0x3172	; 0x3172 <__fixsfsi>
    2b8e:	6b 8f       	std	Y+27, r22	; 0x1b
    2b90:	7c 8f       	std	Y+28, r23	; 0x1c
    2b92:	8d 8f       	std	Y+29, r24	; 0x1d
    2b94:	9e 8f       	std	Y+30, r25	; 0x1e
    2b96:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2b98:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2b9a:	5a 83       	std	Y+2, r21	; 0x02
    2b9c:	49 83       	std	Y+1, r20	; 0x01

00002b9e <.Loc.165>:
    //340  m/s
    //34 cm / ms
    //340   mm / ms
    //0.34  mm / us
    //5.44 * count geeft distance in mm
    return Distance;
    2b9e:	89 81       	ldd	r24, Y+1	; 0x01
    2ba0:	9a 81       	ldd	r25, Y+2	; 0x02

00002ba2 <.Loc.166>:
}
    2ba2:	6e 96       	adiw	r28, 0x1e	; 30
    2ba4:	0f b6       	in	r0, 0x3f	; 63
    2ba6:	f8 94       	cli
    2ba8:	de bf       	out	0x3e, r29	; 62
    2baa:	0f be       	out	0x3f, r0	; 63
    2bac:	cd bf       	out	0x3d, r28	; 61
    2bae:	df 91       	pop	r29
    2bb0:	cf 91       	pop	r28
    2bb2:	08 95       	ret

00002bb4 <TriggerPulseRight>:
void TriggerPulseRight (void){
    2bb4:	cf 93       	push	r28
    2bb6:	df 93       	push	r29
    2bb8:	cd b7       	in	r28, 0x3d	; 61
    2bba:	de b7       	in	r29, 0x3e	; 62
    2bbc:	c8 54       	subi	r28, 0x48	; 72
    2bbe:	d1 09       	sbc	r29, r1
    2bc0:	0f b6       	in	r0, 0x3f	; 63
    2bc2:	f8 94       	cli
    2bc4:	de bf       	out	0x3e, r29	; 62
    2bc6:	0f be       	out	0x3f, r0	; 63
    2bc8:	cd bf       	out	0x3d, r28	; 61

00002bca <.Loc.168>:
    port_tri_R |= (1<<pin_tri_R);
    2bca:	82 e2       	ldi	r24, 0x22	; 34
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	dc 01       	movw	r26, r24
    2bd0:	2c 91       	ld	r18, X
    2bd2:	82 e2       	ldi	r24, 0x22	; 34
    2bd4:	90 e0       	ldi	r25, 0x00	; 0

00002bd6 <.Loc.169>:
    2bd6:	20 61       	ori	r18, 0x10	; 16
    2bd8:	fc 01       	movw	r30, r24
    2bda:	20 83       	st	Z, r18
    2bdc:	80 e0       	ldi	r24, 0x00	; 0
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	a0 e2       	ldi	r26, 0x20	; 32
    2be2:	b1 e4       	ldi	r27, 0x41	; 65
    2be4:	89 83       	std	Y+1, r24	; 0x01
    2be6:	9a 83       	std	Y+2, r25	; 0x02
    2be8:	ab 83       	std	Y+3, r26	; 0x03
    2bea:	bc 83       	std	Y+4, r27	; 0x04

00002bec <.LBB82>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2bec:	2b ea       	ldi	r18, 0xAB	; 171
    2bee:	3a ea       	ldi	r19, 0xAA	; 170
    2bf0:	4a ea       	ldi	r20, 0xAA	; 170
    2bf2:	50 e4       	ldi	r21, 0x40	; 64
    2bf4:	69 81       	ldd	r22, Y+1	; 0x01
    2bf6:	7a 81       	ldd	r23, Y+2	; 0x02
    2bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bfa:	9c 81       	ldd	r25, Y+4	; 0x04
    2bfc:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2c00:	6d a3       	std	Y+37, r22	; 0x25
    2c02:	7e a3       	std	Y+38, r23	; 0x26
    2c04:	8f a3       	std	Y+39, r24	; 0x27
    2c06:	98 a7       	std	Y+40, r25	; 0x28
    2c08:	8d a1       	ldd	r24, Y+37	; 0x25
    2c0a:	9e a1       	ldd	r25, Y+38	; 0x26
    2c0c:	af a1       	ldd	r26, Y+39	; 0x27
    2c0e:	b8 a5       	ldd	r27, Y+40	; 0x28
    2c10:	8d 83       	std	Y+5, r24	; 0x05
    2c12:	9e 83       	std	Y+6, r25	; 0x06
    2c14:	af 83       	std	Y+7, r26	; 0x07
    2c16:	b8 87       	std	Y+8, r27	; 0x08

00002c18 <.Loc.171>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2c18:	20 e0       	ldi	r18, 0x00	; 0
    2c1a:	30 e0       	ldi	r19, 0x00	; 0
    2c1c:	40 e8       	ldi	r20, 0x80	; 128
    2c1e:	50 e4       	ldi	r21, 0x40	; 64
    2c20:	69 81       	ldd	r22, Y+1	; 0x01
    2c22:	7a 81       	ldd	r23, Y+2	; 0x02
    2c24:	8b 81       	ldd	r24, Y+3	; 0x03
    2c26:	9c 81       	ldd	r25, Y+4	; 0x04
    2c28:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2c2c:	69 a7       	std	Y+41, r22	; 0x29
    2c2e:	7a a7       	std	Y+42, r23	; 0x2a
    2c30:	8b a7       	std	Y+43, r24	; 0x2b
    2c32:	9c a7       	std	Y+44, r25	; 0x2c
    2c34:	89 a5       	ldd	r24, Y+41	; 0x29
    2c36:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c38:	ab a5       	ldd	r26, Y+43	; 0x2b
    2c3a:	bc a5       	ldd	r27, Y+44	; 0x2c
    2c3c:	89 87       	std	Y+9, r24	; 0x09
    2c3e:	9a 87       	std	Y+10, r25	; 0x0a
    2c40:	ab 87       	std	Y+11, r26	; 0x0b
    2c42:	bc 87       	std	Y+12, r27	; 0x0c

00002c44 <.Loc.172>:
	if (__tmp < 1.0)
    2c44:	20 e0       	ldi	r18, 0x00	; 0
    2c46:	30 e0       	ldi	r19, 0x00	; 0
    2c48:	40 e8       	ldi	r20, 0x80	; 128
    2c4a:	5f e3       	ldi	r21, 0x3F	; 63
    2c4c:	6d 81       	ldd	r22, Y+5	; 0x05
    2c4e:	7e 81       	ldd	r23, Y+6	; 0x06
    2c50:	8f 81       	ldd	r24, Y+7	; 0x07
    2c52:	98 85       	ldd	r25, Y+8	; 0x08
    2c54:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    2c58:	88 23       	and	r24, r24
    2c5a:	1c f4       	brge	.+6      	; 0x2c62 <.L90>

00002c5c <.Loc.173>:
		__ticks = 1;
    2c5c:	81 e0       	ldi	r24, 0x01	; 1
    2c5e:	8d 87       	std	Y+13, r24	; 0x0d
    2c60:	e8 c0       	rjmp	.+464    	; 0x2e32 <.L71>

00002c62 <.L90>:
	else if (__tmp2 > 65535)
    2c62:	20 e0       	ldi	r18, 0x00	; 0
    2c64:	3f ef       	ldi	r19, 0xFF	; 255
    2c66:	4f e7       	ldi	r20, 0x7F	; 127
    2c68:	57 e4       	ldi	r21, 0x47	; 71
    2c6a:	69 85       	ldd	r22, Y+9	; 0x09
    2c6c:	7a 85       	ldd	r23, Y+10	; 0x0a
    2c6e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c70:	9c 85       	ldd	r25, Y+12	; 0x0c
    2c72:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    2c76:	88 23       	and	r24, r24
    2c78:	09 f0       	breq	.+2      	; 0x2c7c <L0^A>

00002c7a <L0^A>:
    2c7a:	0c f4       	brge	.+2      	; 0x2c7e <.Loc.175>

00002c7c <L0^A>:
    2c7c:	9f c0       	rjmp	.+318    	; 0x2dbc <.L91>

00002c7e <.Loc.175>:
		_delay_ms(__us / 1000.0);
    2c7e:	20 e0       	ldi	r18, 0x00	; 0
    2c80:	30 e0       	ldi	r19, 0x00	; 0
    2c82:	4a e7       	ldi	r20, 0x7A	; 122
    2c84:	54 e4       	ldi	r21, 0x44	; 68
    2c86:	69 81       	ldd	r22, Y+1	; 0x01
    2c88:	7a 81       	ldd	r23, Y+2	; 0x02
    2c8a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c8c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c8e:	0e 94 47 18 	call	0x308e	; 0x308e <__divsf3>
    2c92:	6d a7       	std	Y+45, r22	; 0x2d
    2c94:	7e a7       	std	Y+46, r23	; 0x2e
    2c96:	8f a7       	std	Y+47, r24	; 0x2f
    2c98:	98 ab       	std	Y+48, r25	; 0x30
    2c9a:	8d a5       	ldd	r24, Y+45	; 0x2d
    2c9c:	9e a5       	ldd	r25, Y+46	; 0x2e
    2c9e:	af a5       	ldd	r26, Y+47	; 0x2f
    2ca0:	b8 a9       	ldd	r27, Y+48	; 0x30
    2ca2:	8e 87       	std	Y+14, r24	; 0x0e
    2ca4:	9f 87       	std	Y+15, r25	; 0x0f
    2ca6:	a8 8b       	std	Y+16, r26	; 0x10
    2ca8:	b9 8b       	std	Y+17, r27	; 0x11

00002caa <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2caa:	20 e0       	ldi	r18, 0x00	; 0
    2cac:	30 e0       	ldi	r19, 0x00	; 0
    2cae:	4a e7       	ldi	r20, 0x7A	; 122
    2cb0:	55 e4       	ldi	r21, 0x45	; 69
    2cb2:	6e 85       	ldd	r22, Y+14	; 0x0e
    2cb4:	7f 85       	ldd	r23, Y+15	; 0x0f
    2cb6:	88 89       	ldd	r24, Y+16	; 0x10
    2cb8:	99 89       	ldd	r25, Y+17	; 0x11
    2cba:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2cbe:	69 ab       	std	Y+49, r22	; 0x31
    2cc0:	7a ab       	std	Y+50, r23	; 0x32
    2cc2:	8b ab       	std	Y+51, r24	; 0x33
    2cc4:	9c ab       	std	Y+52, r25	; 0x34
    2cc6:	89 a9       	ldd	r24, Y+49	; 0x31
    2cc8:	9a a9       	ldd	r25, Y+50	; 0x32
    2cca:	ab a9       	ldd	r26, Y+51	; 0x33
    2ccc:	bc a9       	ldd	r27, Y+52	; 0x34
    2cce:	8a 8b       	std	Y+18, r24	; 0x12
    2cd0:	9b 8b       	std	Y+19, r25	; 0x13
    2cd2:	ac 8b       	std	Y+20, r26	; 0x14
    2cd4:	bd 8b       	std	Y+21, r27	; 0x15

00002cd6 <.Loc.177>:
	if (__tmp < 1.0)
    2cd6:	20 e0       	ldi	r18, 0x00	; 0
    2cd8:	30 e0       	ldi	r19, 0x00	; 0
    2cda:	40 e8       	ldi	r20, 0x80	; 128
    2cdc:	5f e3       	ldi	r21, 0x3F	; 63
    2cde:	6a 89       	ldd	r22, Y+18	; 0x12
    2ce0:	7b 89       	ldd	r23, Y+19	; 0x13
    2ce2:	8c 89       	ldd	r24, Y+20	; 0x14
    2ce4:	9d 89       	ldd	r25, Y+21	; 0x15
    2ce6:	0e 94 42 18 	call	0x3084	; 0x3084 <__cmpsf2>
    2cea:	88 23       	and	r24, r24
    2cec:	2c f4       	brge	.+10     	; 0x2cf8 <.L92>

00002cee <.Loc.178>:
		__ticks = 1;
    2cee:	81 e0       	ldi	r24, 0x01	; 1
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	9f 8b       	std	Y+23, r25	; 0x17
    2cf4:	8e 8b       	std	Y+22, r24	; 0x16
    2cf6:	57 c0       	rjmp	.+174    	; 0x2da6 <.L76>

00002cf8 <.L92>:
	else if (__tmp > 65535)
    2cf8:	20 e0       	ldi	r18, 0x00	; 0
    2cfa:	3f ef       	ldi	r19, 0xFF	; 255
    2cfc:	4f e7       	ldi	r20, 0x7F	; 127
    2cfe:	57 e4       	ldi	r21, 0x47	; 71
    2d00:	6a 89       	ldd	r22, Y+18	; 0x12
    2d02:	7b 89       	ldd	r23, Y+19	; 0x13
    2d04:	8c 89       	ldd	r24, Y+20	; 0x14
    2d06:	9d 89       	ldd	r25, Y+21	; 0x15
    2d08:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    2d0c:	88 23       	and	r24, r24
    2d0e:	d9 f1       	breq	.+118    	; 0x2d86 <.L93>
    2d10:	d4 f1       	brlt	.+116    	; 0x2d86 <.L93>

00002d12 <.Loc.180>:
		__ticks = (uint16_t) (__ms * 10.0);
    2d12:	20 e0       	ldi	r18, 0x00	; 0
    2d14:	30 e0       	ldi	r19, 0x00	; 0
    2d16:	40 e2       	ldi	r20, 0x20	; 32
    2d18:	51 e4       	ldi	r21, 0x41	; 65
    2d1a:	6e 85       	ldd	r22, Y+14	; 0x0e
    2d1c:	7f 85       	ldd	r23, Y+15	; 0x0f
    2d1e:	88 89       	ldd	r24, Y+16	; 0x10
    2d20:	99 89       	ldd	r25, Y+17	; 0x11
    2d22:	0e 94 a6 19 	call	0x334c	; 0x334c <__mulsf3>
    2d26:	6d ab       	std	Y+53, r22	; 0x35
    2d28:	7e ab       	std	Y+54, r23	; 0x36
    2d2a:	8f ab       	std	Y+55, r24	; 0x37
    2d2c:	98 af       	std	Y+56, r25	; 0x38
    2d2e:	8d a9       	ldd	r24, Y+53	; 0x35
    2d30:	9e a9       	ldd	r25, Y+54	; 0x36
    2d32:	af a9       	ldd	r26, Y+55	; 0x37
    2d34:	b8 ad       	ldd	r27, Y+56	; 0x38
    2d36:	89 a3       	std	Y+33, r24	; 0x21
    2d38:	9a a3       	std	Y+34, r25	; 0x22
    2d3a:	ab a3       	std	Y+35, r26	; 0x23
    2d3c:	bc a3       	std	Y+36, r27	; 0x24

00002d3e <.Loc.181>:
    2d3e:	69 a1       	ldd	r22, Y+33	; 0x21
    2d40:	7a a1       	ldd	r23, Y+34	; 0x22
    2d42:	8b a1       	ldd	r24, Y+35	; 0x23
    2d44:	9c a1       	ldd	r25, Y+36	; 0x24
    2d46:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2d4a:	69 af       	std	Y+57, r22	; 0x39
    2d4c:	7a af       	std	Y+58, r23	; 0x3a
    2d4e:	8b af       	std	Y+59, r24	; 0x3b
    2d50:	9c af       	std	Y+60, r25	; 0x3c
    2d52:	a9 ad       	ldd	r26, Y+57	; 0x39
    2d54:	ba ad       	ldd	r27, Y+58	; 0x3a
    2d56:	bf 8b       	std	Y+23, r27	; 0x17
    2d58:	ae 8b       	std	Y+22, r26	; 0x16

00002d5a <.Loc.182>:
		while(__ticks)
    2d5a:	10 c0       	rjmp	.+32     	; 0x2d7c <.L79>

00002d5c <.L80>:
    2d5c:	80 e9       	ldi	r24, 0x90	; 144
    2d5e:	91 e0       	ldi	r25, 0x01	; 1
    2d60:	99 8f       	std	Y+25, r25	; 0x19
    2d62:	88 8f       	std	Y+24, r24	; 0x18

00002d64 <.LBB86>:
	__asm__ volatile (
    2d64:	88 8d       	ldd	r24, Y+24	; 0x18
    2d66:	99 8d       	ldd	r25, Y+25	; 0x19

00002d68 <.L1^B9>:
    2d68:	01 97       	sbiw	r24, 0x01	; 1
    2d6a:	f1 f7       	brne	.-4      	; 0x2d68 <.L1^B9>
    2d6c:	99 8f       	std	Y+25, r25	; 0x19
    2d6e:	88 8f       	std	Y+24, r24	; 0x18

00002d70 <.Loc.184>:
	...

00002d72 <.LBE86>:
			__ticks --;
    2d72:	8e 89       	ldd	r24, Y+22	; 0x16
    2d74:	9f 89       	ldd	r25, Y+23	; 0x17
    2d76:	01 97       	sbiw	r24, 0x01	; 1
    2d78:	9f 8b       	std	Y+23, r25	; 0x17
    2d7a:	8e 8b       	std	Y+22, r24	; 0x16

00002d7c <.L79>:
		while(__ticks)
    2d7c:	8e 89       	ldd	r24, Y+22	; 0x16
    2d7e:	9f 89       	ldd	r25, Y+23	; 0x17
    2d80:	00 97       	sbiw	r24, 0x00	; 0
    2d82:	61 f7       	brne	.-40     	; 0x2d5c <.L80>

00002d84 <.Loc.187>:
		return;
    2d84:	56 c0       	rjmp	.+172    	; 0x2e32 <.L71>

00002d86 <.L93>:
		__ticks = (uint16_t)__tmp;
    2d86:	6a 89       	ldd	r22, Y+18	; 0x12
    2d88:	7b 89       	ldd	r23, Y+19	; 0x13
    2d8a:	8c 89       	ldd	r24, Y+20	; 0x14
    2d8c:	9d 89       	ldd	r25, Y+21	; 0x15
    2d8e:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2d92:	21 96       	adiw	r28, 0x01	; 1
    2d94:	6c af       	std	Y+60, r22	; 0x3c
    2d96:	7d af       	std	Y+61, r23	; 0x3d
    2d98:	8e af       	std	Y+62, r24	; 0x3e
    2d9a:	9f af       	std	Y+63, r25	; 0x3f
    2d9c:	21 97       	sbiw	r28, 0x01	; 1
    2d9e:	ed ad       	ldd	r30, Y+61	; 0x3d
    2da0:	fe ad       	ldd	r31, Y+62	; 0x3e
    2da2:	ff 8b       	std	Y+23, r31	; 0x17
    2da4:	ee 8b       	std	Y+22, r30	; 0x16

00002da6 <.L76>:
    2da6:	8e 89       	ldd	r24, Y+22	; 0x16
    2da8:	9f 89       	ldd	r25, Y+23	; 0x17
    2daa:	9b 8f       	std	Y+27, r25	; 0x1b
    2dac:	8a 8f       	std	Y+26, r24	; 0x1a

00002dae <.LBB88>:
    2dae:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2db0:	9b 8d       	ldd	r25, Y+27	; 0x1b

00002db2 <.L1^B10>:
    2db2:	01 97       	sbiw	r24, 0x01	; 1
    2db4:	f1 f7       	brne	.-4      	; 0x2db2 <.L1^B10>
    2db6:	9b 8f       	std	Y+27, r25	; 0x1b
    2db8:	8a 8f       	std	Y+26, r24	; 0x1a

00002dba <.Loc.190>:
}
    2dba:	3b c0       	rjmp	.+118    	; 0x2e32 <.L71>

00002dbc <.L91>:
	else if (__tmp > 255)
    2dbc:	20 e0       	ldi	r18, 0x00	; 0
    2dbe:	30 e0       	ldi	r19, 0x00	; 0
    2dc0:	4f e7       	ldi	r20, 0x7F	; 127
    2dc2:	53 e4       	ldi	r21, 0x43	; 67
    2dc4:	6d 81       	ldd	r22, Y+5	; 0x05
    2dc6:	7e 81       	ldd	r23, Y+6	; 0x06
    2dc8:	8f 81       	ldd	r24, Y+7	; 0x07
    2dca:	98 85       	ldd	r25, Y+8	; 0x08
    2dcc:	0e 94 a1 19 	call	0x3342	; 0x3342 <__gesf2>
    2dd0:	88 23       	and	r24, r24
    2dd2:	f9 f0       	breq	.+62     	; 0x2e12 <.L94>
    2dd4:	f4 f0       	brlt	.+60     	; 0x2e12 <.L94>

00002dd6 <.LBB90>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2dd6:	69 85       	ldd	r22, Y+9	; 0x09
    2dd8:	7a 85       	ldd	r23, Y+10	; 0x0a
    2dda:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ddc:	9c 85       	ldd	r25, Y+12	; 0x0c
    2dde:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2de2:	25 96       	adiw	r28, 0x05	; 5
    2de4:	6c af       	std	Y+60, r22	; 0x3c
    2de6:	7d af       	std	Y+61, r23	; 0x3d
    2de8:	8e af       	std	Y+62, r24	; 0x3e
    2dea:	9f af       	std	Y+63, r25	; 0x3f
    2dec:	25 97       	sbiw	r28, 0x05	; 5
    2dee:	23 96       	adiw	r28, 0x03	; 3
    2df0:	8e ad       	ldd	r24, Y+62	; 0x3e
    2df2:	9f ad       	ldd	r25, Y+63	; 0x3f
    2df4:	23 97       	sbiw	r28, 0x03	; 3
    2df6:	9d 8f       	std	Y+29, r25	; 0x1d
    2df8:	8c 8f       	std	Y+28, r24	; 0x1c
    2dfa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2dfc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2dfe:	9f 8f       	std	Y+31, r25	; 0x1f
    2e00:	8e 8f       	std	Y+30, r24	; 0x1e

00002e02 <.LBB91>:
	__asm__ volatile (
    2e02:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2e04:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002e06 <.L1^B11>:
    2e06:	01 97       	sbiw	r24, 0x01	; 1
    2e08:	f1 f7       	brne	.-4      	; 0x2e06 <.L1^B11>
    2e0a:	9f 8f       	std	Y+31, r25	; 0x1f
    2e0c:	8e 8f       	std	Y+30, r24	; 0x1e

00002e0e <.Loc.194>:
	...

00002e10 <.LBE91>:
		return;
    2e10:	17 c0       	rjmp	.+46     	; 0x2e40 <.L84>

00002e12 <.L94>:
		__ticks = (uint8_t)__tmp;
    2e12:	6d 81       	ldd	r22, Y+5	; 0x05
    2e14:	7e 81       	ldd	r23, Y+6	; 0x06
    2e16:	8f 81       	ldd	r24, Y+7	; 0x07
    2e18:	98 85       	ldd	r25, Y+8	; 0x08
    2e1a:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    2e1e:	29 96       	adiw	r28, 0x09	; 9
    2e20:	6c af       	std	Y+60, r22	; 0x3c
    2e22:	7d af       	std	Y+61, r23	; 0x3d
    2e24:	8e af       	std	Y+62, r24	; 0x3e
    2e26:	9f af       	std	Y+63, r25	; 0x3f
    2e28:	29 97       	sbiw	r28, 0x09	; 9
    2e2a:	26 96       	adiw	r28, 0x06	; 6
    2e2c:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e2e:	26 97       	sbiw	r28, 0x06	; 6
    2e30:	9d 87       	std	Y+13, r25	; 0x0d

00002e32 <.L71>:
    2e32:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e34:	88 a3       	std	Y+32, r24	; 0x20

00002e36 <.LBB93>:
	__asm__ volatile (
    2e36:	88 a1       	ldd	r24, Y+32	; 0x20

00002e38 <.L1^B12>:
    2e38:	8a 95       	dec	r24
    2e3a:	f1 f7       	brne	.-4      	; 0x2e38 <.L1^B12>
    2e3c:	88 a3       	std	Y+32, r24	; 0x20

00002e3e <.Loc.198>:
	...

00002e40 <.L84>:
    _delay_us(10);
    port_tri_R &= (~(1<<pin_tri_R));
    2e40:	82 e2       	ldi	r24, 0x22	; 34
    2e42:	90 e0       	ldi	r25, 0x00	; 0
    2e44:	dc 01       	movw	r26, r24
    2e46:	2c 91       	ld	r18, X

00002e48 <.Loc.200>:
    2e48:	82 e2       	ldi	r24, 0x22	; 34
    2e4a:	90 e0       	ldi	r25, 0x00	; 0

00002e4c <.Loc.201>:
    2e4c:	2f 7e       	andi	r18, 0xEF	; 239
    2e4e:	fc 01       	movw	r30, r24
    2e50:	20 83       	st	Z, r18

00002e52 <.Loc.202>:
}
    2e52:	00 00       	nop
    2e54:	c8 5b       	subi	r28, 0xB8	; 184
    2e56:	df 4f       	sbci	r29, 0xFF	; 255
    2e58:	0f b6       	in	r0, 0x3f	; 63
    2e5a:	f8 94       	cli
    2e5c:	de bf       	out	0x3e, r29	; 62
    2e5e:	0f be       	out	0x3f, r0	; 63
    2e60:	cd bf       	out	0x3d, r28	; 61
    2e62:	df 91       	pop	r29
    2e64:	cf 91       	pop	r28
    2e66:	08 95       	ret

00002e68 <__vector_15>:

ISR(TIMER2_OVF_vect){
    2e68:	1f 92       	push	r1
    2e6a:	0f 92       	push	r0
    2e6c:	0f b6       	in	r0, 0x3f	; 63
    2e6e:	0f 92       	push	r0
    2e70:	11 24       	eor	r1, r1
    2e72:	8f 93       	push	r24
    2e74:	9f 93       	push	r25
    2e76:	cf 93       	push	r28
    2e78:	df 93       	push	r29
    2e7a:	cd b7       	in	r28, 0x3d	; 61
    2e7c:	de b7       	in	r29, 0x3e	; 62

00002e7e <.Loc.204>:
    count++;
    2e7e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <count>
    2e82:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <count+0x1>
    2e86:	01 96       	adiw	r24, 0x01	; 1
    2e88:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <count+0x1>
    2e8c:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <count>

00002e90 <.Loc.205>:
}
    2e90:	00 00       	nop
    2e92:	df 91       	pop	r29
    2e94:	cf 91       	pop	r28
    2e96:	9f 91       	pop	r25
    2e98:	8f 91       	pop	r24
    2e9a:	0f 90       	pop	r0
    2e9c:	0f be       	out	0x3f, r0	; 63
    2e9e:	0f 90       	pop	r0
    2ea0:	1f 90       	pop	r1
    2ea2:	18 95       	reti

00002ea4 <__divmodhi4>:
    2ea4:	97 fb       	bst	r25, 7

00002ea6 <.Loc.1>:
    2ea6:	07 2e       	mov	r0, r23

00002ea8 <.Loc.2>:
    2ea8:	16 f4       	brtc	.+4      	; 0x2eae <.L^B1>

00002eaa <.Loc.3>:
    2eaa:	00 94       	com	r0

00002eac <.Loc.4>:
    2eac:	07 d0       	rcall	.+14     	; 0x2ebc <__divmodhi4_neg1>

00002eae <.L^B1>:
    2eae:	77 fd       	sbrc	r23, 7

00002eb0 <.Loc.6>:
    2eb0:	09 d0       	rcall	.+18     	; 0x2ec4 <__divmodhi4_neg2>

00002eb2 <.Loc.7>:
    2eb2:	0e 94 9f 17 	call	0x2f3e	; 0x2f3e <__udivmodhi4>

00002eb6 <.Loc.8>:
    2eb6:	07 fc       	sbrc	r0, 7

00002eb8 <.Loc.9>:
    2eb8:	05 d0       	rcall	.+10     	; 0x2ec4 <__divmodhi4_neg2>

00002eba <.Loc.10>:
    2eba:	3e f4       	brtc	.+14     	; 0x2eca <__divmodhi4_exit>

00002ebc <__divmodhi4_neg1>:
    2ebc:	90 95       	com	r25

00002ebe <.Loc.12>:
    2ebe:	81 95       	neg	r24

00002ec0 <.Loc.13>:
    2ec0:	9f 4f       	sbci	r25, 0xFF	; 255

00002ec2 <.Loc.14>:
    2ec2:	08 95       	ret

00002ec4 <__divmodhi4_neg2>:
    2ec4:	70 95       	com	r23

00002ec6 <.Loc.16>:
    2ec6:	61 95       	neg	r22

00002ec8 <.Loc.17>:
    2ec8:	7f 4f       	sbci	r23, 0xFF	; 255

00002eca <__divmodhi4_exit>:
    2eca:	08 95       	ret

00002ecc <__divmodsi4>:
    2ecc:	05 2e       	mov	r0, r21

00002ece <.Loc.1>:
    2ece:	97 fb       	bst	r25, 7

00002ed0 <.Loc.2>:
    2ed0:	1e f4       	brtc	.+6      	; 0x2ed8 <.L^B1>

00002ed2 <.Loc.3>:
    2ed2:	00 94       	com	r0

00002ed4 <.Loc.4>:
    2ed4:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__negsi2>

00002ed8 <.L^B1>:
    2ed8:	57 fd       	sbrc	r21, 7

00002eda <.Loc.6>:
    2eda:	07 d0       	rcall	.+14     	; 0x2eea <__divmodsi4_neg2>

00002edc <.Loc.7>:
    2edc:	0e 94 b3 17 	call	0x2f66	; 0x2f66 <__udivmodsi4>

00002ee0 <.Loc.8>:
    2ee0:	07 fc       	sbrc	r0, 7

00002ee2 <.Loc.9>:
    2ee2:	03 d0       	rcall	.+6      	; 0x2eea <__divmodsi4_neg2>

00002ee4 <.Loc.10>:
    2ee4:	4e f4       	brtc	.+18     	; 0x2ef8 <__divmodsi4_exit>

00002ee6 <.Loc.11>:
    2ee6:	0c 94 7d 17 	jmp	0x2efa	; 0x2efa <__negsi2>

00002eea <__divmodsi4_neg2>:
    2eea:	50 95       	com	r21

00002eec <.Loc.13>:
    2eec:	40 95       	com	r20

00002eee <.Loc.14>:
    2eee:	30 95       	com	r19

00002ef0 <.Loc.15>:
    2ef0:	21 95       	neg	r18

00002ef2 <.Loc.16>:
    2ef2:	3f 4f       	sbci	r19, 0xFF	; 255

00002ef4 <.Loc.17>:
    2ef4:	4f 4f       	sbci	r20, 0xFF	; 255

00002ef6 <.Loc.18>:
    2ef6:	5f 4f       	sbci	r21, 0xFF	; 255

00002ef8 <__divmodsi4_exit>:
    2ef8:	08 95       	ret

00002efa <__negsi2>:
    2efa:	90 95       	com	r25
    2efc:	80 95       	com	r24
    2efe:	70 95       	com	r23
    2f00:	61 95       	neg	r22
    2f02:	7f 4f       	sbci	r23, 0xFF	; 255
    2f04:	8f 4f       	sbci	r24, 0xFF	; 255
    2f06:	9f 4f       	sbci	r25, 0xFF	; 255

00002f08 <.Loc.1>:
    2f08:	08 95       	ret

00002f0a <__umulhisi3>:
    2f0a:	a2 9f       	mul	r26, r18

00002f0c <.Loc.1>:
    2f0c:	b0 01       	movw	r22, r0

00002f0e <.Loc.2>:
    2f0e:	b3 9f       	mul	r27, r19

00002f10 <.Loc.3>:
    2f10:	c0 01       	movw	r24, r0

00002f12 <.Loc.4>:
    2f12:	a3 9f       	mul	r26, r19

00002f14 <.Loc.5>:
    2f14:	70 0d       	add	r23, r0

00002f16 <.Loc.6>:
    2f16:	81 1d       	adc	r24, r1

00002f18 <.Loc.7>:
    2f18:	11 24       	eor	r1, r1

00002f1a <.Loc.8>:
    2f1a:	91 1d       	adc	r25, r1

00002f1c <.Loc.9>:
    2f1c:	b2 9f       	mul	r27, r18

00002f1e <.Loc.10>:
    2f1e:	70 0d       	add	r23, r0

00002f20 <.Loc.11>:
    2f20:	81 1d       	adc	r24, r1

00002f22 <.Loc.12>:
    2f22:	11 24       	eor	r1, r1

00002f24 <.Loc.13>:
    2f24:	91 1d       	adc	r25, r1

00002f26 <.Loc.14>:
    2f26:	08 95       	ret

00002f28 <__muluhisi3>:
    2f28:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <__umulhisi3>

00002f2c <.Loc.1>:
    2f2c:	a5 9f       	mul	r26, r21

00002f2e <.Loc.2>:
    2f2e:	90 0d       	add	r25, r0

00002f30 <.Loc.3>:
    2f30:	b4 9f       	mul	r27, r20

00002f32 <.Loc.4>:
    2f32:	90 0d       	add	r25, r0

00002f34 <.Loc.5>:
    2f34:	a4 9f       	mul	r26, r20

00002f36 <.Loc.6>:
    2f36:	80 0d       	add	r24, r0

00002f38 <.Loc.7>:
    2f38:	91 1d       	adc	r25, r1

00002f3a <.Loc.8>:
    2f3a:	11 24       	eor	r1, r1

00002f3c <.Loc.9>:
    2f3c:	08 95       	ret

00002f3e <__udivmodhi4>:
    2f3e:	aa 1b       	sub	r26, r26

00002f40 <.Loc.1>:
    2f40:	bb 1b       	sub	r27, r27

00002f42 <.Loc.2>:
    2f42:	51 e1       	ldi	r21, 0x11	; 17

00002f44 <.Loc.3>:
    2f44:	07 c0       	rjmp	.+14     	; 0x2f54 <__udivmodhi4_ep>

00002f46 <__udivmodhi4_loop>:
    2f46:	aa 1f       	adc	r26, r26

00002f48 <.Loc.5>:
    2f48:	bb 1f       	adc	r27, r27

00002f4a <.Loc.6>:
    2f4a:	a6 17       	cp	r26, r22

00002f4c <.Loc.7>:
    2f4c:	b7 07       	cpc	r27, r23

00002f4e <.Loc.8>:
    2f4e:	10 f0       	brcs	.+4      	; 0x2f54 <__udivmodhi4_ep>

00002f50 <.Loc.9>:
    2f50:	a6 1b       	sub	r26, r22

00002f52 <.Loc.10>:
    2f52:	b7 0b       	sbc	r27, r23

00002f54 <__udivmodhi4_ep>:
    2f54:	88 1f       	adc	r24, r24

00002f56 <.Loc.12>:
    2f56:	99 1f       	adc	r25, r25

00002f58 <.Loc.13>:
    2f58:	5a 95       	dec	r21

00002f5a <.Loc.14>:
    2f5a:	a9 f7       	brne	.-22     	; 0x2f46 <__udivmodhi4_loop>

00002f5c <.Loc.15>:
    2f5c:	80 95       	com	r24

00002f5e <.Loc.16>:
    2f5e:	90 95       	com	r25

00002f60 <.Loc.17>:
    2f60:	bc 01       	movw	r22, r24

00002f62 <.Loc.18>:
    2f62:	cd 01       	movw	r24, r26

00002f64 <.Loc.19>:
    2f64:	08 95       	ret

00002f66 <__udivmodsi4>:
    2f66:	a1 e2       	ldi	r26, 0x21	; 33

00002f68 <.Loc.1>:
    2f68:	1a 2e       	mov	r1, r26

00002f6a <.Loc.2>:
    2f6a:	aa 1b       	sub	r26, r26

00002f6c <.Loc.3>:
    2f6c:	bb 1b       	sub	r27, r27

00002f6e <.Loc.4>:
    2f6e:	fd 01       	movw	r30, r26

00002f70 <.Loc.5>:
    2f70:	0d c0       	rjmp	.+26     	; 0x2f8c <__udivmodsi4_ep>

00002f72 <__udivmodsi4_loop>:
    2f72:	aa 1f       	adc	r26, r26

00002f74 <.Loc.7>:
    2f74:	bb 1f       	adc	r27, r27

00002f76 <.Loc.8>:
    2f76:	ee 1f       	adc	r30, r30

00002f78 <.Loc.9>:
    2f78:	ff 1f       	adc	r31, r31

00002f7a <.Loc.10>:
    2f7a:	a2 17       	cp	r26, r18

00002f7c <.Loc.11>:
    2f7c:	b3 07       	cpc	r27, r19

00002f7e <.Loc.12>:
    2f7e:	e4 07       	cpc	r30, r20

00002f80 <.Loc.13>:
    2f80:	f5 07       	cpc	r31, r21

00002f82 <.Loc.14>:
    2f82:	20 f0       	brcs	.+8      	; 0x2f8c <__udivmodsi4_ep>

00002f84 <.Loc.15>:
    2f84:	a2 1b       	sub	r26, r18

00002f86 <.Loc.16>:
    2f86:	b3 0b       	sbc	r27, r19

00002f88 <.Loc.17>:
    2f88:	e4 0b       	sbc	r30, r20

00002f8a <.Loc.18>:
    2f8a:	f5 0b       	sbc	r31, r21

00002f8c <__udivmodsi4_ep>:
    2f8c:	66 1f       	adc	r22, r22

00002f8e <.Loc.20>:
    2f8e:	77 1f       	adc	r23, r23

00002f90 <.Loc.21>:
    2f90:	88 1f       	adc	r24, r24

00002f92 <.Loc.22>:
    2f92:	99 1f       	adc	r25, r25

00002f94 <.Loc.23>:
    2f94:	1a 94       	dec	r1

00002f96 <.Loc.24>:
    2f96:	69 f7       	brne	.-38     	; 0x2f72 <__udivmodsi4_loop>

00002f98 <.Loc.25>:
    2f98:	60 95       	com	r22

00002f9a <.Loc.26>:
    2f9a:	70 95       	com	r23

00002f9c <.Loc.27>:
    2f9c:	80 95       	com	r24

00002f9e <.Loc.28>:
    2f9e:	90 95       	com	r25

00002fa0 <.Loc.29>:
    2fa0:	9b 01       	movw	r18, r22

00002fa2 <.Loc.30>:
    2fa2:	ac 01       	movw	r20, r24

00002fa4 <.Loc.31>:
    2fa4:	bd 01       	movw	r22, r26

00002fa6 <.Loc.32>:
    2fa6:	cf 01       	movw	r24, r30

00002fa8 <.Loc.33>:
    2fa8:	08 95       	ret

00002faa <__subsf3>:
    2faa:	50 58       	subi	r21, 0x80	; 128

00002fac <__addsf3>:
    2fac:	bb 27       	eor	r27, r27
    2fae:	aa 27       	eor	r26, r26
    2fb0:	0e 94 ed 17 	call	0x2fda	; 0x2fda <__addsf3x>
    2fb4:	0c 94 67 19 	jmp	0x32ce	; 0x32ce <__fp_round>

00002fb8 <.L^B1>:
    2fb8:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__fp_pscA>
    2fbc:	38 f0       	brcs	.+14     	; 0x2fcc <.L_nan>
    2fbe:	0e 94 60 19 	call	0x32c0	; 0x32c0 <__fp_pscB>
    2fc2:	20 f0       	brcs	.+8      	; 0x2fcc <.L_nan>
    2fc4:	39 f4       	brne	.+14     	; 0x2fd4 <.L_inf>
    2fc6:	9f 3f       	cpi	r25, 0xFF	; 255
    2fc8:	19 f4       	brne	.+6      	; 0x2fd0 <.L_infB>
    2fca:	26 f4       	brtc	.+8      	; 0x2fd4 <.L_inf>

00002fcc <.L_nan>:
    2fcc:	0c 94 56 19 	jmp	0x32ac	; 0x32ac <__fp_nan>

00002fd0 <.L_infB>:
    2fd0:	0e f4       	brtc	.+2      	; 0x2fd4 <.L_inf>
    2fd2:	e0 95       	com	r30

00002fd4 <.L_inf>:
    2fd4:	e7 fb       	bst	r30, 7
    2fd6:	0c 94 50 19 	jmp	0x32a0	; 0x32a0 <__fp_inf>

00002fda <__addsf3x>:
    2fda:	e9 2f       	mov	r30, r25
    2fdc:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__fp_split3>
    2fe0:	58 f3       	brcs	.-42     	; 0x2fb8 <.L^B1>
    2fe2:	ba 17       	cp	r27, r26
    2fe4:	62 07       	cpc	r22, r18
    2fe6:	73 07       	cpc	r23, r19
    2fe8:	84 07       	cpc	r24, r20
    2fea:	95 07       	cpc	r25, r21
    2fec:	20 f0       	brcs	.+8      	; 0x2ff6 <.L2^B1>
    2fee:	79 f4       	brne	.+30     	; 0x300e <.L4^B1>
    2ff0:	a6 f5       	brtc	.+104    	; 0x305a <.L_add>
    2ff2:	0c 94 9a 19 	jmp	0x3334	; 0x3334 <__fp_zero>

00002ff6 <.L2^B1>:
    2ff6:	0e f4       	brtc	.+2      	; 0x2ffa <.L3^B1>
    2ff8:	e0 95       	com	r30

00002ffa <.L3^B1>:
    2ffa:	0b 2e       	mov	r0, r27
    2ffc:	ba 2f       	mov	r27, r26
    2ffe:	a0 2d       	mov	r26, r0
    3000:	0b 01       	movw	r0, r22
    3002:	b9 01       	movw	r22, r18
    3004:	90 01       	movw	r18, r0
    3006:	0c 01       	movw	r0, r24
    3008:	ca 01       	movw	r24, r20
    300a:	a0 01       	movw	r20, r0
    300c:	11 24       	eor	r1, r1

0000300e <.L4^B1>:
    300e:	ff 27       	eor	r31, r31
    3010:	59 1b       	sub	r21, r25

00003012 <.L5^B1>:
    3012:	99 f0       	breq	.+38     	; 0x303a <.L7^B1>
    3014:	59 3f       	cpi	r21, 0xF9	; 249
    3016:	50 f4       	brcc	.+20     	; 0x302c <.L6^B1>
    3018:	50 3e       	cpi	r21, 0xE0	; 224
    301a:	68 f1       	brcs	.+90     	; 0x3076 <.L_ret>
    301c:	1a 16       	cp	r1, r26
    301e:	f0 40       	sbci	r31, 0x00	; 0
    3020:	a2 2f       	mov	r26, r18
    3022:	23 2f       	mov	r18, r19
    3024:	34 2f       	mov	r19, r20
    3026:	44 27       	eor	r20, r20
    3028:	58 5f       	subi	r21, 0xF8	; 248
    302a:	f3 cf       	rjmp	.-26     	; 0x3012 <.L5^B1>

0000302c <.L6^B1>:
    302c:	46 95       	lsr	r20
    302e:	37 95       	ror	r19
    3030:	27 95       	ror	r18
    3032:	a7 95       	ror	r26
    3034:	f0 40       	sbci	r31, 0x00	; 0
    3036:	53 95       	inc	r21
    3038:	c9 f7       	brne	.-14     	; 0x302c <.L6^B1>

0000303a <.L7^B1>:
    303a:	7e f4       	brtc	.+30     	; 0x305a <.L_add>
    303c:	1f 16       	cp	r1, r31
    303e:	ba 0b       	sbc	r27, r26
    3040:	62 0b       	sbc	r22, r18
    3042:	73 0b       	sbc	r23, r19
    3044:	84 0b       	sbc	r24, r20
    3046:	ba f0       	brmi	.+46     	; 0x3076 <.L_ret>

00003048 <.L8^B1>:
    3048:	91 50       	subi	r25, 0x01	; 1
    304a:	a1 f0       	breq	.+40     	; 0x3074 <.L9^B1>
    304c:	ff 0f       	add	r31, r31
    304e:	bb 1f       	adc	r27, r27
    3050:	66 1f       	adc	r22, r22
    3052:	77 1f       	adc	r23, r23
    3054:	88 1f       	adc	r24, r24
    3056:	c2 f7       	brpl	.-16     	; 0x3048 <.L8^B1>
    3058:	0e c0       	rjmp	.+28     	; 0x3076 <.L_ret>

0000305a <.L_add>:
    305a:	ba 0f       	add	r27, r26
    305c:	62 1f       	adc	r22, r18
    305e:	73 1f       	adc	r23, r19
    3060:	84 1f       	adc	r24, r20
    3062:	48 f4       	brcc	.+18     	; 0x3076 <.L_ret>
    3064:	87 95       	ror	r24
    3066:	77 95       	ror	r23
    3068:	67 95       	ror	r22
    306a:	b7 95       	ror	r27
    306c:	f7 95       	ror	r31
    306e:	9e 3f       	cpi	r25, 0xFE	; 254
    3070:	08 f0       	brcs	.+2      	; 0x3074 <.L9^B1>
    3072:	b0 cf       	rjmp	.-160    	; 0x2fd4 <.L_inf>

00003074 <.L9^B1>:
    3074:	93 95       	inc	r25

00003076 <.L_ret>:
    3076:	88 0f       	add	r24, r24
    3078:	08 f0       	brcs	.+2      	; 0x307c <.L1^B1>
    307a:	99 27       	eor	r25, r25

0000307c <.L1^B1>:
    307c:	ee 0f       	add	r30, r30
    307e:	97 95       	ror	r25
    3080:	87 95       	ror	r24
    3082:	08 95       	ret

00003084 <__cmpsf2>:
    3084:	0e 94 2c 19 	call	0x3258	; 0x3258 <__fp_cmp>
    3088:	08 f4       	brcc	.+2      	; 0x308c <.L1^B1>
    308a:	81 e0       	ldi	r24, 0x01	; 1

0000308c <.L1^B1>:
    308c:	08 95       	ret

0000308e <__divsf3>:
    308e:	0e 94 5b 18 	call	0x30b6	; 0x30b6 <__divsf3x>
    3092:	0c 94 67 19 	jmp	0x32ce	; 0x32ce <__fp_round>

00003096 <.L^B1>:
    3096:	0e 94 60 19 	call	0x32c0	; 0x32c0 <__fp_pscB>
    309a:	58 f0       	brcs	.+22     	; 0x30b2 <.L_nan>
    309c:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__fp_pscA>
    30a0:	40 f0       	brcs	.+16     	; 0x30b2 <.L_nan>
    30a2:	29 f4       	brne	.+10     	; 0x30ae <.L_zr>
    30a4:	5f 3f       	cpi	r21, 0xFF	; 255
    30a6:	29 f0       	breq	.+10     	; 0x30b2 <.L_nan>

000030a8 <.L_inf>:
    30a8:	0c 94 50 19 	jmp	0x32a0	; 0x32a0 <__fp_inf>

000030ac <.L1^B1>:
    30ac:	51 11       	cpse	r21, r1

000030ae <.L_zr>:
    30ae:	0c 94 9b 19 	jmp	0x3336	; 0x3336 <__fp_szero>

000030b2 <.L_nan>:
    30b2:	0c 94 56 19 	jmp	0x32ac	; 0x32ac <__fp_nan>

000030b6 <__divsf3x>:
    30b6:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__fp_split3>
    30ba:	68 f3       	brcs	.-38     	; 0x3096 <.L^B1>

000030bc <__divsf3_pse>:
    30bc:	99 23       	and	r25, r25
    30be:	b1 f3       	breq	.-20     	; 0x30ac <.L1^B1>
    30c0:	55 23       	and	r21, r21
    30c2:	91 f3       	breq	.-28     	; 0x30a8 <.L_inf>
    30c4:	95 1b       	sub	r25, r21
    30c6:	55 0b       	sbc	r21, r21
    30c8:	bb 27       	eor	r27, r27
    30ca:	aa 27       	eor	r26, r26

000030cc <.L2^B1>:
    30cc:	62 17       	cp	r22, r18
    30ce:	73 07       	cpc	r23, r19
    30d0:	84 07       	cpc	r24, r20
    30d2:	38 f0       	brcs	.+14     	; 0x30e2 <.L3^B1>
    30d4:	9f 5f       	subi	r25, 0xFF	; 255
    30d6:	5f 4f       	sbci	r21, 0xFF	; 255
    30d8:	22 0f       	add	r18, r18
    30da:	33 1f       	adc	r19, r19
    30dc:	44 1f       	adc	r20, r20
    30de:	aa 1f       	adc	r26, r26
    30e0:	a9 f3       	breq	.-22     	; 0x30cc <.L2^B1>

000030e2 <.L3^B1>:
    30e2:	35 d0       	rcall	.+106    	; 0x314e <.L_div>
    30e4:	0e 2e       	mov	r0, r30
    30e6:	3a f0       	brmi	.+14     	; 0x30f6 <.L5^B1>

000030e8 <.L4^B1>:
    30e8:	e0 e8       	ldi	r30, 0x80	; 128
    30ea:	32 d0       	rcall	.+100    	; 0x3150 <.L_div1>
    30ec:	91 50       	subi	r25, 0x01	; 1
    30ee:	50 40       	sbci	r21, 0x00	; 0
    30f0:	e6 95       	lsr	r30
    30f2:	00 1c       	adc	r0, r0
    30f4:	ca f7       	brpl	.-14     	; 0x30e8 <.L4^B1>

000030f6 <.L5^B1>:
    30f6:	2b d0       	rcall	.+86     	; 0x314e <.L_div>
    30f8:	fe 2f       	mov	r31, r30
    30fa:	29 d0       	rcall	.+82     	; 0x314e <.L_div>
    30fc:	66 0f       	add	r22, r22
    30fe:	77 1f       	adc	r23, r23
    3100:	88 1f       	adc	r24, r24
    3102:	bb 1f       	adc	r27, r27
    3104:	26 17       	cp	r18, r22
    3106:	37 07       	cpc	r19, r23
    3108:	48 07       	cpc	r20, r24
    310a:	ab 07       	cpc	r26, r27
    310c:	b0 e8       	ldi	r27, 0x80	; 128
    310e:	09 f0       	breq	.+2      	; 0x3112 <.L4^B2>
    3110:	bb 0b       	sbc	r27, r27

00003112 <.L4^B2>:
    3112:	80 2d       	mov	r24, r0
    3114:	bf 01       	movw	r22, r30
    3116:	ff 27       	eor	r31, r31
    3118:	93 58       	subi	r25, 0x83	; 131
    311a:	5f 4f       	sbci	r21, 0xFF	; 255
    311c:	3a f0       	brmi	.+14     	; 0x312c <.L13^B1>
    311e:	9e 3f       	cpi	r25, 0xFE	; 254
    3120:	51 05       	cpc	r21, r1
    3122:	78 f0       	brcs	.+30     	; 0x3142 <.L15^B1>
    3124:	0c 94 50 19 	jmp	0x32a0	; 0x32a0 <__fp_inf>

00003128 <.L12^B1>:
    3128:	0c 94 9b 19 	jmp	0x3336	; 0x3336 <__fp_szero>

0000312c <.L13^B1>:
    312c:	5f 3f       	cpi	r21, 0xFF	; 255
    312e:	e4 f3       	brlt	.-8      	; 0x3128 <.L12^B1>
    3130:	98 3e       	cpi	r25, 0xE8	; 232
    3132:	d4 f3       	brlt	.-12     	; 0x3128 <.L12^B1>

00003134 <.L14^B1>:
    3134:	86 95       	lsr	r24
    3136:	77 95       	ror	r23
    3138:	67 95       	ror	r22
    313a:	b7 95       	ror	r27
    313c:	f7 95       	ror	r31
    313e:	9f 5f       	subi	r25, 0xFF	; 255
    3140:	c9 f7       	brne	.-14     	; 0x3134 <.L14^B1>

00003142 <.L15^B1>:
    3142:	88 0f       	add	r24, r24
    3144:	91 1d       	adc	r25, r1
    3146:	96 95       	lsr	r25
    3148:	87 95       	ror	r24
    314a:	97 f9       	bld	r25, 7
    314c:	08 95       	ret

0000314e <.L_div>:
    314e:	e1 e0       	ldi	r30, 0x01	; 1

00003150 <.L_div1>:
    3150:	66 0f       	add	r22, r22
    3152:	77 1f       	adc	r23, r23
    3154:	88 1f       	adc	r24, r24
    3156:	bb 1f       	adc	r27, r27
    3158:	62 17       	cp	r22, r18
    315a:	73 07       	cpc	r23, r19
    315c:	84 07       	cpc	r24, r20
    315e:	ba 07       	cpc	r27, r26
    3160:	20 f0       	brcs	.+8      	; 0x316a <.L2^B2>
    3162:	62 1b       	sub	r22, r18
    3164:	73 0b       	sbc	r23, r19
    3166:	84 0b       	sbc	r24, r20
    3168:	ba 0b       	sbc	r27, r26

0000316a <.L2^B2>:
    316a:	ee 1f       	adc	r30, r30
    316c:	88 f7       	brcc	.-30     	; 0x3150 <.L_div1>
    316e:	e0 95       	com	r30
    3170:	08 95       	ret

00003172 <__fixsfsi>:
    3172:	0e 94 c0 18 	call	0x3180	; 0x3180 <__fixunssfsi>
    3176:	68 94       	set
    3178:	b1 11       	cpse	r27, r1
    317a:	0c 94 9b 19 	jmp	0x3336	; 0x3336 <__fp_szero>
    317e:	08 95       	ret

00003180 <__fixunssfsi>:
    3180:	0e 94 80 19 	call	0x3300	; 0x3300 <__fp_splitA>
    3184:	88 f0       	brcs	.+34     	; 0x31a8 <.L_err>
    3186:	9f 57       	subi	r25, 0x7F	; 127
    3188:	98 f0       	brcs	.+38     	; 0x31b0 <.L_zr>
    318a:	b9 2f       	mov	r27, r25
    318c:	99 27       	eor	r25, r25
    318e:	b7 51       	subi	r27, 0x17	; 23
    3190:	b0 f0       	brcs	.+44     	; 0x31be <.L4^B1>
    3192:	e1 f0       	breq	.+56     	; 0x31cc <.L_sign>

00003194 <.L1^B1>:
    3194:	66 0f       	add	r22, r22
    3196:	77 1f       	adc	r23, r23
    3198:	88 1f       	adc	r24, r24
    319a:	99 1f       	adc	r25, r25
    319c:	1a f0       	brmi	.+6      	; 0x31a4 <.L2^B1>
    319e:	ba 95       	dec	r27
    31a0:	c9 f7       	brne	.-14     	; 0x3194 <.L1^B1>
    31a2:	14 c0       	rjmp	.+40     	; 0x31cc <.L_sign>

000031a4 <.L2^B1>:
    31a4:	b1 30       	cpi	r27, 0x01	; 1
    31a6:	91 f0       	breq	.+36     	; 0x31cc <.L_sign>

000031a8 <.L_err>:
    31a8:	0e 94 9a 19 	call	0x3334	; 0x3334 <__fp_zero>
    31ac:	b1 e0       	ldi	r27, 0x01	; 1
    31ae:	08 95       	ret

000031b0 <.L_zr>:
    31b0:	0c 94 9a 19 	jmp	0x3334	; 0x3334 <__fp_zero>

000031b4 <.L3^B1>:
    31b4:	67 2f       	mov	r22, r23
    31b6:	78 2f       	mov	r23, r24
    31b8:	88 27       	eor	r24, r24
    31ba:	b8 5f       	subi	r27, 0xF8	; 248
    31bc:	39 f0       	breq	.+14     	; 0x31cc <.L_sign>

000031be <.L4^B1>:
    31be:	b9 3f       	cpi	r27, 0xF9	; 249
    31c0:	cc f3       	brlt	.-14     	; 0x31b4 <.L3^B1>

000031c2 <.L5^B1>:
    31c2:	86 95       	lsr	r24
    31c4:	77 95       	ror	r23
    31c6:	67 95       	ror	r22
    31c8:	b3 95       	inc	r27
    31ca:	d9 f7       	brne	.-10     	; 0x31c2 <.L5^B1>

000031cc <.L_sign>:
    31cc:	3e f4       	brtc	.+14     	; 0x31dc <.L6^B1>
    31ce:	90 95       	com	r25
    31d0:	80 95       	com	r24
    31d2:	70 95       	com	r23
    31d4:	61 95       	neg	r22
    31d6:	7f 4f       	sbci	r23, 0xFF	; 255
    31d8:	8f 4f       	sbci	r24, 0xFF	; 255
    31da:	9f 4f       	sbci	r25, 0xFF	; 255

000031dc <.L6^B1>:
    31dc:	08 95       	ret

000031de <__floatunsisf>:
    31de:	e8 94       	clt
    31e0:	09 c0       	rjmp	.+18     	; 0x31f4 <.L1^B1>

000031e2 <__floatsisf>:
    31e2:	97 fb       	bst	r25, 7
    31e4:	3e f4       	brtc	.+14     	; 0x31f4 <.L1^B1>
    31e6:	90 95       	com	r25
    31e8:	80 95       	com	r24
    31ea:	70 95       	com	r23
    31ec:	61 95       	neg	r22
    31ee:	7f 4f       	sbci	r23, 0xFF	; 255
    31f0:	8f 4f       	sbci	r24, 0xFF	; 255
    31f2:	9f 4f       	sbci	r25, 0xFF	; 255

000031f4 <.L1^B1>:
    31f4:	99 23       	and	r25, r25
    31f6:	a9 f0       	breq	.+42     	; 0x3222 <.L4^B1>
    31f8:	f9 2f       	mov	r31, r25
    31fa:	96 e9       	ldi	r25, 0x96	; 150
    31fc:	bb 27       	eor	r27, r27

000031fe <.L2^B1>:
    31fe:	93 95       	inc	r25
    3200:	f6 95       	lsr	r31
    3202:	87 95       	ror	r24
    3204:	77 95       	ror	r23
    3206:	67 95       	ror	r22
    3208:	b7 95       	ror	r27
    320a:	f1 11       	cpse	r31, r1
    320c:	f8 cf       	rjmp	.-16     	; 0x31fe <.L2^B1>
    320e:	fa f4       	brpl	.+62     	; 0x324e <.L_pack>
    3210:	bb 0f       	add	r27, r27
    3212:	11 f4       	brne	.+4      	; 0x3218 <.L3^B1>
    3214:	60 ff       	sbrs	r22, 0
    3216:	1b c0       	rjmp	.+54     	; 0x324e <.L_pack>

00003218 <.L3^B1>:
    3218:	6f 5f       	subi	r22, 0xFF	; 255
    321a:	7f 4f       	sbci	r23, 0xFF	; 255
    321c:	8f 4f       	sbci	r24, 0xFF	; 255
    321e:	9f 4f       	sbci	r25, 0xFF	; 255
    3220:	16 c0       	rjmp	.+44     	; 0x324e <.L_pack>

00003222 <.L4^B1>:
    3222:	88 23       	and	r24, r24
    3224:	11 f0       	breq	.+4      	; 0x322a <.L5^B1>
    3226:	96 e9       	ldi	r25, 0x96	; 150
    3228:	11 c0       	rjmp	.+34     	; 0x324c <.L8^B1>

0000322a <.L5^B1>:
    322a:	77 23       	and	r23, r23
    322c:	21 f0       	breq	.+8      	; 0x3236 <.L6^B1>
    322e:	9e e8       	ldi	r25, 0x8E	; 142
    3230:	87 2f       	mov	r24, r23
    3232:	76 2f       	mov	r23, r22
    3234:	05 c0       	rjmp	.+10     	; 0x3240 <.L7^B1>

00003236 <.L6^B1>:
    3236:	66 23       	and	r22, r22
    3238:	71 f0       	breq	.+28     	; 0x3256 <.L9^B1>
    323a:	96 e8       	ldi	r25, 0x86	; 134
    323c:	86 2f       	mov	r24, r22
    323e:	70 e0       	ldi	r23, 0x00	; 0

00003240 <.L7^B1>:
    3240:	60 e0       	ldi	r22, 0x00	; 0
    3242:	2a f0       	brmi	.+10     	; 0x324e <.L_pack>

00003244 <.L10^B1>:
    3244:	9a 95       	dec	r25
    3246:	66 0f       	add	r22, r22
    3248:	77 1f       	adc	r23, r23
    324a:	88 1f       	adc	r24, r24

0000324c <.L8^B1>:
    324c:	da f7       	brpl	.-10     	; 0x3244 <.L10^B1>

0000324e <.L_pack>:
    324e:	88 0f       	add	r24, r24
    3250:	96 95       	lsr	r25
    3252:	87 95       	ror	r24
    3254:	97 f9       	bld	r25, 7

00003256 <.L9^B1>:
    3256:	08 95       	ret

00003258 <__fp_cmp>:
    3258:	99 0f       	add	r25, r25
    325a:	00 08       	sbc	r0, r0
    325c:	55 0f       	add	r21, r21
    325e:	aa 0b       	sbc	r26, r26
    3260:	e0 e8       	ldi	r30, 0x80	; 128
    3262:	fe ef       	ldi	r31, 0xFE	; 254
    3264:	16 16       	cp	r1, r22
    3266:	17 06       	cpc	r1, r23
    3268:	e8 07       	cpc	r30, r24
    326a:	f9 07       	cpc	r31, r25
    326c:	c0 f0       	brcs	.+48     	; 0x329e <.L9^B1>
    326e:	12 16       	cp	r1, r18
    3270:	13 06       	cpc	r1, r19
    3272:	e4 07       	cpc	r30, r20
    3274:	f5 07       	cpc	r31, r21
    3276:	98 f0       	brcs	.+38     	; 0x329e <.L9^B1>
    3278:	62 1b       	sub	r22, r18
    327a:	73 0b       	sbc	r23, r19
    327c:	84 0b       	sbc	r24, r20
    327e:	95 0b       	sbc	r25, r21
    3280:	39 f4       	brne	.+14     	; 0x3290 <.L1^B1>
    3282:	0a 26       	eor	r0, r26
    3284:	61 f0       	breq	.+24     	; 0x329e <.L9^B1>
    3286:	23 2b       	or	r18, r19
    3288:	24 2b       	or	r18, r20
    328a:	25 2b       	or	r18, r21
    328c:	21 f4       	brne	.+8      	; 0x3296 <.L2^B1>
    328e:	08 95       	ret

00003290 <.L1^B1>:
    3290:	0a 26       	eor	r0, r26
    3292:	09 f4       	brne	.+2      	; 0x3296 <.L2^B1>
    3294:	a1 40       	sbci	r26, 0x01	; 1

00003296 <.L2^B1>:
    3296:	a6 95       	lsr	r26
    3298:	8f ef       	ldi	r24, 0xFF	; 255
    329a:	81 1d       	adc	r24, r1
    329c:	81 1d       	adc	r24, r1

0000329e <.L9^B1>:
    329e:	08 95       	ret

000032a0 <__fp_inf>:
    32a0:	97 f9       	bld	r25, 7
    32a2:	9f 67       	ori	r25, 0x7F	; 127
    32a4:	80 e8       	ldi	r24, 0x80	; 128
    32a6:	70 e0       	ldi	r23, 0x00	; 0
    32a8:	60 e0       	ldi	r22, 0x00	; 0
    32aa:	08 95       	ret

000032ac <__fp_nan>:
    32ac:	9f ef       	ldi	r25, 0xFF	; 255
    32ae:	80 ec       	ldi	r24, 0xC0	; 192
    32b0:	08 95       	ret

000032b2 <__fp_pscA>:
    32b2:	00 24       	eor	r0, r0
    32b4:	0a 94       	dec	r0
    32b6:	16 16       	cp	r1, r22
    32b8:	17 06       	cpc	r1, r23
    32ba:	18 06       	cpc	r1, r24
    32bc:	09 06       	cpc	r0, r25
    32be:	08 95       	ret

000032c0 <__fp_pscB>:
    32c0:	00 24       	eor	r0, r0
    32c2:	0a 94       	dec	r0
    32c4:	12 16       	cp	r1, r18
    32c6:	13 06       	cpc	r1, r19
    32c8:	14 06       	cpc	r1, r20
    32ca:	05 06       	cpc	r0, r21
    32cc:	08 95       	ret

000032ce <__fp_round>:
    32ce:	09 2e       	mov	r0, r25
    32d0:	03 94       	inc	r0
    32d2:	00 0c       	add	r0, r0
    32d4:	11 f4       	brne	.+4      	; 0x32da <.L1^B1>
    32d6:	88 23       	and	r24, r24
    32d8:	52 f0       	brmi	.+20     	; 0x32ee <.L3^B1>

000032da <.L1^B1>:
    32da:	bb 0f       	add	r27, r27
    32dc:	40 f4       	brcc	.+16     	; 0x32ee <.L3^B1>
    32de:	bf 2b       	or	r27, r31
    32e0:	11 f4       	brne	.+4      	; 0x32e6 <.L2^B1>
    32e2:	60 ff       	sbrs	r22, 0
    32e4:	04 c0       	rjmp	.+8      	; 0x32ee <.L3^B1>

000032e6 <.L2^B1>:
    32e6:	6f 5f       	subi	r22, 0xFF	; 255
    32e8:	7f 4f       	sbci	r23, 0xFF	; 255
    32ea:	8f 4f       	sbci	r24, 0xFF	; 255
    32ec:	9f 4f       	sbci	r25, 0xFF	; 255

000032ee <.L3^B1>:
    32ee:	08 95       	ret

000032f0 <__fp_split3>:
    32f0:	57 fd       	sbrc	r21, 7
    32f2:	90 58       	subi	r25, 0x80	; 128
    32f4:	44 0f       	add	r20, r20
    32f6:	55 1f       	adc	r21, r21
    32f8:	59 f0       	breq	.+22     	; 0x3310 <.L4^B1>
    32fa:	5f 3f       	cpi	r21, 0xFF	; 255
    32fc:	71 f0       	breq	.+28     	; 0x331a <.L5^B1>

000032fe <.L1^B1>:
    32fe:	47 95       	ror	r20

00003300 <__fp_splitA>:
    3300:	88 0f       	add	r24, r24
    3302:	97 fb       	bst	r25, 7
    3304:	99 1f       	adc	r25, r25
    3306:	61 f0       	breq	.+24     	; 0x3320 <.L6^B1>
    3308:	9f 3f       	cpi	r25, 0xFF	; 255
    330a:	79 f0       	breq	.+30     	; 0x332a <.L7^B1>

0000330c <.L3^B1>:
    330c:	87 95       	ror	r24
    330e:	08 95       	ret

00003310 <.L4^B1>:
    3310:	12 16       	cp	r1, r18
    3312:	13 06       	cpc	r1, r19
    3314:	14 06       	cpc	r1, r20
    3316:	55 1f       	adc	r21, r21
    3318:	f2 cf       	rjmp	.-28     	; 0x32fe <.L1^B1>

0000331a <.L5^B1>:
    331a:	46 95       	lsr	r20
    331c:	f1 df       	rcall	.-30     	; 0x3300 <__fp_splitA>
    331e:	08 c0       	rjmp	.+16     	; 0x3330 <.L8^B1>

00003320 <.L6^B1>:
    3320:	16 16       	cp	r1, r22
    3322:	17 06       	cpc	r1, r23
    3324:	18 06       	cpc	r1, r24
    3326:	99 1f       	adc	r25, r25
    3328:	f1 cf       	rjmp	.-30     	; 0x330c <.L3^B1>

0000332a <.L7^B1>:
    332a:	86 95       	lsr	r24
    332c:	71 05       	cpc	r23, r1
    332e:	61 05       	cpc	r22, r1

00003330 <.L8^B1>:
    3330:	08 94       	sec
    3332:	08 95       	ret

00003334 <__fp_zero>:
    3334:	e8 94       	clt

00003336 <__fp_szero>:
    3336:	bb 27       	eor	r27, r27
    3338:	66 27       	eor	r22, r22
    333a:	77 27       	eor	r23, r23
    333c:	cb 01       	movw	r24, r22
    333e:	97 f9       	bld	r25, 7
    3340:	08 95       	ret

00003342 <__gesf2>:
    3342:	0e 94 2c 19 	call	0x3258	; 0x3258 <__fp_cmp>
    3346:	08 f4       	brcc	.+2      	; 0x334a <.L1^B1>
    3348:	8f ef       	ldi	r24, 0xFF	; 255

0000334a <.L1^B1>:
    334a:	08 95       	ret

0000334c <__mulsf3>:
    334c:	0e 94 b9 19 	call	0x3372	; 0x3372 <__mulsf3x>
    3350:	0c 94 67 19 	jmp	0x32ce	; 0x32ce <__fp_round>

00003354 <.L^B1>:
    3354:	0e 94 59 19 	call	0x32b2	; 0x32b2 <__fp_pscA>
    3358:	38 f0       	brcs	.+14     	; 0x3368 <.L1^B1>
    335a:	0e 94 60 19 	call	0x32c0	; 0x32c0 <__fp_pscB>
    335e:	20 f0       	brcs	.+8      	; 0x3368 <.L1^B1>
    3360:	95 23       	and	r25, r21
    3362:	11 f0       	breq	.+4      	; 0x3368 <.L1^B1>
    3364:	0c 94 50 19 	jmp	0x32a0	; 0x32a0 <__fp_inf>

00003368 <.L1^B1>:
    3368:	0c 94 56 19 	jmp	0x32ac	; 0x32ac <__fp_nan>

0000336c <.L2^B1>:
    336c:	11 24       	eor	r1, r1
    336e:	0c 94 9b 19 	jmp	0x3336	; 0x3336 <__fp_szero>

00003372 <__mulsf3x>:
    3372:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__fp_split3>
    3376:	70 f3       	brcs	.-36     	; 0x3354 <.L^B1>

00003378 <__mulsf3_pse>:
    3378:	95 9f       	mul	r25, r21
    337a:	c1 f3       	breq	.-16     	; 0x336c <.L2^B1>
    337c:	95 0f       	add	r25, r21
    337e:	50 e0       	ldi	r21, 0x00	; 0
    3380:	55 1f       	adc	r21, r21
    3382:	62 9f       	mul	r22, r18
    3384:	f0 01       	movw	r30, r0
    3386:	72 9f       	mul	r23, r18
    3388:	bb 27       	eor	r27, r27
    338a:	f0 0d       	add	r31, r0
    338c:	b1 1d       	adc	r27, r1
    338e:	63 9f       	mul	r22, r19
    3390:	aa 27       	eor	r26, r26
    3392:	f0 0d       	add	r31, r0
    3394:	b1 1d       	adc	r27, r1
    3396:	aa 1f       	adc	r26, r26
    3398:	64 9f       	mul	r22, r20
    339a:	66 27       	eor	r22, r22
    339c:	b0 0d       	add	r27, r0
    339e:	a1 1d       	adc	r26, r1
    33a0:	66 1f       	adc	r22, r22
    33a2:	82 9f       	mul	r24, r18
    33a4:	22 27       	eor	r18, r18
    33a6:	b0 0d       	add	r27, r0
    33a8:	a1 1d       	adc	r26, r1
    33aa:	62 1f       	adc	r22, r18
    33ac:	73 9f       	mul	r23, r19
    33ae:	b0 0d       	add	r27, r0
    33b0:	a1 1d       	adc	r26, r1
    33b2:	62 1f       	adc	r22, r18
    33b4:	83 9f       	mul	r24, r19
    33b6:	a0 0d       	add	r26, r0
    33b8:	61 1d       	adc	r22, r1
    33ba:	22 1f       	adc	r18, r18
    33bc:	74 9f       	mul	r23, r20
    33be:	33 27       	eor	r19, r19
    33c0:	a0 0d       	add	r26, r0
    33c2:	61 1d       	adc	r22, r1
    33c4:	23 1f       	adc	r18, r19
    33c6:	84 9f       	mul	r24, r20
    33c8:	60 0d       	add	r22, r0
    33ca:	21 1d       	adc	r18, r1
    33cc:	82 2f       	mov	r24, r18
    33ce:	76 2f       	mov	r23, r22
    33d0:	6a 2f       	mov	r22, r26
    33d2:	11 24       	eor	r1, r1
    33d4:	9f 57       	subi	r25, 0x7F	; 127
    33d6:	50 40       	sbci	r21, 0x00	; 0
    33d8:	9a f0       	brmi	.+38     	; 0x3400 <.L13^B1>
    33da:	f1 f0       	breq	.+60     	; 0x3418 <.L15^B1>

000033dc <.L10^B1>:
    33dc:	88 23       	and	r24, r24
    33de:	4a f0       	brmi	.+18     	; 0x33f2 <.L11^B1>
    33e0:	ee 0f       	add	r30, r30
    33e2:	ff 1f       	adc	r31, r31
    33e4:	bb 1f       	adc	r27, r27
    33e6:	66 1f       	adc	r22, r22
    33e8:	77 1f       	adc	r23, r23
    33ea:	88 1f       	adc	r24, r24
    33ec:	91 50       	subi	r25, 0x01	; 1
    33ee:	50 40       	sbci	r21, 0x00	; 0
    33f0:	a9 f7       	brne	.-22     	; 0x33dc <.L10^B1>

000033f2 <.L11^B1>:
    33f2:	9e 3f       	cpi	r25, 0xFE	; 254
    33f4:	51 05       	cpc	r21, r1
    33f6:	80 f0       	brcs	.+32     	; 0x3418 <.L15^B1>
    33f8:	0c 94 50 19 	jmp	0x32a0	; 0x32a0 <__fp_inf>

000033fc <.L12^B1>:
    33fc:	0c 94 9b 19 	jmp	0x3336	; 0x3336 <__fp_szero>

00003400 <.L13^B1>:
    3400:	5f 3f       	cpi	r21, 0xFF	; 255
    3402:	e4 f3       	brlt	.-8      	; 0x33fc <.L12^B1>
    3404:	98 3e       	cpi	r25, 0xE8	; 232
    3406:	d4 f3       	brlt	.-12     	; 0x33fc <.L12^B1>

00003408 <.L14^B1>:
    3408:	86 95       	lsr	r24
    340a:	77 95       	ror	r23
    340c:	67 95       	ror	r22
    340e:	b7 95       	ror	r27
    3410:	f7 95       	ror	r31
    3412:	e7 95       	ror	r30
    3414:	9f 5f       	subi	r25, 0xFF	; 255
    3416:	c1 f7       	brne	.-16     	; 0x3408 <.L14^B1>

00003418 <.L15^B1>:
    3418:	fe 2b       	or	r31, r30
    341a:	88 0f       	add	r24, r24
    341c:	91 1d       	adc	r25, r1
    341e:	96 95       	lsr	r25
    3420:	87 95       	ror	r24
    3422:	97 f9       	bld	r25, 7
    3424:	08 95       	ret

00003426 <_exit>:
    3426:	f8 94       	cli

00003428 <__stop_program>:
    3428:	ff cf       	rjmp	.-2      	; 0x3428 <__stop_program>
